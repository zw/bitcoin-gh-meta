[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317649724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317649724"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just curious, why doesn't `FlatSigningProvider` have a `AddCScript()` method like it's Fillable counterpart? I was surprised to see the maps in the provider aren't private or protected, I thought that was more our style.",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T18:02:30Z",
      "diff_hunk" : "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317649724",
      "id" : 1317649724,
      "line" : 88,
      "node_id" : "PRRC_kwDOABII585Oib08",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 88,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/outputtype.cpp",
      "position" : 10,
      "pull_request_review_id" : 1613931820,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317649724/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T18:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317649724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317654675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317654675"
         }
      },
      "author_association" : "MEMBER",
      "body" : "do we need to cover m=21 here to catch the error in segwit multisig?",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T18:07:48Z",
      "diff_hunk" : "@@ -133,117 +84,162 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_equal(len(pubkeys), 20)\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317654675",
      "id" : 1317654675,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII585OidCT",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 96,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 144,
      "pull_request_review_id" : 1613931820,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317654675/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T18:10:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317654675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317766254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317766254"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Just curious, why doesn't FlatSigningProvider have a AddCScript() method like it's Fillable counterpart? I was surprised to see the maps in the provider aren't private or protected, I thought that was more our style.\r\n\r\n`FillableSigningProvider` is the legacy counterpart. All other `SigningProvider` subclasses were introduced with the output descriptors implementation.\r\n\r\nIf you look at the new providers, all of them are loaded in place and stay constant over time. They are only accessed through the `SigningProvider` interface methods and not directly (this interface only present getters). In contraposition, the legacy provider fulfills both roles. It implements the `SigningProvider` methods and, at the same time, allows new scripts and keys to be added over time.\r\nThis reflects the legacy vs descriptors difference: each new import in the descriptors wallet refers to a new spkm, while in the legacy wallet, it  refers to a new script/key added into the single legacy spkm.",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T20:01:02Z",
      "diff_hunk" : "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317766254",
      "id" : 1317766254,
      "in_reply_to_id" : 1317649724,
      "line" : 88,
      "node_id" : "PRRC_kwDOABII585Oi4Ru",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 88,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/outputtype.cpp",
      "position" : 10,
      "pull_request_review_id" : 1614119645,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317766254/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T20:02:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317766254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317768411"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317768411"
         }
      },
      "author_association" : "MEMBER",
      "body" : "yeah, good idea. Will add it.",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T20:02:43Z",
      "diff_hunk" : "@@ -133,117 +84,162 @@ def check_addmultisigaddress_errors(self):\n         pubs = [self.nodes[1].getaddressinfo(addr)[\"pubkey\"] for addr in addresses]\n         assert_raises_rpc_error(-5, \"Bech32m multisig addresses cannot be created with legacy wallets\", self.nodes[0].addmultisigaddress, 2, pubs, \"\", \"bech32m\")\n \n-    def checkbalances(self):\n-        node0, node1, node2 = self.nodes\n-        self.generate(node0, COINBASE_MATURITY)\n+    def test_multisig_script_limit(self, wallet_multi):\n+        node1 = self.nodes[1]\n+        pubkeys = self.pub\n \n-        bal0 = node0.getbalance()\n-        bal1 = node1.getbalance()\n-        bal2 = node2.getbalance()\n-        balw = self.wallet.get_balance()\n+        self.log.info('Test legacy redeem script max size limit')\n+        assert_equal(len(pubkeys), 20)\n+        assert_raises_rpc_error(-8, \"redeemScript exceeds size limit: 684 > 520\", node1.createmultisig, 16, pubkeys, 'legacy')\n \n-        height = node0.getblockchaininfo()[\"blocks\"]\n-        assert 150 < height < 350\n-        total = 149 * 50 + (height - 149 - 100) * 25\n-        assert bal1 == 0\n-        assert bal2 == self.moved\n-        assert_equal(bal0 + bal1 + bal2 + balw, total)\n+        self.log.info('Test valid 16-20 multisig p2sh-legacy and bech32 (no wallet)')\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"p2sh-segwit\", wallet_multi=None)\n+        self.do_multisig(nkeys=20, nsigs=16, output_type=\"bech32\", wallet_multi=None)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317768411",
      "id" : 1317768411,
      "in_reply_to_id" : 1317654675,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII585Oi4zb",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 96,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "test/functional/rpc_createmultisig.py",
      "position" : 144,
      "pull_request_review_id" : 1614121997,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317768411/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T20:02:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317768411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317778862"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317778862"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So all the places where we call `FlatSigningProvider.scripts.emplace()` doesn't count as \"allows new scripts and keys to be added over time\" ?",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T20:11:06Z",
      "diff_hunk" : "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317778862",
      "id" : 1317778862,
      "in_reply_to_id" : 1317649724,
      "line" : 88,
      "node_id" : "PRRC_kwDOABII585Oi7Wu",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 88,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/outputtype.cpp",
      "position" : 10,
      "pull_request_review_id" : 1614133652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317778862/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T20:11:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317778862",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317798935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317798935"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> So all the places where we call `FlatSigningProvider.scripts.emplace()` doesn't count as \"allows new scripts and keys to be added over time\" ?\r\n\r\nAs uses to be in software development, the answer is \"it depends\".\r\nAs far as I can tell, the idea was to hide the `SigningProvider` implementation. Which is sound.\r\n\r\nI haven't looked at all the places where the `FlatSigningProvider` is used but most of them should be inside the `descriptor.cpp` and similar related processes where the parent process invokes a function to load the provider with some keys/scripts, to then use them and discard the provider.\r\n\r\nWhen I said \"allows new scripts and keys to be added over time\" was referring to keep it in-memory. And continually add new elements to it. Which should not be happening with `FlatSigningProvider` anywhere.",
      "commit_id" : "4c42ab50621698497df2d95e8934471fbcb7e69c",
      "created_at" : "2023-09-06T20:29:21Z",
      "diff_hunk" : "@@ -82,11 +82,11 @@ std::vector<CTxDestination> GetAllDestinationsForKey(const CPubKey& key)\n     }\n }\n \n-CTxDestination AddAndGetDestinationForScript(FillableSigningProvider& keystore, const CScript& script, OutputType type)\n+CTxDestination AddAndGetDestinationForScript(FlatSigningProvider& keystore, const CScript& script, OutputType type)\n {\n     // Add script to keystore\n-    keystore.AddCScript(script);\n-    // Note that scripts over 520 bytes are not yet supported.\n+    keystore.scripts.emplace(CScriptID(script), script);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1317798935",
      "id" : 1317798935,
      "in_reply_to_id" : 1317649724,
      "line" : 88,
      "node_id" : "PRRC_kwDOABII585OjAQX",
      "original_commit_id" : "db38b584e62b76218ad4e74e18e10bca62fc3b7f",
      "original_line" : 88,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/outputtype.cpp",
      "position" : 10,
      "pull_request_review_id" : 1614163358,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317798935/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-06T20:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1317798935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467521980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467521980"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "IIUC, the right part of this expression seems redundant?\r\n```suggestion\r\n        self._requires_wallet = self.is_wallet_compiled()\r\n```\r\nIf a wallet is compiled, that implies that either SQLite or BDB is compiled as well.\r\n\r\nConsequently, the `self.has_wallet` member is not needed anymore, and can simply be replaced by `self.is_wallet_compiled()` calls?",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-01-26T11:04:50Z",
      "diff_hunk" : "@@ -437,6 +437,11 @@ def init_wallet(self, *, node):\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n             n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase', rescan=True)\n \n+    # Only enables wallet when the module is available\n+    def enable_wallet_if_possible(self):\n+        self._requires_wallet = self.is_wallet_compiled() and (self.is_sqlite_compiled() or self.is_bdb_compiled())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467521980",
      "id" : 1467521980,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XeJu8",
      "original_commit_id" : "8c3fdc4bbf9849e1c29244f915dbfc9ae61882fe",
      "original_line" : 442,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 1845552797,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467521980/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-26T13:29:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467521980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467681522"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467681522"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> If a wallet is compiled, that implies that either SQLite or BDB is compiled as well.\r\n\r\nYeah sure. Removed the right part of the statement.\r\n\r\n> Consequently, the self.has_wallet member is not needed anymore, and can simply be replaced by self.is_wallet_compiled() calls?\r\n\r\nSure. Done.",
      "commit_id" : "a0ebb929e865903ca1cc2674e74906a806e73109",
      "created_at" : "2024-01-26T13:54:44Z",
      "diff_hunk" : "@@ -437,6 +437,11 @@ def init_wallet(self, *, node):\n                 n.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors, load_on_startup=True)\n             n.importprivkey(privkey=n.get_deterministic_priv_key().key, label='coinbase', rescan=True)\n \n+    # Only enables wallet when the module is available\n+    def enable_wallet_if_possible(self):\n+        self._requires_wallet = self.is_wallet_compiled() and (self.is_sqlite_compiled() or self.is_bdb_compiled())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28307#discussion_r1467681522",
      "id" : 1467681522,
      "in_reply_to_id" : 1467521980,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Xewry",
      "original_commit_id" : "8c3fdc4bbf9849e1c29244f915dbfc9ae61882fe",
      "original_line" : 442,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/test_framework/test_framework.py",
      "position" : null,
      "pull_request_review_id" : 1845798508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467681522/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-26T13:56:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467681522",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   }
]

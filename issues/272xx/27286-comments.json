[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/27286).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [remyers](https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1721009982) |\n| Stale ACK | [ishaanam](https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-1657907650), [murchandamus](https://github.com/bitcoin/bitcoin/pull/27286#pullrequestreview-1841667091) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#bitcoin-core/gui/733](https://github.com/bitcoin-core/gui/pull/733) (Deniability - a tool to automatically improve coin ownership privacy by denavila)\n* [#29401](https://github.com/bitcoin/bitcoin/pull/29401) (test: Remove struct.pack from almost all places by maflcko)\n* [#29136](https://github.com/bitcoin/bitcoin/pull/29136) (wallet: `addhdkey` RPC to add just keys to wallets via new `void(KEY)` descriptor by achow101)\n* [#29130](https://github.com/bitcoin/bitcoin/pull/29130) (wallet: Add `createwalletdescriptor` and `gethdkeys` RPCs for adding new automatically generated descriptors by achow101)\n* [#28574](https://github.com/bitcoin/bitcoin/pull/28574) (wallet: optimize migration process, batch db transactions by furszy)\n* [#28201](https://github.com/bitcoin/bitcoin/pull/28201) (Silent Payments: sending by josibake)\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n* [#27792](https://github.com/bitcoin/bitcoin/pull/27792) (wallet: Deniability API (Unilateral Transaction Meta-Privacy) by denavila)\n* [#27307](https://github.com/bitcoin/bitcoin/pull/27307) (wallet: track mempool conflicts with wallet transactions by ishaanam)\n* [#26840](https://github.com/bitcoin/bitcoin/pull/26840) (refactor: importpubkey, importprivkey, importaddress, importmulti, and importdescriptors rpc by KolbyML)\n* [#26008](https://github.com/bitcoin/bitcoin/pull/26008) (wallet: cache IsMine scriptPubKeys to improve performance of descriptor wallets by achow101)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-03-20T21:02:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1476930328",
      "id" : 1476930328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585YCCsY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476930328/reactions"
      },
      "updated_at" : "2024-02-14T01:49:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476930328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-01T12:51:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1529679663",
      "id" : 1529679663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585bLQ8v",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1529679663/reactions"
      },
      "updated_at" : "2023-05-01T12:51:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1529679663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-16T11:07:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1549455354",
      "id" : 1549455354,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585cWs_6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1549455354/reactions"
      },
      "updated_at" : "2023-05-16T11:07:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1549455354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-18T16:26:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1553309877",
      "id" : 1553309877,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585claC1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553309877/reactions"
      },
      "updated_at" : "2023-05-18T16:26:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1553309877",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-06-02T17:07:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1574055074",
      "id" : 1574055074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585d0iyi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1574055074/reactions"
      },
      "updated_at" : "2023-06-02T17:07:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1574055074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-06-28T01:11:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1610433902",
      "id" : 1610433902,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585f_UVu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1610433902/reactions"
      },
      "updated_at" : "2023-06-28T01:11:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1610433902",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-07-06T20:13:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1624254517",
      "id" : 1624254517,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585g0Cg1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1624254517/reactions"
      },
      "updated_at" : "2023-07-06T20:13:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1624254517",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1261601507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261601507"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 68bb1463dc1f995fbfdb75d3acef625bde104275 \"wallet: Change balance calculation to use m_txos \"\r\n\r\nnit: \r\n```suggestion\r\n            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\r\n```\r\n& also remove the unused `trusted_parents` from above. (for `GetAddressBalances` as well)",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-07-12T18:51:47Z",
      "diff_hunk" : "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1261601507",
      "id" : 1261601507,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LMoLj",
      "original_commit_id" : "68bb1463dc1f995fbfdb75d3acef625bde104275",
      "original_line" : 262,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : null,
      "pull_request_review_id" : 1527016849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261601507/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-13T19:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1261601507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262844660"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262844660"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 68bb1463dc1f995fbfdb75d3acef625bde104275 \" wallet: Change balance calculation to use m_txos \"\r\n\r\nnit: checking the tx depth is redundant here because if the transaction is `TxStateMempool` then `GetTxDepthInMainChain` will always return 0.\r\n```suggestion\r\n                } if (!is_trusted && txo.GetWalletTx().InMempool()) {\r\n```",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-07-13T17:10:37Z",
      "diff_hunk" : "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && wallet.IsTxInMainChain(txo.GetWalletTx())) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;\n+                } if (!is_trusted && tx_depth == 0 && txo.GetWalletTx().InMempool()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262844660",
      "id" : 1262844660,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LRXr0",
      "original_commit_id" : "68bb1463dc1f995fbfdb75d3acef625bde104275",
      "original_line" : 285,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : null,
      "pull_request_review_id" : 1527016849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262844660/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-13T19:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262844660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262864895"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262864895"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 3f3246efe299552e450362a03c61c602a168f7de \"wallet: Recalculate the wallet's txos after any imports \"\r\n\r\nDoes this also need to be called during `sethdseed` and `keypoolrefill`.",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-07-13T17:27:37Z",
      "diff_hunk" : "@@ -480,6 +480,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     const std::unordered_map<COutPoint, WalletTXO, SaltedOutpointHasher>& GetTXOs() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return m_txos; };\n \n     void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RefreshWalletTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262864895",
      "id" : 1262864895,
      "line" : 508,
      "node_id" : "PRRC_kwDOABII585LRcn_",
      "original_commit_id" : "3f3246efe299552e450362a03c61c602a168f7de",
      "original_line" : 508,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 18,
      "pull_request_review_id" : 1527016849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262864895/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-13T19:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262864895",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262869959"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262869959"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In https://github.com/bitcoin/bitcoin/commit/3f3246efe299552e450362a03c61c602a168f7de \"wallet: Recalculate the wallet's txos after any imports \"\r\n\r\nIs this needed if the wallet will rescan anyways? ",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-07-13T17:32:55Z",
      "diff_hunk" : "@@ -627,6 +631,7 @@ RPCHelpMan importwallet()\n \n             progress++;\n         }\n+        pwallet->RefreshWalletTXOs();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262869959",
      "id" : 1262869959,
      "line" : 634,
      "node_id" : "PRRC_kwDOABII585LRd3H",
      "original_commit_id" : "3f3246efe299552e450362a03c61c602a168f7de",
      "original_line" : 634,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 29,
      "pull_request_review_id" : 1527016849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262869959/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-13T19:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262869959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262884442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262884442"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 881650ed319c6ed74e66ae56c34cdee93125231b \" wallet: Use wallet's TXO set in AvailableCoins \"\r\n\r\nShouldn't txos in `m_txos` never be `ISMINE_NO`?\r\n\r\n```suggestion\r\n        assert(mine != ISMINE_NO);\r\n```",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-07-13T17:47:05Z",
      "diff_hunk" : "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262884442",
      "id" : 1262884442,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LRhZa",
      "original_commit_id" : "881650ed319c6ed74e66ae56c34cdee93125231b",
      "original_line" : 352,
      "original_position" : 86,
      "original_start_line" : 252,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1527016849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262884442/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-07-13T19:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262884442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262959018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262959018"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In https://github.com/bitcoin/bitcoin/commit/881650ed319c6ed74e66ae56c34cdee93125231b \" wallet: Use wallet's TXO set in AvailableCoins \"\r\n\r\nCan't `tx_ok` still be false at this point if a transaction that has a depth of 0 and is not in the mempool has two txos that belong to the wallet? Since then when the first txo is evaluated, a `{false, false}` entry will be created for that transaction hash, and then when the second txo is evaluated, that entry will be used because the mempool check will be skipped?",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-07-13T19:09:48Z",
      "diff_hunk" : "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {\n+            tx_safe_cache[outpoint.hash] = {false, false};\n \n-            if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n+            // We should not consider coins which aren't at least in our mempool\n+            // It's possible for these to be conflicted via ancestors which we may never be able to detect\n+            if (nDepth == 0 && !wtx.InMempool())\n                 continue;\n \n-            if (wallet.IsSpent(outpoint))\n-                continue;\n+            bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n+\n+            // We should not consider coins from transactions that are replacing\n+            // other transactions.\n+            //\n+            // Example: There is a transaction A which is replaced by bumpfee\n+            // transaction B. In this case, we want to prevent creation of\n+            // a transaction B' which spends an output of B.\n+            //\n+            // Reason: If transaction A were initially confirmed, transactions B\n+            // and B' would no longer be valid, so the user would have to create\n+            // a new transaction C to replace B'. However, in the case of a\n+            // one-block reorg, transactions B' and C might BOTH be accepted,\n+            // when the user only wanted one of them. Specifically, there could\n+            // be a 1-block reorg away from the chain where transactions A and C\n+            // were accepted to another chain where B, B', and C were all\n+            // accepted.\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n+                safeTx = false;\n+            }\n \n-            isminetype mine = wallet.IsMine(output);\n+            // Similarly, we should not consider coins from transactions that\n+            // have been replaced. In the example above, we would want to prevent\n+            // creation of a transaction A' spending an output of A, because if\n+            // transaction B were initially confirmed, conflicting with A and\n+            // A', we wouldn't want to the user to create a transaction D\n+            // intending to replace A', but potentially resulting in a scenario\n+            // where A, A', and D could all be accepted (instead of just B and\n+            // D, or just A and A' like the user would want).\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n+                safeTx = false;\n+            }\n \n-            if (mine == ISMINE_NO) {\n+            if (only_safe && !safeTx) {\n                 continue;\n             }\n \n-            if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n+            if (nDepth < min_depth || nDepth > max_depth) {\n                 continue;\n             }\n \n-            std::unique_ptr<SigningProvider> provider = wallet.GetSolvingProvider(output.scriptPubKey);\n-\n-            int input_bytes = CalculateMaximumSignedInputSize(output, COutPoint(), provider.get(), can_grind_r, coinControl);\n-            bool solvable = provider ? InferDescriptor(output.scriptPubKey, *provider)->IsSolvable() : false;\n-            bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n-\n-            // Filter by spendable outputs only\n-            if (!spendable && params.only_spendable) continue;\n-\n-            // Obtain script type\n-            std::vector<std::vector<uint8_t>> script_solutions;\n-            TxoutType type = Solver(output.scriptPubKey, script_solutions);\n-\n-            // If the output is P2SH and solvable, we want to know if it is\n-            // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\n-            // this from the redeemScript. If the output is not solvable, it will be classified\n-            // as a P2SH (legacy), since we have no way of knowing otherwise without the redeemScript\n-            bool is_from_p2sh{false};\n-            if (type == TxoutType::SCRIPTHASH && solvable) {\n-                CScript script;\n-                if (!provider->GetCScript(CScriptID(uint160(script_solutions[0])), script)) continue;\n-                type = Solver(script, script_solutions);\n-                is_from_p2sh = true;\n-            }\n+            tx_safe_cache[outpoint.hash] = {true, safeTx};\n+        }\n+        const auto& [tx_ok, tx_safe] = tx_safe_cache.at(outpoint.hash);\n+        Assert(tx_ok);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1262959018",
      "id" : 1262959018,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LRzmq",
      "original_commit_id" : "881650ed319c6ed74e66ae56c34cdee93125231b",
      "original_line" : 410,
      "original_position" : 179,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1527016849,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262959018/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-13T19:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1262959018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The commit message for 68bb1463dc1f995fbfdb75d3acef625bde104275 should be updated because now that #27145 has gotten merged, the described issue has already been fixed.",
      "created_at" : "2023-07-20T22:57:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1644753444",
      "id" : 1644753444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585iCPIk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644753444/reactions"
      },
      "updated_at" : "2023-07-20T22:57:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1644753444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK\r\n\r\nMy preliminary testing confirmed that this PR will significantly speed up common operations like `fundrawtransaction` on wallets with many years of transaction history. A single `fundrawtransaction` RPC call that took 5 sec on a simulated large wallet now takes 50ms. Services providers with large wallets that need to make many RPC calls per minute will benefit from reduced lock contention on `cs_wallet`; for example, LSPs using bitcoin core wallets like Eclair.\r\n\r\nCaching the wallet's tx outputs in memory seems like a straight forward solution as long as the cache of tx outs in `m_txos` are always updated (or regenerated) if the underlying set of wallet txs in `mapWallet` or the `m_spk_managers` change. ",
      "created_at" : "2023-09-15T10:01:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1721009982",
      "id" : 1721009982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585mlIc-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721009982/reactions"
      },
      "updated_at" : "2023-09-15T10:01:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721009982",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8568892?v=4",
         "events_url" : "https://api.github.com/users/remyers/events{/privacy}",
         "followers_url" : "https://api.github.com/users/remyers/followers",
         "following_url" : "https://api.github.com/users/remyers/following{/other_user}",
         "gists_url" : "https://api.github.com/users/remyers/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/remyers",
         "id" : 8568892,
         "login" : "remyers",
         "node_id" : "MDQ6VXNlcjg1Njg4OTI=",
         "organizations_url" : "https://api.github.com/users/remyers/orgs",
         "received_events_url" : "https://api.github.com/users/remyers/received_events",
         "repos_url" : "https://api.github.com/users/remyers/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/remyers/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/remyers/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/remyers"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Exposing `RefreshWalletTXOs()` as a public method puts the responsibility of knowing when it should be called outside of the `CWallet` scope. What do you think about making it private and clearing `m_txos` (or adding a new flag) to trigger `RefreshWalletTXOs()` at query time?\r\n\r\nThis alternate approach would require `GetTXO(const COutPoint& outpoint)` and `GetTXOs()` to first call `RefreshWalletTXOs()` if `m_txos` is empty.  There are only a few methods that change `m_spk_managers` that would need to clear `m_txos` to trigger a one time `RefreshWalletTXOs()`:\r\n - `ImportPrivKeys`\r\n - `ImportPublicKeys`\r\n - `ImportScriptPubKeys`\r\n - `AddScriptPubKeyMan`\r\n\r\nIt's also only a small set of places where keys are imported in `backup.cpp`, so the question of leaving `RefreshWalletTXOs()` public might just be a matter of which approach would be less foot-gunny in the future and if there are disadvantages to delaying the regeneration of txos.\r\n\r\nI think you can safely make `RefreshWalletTxTXOs(const CWalletTx& wtx)` a private method now though because it is only called by wallet methods that add a wtx to `mapWallet` like `LoadToWallet` and `AddToWallet`.",
      "created_at" : "2023-09-15T10:50:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1721070639",
      "id" : 1721070639,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585mlXQv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721070639/reactions"
      },
      "updated_at" : "2023-09-15T10:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721070639",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8568892?v=4",
         "events_url" : "https://api.github.com/users/remyers/events{/privacy}",
         "followers_url" : "https://api.github.com/users/remyers/followers",
         "following_url" : "https://api.github.com/users/remyers/following{/other_user}",
         "gists_url" : "https://api.github.com/users/remyers/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/remyers",
         "id" : 8568892,
         "login" : "remyers",
         "node_id" : "MDQ6VXNlcjg1Njg4OTI=",
         "organizations_url" : "https://api.github.com/users/remyers/orgs",
         "received_events_url" : "https://api.github.com/users/remyers/received_events",
         "repos_url" : "https://api.github.com/users/remyers/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/remyers/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/remyers/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/remyers"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Exposing `RefreshWalletTXOs()` as a public method puts the responsibility of knowing when it should be called outside of the `CWallet` scope. What do you think about making it private and clearing `m_txos` (or adding a new flag) to trigger `RefreshWalletTXOs()` at query time?\r\n\r\nI'm not sure that's meaningfully different. The caller still needs to know when to clear `m_txos` in order to trigger a future `RefreshWalletTXOs()`. The way it is now also provides a better UX as the slow part of refreshing the TXOs occurs during slow import operations rather than the first time those TXOs are needed after the import.",
      "created_at" : "2023-09-15T16:40:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1721562368",
      "id" : 1721562368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585mnPUA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721562368/reactions"
      },
      "updated_at" : "2023-09-15T16:40:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721562368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327654362"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327654362"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-09-15T18:35:37Z",
      "diff_hunk" : "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327654362",
      "id" : 1327654362,
      "in_reply_to_id" : 1261601507,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PImXa",
      "original_commit_id" : "68bb1463dc1f995fbfdb75d3acef625bde104275",
      "original_line" : 262,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : null,
      "pull_request_review_id" : 1629521706,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327654362/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T18:35:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327654362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327654424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327654424"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-09-15T18:35:41Z",
      "diff_hunk" : "@@ -297,27 +298,41 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n         std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx(), trusted_parents)};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && wallet.IsTxInMainChain(txo.GetWalletTx())) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;\n+                } if (!is_trusted && tx_depth == 0 && txo.GetWalletTx().InMempool()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327654424",
      "id" : 1327654424,
      "in_reply_to_id" : 1262844660,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PImYY",
      "original_commit_id" : "68bb1463dc1f995fbfdb75d3acef625bde104275",
      "original_line" : 285,
      "original_position" : 57,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : null,
      "pull_request_review_id" : 1629521785,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327654424/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T18:35:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327654424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327656315"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327656315"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm, good point. The expected usage of these is that only new keys will be generated/added, so it shouldn't have any effect on the existing transactions in the wallet. However, I suppose they could be used in a way that does result in existing txs having their IsMine changed. I've also added this to `addmultisigaddress` and `newkeypool` since they could be used in the same way.",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-09-15T18:38:01Z",
      "diff_hunk" : "@@ -480,6 +480,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     const std::unordered_map<COutPoint, WalletTXO, SaltedOutpointHasher>& GetTXOs() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return m_txos; };\n \n     void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RefreshWalletTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327656315",
      "id" : 1327656315,
      "in_reply_to_id" : 1262864895,
      "line" : 508,
      "node_id" : "PRRC_kwDOABII585PIm17",
      "original_commit_id" : "3f3246efe299552e450362a03c61c602a168f7de",
      "original_line" : 508,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 18,
      "pull_request_review_id" : 1629524562,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327656315/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T18:38:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327656315",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327656948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327656948"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The wallet may not rescan every transaction in the wallet since it does look at the given key birthdays.",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-09-15T18:38:46Z",
      "diff_hunk" : "@@ -627,6 +631,7 @@ RPCHelpMan importwallet()\n \n             progress++;\n         }\n+        pwallet->RefreshWalletTXOs();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327656948",
      "id" : 1327656948,
      "in_reply_to_id" : 1262869959,
      "line" : 634,
      "node_id" : "PRRC_kwDOABII585PIm_0",
      "original_commit_id" : "3f3246efe299552e450362a03c61c602a168f7de",
      "original_line" : 634,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/backup.cpp",
      "position" : 29,
      "pull_request_review_id" : 1629525521,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327656948/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T18:38:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327656948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327657164"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327657164"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-09-15T18:39:01Z",
      "diff_hunk" : "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327657164",
      "id" : 1327657164,
      "in_reply_to_id" : 1262884442,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PInDM",
      "original_commit_id" : "881650ed319c6ed74e66ae56c34cdee93125231b",
      "original_line" : 352,
      "original_position" : 86,
      "original_start_line" : 252,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1629525867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327657164/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-15T18:39:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327657164",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327657382"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327657382"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point, changed to an `if`.",
      "commit_id" : "9199832d4440a875a150aa3ba3bc1bc201d3fd72",
      "created_at" : "2023-09-15T18:39:15Z",
      "diff_hunk" : "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {\n+            tx_safe_cache[outpoint.hash] = {false, false};\n \n-            if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n+            // We should not consider coins which aren't at least in our mempool\n+            // It's possible for these to be conflicted via ancestors which we may never be able to detect\n+            if (nDepth == 0 && !wtx.InMempool())\n                 continue;\n \n-            if (wallet.IsSpent(outpoint))\n-                continue;\n+            bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n+\n+            // We should not consider coins from transactions that are replacing\n+            // other transactions.\n+            //\n+            // Example: There is a transaction A which is replaced by bumpfee\n+            // transaction B. In this case, we want to prevent creation of\n+            // a transaction B' which spends an output of B.\n+            //\n+            // Reason: If transaction A were initially confirmed, transactions B\n+            // and B' would no longer be valid, so the user would have to create\n+            // a new transaction C to replace B'. However, in the case of a\n+            // one-block reorg, transactions B' and C might BOTH be accepted,\n+            // when the user only wanted one of them. Specifically, there could\n+            // be a 1-block reorg away from the chain where transactions A and C\n+            // were accepted to another chain where B, B', and C were all\n+            // accepted.\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n+                safeTx = false;\n+            }\n \n-            isminetype mine = wallet.IsMine(output);\n+            // Similarly, we should not consider coins from transactions that\n+            // have been replaced. In the example above, we would want to prevent\n+            // creation of a transaction A' spending an output of A, because if\n+            // transaction B were initially confirmed, conflicting with A and\n+            // A', we wouldn't want to the user to create a transaction D\n+            // intending to replace A', but potentially resulting in a scenario\n+            // where A, A', and D could all be accepted (instead of just B and\n+            // D, or just A and A' like the user would want).\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n+                safeTx = false;\n+            }\n \n-            if (mine == ISMINE_NO) {\n+            if (only_safe && !safeTx) {\n                 continue;\n             }\n \n-            if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n+            if (nDepth < min_depth || nDepth > max_depth) {\n                 continue;\n             }\n \n-            std::unique_ptr<SigningProvider> provider = wallet.GetSolvingProvider(output.scriptPubKey);\n-\n-            int input_bytes = CalculateMaximumSignedInputSize(output, COutPoint(), provider.get(), can_grind_r, coinControl);\n-            bool solvable = provider ? InferDescriptor(output.scriptPubKey, *provider)->IsSolvable() : false;\n-            bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n-\n-            // Filter by spendable outputs only\n-            if (!spendable && params.only_spendable) continue;\n-\n-            // Obtain script type\n-            std::vector<std::vector<uint8_t>> script_solutions;\n-            TxoutType type = Solver(output.scriptPubKey, script_solutions);\n-\n-            // If the output is P2SH and solvable, we want to know if it is\n-            // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\n-            // this from the redeemScript. If the output is not solvable, it will be classified\n-            // as a P2SH (legacy), since we have no way of knowing otherwise without the redeemScript\n-            bool is_from_p2sh{false};\n-            if (type == TxoutType::SCRIPTHASH && solvable) {\n-                CScript script;\n-                if (!provider->GetCScript(CScriptID(uint160(script_solutions[0])), script)) continue;\n-                type = Solver(script, script_solutions);\n-                is_from_p2sh = true;\n-            }\n+            tx_safe_cache[outpoint.hash] = {true, safeTx};\n+        }\n+        const auto& [tx_ok, tx_safe] = tx_safe_cache.at(outpoint.hash);\n+        Assert(tx_ok);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1327657382",
      "id" : 1327657382,
      "in_reply_to_id" : 1262959018,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PInGm",
      "original_commit_id" : "881650ed319c6ed74e66ae56c34cdee93125231b",
      "original_line" : 410,
      "original_position" : 179,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1629526153,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327657382/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T18:39:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327657382",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I'm not sure that's meaningfully different. The caller still needs to know when to clear `m_txos` in order to trigger a future `RefreshWalletTXOs()`. The way it is now also provides a better UX as the slow part of refreshing the TXOs occurs during slow import operations rather than the first time those TXOs are needed after the import.\r\n\r\nJust to clarify, I mean that a reviewer, but not method caller, would need to make sure every method in CWallet that invalidates `m_txos` also clears it. I agree with your point though that forcing the refresh at import time makes sense. I also notice that there are a number of places where a `ScriptPubKeyMan` gets added or updated outside of CWallet, so I understand now why it's not really possible to make `RefreshWalletTXOs()` something internal to `CWallet`.",
      "created_at" : "2023-09-16T08:38:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1722178128",
      "id" : 1722178128,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585mplpQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1722178128/reactions"
      },
      "updated_at" : "2023-09-16T08:38:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1722178128",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8568892?v=4",
         "events_url" : "https://api.github.com/users/remyers/events{/privacy}",
         "followers_url" : "https://api.github.com/users/remyers/followers",
         "following_url" : "https://api.github.com/users/remyers/following{/other_user}",
         "gists_url" : "https://api.github.com/users/remyers/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/remyers",
         "id" : 8568892,
         "login" : "remyers",
         "node_id" : "MDQ6VXNlcjg1Njg4OTI=",
         "organizations_url" : "https://api.github.com/users/remyers/orgs",
         "received_events_url" : "https://api.github.com/users/remyers/received_events",
         "repos_url" : "https://api.github.com/users/remyers/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/remyers/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/remyers/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/remyers"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1359995170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1359995170"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In fdf3ab0579be6d6f2be31907e3451a830e25291e \"wallet: Change balance calculation to use m_txos \":\r\n\r\nnit: This no longer needs to be changed in this commit. ",
      "commit_id" : "275ad95669be5a82a552ecb56b3c4d37f65243af",
      "created_at" : "2023-10-16T00:44:18Z",
      "diff_hunk" : "@@ -231,7 +231,8 @@ def run_test(self):\n         assert_equal(newbalance, balance + Decimal(\"20\"))\n         balance = newbalance\n \n-        # Invalidate the block with the double spend. B & C's 10 BTC outputs should no longer be available\n+        # Invalidate the block with the double spend and both B and C's 10 BTC output should no longer be available\n+        # AB1 and ABC2's outputs are also not available since neither of those txs are in the mempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1359995170",
      "id" : 1359995170,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585RD-Ei",
      "original_commit_id" : "fdf3ab0579be6d6f2be31907e3451a830e25291e",
      "original_line" : 235,
      "original_position" : 6,
      "original_start_line" : 234,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : null,
      "pull_request_review_id" : 1657907650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1359995170/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2023-10-16T12:06:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1359995170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1359998074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1359998074"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In d7b3603822663fbc713970bf37dc010904aaa583 \"wallet: Recalculate the wallet's txos after any imports \":\r\n\r\n`RefreshWalletTXOs` looks similar to `RefreshWalletTxTXOs` and it is not immediately clear what the distinction is without actually reading the functions. I would suggest s/RefreshWalletTXOs/RefreshAllTXOs (putting \"Wallet\" seems redundant here because the method belongs to wallet anyways, and `GetTXOs` doesn't mention \"Wallet\" in the function name).",
      "commit_id" : "275ad95669be5a82a552ecb56b3c4d37f65243af",
      "created_at" : "2023-10-16T00:54:34Z",
      "diff_hunk" : "@@ -504,6 +504,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     const std::unordered_map<COutPoint, WalletTXO, SaltedOutpointHasher>& GetTXOs() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return m_txos; };\n \n     void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RefreshWalletTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1359998074",
      "id" : 1359998074,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585RD-x6",
      "original_commit_id" : "d7b3603822663fbc713970bf37dc010904aaa583",
      "original_line" : 508,
      "original_position" : 4,
      "original_start_line" : 506,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 1657907650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1359998074/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-16T12:06:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1359998074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1360011012"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360011012"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Looking at this again, I think I mislead you here. In the scenario I described above, `tx_ok` won't be false at this point, because if a `{false, false}` entry has already been created for a txid, then it would not reach this point because it would already get removed here (https://github.com/bitcoin/bitcoin/pull/27286/commits/9315bb7872210dc767dfd7ea01febb13fca5525b#diff-6e06b309cd494ef5da4e78aa0929a980767edd12342137f268b9219167064d13R328-R329)",
      "commit_id" : "275ad95669be5a82a552ecb56b3c4d37f65243af",
      "created_at" : "2023-10-16T01:38:50Z",
      "diff_hunk" : "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {\n+            tx_safe_cache[outpoint.hash] = {false, false};\n \n-            if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n+            // We should not consider coins which aren't at least in our mempool\n+            // It's possible for these to be conflicted via ancestors which we may never be able to detect\n+            if (nDepth == 0 && !wtx.InMempool())\n                 continue;\n \n-            if (wallet.IsSpent(outpoint))\n-                continue;\n+            bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n+\n+            // We should not consider coins from transactions that are replacing\n+            // other transactions.\n+            //\n+            // Example: There is a transaction A which is replaced by bumpfee\n+            // transaction B. In this case, we want to prevent creation of\n+            // a transaction B' which spends an output of B.\n+            //\n+            // Reason: If transaction A were initially confirmed, transactions B\n+            // and B' would no longer be valid, so the user would have to create\n+            // a new transaction C to replace B'. However, in the case of a\n+            // one-block reorg, transactions B' and C might BOTH be accepted,\n+            // when the user only wanted one of them. Specifically, there could\n+            // be a 1-block reorg away from the chain where transactions A and C\n+            // were accepted to another chain where B, B', and C were all\n+            // accepted.\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n+                safeTx = false;\n+            }\n \n-            isminetype mine = wallet.IsMine(output);\n+            // Similarly, we should not consider coins from transactions that\n+            // have been replaced. In the example above, we would want to prevent\n+            // creation of a transaction A' spending an output of A, because if\n+            // transaction B were initially confirmed, conflicting with A and\n+            // A', we wouldn't want to the user to create a transaction D\n+            // intending to replace A', but potentially resulting in a scenario\n+            // where A, A', and D could all be accepted (instead of just B and\n+            // D, or just A and A' like the user would want).\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n+                safeTx = false;\n+            }\n \n-            if (mine == ISMINE_NO) {\n+            if (only_safe && !safeTx) {\n                 continue;\n             }\n \n-            if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n+            if (nDepth < min_depth || nDepth > max_depth) {\n                 continue;\n             }\n \n-            std::unique_ptr<SigningProvider> provider = wallet.GetSolvingProvider(output.scriptPubKey);\n-\n-            int input_bytes = CalculateMaximumSignedInputSize(output, COutPoint(), provider.get(), can_grind_r, coinControl);\n-            bool solvable = provider ? InferDescriptor(output.scriptPubKey, *provider)->IsSolvable() : false;\n-            bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n-\n-            // Filter by spendable outputs only\n-            if (!spendable && params.only_spendable) continue;\n-\n-            // Obtain script type\n-            std::vector<std::vector<uint8_t>> script_solutions;\n-            TxoutType type = Solver(output.scriptPubKey, script_solutions);\n-\n-            // If the output is P2SH and solvable, we want to know if it is\n-            // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\n-            // this from the redeemScript. If the output is not solvable, it will be classified\n-            // as a P2SH (legacy), since we have no way of knowing otherwise without the redeemScript\n-            bool is_from_p2sh{false};\n-            if (type == TxoutType::SCRIPTHASH && solvable) {\n-                CScript script;\n-                if (!provider->GetCScript(CScriptID(uint160(script_solutions[0])), script)) continue;\n-                type = Solver(script, script_solutions);\n-                is_from_p2sh = true;\n-            }\n+            tx_safe_cache[outpoint.hash] = {true, safeTx};\n+        }\n+        const auto& [tx_ok, tx_safe] = tx_safe_cache.at(outpoint.hash);\n+        Assert(tx_ok);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1360011012",
      "id" : 1360011012,
      "in_reply_to_id" : 1262959018,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585REB8E",
      "original_commit_id" : "881650ed319c6ed74e66ae56c34cdee93125231b",
      "original_line" : 410,
      "original_position" : 179,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1657907650,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360011012/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-16T12:06:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360011012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1361317075"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317075"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "275ad95669be5a82a552ecb56b3c4d37f65243af",
      "created_at" : "2023-10-16T22:14:49Z",
      "diff_hunk" : "@@ -231,7 +231,8 @@ def run_test(self):\n         assert_equal(newbalance, balance + Decimal(\"20\"))\n         balance = newbalance\n \n-        # Invalidate the block with the double spend. B & C's 10 BTC outputs should no longer be available\n+        # Invalidate the block with the double spend and both B and C's 10 BTC output should no longer be available\n+        # AB1 and ABC2's outputs are also not available since neither of those txs are in the mempool",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1361317075",
      "id" : 1361317075,
      "in_reply_to_id" : 1359995170,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585RJAzT",
      "original_commit_id" : "fdf3ab0579be6d6f2be31907e3451a830e25291e",
      "original_line" : 235,
      "original_position" : 6,
      "original_start_line" : 234,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : null,
      "pull_request_review_id" : 1681041652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317075/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2023-10-16T22:14:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317075",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1361317158"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317158"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Renamed as suggested.",
      "commit_id" : "275ad95669be5a82a552ecb56b3c4d37f65243af",
      "created_at" : "2023-10-16T22:14:56Z",
      "diff_hunk" : "@@ -504,6 +504,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     const std::unordered_map<COutPoint, WalletTXO, SaltedOutpointHasher>& GetTXOs() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); return m_txos; };\n \n     void RefreshWalletTxTXOs(const CWalletTx& wtx) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void RefreshWalletTXOs() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1361317158",
      "id" : 1361317158,
      "in_reply_to_id" : 1359998074,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585RJA0m",
      "original_commit_id" : "d7b3603822663fbc713970bf37dc010904aaa583",
      "original_line" : 508,
      "original_position" : 4,
      "original_start_line" : 506,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 1681041766,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317158/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-16T22:14:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317158",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1361317356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317356"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Indeed. I've left the `if` there anyways as a belt-and-suspenders, and changed it to also `Assume`.",
      "commit_id" : "275ad95669be5a82a552ecb56b3c4d37f65243af",
      "created_at" : "2023-10-16T22:15:19Z",
      "diff_hunk" : "@@ -217,133 +217,141 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     const bool can_grind_r = wallet.CanGrindR();\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& wtxid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(wtxid, i);\n+        if (mine == ISMINE_NO) {\n+            continue;\n+        }\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {\n+            tx_safe_cache[outpoint.hash] = {false, false};\n \n-            if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n+            // We should not consider coins which aren't at least in our mempool\n+            // It's possible for these to be conflicted via ancestors which we may never be able to detect\n+            if (nDepth == 0 && !wtx.InMempool())\n                 continue;\n \n-            if (wallet.IsSpent(outpoint))\n-                continue;\n+            bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n+\n+            // We should not consider coins from transactions that are replacing\n+            // other transactions.\n+            //\n+            // Example: There is a transaction A which is replaced by bumpfee\n+            // transaction B. In this case, we want to prevent creation of\n+            // a transaction B' which spends an output of B.\n+            //\n+            // Reason: If transaction A were initially confirmed, transactions B\n+            // and B' would no longer be valid, so the user would have to create\n+            // a new transaction C to replace B'. However, in the case of a\n+            // one-block reorg, transactions B' and C might BOTH be accepted,\n+            // when the user only wanted one of them. Specifically, there could\n+            // be a 1-block reorg away from the chain where transactions A and C\n+            // were accepted to another chain where B, B', and C were all\n+            // accepted.\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n+                safeTx = false;\n+            }\n \n-            isminetype mine = wallet.IsMine(output);\n+            // Similarly, we should not consider coins from transactions that\n+            // have been replaced. In the example above, we would want to prevent\n+            // creation of a transaction A' spending an output of A, because if\n+            // transaction B were initially confirmed, conflicting with A and\n+            // A', we wouldn't want to the user to create a transaction D\n+            // intending to replace A', but potentially resulting in a scenario\n+            // where A, A', and D could all be accepted (instead of just B and\n+            // D, or just A and A' like the user would want).\n+            if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n+                safeTx = false;\n+            }\n \n-            if (mine == ISMINE_NO) {\n+            if (only_safe && !safeTx) {\n                 continue;\n             }\n \n-            if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n+            if (nDepth < min_depth || nDepth > max_depth) {\n                 continue;\n             }\n \n-            std::unique_ptr<SigningProvider> provider = wallet.GetSolvingProvider(output.scriptPubKey);\n-\n-            int input_bytes = CalculateMaximumSignedInputSize(output, COutPoint(), provider.get(), can_grind_r, coinControl);\n-            bool solvable = provider ? InferDescriptor(output.scriptPubKey, *provider)->IsSolvable() : false;\n-            bool spendable = ((mine & ISMINE_SPENDABLE) != ISMINE_NO) || (((mine & ISMINE_WATCH_ONLY) != ISMINE_NO) && (coinControl && coinControl->fAllowWatchOnly && solvable));\n-\n-            // Filter by spendable outputs only\n-            if (!spendable && params.only_spendable) continue;\n-\n-            // Obtain script type\n-            std::vector<std::vector<uint8_t>> script_solutions;\n-            TxoutType type = Solver(output.scriptPubKey, script_solutions);\n-\n-            // If the output is P2SH and solvable, we want to know if it is\n-            // a P2SH (legacy) or one of P2SH-P2WPKH, P2SH-P2WSH (P2SH-Segwit). We can determine\n-            // this from the redeemScript. If the output is not solvable, it will be classified\n-            // as a P2SH (legacy), since we have no way of knowing otherwise without the redeemScript\n-            bool is_from_p2sh{false};\n-            if (type == TxoutType::SCRIPTHASH && solvable) {\n-                CScript script;\n-                if (!provider->GetCScript(CScriptID(uint160(script_solutions[0])), script)) continue;\n-                type = Solver(script, script_solutions);\n-                is_from_p2sh = true;\n-            }\n+            tx_safe_cache[outpoint.hash] = {true, safeTx};\n+        }\n+        const auto& [tx_ok, tx_safe] = tx_safe_cache.at(outpoint.hash);\n+        Assert(tx_ok);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1361317356",
      "id" : 1361317356,
      "in_reply_to_id" : 1262959018,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585RJA3s",
      "original_commit_id" : "881650ed319c6ed74e66ae56c34cdee93125231b",
      "original_line" : 410,
      "original_position" : 179,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1681042072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317356/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-16T22:15:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1361317356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1369755368"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1369755368"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\nbench/wallet_create_tx.cpp:58:26: error: use emplace_back instead of push_back [modernize-use-emplace,-warnings-as-errors]\r\n   58 |         coinbase_tx.vout.push_back(CTxOut(1 * COIN / 50, CScript(OP_TRUE)));\r\n      |                          ^~~~~~~~~~~~~~~~~                               ~\r\n      |                          emplace_back(",
      "commit_id" : "dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "created_at" : "2023-10-24T07:51:16Z",
      "diff_hunk" : "@@ -47,10 +47,17 @@ void generateFakeBlock(const CChainParams& params,\n     coinbase_tx.vin[0].prevout.SetNull();\n     coinbase_tx.vout.resize(2);\n     coinbase_tx.vout[0].scriptPubKey = coinbase_out_script;\n-    coinbase_tx.vout[0].nValue = 49 * COIN;\n+    coinbase_tx.vout[0].nValue = 48 * COIN;\n     coinbase_tx.vin[0].scriptSig = CScript() << ++tip.tip_height << OP_0;\n     coinbase_tx.vout[1].scriptPubKey = coinbase_out_script; // extra output\n     coinbase_tx.vout[1].nValue = 1 * COIN;\n+\n+    // Fill the coinbase with outputs that don't belong to the wallet in order to benchmark\n+    // AvailableCoins' behavior with unnecessary TXOs\n+    for (int i = 0; i < 50; ++i) {\n+        coinbase_tx.vout.push_back(CTxOut(1 * COIN / 50, CScript(OP_TRUE)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1369755368",
      "id" : 1369755368,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585RpM7o",
      "original_commit_id" : "9292951f0c2a05a79280e4feb8c1557586681105",
      "original_line" : 58,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/bench/wallet_create_tx.cpp",
      "position" : null,
      "pull_request_review_id" : 1694219823,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1369755368/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-24T07:51:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1369755368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1370428946"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370428946"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "created_at" : "2023-10-24T15:41:43Z",
      "diff_hunk" : "@@ -47,10 +47,17 @@ void generateFakeBlock(const CChainParams& params,\n     coinbase_tx.vin[0].prevout.SetNull();\n     coinbase_tx.vout.resize(2);\n     coinbase_tx.vout[0].scriptPubKey = coinbase_out_script;\n-    coinbase_tx.vout[0].nValue = 49 * COIN;\n+    coinbase_tx.vout[0].nValue = 48 * COIN;\n     coinbase_tx.vin[0].scriptSig = CScript() << ++tip.tip_height << OP_0;\n     coinbase_tx.vout[1].scriptPubKey = coinbase_out_script; // extra output\n     coinbase_tx.vout[1].nValue = 1 * COIN;\n+\n+    // Fill the coinbase with outputs that don't belong to the wallet in order to benchmark\n+    // AvailableCoins' behavior with unnecessary TXOs\n+    for (int i = 0; i < 50; ++i) {\n+        coinbase_tx.vout.push_back(CTxOut(1 * COIN / 50, CScript(OP_TRUE)));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1370428946",
      "id" : 1370428946,
      "in_reply_to_id" : 1369755368,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585RrxYS",
      "original_commit_id" : "9292951f0c2a05a79280e4feb8c1557586681105",
      "original_line" : 58,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/bench/wallet_create_tx.cpp",
      "position" : null,
      "pull_request_review_id" : 1695267006,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370428946/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-24T15:41:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370428946",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-10-29T11:02:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1784067406",
      "id" : 1784067406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585qVrVO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1784067406/reactions"
      },
      "updated_at" : "2023-10-29T11:02:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1784067406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376775944"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376775944"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "How would that ever happen? Wouldnât we only have seen a trusted_parent before if we received two outputs from the same transaction?",
      "commit_id" : "dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "created_at" : "2023-10-30T20:39:45Z",
      "diff_hunk" : "@@ -256,6 +256,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uint256>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.count(wtx.GetHash()) > 0) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376775944",
      "id" : 1376775944,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585SD-8I",
      "original_commit_id" : "b2790645e9d8a4db8919f14a04b83b6ac4d61015",
      "original_line" : 261,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 67,
      "pull_request_review_id" : 1705025510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376775944/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-30T21:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376775944",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376784576"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376784576"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wouldnât this mean that we donât count P2PK outputs to our balance in combination with the changes to \"Destinations\" for Silent Payments?",
      "commit_id" : "dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "created_at" : "2023-10-30T20:49:17Z",
      "diff_hunk" : "@@ -329,32 +343,19 @@ std::map<CTxDestination, CAmount> GetAddressBalances(const CWallet& wallet)\n \n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& walletEntry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = walletEntry.second;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            if (!CachedTxIsTrusted(wallet, txo.GetWalletTx())) continue;\n+            if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx())) continue;\n \n-            if (!CachedTxIsTrusted(wallet, wtx, trusted_parents))\n-                continue;\n+            int nDepth = wallet.GetTxDepthInMainChain(txo.GetWalletTx());\n+            if (nDepth < (CachedTxIsFromMe(wallet, txo.GetWalletTx(), ISMINE_ALL) ? 0 : 1)) continue;\n \n-            if (wallet.IsTxImmatureCoinBase(wtx))\n-                continue;\n+            CTxDestination addr;\n+            Assume(wallet.IsMine(txo.GetTxOut()));\n+            if(!ExtractDestination(txo.GetTxOut().scriptPubKey, addr)) continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376784576",
      "id" : 1376784576,
      "line" : 309,
      "node_id" : "PRRC_kwDOABII585SEBDA",
      "original_commit_id" : "73bff03d1f641d11f2cd4d2da099b39c64fcf69d",
      "original_line" : 355,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 164,
      "pull_request_review_id" : 1705025510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376784576/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-30T21:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376784576",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376793667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376793667"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What does `GetDebit` do? The explanation in `wallet.h` is also self-referential:  \r\n\r\n```\r\n 769     /**\r\n 770      * Returns amount of debit if the input matches the\r\n 771      * filter, otherwise returns 0\r\n 772      */\r\n```\r\n\r\nDoes this just get the amount for an input that matches the filter criteria?",
      "commit_id" : "dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "created_at" : "2023-10-30T20:58:46Z",
      "diff_hunk" : "@@ -1555,16 +1555,10 @@ void CWallet::BlockUntilSyncedToCurrentChain() const {\n // and a not-\"is mine\" (according to the filter) input.\n CAmount CWallet::GetDebit(const CTxIn &txin, const isminefilter& filter) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376793667",
      "id" : 1376793667,
      "line" : 1556,
      "node_id" : "PRRC_kwDOABII585SEDRD",
      "original_commit_id" : "c91b1de21821f924e34980aef1f8da2ae6571774",
      "original_line" : 1556,
      "original_position" : 2,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 20,
      "pull_request_review_id" : 1705025510,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376793667/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-30T21:04:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376793667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376825609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376825609"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, P2PK is not an address type.",
      "commit_id" : "dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "created_at" : "2023-10-30T21:33:01Z",
      "diff_hunk" : "@@ -329,32 +343,19 @@ std::map<CTxDestination, CAmount> GetAddressBalances(const CWallet& wallet)\n \n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& walletEntry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = walletEntry.second;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            if (!CachedTxIsTrusted(wallet, txo.GetWalletTx())) continue;\n+            if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx())) continue;\n \n-            if (!CachedTxIsTrusted(wallet, wtx, trusted_parents))\n-                continue;\n+            int nDepth = wallet.GetTxDepthInMainChain(txo.GetWalletTx());\n+            if (nDepth < (CachedTxIsFromMe(wallet, txo.GetWalletTx(), ISMINE_ALL) ? 0 : 1)) continue;\n \n-            if (wallet.IsTxImmatureCoinBase(wtx))\n-                continue;\n+            CTxDestination addr;\n+            Assume(wallet.IsMine(txo.GetTxOut()));\n+            if(!ExtractDestination(txo.GetTxOut().scriptPubKey, addr)) continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376825609",
      "id" : 1376825609,
      "in_reply_to_id" : 1376784576,
      "line" : 309,
      "node_id" : "PRRC_kwDOABII585SELEJ",
      "original_commit_id" : "73bff03d1f641d11f2cd4d2da099b39c64fcf69d",
      "original_line" : 355,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 164,
      "pull_request_review_id" : 1705110720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376825609/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-30T21:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376825609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376828067"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376828067"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"Debit\" refers to the amount leaving the wallet, assuming the UTXO spent by the input matches the filter. \"Debit\" operates on a transaction's inputs, while \"credit\" operates on the outputs.",
      "commit_id" : "dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "created_at" : "2023-10-30T21:36:03Z",
      "diff_hunk" : "@@ -1555,16 +1555,10 @@ void CWallet::BlockUntilSyncedToCurrentChain() const {\n // and a not-\"is mine\" (according to the filter) input.\n CAmount CWallet::GetDebit(const CTxIn &txin, const isminefilter& filter) const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376828067",
      "id" : 1376828067,
      "in_reply_to_id" : 1376793667,
      "line" : 1556,
      "node_id" : "PRRC_kwDOABII585SELqj",
      "original_commit_id" : "c91b1de21821f924e34980aef1f8da2ae6571774",
      "original_line" : 1556,
      "original_position" : 2,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 20,
      "pull_request_review_id" : 1705114428,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376828067/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-30T21:36:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376828067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376896229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376896229"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, and that does happen, e.g. send to self transactions. The tests also do this a lot.",
      "commit_id" : "dd411d9d209fe1eacfcb21baba178aa31809f7cf",
      "created_at" : "2023-10-30T23:21:26Z",
      "diff_hunk" : "@@ -256,6 +256,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uint256>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.count(wtx.GetHash()) > 0) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1376896229",
      "id" : 1376896229,
      "in_reply_to_id" : 1376775944,
      "line" : 216,
      "node_id" : "PRRC_kwDOABII585SEcTl",
      "original_commit_id" : "b2790645e9d8a4db8919f14a04b83b6ac4d61015",
      "original_line" : 261,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 67,
      "pull_request_review_id" : 1705219601,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376896229/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-30T23:21:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1376896229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-11-24T16:47:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1825911679",
      "id" : 1825911679,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585s1TN_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825911679/reactions"
      },
      "updated_at" : "2023-11-24T16:47:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825911679",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-12-11T17:20:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1850521328",
      "id" : 1850521328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585uTLbw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850521328/reactions"
      },
      "updated_at" : "2023-12-11T17:20:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850521328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-12-12T12:06:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1851910628",
      "id" : 1851910628,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585uYenk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1851910628/reactions"
      },
      "updated_at" : "2023-12-12T12:06:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1851910628",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1437849004"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437849004"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I have the impression that `m_txos` is also used to look up information on old transactions and we therefore want to keep all transaction outputs the wallet ever had.\r\n\r\nWould it perhaps make sense to also have a reduced set that only keeps the potentially _unspent_ TXOs? I could see a wallet that participates in a few dozen transactions every day have magnitudes more TXOs than UTXOs. So perhaps the work the wallet has to perform every time it builds a transaction could be shortcut by storing e.g. `m_is_mature_spent` on `WalletTXO` which could be set to true when the transaction spending an output has 100 confirmations, and then either separately keeping a list of all TXOs that are not `m_is_mature_spent` or at least iterate over them more quickly directly on the basis of that member, without needing to have complex reorg handling to keep this collection up to date.",
      "commit_id" : "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "created_at" : "2023-12-28T19:32:35Z",
      "diff_hunk" : "@@ -320,137 +320,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1437849004",
      "id" : 1437849004,
      "line" : 337,
      "node_id" : "PRRC_kwDOABII585Vs9Ws",
      "original_commit_id" : "91e4f19f66c5e2078aa8372d93aa7d5e027c40e5",
      "original_line" : 341,
      "original_position" : 52,
      "original_start_line" : 340,
      "path" : "src/wallet/spend.cpp",
      "position" : 67,
      "pull_request_review_id" : 1798367193,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437849004/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 336,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-28T19:38:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437849004",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1437851827"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437851827"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah, nevermind, I just saw https://github.com/bitcoin/bitcoin/pull/27865",
      "commit_id" : "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "created_at" : "2023-12-28T19:39:45Z",
      "diff_hunk" : "@@ -320,137 +320,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1437851827",
      "id" : 1437851827,
      "in_reply_to_id" : 1437849004,
      "line" : 337,
      "node_id" : "PRRC_kwDOABII585Vs-Cz",
      "original_commit_id" : "91e4f19f66c5e2078aa8372d93aa7d5e027c40e5",
      "original_line" : 341,
      "original_position" : 52,
      "original_start_line" : 340,
      "path" : "src/wallet/spend.cpp",
      "position" : 67,
      "pull_request_review_id" : 1798371244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437851827/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 336,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-28T19:39:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1437851827",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1440077502"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440077502"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems like a hazard\r\n```suggestion\r\n                } else if (!is_trusted && txo.GetWalletTx().InMempool()) {\r\n```",
      "commit_id" : "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "created_at" : "2024-01-03T05:02:43Z",
      "diff_hunk" : "@@ -293,27 +252,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && wallet.IsTxInMainChain(txo.GetWalletTx())) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;\n+                } if (!is_trusted && txo.GetWalletTx().InMempool()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1440077502",
      "id" : 1440077502,
      "line" : 284,
      "node_id" : "PRRC_kwDOABII585V1da-",
      "original_commit_id" : "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "original_line" : 284,
      "original_position" : 117,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 117,
      "pull_request_review_id" : 1801381790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440077502/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-03T05:26:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440077502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1440086373"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440086373"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Could use `contains` (and other places too)\r\n```suggestion\r\n        if (!tx_safe_cache.contains(outpoint.hash)) {\r\n```",
      "commit_id" : "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "created_at" : "2024-01-03T05:25:23Z",
      "diff_hunk" : "@@ -320,137 +316,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(Txid::FromUint256(txid), i);\n+        assert(mine != ISMINE_NO);\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1440086373",
      "id" : 1440086373,
      "line" : 357,
      "node_id" : "PRRC_kwDOABII585V1fll",
      "original_commit_id" : "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "original_line" : 357,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 110,
      "pull_request_review_id" : 1801381790,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440086373/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-03T05:26:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1440086373",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1442251493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442251493"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good catch, fixed.",
      "commit_id" : "39f0ab3e126704b30f7ed2b86690f60b631d2ec4",
      "created_at" : "2024-01-04T21:05:07Z",
      "diff_hunk" : "@@ -293,27 +252,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object\n+                if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && wallet.IsTxInMainChain(txo.GetWalletTx())) {\n+                    ret.m_mine_immature += credit_mine;\n+                    ret.m_watchonly_immature += credit_watchonly;\n+                } else if (is_trusted && tx_depth >= min_depth) {\n+                    ret.m_mine_trusted += credit_mine;\n+                    ret.m_watchonly_trusted += credit_watchonly;\n+                } if (!is_trusted && txo.GetWalletTx().InMempool()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1442251493",
      "id" : 1442251493,
      "in_reply_to_id" : 1440077502,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585V9wLl",
      "original_commit_id" : "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "original_line" : 284,
      "original_position" : 117,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : null,
      "pull_request_review_id" : 1804970818,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442251493/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-04T21:05:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442251493",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1442251567"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442251567"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "39f0ab3e126704b30f7ed2b86690f60b631d2ec4",
      "created_at" : "2024-01-04T21:05:13Z",
      "diff_hunk" : "@@ -320,137 +316,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)\n+    std::unordered_map<uint256, std::pair<bool, bool>, SaltedTxidHasher> tx_safe_cache;\n+    for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+        const CWalletTx& wtx = txo.GetWalletTx();\n+        const CTxOut& output = txo.GetTxOut();\n \n-        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n+        if (tx_safe_cache.count(outpoint.hash) > 0 && !tx_safe_cache.at(outpoint.hash).first) {\n             continue;\n+        }\n \n-        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n-        if (nDepth < 0)\n+        // Skip manually selected coins (the caller can fetch them directly)\n+        if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n             continue;\n \n-        // We should not consider coins which aren't at least in our mempool\n-        // It's possible for these to be conflicted via ancestors which we may never be able to detect\n-        if (nDepth == 0 && !wtx.InMempool())\n+        if (wallet.IsLockedCoin(outpoint) && params.skip_locked)\n             continue;\n \n-        bool safeTx = CachedTxIsTrusted(wallet, wtx, trusted_parents);\n-\n-        // We should not consider coins from transactions that are replacing\n-        // other transactions.\n-        //\n-        // Example: There is a transaction A which is replaced by bumpfee\n-        // transaction B. In this case, we want to prevent creation of\n-        // a transaction B' which spends an output of B.\n-        //\n-        // Reason: If transaction A were initially confirmed, transactions B\n-        // and B' would no longer be valid, so the user would have to create\n-        // a new transaction C to replace B'. However, in the case of a\n-        // one-block reorg, transactions B' and C might BOTH be accepted,\n-        // when the user only wanted one of them. Specifically, there could\n-        // be a 1-block reorg away from the chain where transactions A and C\n-        // were accepted to another chain where B, B', and C were all\n-        // accepted.\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaces_txid\")) {\n-            safeTx = false;\n-        }\n+        if (wallet.IsSpent(outpoint))\n+            continue;\n \n-        // Similarly, we should not consider coins from transactions that\n-        // have been replaced. In the example above, we would want to prevent\n-        // creation of a transaction A' spending an output of A, because if\n-        // transaction B were initially confirmed, conflicting with A and\n-        // A', we wouldn't want to the user to create a transaction D\n-        // intending to replace A', but potentially resulting in a scenario\n-        // where A, A', and D could all be accepted (instead of just B and\n-        // D, or just A and A' like the user would want).\n-        if (nDepth == 0 && wtx.mapValue.count(\"replaced_by_txid\")) {\n-            safeTx = false;\n-        }\n+        if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n+            continue;\n \n-        if (only_safe && !safeTx) {\n+        if (!allow_used_addresses && wallet.IsSpentKey(output.scriptPubKey)) {\n             continue;\n         }\n \n-        if (nDepth < min_depth || nDepth > max_depth) {\n+        if (wallet.IsTxImmatureCoinBase(wtx) && !params.include_immature_coinbase)\n             continue;\n-        }\n \n-        bool tx_from_me = CachedTxIsFromMe(wallet, wtx, ISMINE_ALL);\n+        isminetype mine = wallet.IsMine(output);\n \n-        for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n-            const CTxOut& output = wtx.tx->vout[i];\n-            const COutPoint outpoint(Txid::FromUint256(txid), i);\n+        assert(mine != ISMINE_NO);\n \n-            if (output.nValue < params.min_amount || output.nValue > params.max_amount)\n-                continue;\n+        int nDepth = wallet.GetTxDepthInMainChain(wtx);\n+        if (nDepth < 0)\n+            continue;\n \n-            // Skip manually selected coins (the caller can fetch them directly)\n-            if (coinControl && coinControl->HasSelected() && coinControl->IsSelected(outpoint))\n-                continue;\n+        if (tx_safe_cache.count(outpoint.hash) == 0 ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1442251567",
      "id" : 1442251567,
      "in_reply_to_id" : 1440086373,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585V9wMv",
      "original_commit_id" : "0c0022311a0cffc4c03b3763c9b60f93ede13687",
      "original_line" : 357,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1804970933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442251567/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-04T21:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442251567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-02-03T04:54:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1925096836",
      "id" : 1925096836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII585yvqWE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1925096836/reactions"
      },
      "updated_at" : "2024-02-03T04:54:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1925096836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-02-20T11:55:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#issuecomment-1954059773",
      "id" : 1954059773,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27286",
      "node_id" : "IC_kwDOABII5850eJX9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954059773/reactions"
      },
      "updated_at" : "2024-02-20T11:55:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954059773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520283962"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520283962"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e (wallet: Keep track of transaction outputs owned by the wallet):\r\n\r\n```suggestion\r\n    // Cache the outputs that belong to the wallet on the walletâs transactions\r\n```",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T19:00:03Z",
      "diff_hunk" : "@@ -1143,6 +1143,9 @@ CWalletTx* CWallet::AddToWallet(CTransactionRef tx, const TxState& state, const\n     // Break debit/credit balance caches:\n     wtx.MarkDirty();\n \n+    // Get the outputs that belong to the wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520283962",
      "id" : 1520283962,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585anbE6",
      "original_commit_id" : "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "original_line" : 1146,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520283962/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520283962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520287400"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520287400"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e (wallet: Keep track of transaction outputs owned by the wallet):\r\n\r\n\r\n```suggestion\r\n        if (m_txos.contains(outpoint)) {\r\n```",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T19:03:15Z",
      "diff_hunk" : "@@ -4467,4 +4475,22 @@ void CWallet::TopUpCallback(const std::set<CScript>& spks, ScriptPubKeyMan* spkm\n     // Update scriptPubKey cache\n     CacheNewScriptPubKeys(spks, spkm);\n }\n+\n+void CWallet::RefreshWalletTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.count(outpoint) > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520287400",
      "id" : 1520287400,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585anb6o",
      "original_commit_id" : "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "original_line" : 4489,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520287400/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520287400",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520290111"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520290111"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e (wallet: Keep track of transaction outputs owned by the wallet):\r\n```suggestion\r\n    //! Set of spent and unspent transaction outputs owned by this wallet\r\n```",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T19:05:59Z",
      "diff_hunk" : "@@ -425,6 +425,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! Cache of descriptor ScriptPubKeys used for IsMine. Maps ScriptPubKey to set of spkms\n     std::unordered_map<CScript, std::vector<ScriptPubKeyMan*>, SaltedSipHasher> m_cached_spks;\n \n+    //! Set of transaction outputs owned by this wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520290111",
      "id" : 1520290111,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585anck_",
      "original_commit_id" : "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "original_line" : 428,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520290111/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520290111",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520295185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520295185"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 0283525d64a28c79f4588ef0a71bd280b2fc7768 (wallet: Exit IsTrustedTx early if wtx is already in trusted_parents):\r\n\r\n```suggestion\r\n    if (trusted_parents.contains(wtx.GetHash())) return true;\r\n```",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T19:09:35Z",
      "diff_hunk" : "@@ -256,6 +256,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uint256>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.count(wtx.GetHash()) > 0) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520295185",
      "id" : 1520295185,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585and0R",
      "original_commit_id" : "0283525d64a28c79f4588ef0a71bd280b2fc7768",
      "original_line" : 261,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : null,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520295185/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520295185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520330141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520330141"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In b217f576a5f284ac7261986ee6ec9334bbbdbbc6 (wallet: Change balance calculation to use m_txos):\r\n\r\nI dug into this line, because I was wondering whether this line changed the behavior, but found that in `src/wallet/receive.cpp` in `CachedTxGetAvailableCredit(â¦)` the `reuse_filter` was used to derive the same resulting `allow_used_addresses` on basis of the filter and `WALLET_FLAG_AVOID_REUSE`. So, Iâm thinking now that this change is not a change in behavior. It would perhaps help future reviewers if the commit message mentioned why this change is valid and doesnât change the behavior.",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T19:37:04Z",
      "diff_hunk" : "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520330141",
      "id" : 1520330141,
      "line" : 255,
      "node_id" : "PRRC_kwDOABII585anmWd",
      "original_commit_id" : "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "original_line" : 255,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 77,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520330141/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520330141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520345314"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520345314"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e (wallet: Keep track of transaction outputs owned by the wallet):\r\n\r\nA few commits later, you use `wallet.IsSpent(outpoint)` to check whether a TXO is still available for spending. Why canât we just do store the outcome of `wallet.IsSpent(outpoint)` here as well?",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T19:47:30Z",
      "diff_hunk" : "@@ -4467,4 +4475,22 @@ void CWallet::TopUpCallback(const std::set<CScript>& spks, ScriptPubKeyMan* spkm\n     // Update scriptPubKey cache\n     CacheNewScriptPubKeys(spks, spkm);\n }\n+\n+void CWallet::RefreshWalletTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.count(outpoint) > 0) {\n+            m_txos.at(outpoint).SetIsMine(ismine);\n+        } else {\n+            m_txos.emplace(outpoint, WalletTXO{wtx, txout, ismine});\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520345314",
      "id" : 1520345314,
      "line" : 4491,
      "node_id" : "PRRC_kwDOABII585anqDi",
      "original_commit_id" : "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "original_line" : 4491,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 80,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520345314/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520345314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520349129"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520349129"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In b217f576a5f284ac7261986ee6ec9334bbbdbbc6 (wallet: Change balance calculation to use m_txos):\r\n\r\nInstead of `wallet.IsSpentKey(â¦)` couldnât you just check here if `txo.GetIsMine()` has the `ISMINE_USED` bit set?",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T19:51:00Z",
      "diff_hunk" : "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520349129",
      "id" : 1520349129,
      "line" : 264,
      "node_id" : "PRRC_kwDOABII585anq_J",
      "original_commit_id" : "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "original_line" : 264,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 97,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520349129/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520349129",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520352559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520352559"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In b217f576a5f284ac7261986ee6ec9334bbbdbbc6 (wallet: Change balance calculation to use m_txos):\r\n\r\nI was wondering if we could see `ISMINE_SPENDABLEâ¯|â¯ISMINE_USED` or `ISMINE_WATCH_ONLYâ¯|â¯ISMINE_USED` here.",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T19:54:12Z",
      "diff_hunk" : "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520352559",
      "id" : 1520352559,
      "line" : 274,
      "node_id" : "PRRC_kwDOABII585anr0v",
      "original_commit_id" : "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "original_line" : 274,
      "original_position" : 47,
      "original_start_line" : 319,
      "path" : "src/wallet/receive.cpp",
      "position" : 107,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520352559/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 273,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520352559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520373556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520373556"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In b217f576a5f284ac7261986ee6ec9334bbbdbbc6 (wallet: Change balance calculation to use m_txos):\r\n\r\nIt seems to me that the below should be matching replacements here, but previously every TXO in this loop got added to `â¦_untrusted_pending`, and now only TXOs of unconfirmed untrusted transactions, and immature coinbase transactions get added to `â¦_untrusted_pending`. Doesnât this commit change the balances we would be returning?\r\n\r\n```diff\r\n- if (is_trusted && tx_depth >= min_depth) {\r\n-     ret.m_mine_trusted += tx_credit_mine;\r\n-     ret.m_watchonly_trusted += tx_credit_watchonly;\r\n- if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\r\n-     ret.m_mine_untrusted_pending += tx_credit_mine;\r\n-     ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\r\n- }\r\n- ret.m_mine_immature += CachedTxGetImmatureCredit(wallet, wtx, ISMINE_SPENDABLE);\r\n- ret.m_watchonly_immature += CachedTxGetImmatureCredit(wallet, wtx, ISMINE_WATCH_ONLY);\r\n+ // Set the amounts in the return object\r\n+ if (wallet.IsTxImmatureCoinBase(txo.GetWalletTx()) && wallet.IsTxInMainChain(txo.GetWalletTx())) {\r\n+     ret.m_mine_immature += credit_mine;\r\n+     ret.m_watchonly_immature += credit_watchonly;\r\n+ } else if (is_trusted && tx_depth >= min_depth) {\r\n+     ret.m_mine_trusted += credit_mine;\r\n+     ret.m_watchonly_trusted += credit_watchonly;\r\n+ } else if (!is_trusted && txo.GetWalletTx().InMempool()) {\r\n+     ret.m_mine_untrusted_pending += credit_mine;\r\n+     ret.m_watchonly_untrusted_pending += credit_watchonly;\r\n+ }\r\n```",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T20:13:02Z",
      "diff_hunk" : "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520373556",
      "id" : 1520373556,
      "line" : 277,
      "node_id" : "PRRC_kwDOABII585anw80",
      "original_commit_id" : "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "original_line" : 277,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 110,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520373556/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520373556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520381857"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520381857"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 900f95cd56951f5e0f0d0f3a93c09d1fb0bc5787 (test: Test for balance update due to watchonly becoming spendable):\r\n\r\nDo I understand right that discovering this TXO without a rescan only works because the transaction was already in our `mapWallet`?",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T20:20:03Z",
      "diff_hunk" : "@@ -340,5 +375,30 @@ def test_balances(*, fee_node_1=0):\n         assert_equal(tx_info['lastprocessedblock']['height'], prev_height)\n         assert_equal(tx_info['lastprocessedblock']['hash'], prev_hash)\n \n+        self.log.info(\"Test that the balance is updated by an import that makes an untracked output in an existing tx \\\"mine\\\"\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(\"importupdate\")\n+        wallet = self.nodes[0].get_wallet_rpc(\"importupdate\")\n+\n+        import_key1 = get_generate_key()\n+        import_key2 = get_generate_key()\n+        wallet.importprivkey(import_key1.privkey)\n+\n+        amount = 15\n+        default.send([{import_key1.p2wpkh_addr: amount},{import_key2.p2wpkh_addr: amount}])\n+        self.generate(self.nodes[0], 1)\n+        # Mock the time forward by 1 day so that \"now\" will exclude the block we just mined\n+        self.nodes[0].setmocktime(int(time.time()) + 86400)\n+        # Mine 11 blocks to move the MTP past the block we just mined\n+        self.generate(self.nodes[0], 11, sync_fun=self.no_op)\n+\n+        balances = wallet.getbalances()\n+        assert_equal(balances[\"mine\"][\"trusted\"], amount)\n+\n+        # Don't rescan to make sure that the import updates the wallet txos\n+        wallet.importprivkey(privkey=import_key2.privkey, rescan=False)\n+        balances = wallet.getbalances()\n+        assert_equal(balances[\"mine\"][\"trusted\"], amount * 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520381857",
      "id" : 1520381857,
      "line" : 401,
      "node_id" : "PRRC_kwDOABII585any-h",
      "original_commit_id" : "900f95cd56951f5e0f0d0f3a93c09d1fb0bc5787",
      "original_line" : 401,
      "original_position" : 85,
      "original_start_line" : 398,
      "path" : "test/functional/wallet_balance.py",
      "position" : 85,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520381857/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 398,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520381857",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520393226"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520393226"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In c88832eca5df0a391a4a68c73b6fc123f9af2f4b (wallet: Use wallet's TXO set in AvailableCoins):\r\n\r\nWhat are the \"tx checks\" that are being passed? It seems to me me that it refers to TXs either having been sent by ourselves that are not involved in an RBF process or TXs with sufficient confirmations that we rely on them. Either way, it would be nice if this comment were a bit more elaborate than just mentioning \"tx checks\". Also, the relationship to `safe_tx` could be made a bit clearer in this code block.\r\n\r\nPerhaps something along the lines of:\r\n\r\n```suggestion\r\n    // Cache for each transaction whether we consider its outputs acceptable for spending (first bool), and whether the transaction is considered \"safe\" (second bool).\r\n    // A transactionâs outputs are considered acceptable for spending when <elaborate>\r\n    // A transaction is considered safe when <elaborate>\r\n```\r\n\r\nAlternatively or additionally if the `CachedTxIsTrusted(â¦)` functions had a bit more documentation in either `src/wallet/receive.h` or  `src/wallet/receive.cpp`.\r\n",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-11T20:29:01Z",
      "diff_hunk" : "@@ -320,137 +320,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1520393226",
      "id" : 1520393226,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585an1wK",
      "original_commit_id" : "c88832eca5df0a391a4a68c73b6fc123f9af2f4b",
      "original_line" : 323,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1928856157,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520393226/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-11T21:05:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1520393226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521569610"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521569610"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Outputs don't always stay spent. Replacements, reorgs, and eviction could all make a transaction no longer be \"IsSpent\", so checking that here would require a lot of other structural changes to ensure that it is correct.\r\n\r\nStoring the value of `IsSpent` could be an alternative to #27865, however I would still leave that for a followup. Any change that tries to actually have a proper UTXO set for the wallet can have unexpected side effects and/or things we didn't notice so I want to keep that separate for now. This PR is to setup for that by making the wallet operate on a TXO set.",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:27:05Z",
      "diff_hunk" : "@@ -4467,4 +4475,22 @@ void CWallet::TopUpCallback(const std::set<CScript>& spks, ScriptPubKeyMan* spkm\n     // Update scriptPubKey cache\n     CacheNewScriptPubKeys(spks, spkm);\n }\n+\n+void CWallet::RefreshWalletTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.count(outpoint) > 0) {\n+            m_txos.at(outpoint).SetIsMine(ismine);\n+        } else {\n+            m_txos.emplace(outpoint, WalletTXO{wtx, txout, ismine});\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521569610",
      "id" : 1521569610,
      "in_reply_to_id" : 1520345314,
      "line" : 4491,
      "node_id" : "PRRC_kwDOABII585asU9K",
      "original_commit_id" : "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "original_line" : 4491,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 80,
      "pull_request_review_id" : 1931234103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521569610/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:27:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521569610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521586912"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521586912"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`ISMINE_USED` is not actually an isminetype that is returned by `IsMine`, so it will not be set in the `txo.GetIsMine()`'s result. It's really just a hack for it to be an isminetype so it can be passed as part of various ismine filters, but these always check that separately from the actual `IsMine` result.",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:37:19Z",
      "diff_hunk" : "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521586912",
      "id" : 1521586912,
      "in_reply_to_id" : 1520349129,
      "line" : 264,
      "node_id" : "PRRC_kwDOABII585asZLg",
      "original_commit_id" : "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "original_line" : 264,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 97,
      "pull_request_review_id" : 1931262672,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521586912/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:37:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521586912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521587788"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521587788"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No. `ISMINE_USED` is never actually returned from `IsMine`.",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:37:48Z",
      "diff_hunk" : "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521587788",
      "id" : 1521587788,
      "in_reply_to_id" : 1520352559,
      "line" : 274,
      "node_id" : "PRRC_kwDOABII585asZZM",
      "original_commit_id" : "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "original_line" : 274,
      "original_position" : 47,
      "original_start_line" : 319,
      "path" : "src/wallet/receive.cpp",
      "position" : 107,
      "pull_request_review_id" : 1931264076,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521587788/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 273,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:37:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521587788",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521599391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521599391"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you be more specific as to what kind of transaction you think would result in a different balance? Nothing in this PR should change behavior.",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:44:31Z",
      "diff_hunk" : "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);\n     {\n         LOCK(wallet.cs_wallet);\n-        std::set<uint256> trusted_parents;\n-        for (const auto& entry : wallet.mapWallet)\n-        {\n-            const CWalletTx& wtx = entry.second;\n-            const bool is_trusted{CachedTxIsTrusted(wallet, wtx, trusted_parents)};\n-            const int tx_depth{wallet.GetTxDepthInMainChain(wtx)};\n-            const CAmount tx_credit_mine{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_SPENDABLE | reuse_filter)};\n-            const CAmount tx_credit_watchonly{CachedTxGetAvailableCredit(wallet, wtx, ISMINE_WATCH_ONLY | reuse_filter)};\n-            if (is_trusted && tx_depth >= min_depth) {\n-                ret.m_mine_trusted += tx_credit_mine;\n-                ret.m_watchonly_trusted += tx_credit_watchonly;\n-            }\n-            if (!is_trusted && tx_depth == 0 && wtx.InMempool()) {\n-                ret.m_mine_untrusted_pending += tx_credit_mine;\n-                ret.m_watchonly_untrusted_pending += tx_credit_watchonly;\n+        for (const auto& [outpoint, txo] : wallet.GetTXOs()) {\n+            Assert(MoneyRange(txo.GetTxOut().nValue));\n+\n+            const bool is_trusted{CachedTxIsTrusted(wallet, txo.GetWalletTx())};\n+            const int tx_depth{wallet.GetTxDepthInMainChain(txo.GetWalletTx())};\n+\n+            if (!wallet.IsSpent(outpoint) && (allow_used_addresses || !wallet.IsSpentKey(txo.GetTxOut().scriptPubKey))) {\n+                // Get the amounts for mine and watchonly\n+                CAmount credit_mine = 0;\n+                CAmount credit_watchonly = 0;\n+                if (txo.GetIsMine() == ISMINE_SPENDABLE) {\n+                    credit_mine = txo.GetTxOut().nValue;\n+                } else if (txo.GetIsMine() == ISMINE_WATCH_ONLY) {\n+                    credit_watchonly = txo.GetTxOut().nValue;\n+                } else {\n+                    // We shouldn't see any other isminetypes\n+                    Assume(false);\n+                }\n+\n+                // Set the amounts in the return object",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521599391",
      "id" : 1521599391,
      "in_reply_to_id" : 1520373556,
      "line" : 277,
      "node_id" : "PRRC_kwDOABII585ascOf",
      "original_commit_id" : "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "original_line" : 277,
      "original_position" : 50,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 110,
      "pull_request_review_id" : 1931282586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521599391/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:44:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521599391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521601155"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521601155"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That is correct.",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:45:36Z",
      "diff_hunk" : "@@ -340,5 +375,30 @@ def test_balances(*, fee_node_1=0):\n         assert_equal(tx_info['lastprocessedblock']['height'], prev_height)\n         assert_equal(tx_info['lastprocessedblock']['hash'], prev_hash)\n \n+        self.log.info(\"Test that the balance is updated by an import that makes an untracked output in an existing tx \\\"mine\\\"\")\n+        default = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[0].createwallet(\"importupdate\")\n+        wallet = self.nodes[0].get_wallet_rpc(\"importupdate\")\n+\n+        import_key1 = get_generate_key()\n+        import_key2 = get_generate_key()\n+        wallet.importprivkey(import_key1.privkey)\n+\n+        amount = 15\n+        default.send([{import_key1.p2wpkh_addr: amount},{import_key2.p2wpkh_addr: amount}])\n+        self.generate(self.nodes[0], 1)\n+        # Mock the time forward by 1 day so that \"now\" will exclude the block we just mined\n+        self.nodes[0].setmocktime(int(time.time()) + 86400)\n+        # Mine 11 blocks to move the MTP past the block we just mined\n+        self.generate(self.nodes[0], 11, sync_fun=self.no_op)\n+\n+        balances = wallet.getbalances()\n+        assert_equal(balances[\"mine\"][\"trusted\"], amount)\n+\n+        # Don't rescan to make sure that the import updates the wallet txos\n+        wallet.importprivkey(privkey=import_key2.privkey, rescan=False)\n+        balances = wallet.getbalances()\n+        assert_equal(balances[\"mine\"][\"trusted\"], amount * 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521601155",
      "id" : 1521601155,
      "in_reply_to_id" : 1520381857,
      "line" : 401,
      "node_id" : "PRRC_kwDOABII585ascqD",
      "original_commit_id" : "900f95cd56951f5e0f0d0f3a93c09d1fb0bc5787",
      "original_line" : 401,
      "original_position" : 85,
      "original_start_line" : 398,
      "path" : "test/functional/wallet_balance.py",
      "position" : 85,
      "pull_request_review_id" : 1931285496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521601155/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 398,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:45:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521601155",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521612789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521612789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The checks are already explained in detail below where they are actually checked. \"tx checks\" just refers to the checks that occur per tx rather than per output. I don't think it is useful to duplicate the explanations here as well.\r\n\r\nI've added a comment that should make it easier to find where the tx checks are performed so you can read the comments that already exist.",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:51:05Z",
      "diff_hunk" : "@@ -320,137 +320,145 @@ CoinsResult AvailableCoins(const CWallet& wallet,\n     std::vector<COutPoint> outpoints;\n \n     std::set<uint256> trusted_parents;\n-    for (const auto& entry : wallet.mapWallet)\n-    {\n-        const uint256& txid = entry.first;\n-        const CWalletTx& wtx = entry.second;\n+    // Cache for whether each tx passes the tx checks (first bool), and whether the transaction is \"safe\" (second bool)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521612789",
      "id" : 1521612789,
      "in_reply_to_id" : 1520393226,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585asff1",
      "original_commit_id" : "c88832eca5df0a391a4a68c73b6fc123f9af2f4b",
      "original_line" : 323,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1931304324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521612789/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:51:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521612789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521615589"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521615589"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed to \"cache\".\r\n\r\n\"on the wallet's transactions\" does not make the comment a valid English sentence, so I'm not sure what meaning you were trying to get across.",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:52:42Z",
      "diff_hunk" : "@@ -1143,6 +1143,9 @@ CWalletTx* CWallet::AddToWallet(CTransactionRef tx, const TxState& state, const\n     // Break debit/credit balance caches:\n     wtx.MarkDirty();\n \n+    // Get the outputs that belong to the wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521615589",
      "id" : 1521615589,
      "in_reply_to_id" : 1520283962,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585asgLl",
      "original_commit_id" : "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "original_line" : 1146,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1931308853,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521615589/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:52:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521615589",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616092"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616092"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:52:57Z",
      "diff_hunk" : "@@ -4467,4 +4475,22 @@ void CWallet::TopUpCallback(const std::set<CScript>& spks, ScriptPubKeyMan* spkm\n     // Update scriptPubKey cache\n     CacheNewScriptPubKeys(spks, spkm);\n }\n+\n+void CWallet::RefreshWalletTxTXOs(const CWalletTx& wtx)\n+{\n+    AssertLockHeld(cs_wallet);\n+    for (uint32_t i = 0; i < wtx.tx->vout.size(); ++i) {\n+        const CTxOut& txout = wtx.tx->vout.at(i);\n+        isminetype ismine = IsMine(txout);\n+        if (ismine == ISMINE_NO) {\n+            continue;\n+        }\n+        COutPoint outpoint(wtx.GetHash(), i);\n+        if (m_txos.count(outpoint) > 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616092",
      "id" : 1521616092,
      "in_reply_to_id" : 1520287400,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585asgTc",
      "original_commit_id" : "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "original_line" : 4489,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1931309762,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616092/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:52:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616092",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616290"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616290"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:53:04Z",
      "diff_hunk" : "@@ -425,6 +425,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! Cache of descriptor ScriptPubKeys used for IsMine. Maps ScriptPubKey to set of spkms\n     std::unordered_map<CScript, std::vector<ScriptPubKeyMan*>, SaltedSipHasher> m_cached_spks;\n \n+    //! Set of transaction outputs owned by this wallet",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616290",
      "id" : 1521616290,
      "in_reply_to_id" : 1520290111,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585asgWi",
      "original_commit_id" : "20cec0c84bbe783ddfc0c9b6c3ce1cb45f93385e",
      "original_line" : 428,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 1931310092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616290/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:53:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616290",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616466"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:53:10Z",
      "diff_hunk" : "@@ -256,6 +256,10 @@ bool CachedTxIsFromMe(const CWallet& wallet, const CWalletTx& wtx, const isminef\n bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx, std::set<uint256>& trusted_parents)\n {\n     AssertLockHeld(wallet.cs_wallet);\n+\n+    // This wtx is already trusted\n+    if (trusted_parents.count(wtx.GetHash()) > 0) return true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616466",
      "id" : 1521616466,
      "in_reply_to_id" : 1520295185,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585asgZS",
      "original_commit_id" : "0283525d64a28c79f4588ef0a71bd280b2fc7768",
      "original_line" : 261,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : null,
      "pull_request_review_id" : 1931310381,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616466/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:53:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616919"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616919"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Mentioned in the commit message.",
      "commit_id" : "81650ac9198cfe31cf5735c3128a003497d8e310",
      "created_at" : "2024-03-12T14:53:26Z",
      "diff_hunk" : "@@ -297,27 +298,40 @@ bool CachedTxIsTrusted(const CWallet& wallet, const CWalletTx& wtx)\n Balance GetBalance(const CWallet& wallet, const int min_depth, bool avoid_reuse)\n {\n     Balance ret;\n-    isminefilter reuse_filter = avoid_reuse ? ISMINE_NO : ISMINE_USED;\n+    bool allow_used_addresses = !avoid_reuse || !wallet.IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27286#discussion_r1521616919",
      "id" : 1521616919,
      "in_reply_to_id" : 1520330141,
      "line" : 255,
      "node_id" : "PRRC_kwDOABII585asggX",
      "original_commit_id" : "b217f576a5f284ac7261986ee6ec9334bbbdbbc6",
      "original_line" : 255,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/wallet/receive.cpp",
      "position" : 77,
      "pull_request_review_id" : 1931311146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27286",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616919/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:53:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521616919",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/27231).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [pinheadmz](https://github.com/bitcoin/bitcoin/pull/27231#pullrequestreview-1613672836) |\n| Ignored review | [ajtowns](https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1707003772) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28318](https://github.com/bitcoin/bitcoin/pull/28318) (logging: Simplify API for level based logging by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-03-09T01:40:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1461139731",
      "id" : 1461139731,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585XFzkT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 1,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461139731/reactions"
      },
      "updated_at" : "2023-10-10T14:43:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461139731",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1130705346"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130705346"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    for (const auto& c:categories.get_array().getValues()) {\r\n        const std::string& c{c.get_str()};\r\n```\r\n\r\nno need to create three copies of the same thing",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-03-09T09:23:27Z",
      "diff_hunk" : "@@ -208,30 +208,25 @@ static RPCHelpMan getmemoryinfo()\n     };\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n-    for (unsigned int i = 0; i < cats.size(); ++i) {\n-        std::string cat = cats[i].get_str();\n-\n-        bool success;\n-        if (enable) {\n-            success = LogInstance().EnableCategory(cat);\n-        } else {\n-            success = LogInstance().DisableCategory(cat);\n-        }\n-\n-        if (!success) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n-        }\n+static void EnableOrDisableLogCategories(UniValue categories, bool enable) {\n+    categories = categories.get_array();\n+    for (size_t i = 0; i < categories.size(); ++i) {\n+        const std::string c{categories[i].get_str()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1130705346",
      "id" : 1130705346,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DZTHC",
      "original_commit_id" : "a5f8a7abd980933d4c72c3297ef713b8c5bf3d64",
      "original_line" : 214,
      "original_position" : 22,
      "original_start_line" : 212,
      "path" : "src/rpc/node.cpp",
      "position" : null,
      "pull_request_review_id" : 1332329362,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130705346/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-09T09:23:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1130705346",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">  or none are passed, including not recognizing none:\r\n\r\nAny idea when/how this was broken?",
      "created_at" : "2023-03-09T09:31:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1461655213",
      "id" : 1461655213,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585XHxat",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461655213/reactions"
      },
      "updated_at" : "2023-03-09T09:31:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461655213",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Probably in f1379aeca9d3a8c4d3528de4d0af8298cb42fee4 from #25614:\r\n> replace the unused BCLog::Level:None string \"none\" with an empty string\r\n  as the case will never be hit\r\n\r\nSo only broken for 24.x.",
      "created_at" : "2023-03-09T09:38:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1461666350",
      "id" : 1461666350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585XH0Iu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461666350/reactions"
      },
      "updated_at" : "2023-03-09T09:38:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1461666350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The behavior was intended to be added in https://github.com/bitcoin/bitcoin/pull/11191.\r\n\r\nI downloaded and tested v23.1 and the behavior wasn't functional: passing `0` or `none` had no effect. \r\n\r\nIn v24, f1379aeca9d3a8c4d3528de4d0af8298cb42fee4 made `none` not be recognized, but the logic for the intended behavior remained absent anyway.\r\n\r\nI've added this information to the PR description.",
      "created_at" : "2023-03-09T18:51:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1462594692",
      "id" : 1462594692,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585XLWyE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1462594692/reactions"
      },
      "updated_at" : "2023-03-09T18:51:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1462594692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1131465027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131465027"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks @MarcoFalke, done as follows.\r\n\r\n```cpp\r\nstatic void EnableOrDisableLogCategories(const UniValue& categories, bool enable)\r\n{\r\n    const std::vector<UniValue>& category_values{categories.get_array().getValues()};\r\n    for (const auto& category : category_values) {\r\n        const std::string& c{category.get_str()};\r\n        if (c == \"0\" || c == \"none\") return; // no-op if one of these logging categories is passed\r\n    }\r\n    for (const auto& category : category_values) {\r\n        const std::string& c{category.get_str()};\r\n        const bool success{enable ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n        if (!success) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Unknown logging category: \" + c);\r\n     }\r\n }\r\n```\r\n\r\nThe following also works, if reviewers prefer that (seems a little more complex, not sure it's worth it).\r\n\r\n```cpp\r\nstatic void EnableOrDisableLogCategories(const UniValue& categories, bool enable)\r\n{\r\n    std::vector<std::string> cats;\r\n    cats.reserve(categories.size());\r\n    for (const auto& c : categories.get_array().getValues()) {\r\n        cats.emplace_back(c.get_str());\r\n    }\r\n    if (std::any_of(cats.cbegin(), cats.cend(), [](const auto& c) { return c == \"0\" || c == \"none\"; })) return;\r\n    for (const auto& c : cats) {\r\n        const bool success{enable ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n        if (!success) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Unknown logging category: \" + c);\r\n     }\r\n }\r\n```\r\n",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-03-09T18:57:04Z",
      "diff_hunk" : "@@ -208,30 +208,25 @@ static RPCHelpMan getmemoryinfo()\n     };\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n-    for (unsigned int i = 0; i < cats.size(); ++i) {\n-        std::string cat = cats[i].get_str();\n-\n-        bool success;\n-        if (enable) {\n-            success = LogInstance().EnableCategory(cat);\n-        } else {\n-            success = LogInstance().DisableCategory(cat);\n-        }\n-\n-        if (!success) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n-        }\n+static void EnableOrDisableLogCategories(UniValue categories, bool enable) {\n+    categories = categories.get_array();\n+    for (size_t i = 0; i < categories.size(); ++i) {\n+        const std::string c{categories[i].get_str()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1131465027",
      "id" : 1131465027,
      "in_reply_to_id" : 1130705346,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DcMlD",
      "original_commit_id" : "a5f8a7abd980933d4c72c3297ef713b8c5bf3d64",
      "original_line" : 214,
      "original_position" : 22,
      "original_start_line" : 212,
      "path" : "src/rpc/node.cpp",
      "position" : null,
      "pull_request_review_id" : 1333541937,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131465027/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-09T18:57:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131465027",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1131469401"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131469401"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "(Noting that this logic is similar to that in `SetLoggingCategories()` in `src/init/common.cpp`).",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-03-09T19:01:01Z",
      "diff_hunk" : "@@ -208,30 +208,25 @@ static RPCHelpMan getmemoryinfo()\n     };\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n-    for (unsigned int i = 0; i < cats.size(); ++i) {\n-        std::string cat = cats[i].get_str();\n-\n-        bool success;\n-        if (enable) {\n-            success = LogInstance().EnableCategory(cat);\n-        } else {\n-            success = LogInstance().DisableCategory(cat);\n-        }\n-\n-        if (!success) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n-        }\n+static void EnableOrDisableLogCategories(UniValue categories, bool enable) {\n+    categories = categories.get_array();\n+    for (size_t i = 0; i < categories.size(); ++i) {\n+        const std::string c{categories[i].get_str()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1131469401",
      "id" : 1131469401,
      "in_reply_to_id" : 1130705346,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DcNpZ",
      "original_commit_id" : "a5f8a7abd980933d4c72c3297ef713b8c5bf3d64",
      "original_line" : 214,
      "original_position" : 22,
      "original_start_line" : 212,
      "path" : "src/rpc/node.cpp",
      "position" : null,
      "pull_request_review_id" : 1333552338,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131469401/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-03-09T19:01:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1131469401",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1132214754"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132214754"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nstatic void EnableOrDisableLogCategories(const UniValue& categories, bool enable)\r\n{\r\n```\r\n\r\nnit: While touching this, can avoid the forth copy of the same thing here as well :)",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-03-10T10:38:45Z",
      "diff_hunk" : "@@ -208,30 +208,25 @@ static RPCHelpMan getmemoryinfo()\n     };\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n-    for (unsigned int i = 0; i < cats.size(); ++i) {\n-        std::string cat = cats[i].get_str();\n-\n-        bool success;\n-        if (enable) {\n-            success = LogInstance().EnableCategory(cat);\n-        } else {\n-            success = LogInstance().DisableCategory(cat);\n-        }\n-\n-        if (!success) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n-        }\n+static void EnableOrDisableLogCategories(UniValue categories, bool enable) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1132214754",
      "id" : 1132214754,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DfDni",
      "original_commit_id" : "a5f8a7abd980933d4c72c3297ef713b8c5bf3d64",
      "original_line" : 211,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/rpc/node.cpp",
      "position" : null,
      "pull_request_review_id" : 1334558916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132214754/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-10T10:38:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132214754",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The behavior was intended to be added in https://github.com/bitcoin/bitcoin/pull/11191.\r\n\r\nIt's still not clear if this was broken from the time it was merged, or at some other later point. This also does not work with 22.x, and any earlier versions are EOL.\r\n\r\nIf it's been broken forever (or at least is in all currently maintained releases), and no ones even noticed, we could take advantage of that, to remove some of the complexity here; do we definitely need multiple different ways of achieving the same logging toggling?",
      "created_at" : "2023-03-10T15:15:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1463949565",
      "id" : 1463949565,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585XQhj9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1463949565/reactions"
      },
      "updated_at" : "2023-03-10T15:15:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1463949565",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1132759246"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132759246"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "yep :) done as in https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1131465027",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-03-10T18:49:21Z",
      "diff_hunk" : "@@ -208,30 +208,25 @@ static RPCHelpMan getmemoryinfo()\n     };\n }\n \n-static void EnableOrDisableLogCategories(UniValue cats, bool enable) {\n-    cats = cats.get_array();\n-    for (unsigned int i = 0; i < cats.size(); ++i) {\n-        std::string cat = cats[i].get_str();\n-\n-        bool success;\n-        if (enable) {\n-            success = LogInstance().EnableCategory(cat);\n-        } else {\n-            success = LogInstance().DisableCategory(cat);\n-        }\n-\n-        if (!success) {\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n-        }\n+static void EnableOrDisableLogCategories(UniValue categories, bool enable) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1132759246",
      "id" : 1132759246,
      "in_reply_to_id" : 1132214754,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DhIjO",
      "original_commit_id" : "a5f8a7abd980933d4c72c3297ef713b8c5bf3d64",
      "original_line" : 211,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/rpc/node.cpp",
      "position" : null,
      "pull_request_review_id" : 1335440051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132759246/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-10T18:49:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132759246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased.\r\n\r\n> could take advantage of that, to remove some of the complexity here; do we definitely need multiple different ways of achieving the same logging toggling?\r\n\r\nExploring this, it doesn't look like there would be much code simplification gained by dropping `none` for `0` only, which would no longer be in symmetry with `all/1` that have been operational for a long time.  A couple lines could be saved by removing the `-debugexclude` config option, but that option is practical to have, as seen by its use in our own unit/fuzz and functional test frameworks.\r\n\r\nIt seems the way forward from here is to detect `none/0` values, add test coverage and then either:\r\n    \r\n- leave the functionality out, raise with an error message if `none/0` values are passed, and update the RPC help documentation, or\r\n\r\n- simply fix the original behavior by returning early.\r\n\r\nBoth involve similar code size/complexity and the second option seems preferable.  The updated code here is about the same length as before, modulo missing test coverage and improved documentation.\r\n\r\nIn the last pushes I've updated the PR description and first commit message with this info and improved the code and tests.  This should be ready for further review!",
      "created_at" : "2023-03-31T16:04:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1492195680",
      "id" : 1492195680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585Y8Rlg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1492195680/reactions"
      },
      "updated_at" : "2023-03-31T16:04:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1492195680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158916354"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158916354"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`DEBUG_LOG_OPTS[0] `\r\n\r\nFeels like this is undoing whatever convenience/readability you set up by defining `DEBUG_LOG_OPTS` in the first place. Do you think more debug args will be added in the future? Or can we just use\r\n\r\n`args.IsArgSet(\"-debug\") || args.IsArgSet(\"-debugexclude\")` ... etc",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-05T19:13:30Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158916354",
      "id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FE6kC",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1373532023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158916354/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-05T19:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158916354",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158920648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158920648"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Recommend putting \"all\" and \"none\" in quotes to be super-duper explicit",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-05T19:18:35Z",
      "diff_hunk" : "@@ -26,10 +26,10 @@ namespace init {\n void AddLoggingArgs(ArgsManager& argsman)\n {\n     argsman.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file (default: %s). Relative paths will be prefixed by a net-specific datadir location. Pass -nodebuglogfile to disable writing the log to a file.\", DEFAULT_DEBUGLOGFILE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-debug=<category>\", \"Output debug and trace logging (default: -nodebug, supplying <category> is optional). \"\n-        \"If <category> is not supplied or if <category> = 1, output all debug and trace logging. <category> can be: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to output multiple categories.\",\n+    argsman.AddArg(\"-debug=<category>\", \"Output debug and trace logging (default: 0). \"\n+        \"If <category> is omitted, or is 1 or all, output all debug and trace logging. If <category> is 0 or none, any other categories passed are ignored. Other valid values for <category> are: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to output multiple categories. See also the -debugexclude configuration option that takes priority over -debug.\",\n         ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debug and trace logging for a category. Can be used in conjunction with -debug=1 to output debug and trace logging for all categories except the specified category. This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debug and trace logging for a category (default: 1). Takes priority over -debug and can be used in conjunction with -debug=1 to output debug and trace logging for all categories except the specified category. If <category> is 1 or all, exclude all debug and trace logging. If <category> is 0 or none, any other categories passed are ignored. Other valid values for <category> are: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158920648",
      "id" : 1158920648,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FE7nI",
      "original_commit_id" : "fba713a172ff574563b03e9765894c59db807093",
      "original_line" : 32,
      "original_position" : 10,
      "original_start_line" : 30,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1373532023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158920648/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-05T19:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158920648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158922586"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922586"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why `0` and not `\"none\"`? \r\n\r\nLike this one:\r\n\r\n```cpp\r\n\r\n    case BCLog::LogFlags::ALL:\r\n        return \"all\";\r\n```",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-05T19:20:58Z",
      "diff_hunk" : "@@ -225,7 +224,7 @@ std::string LogCategoryToStr(BCLog::LogFlags category)\n     // Each log category string representation should sync with LogCategories\n     switch (category) {\n     case BCLog::LogFlags::NONE:\n-        return \"\";\n+        return \"0\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158922586",
      "id" : 1158922586,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FE8Fa",
      "original_commit_id" : "a1abce1650ec4ab53a070f5f05d675b64197b28a",
      "original_line" : 227,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1373532023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922586/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-05T19:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158922726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922726"
         }
      },
      "author_association" : "MEMBER",
      "body" : "not going to add `\"none\"` here?",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-05T19:21:09Z",
      "diff_hunk" : "@@ -150,7 +150,6 @@ struct CLogCategoryDesc {\n const CLogCategoryDesc LogCategories[] =\n {\n     {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158922726",
      "id" : 1158922726,
      "line" : 153,
      "node_id" : "PRRC_kwDOABII585FE8Hm",
      "original_commit_id" : "a1abce1650ec4ab53a070f5f05d675b64197b28a",
      "original_line" : 153,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 5,
      "pull_request_review_id" : 1373532023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922726/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-05T19:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158922726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158925769"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158925769"
         }
      },
      "author_association" : "MEMBER",
      "body" : "GREAT",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-05T19:24:14Z",
      "diff_hunk" : "@@ -238,22 +238,31 @@ static RPCHelpMan logging()\n                 {\n                     {\"include\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED, \"The categories to add to debug logging\",\n                         {\n-                            {\"include_category\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"the valid logging category\"},\n+                            {\"include_category\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"a valid logging category\"},\n                         }},\n                     {\"exclude\", RPCArg::Type::ARR, RPCArg::Optional::OMITTED, \"The categories to remove from debug logging\",\n                         {\n-                            {\"exclude_category\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"the valid logging category\"},\n+                            {\"exclude_category\", RPCArg::Type::STR, RPCArg::Optional::OMITTED, \"a valid logging category\"},\n                         }},\n                 },\n                 RPCResult{\n-                    RPCResult::Type::OBJ_DYN, \"\", \"keys are the logging categories, and values indicates its status\",\n+                    RPCResult::Type::OBJ_DYN, \"\", \"keys are the logging categories and values indicate their status\",\n                     {\n-                        {RPCResult::Type::BOOL, \"category\", \"if being debug logged or not. false:inactive, true:active\"},\n+                        {RPCResult::Type::BOOL, \"category\", \"whether debug logging is active for the category\"},\n                     }\n                 },\n                 RPCExamples{\n-                    HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n-            + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], [\\\"libevent\\\"]\")\n+                   \"\\nTurn on tor and i2p logging categories\\n\"\n+                   + HelpExampleCli(\"logging\", \"'[\\\"tor\\\", \\\"i2p\\\"]'\")\n+                   + HelpExampleCli(\"-named logging\", \"include='[\\\"tor\\\", \\\"i2p\\\"]'\")\n+                   + \"\\nTurn on all logging categories, except http\\n\"\n+                   + HelpExampleCli(\"logging\", \"'[\\\"all\\\"]' '[\\\"http\\\"]'\")\n+                   + HelpExampleCli(\"-named logging\", \"include='[\\\"all\\\"]' exclude='[\\\"http\\\"]'\")\n+                   + \"\\nTurn off all logging categories\\n\"\n+                   + HelpExampleCli(\"logging\", \"'[]' '[\\\"all\\\"]'\")\n+                   + HelpExampleCli(\"-named logging\", \"exclude='[\\\"all\\\"]'\")\n+                   + \"\\nTurn on all logging categories, except libevent\\n\"\n+                   + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], [\\\"libevent\\\"]\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1158925769",
      "id" : 1158925769,
      "line" : 264,
      "node_id" : "PRRC_kwDOABII585FE83J",
      "original_commit_id" : "22e77cc5f70360408a508f1b43f37c75b2eff9e1",
      "original_line" : 264,
      "original_position" : 47,
      "original_start_line" : 255,
      "path" : "src/rpc/node.cpp",
      "position" : 89,
      "pull_request_review_id" : 1373532023,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158925769/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 254,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-05T19:30:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1158925769",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319014"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319014"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Looking again (thanks!), both of these `NONE` entries can be dropped.  Updated to add prior test coverage to spec affected behavior, then removed them.",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-11T20:52:14Z",
      "diff_hunk" : "@@ -150,7 +150,6 @@ struct CLogCategoryDesc {\n const CLogCategoryDesc LogCategories[] =\n {\n     {BCLog::NONE, \"0\"},\n-    {BCLog::NONE, \"\"},",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319014",
      "id" : 1163319014,
      "in_reply_to_id" : 1158922726,
      "line" : 153,
      "node_id" : "PRRC_kwDOABII585FVtbm",
      "original_commit_id" : "a1abce1650ec4ab53a070f5f05d675b64197b28a",
      "original_line" : 153,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 5,
      "pull_request_review_id" : 1380069869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319014/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-11T20:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319014",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319182"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319182"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for making me re-verify.  This case will never be hit and is only present to appease the compiler (`error: enumeration value 'NONE' not handled in switch`), so leaving it as an empty string, added a comment, and moved it to the last case in the switch.",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-11T20:52:22Z",
      "diff_hunk" : "@@ -225,7 +224,7 @@ std::string LogCategoryToStr(BCLog::LogFlags category)\n     // Each log category string representation should sync with LogCategories\n     switch (category) {\n     case BCLog::LogFlags::NONE:\n-        return \"\";\n+        return \"0\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319182",
      "id" : 1163319182,
      "in_reply_to_id" : 1158922586,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FVteO",
      "original_commit_id" : "a1abce1650ec4ab53a070f5f05d675b64197b28a",
      "original_line" : 227,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1380070034,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319182/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-11T20:52:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319182",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319415"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319415"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This commit is to have the same behavior (and code) for the -debug and -debugexclude config options. I'm not sure what your suggestion is, but I'm happy to look at a working example.",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-11T20:52:32Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319415",
      "id" : 1163319415,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FVth3",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1380070229,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319415/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-11T20:52:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319415",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319528"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319528"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I left them without quotes as none of the other category values in the -debug and -debugexclude helps are in quotes. But you may be right that it's nevertheless clearer to add them here. Done.",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-11T20:52:37Z",
      "diff_hunk" : "@@ -26,10 +26,10 @@ namespace init {\n void AddLoggingArgs(ArgsManager& argsman)\n {\n     argsman.AddArg(\"-debuglogfile=<file>\", strprintf(\"Specify location of debug log file (default: %s). Relative paths will be prefixed by a net-specific datadir location. Pass -nodebuglogfile to disable writing the log to a file.\", DEFAULT_DEBUGLOGFILE), ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n-    argsman.AddArg(\"-debug=<category>\", \"Output debug and trace logging (default: -nodebug, supplying <category> is optional). \"\n-        \"If <category> is not supplied or if <category> = 1, output all debug and trace logging. <category> can be: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to output multiple categories.\",\n+    argsman.AddArg(\"-debug=<category>\", \"Output debug and trace logging (default: 0). \"\n+        \"If <category> is omitted, or is 1 or all, output all debug and trace logging. If <category> is 0 or none, any other categories passed are ignored. Other valid values for <category> are: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to output multiple categories. See also the -debugexclude configuration option that takes priority over -debug.\",\n         ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n-    argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debug and trace logging for a category. Can be used in conjunction with -debug=1 to output debug and trace logging for all categories except the specified category. This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);\n+    argsman.AddArg(\"-debugexclude=<category>\", \"Exclude debug and trace logging for a category (default: 1). Takes priority over -debug and can be used in conjunction with -debug=1 to output debug and trace logging for all categories except the specified category. If <category> is 1 or all, exclude all debug and trace logging. If <category> is 0 or none, any other categories passed are ignored. Other valid values for <category> are: \" + LogInstance().LogCategoriesString() + \". This option can be specified multiple times to exclude multiple categories.\", ArgsManager::ALLOW_ANY, OptionsCategory::DEBUG_TEST);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1163319528",
      "id" : 1163319528,
      "in_reply_to_id" : 1158920648,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FVtjo",
      "original_commit_id" : "fba713a172ff574563b03e9765894c59db807093",
      "original_line" : 32,
      "original_position" : 10,
      "original_start_line" : 30,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1380070326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319528/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-11T20:52:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1163319528",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164350707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164350707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Well I meant something like a switch statement with `\"-debug\"` and `\"-debugexclude\"` literal strings as cases. I think that would make it more readable and if anything is ever added to `DEBUG_LOG_OPTS[]` it won't necessarily break. But that might just be too long or out of style",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-12T16:07:27Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164350707",
      "id" : 1164350707,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FZpTz",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1381651815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164350707/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T16:07:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164350707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164360080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164360080"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah I see, these cases are essentially handled by `IsNoneCategory()` ð ",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-12T16:15:57Z",
      "diff_hunk" : "@@ -225,7 +224,7 @@ std::string LogCategoryToStr(BCLog::LogFlags category)\n     // Each log category string representation should sync with LogCategories\n     switch (category) {\n     case BCLog::LogFlags::NONE:\n-        return \"\";\n+        return \"0\";",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164360080",
      "id" : 1164360080,
      "in_reply_to_id" : 1158922586,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FZrmQ",
      "original_commit_id" : "a1abce1650ec4ab53a070f5f05d675b64197b28a",
      "original_line" : 227,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1381665894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164360080/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T16:15:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164360080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164470470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164470470"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could you combine this into one function? You have another method called `EnableOrDisableLogCategories()` in `node.cpp` which might be confusing. And unlike in `node.cpp`, I don't think the `common.cpp` method is called anywhere else besides `SetLoggingCategories()`",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-12T17:58:53Z",
      "diff_hunk" : "@@ -78,27 +77,26 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+// We run each of these configuration options through SetLoggingCategories. The order matters;\n+// -debugexclude settings take priority over -debug ones, so -debugexclude is run after -debug.\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    if (!args.IsArgSet(opt)) return;\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\n+        if (!success) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\n     }\n+}\n \n-    // Now remove the logging categories which were explicitly excluded\n-    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n-        if (!LogInstance().DisableCategory(cat)) {\n-            InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n-        }\n+void SetLoggingCategories(const ArgsManager& args)\n+{\n+    for (const std::string& opt : DEBUG_LOG_OPTS) {\n+        EnableOrDisableLogCategories(args, opt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164470470",
      "id" : 1164470470,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FaGjG",
      "original_commit_id" : "e9f6fd0e028e6a5669926926792c70c31a26c403",
      "original_line" : 99,
      "original_position" : 62,
      "original_start_line" : 96,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1381837068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164470470/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-12T18:25:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164470470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164530898"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164530898"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good question. Both of the `EnableOrDisableLogCategories()` functions are created in this PR. They are doing pretty much the same thing, but are not trivially combinable into one function. If one is changed, it's likely that both should be (maybe a comment to that effect should be added to them -- *Edit: done*).  I therefore wanted both to be standalone functions with the same name in order that searching/git grepping returns both. *(Edit: updated this sentence to clarify.)*\r\n\r\nThat, along with how extracting that function simplifies `SetLoggingCategories` to highlight that both options are being plugged into the same code, were the motivations.\r\n",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-12T19:01:00Z",
      "diff_hunk" : "@@ -78,27 +77,26 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+// We run each of these configuration options through SetLoggingCategories. The order matters;\n+// -debugexclude settings take priority over -debug ones, so -debugexclude is run after -debug.\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    if (!args.IsArgSet(opt)) return;\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\n+        if (!success) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\n     }\n+}\n \n-    // Now remove the logging categories which were explicitly excluded\n-    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n-        if (!LogInstance().DisableCategory(cat)) {\n-            InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n-        }\n+void SetLoggingCategories(const ArgsManager& args)\n+{\n+    for (const std::string& opt : DEBUG_LOG_OPTS) {\n+        EnableOrDisableLogCategories(args, opt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164530898",
      "id" : 1164530898,
      "in_reply_to_id" : 1164470470,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FaVTS",
      "original_commit_id" : "e9f6fd0e028e6a5669926926792c70c31a26c403",
      "original_line" : 99,
      "original_position" : 62,
      "original_start_line" : 96,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1381931446,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164530898/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-13T18:14:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164530898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164533054"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164533054"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Cool, just to be clear I meant combining this `EnableOrDisableLogCategories()` into ` SetLoggingCategories()`  and then you only have one named `EnableOrDisableLogCategories()` in the code over in node.cpp\r\n\r\n> That, along with how extracting that function simplifies SetLoggingCategories to highlight that both options are being plugged into the same code, were the motivations.\r\n\r\nokie doke ð ",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-12T19:03:20Z",
      "diff_hunk" : "@@ -78,27 +77,26 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+// We run each of these configuration options through SetLoggingCategories. The order matters;\n+// -debugexclude settings take priority over -debug ones, so -debugexclude is run after -debug.\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    if (!args.IsArgSet(opt)) return;\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\n+        if (!success) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\n     }\n+}\n \n-    // Now remove the logging categories which were explicitly excluded\n-    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n-        if (!LogInstance().DisableCategory(cat)) {\n-            InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n-        }\n+void SetLoggingCategories(const ArgsManager& args)\n+{\n+    for (const std::string& opt : DEBUG_LOG_OPTS) {\n+        EnableOrDisableLogCategories(args, opt);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164533054",
      "id" : 1164533054,
      "in_reply_to_id" : 1164470470,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FaV0-",
      "original_commit_id" : "e9f6fd0e028e6a5669926926792c70c31a26c403",
      "original_line" : 99,
      "original_position" : 62,
      "original_start_line" : 96,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1381934777,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164533054/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-12T19:03:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164533054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164585860"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164585860"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Well I meant something like a switch statement with `\"-debug\"` and `\"-debugexclude\"` literal strings as cases.\r\n\r\nThe condition in a [switch](https://en.cppreference.com/w/cpp/language/switch) statement must be of integer or enum type, or of a class type implicitly convertible to one.\r\n\r\nBut we can still use conditionals. Do you like this better?\r\n\r\n```diff\r\n static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\r\n \r\n+static bool EnableOrDisable(const std::string& opt, const std::string& category)\r\n+{\r\n+    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\r\n+    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\r\n+    NONFATAL_UNREACHABLE();\r\n+}\r\n+\r\n static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\r\n@@ -90,8 +97,7 @@ static void EnableOrDisableLogCategories(const ArgsManager& args, const std::str\r\n     const std::vector<std::string>& categories{args.GetArgs(opt)};\r\n     if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\r\n     for (const auto& c : categories) {\r\n-        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n-        if (!success) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\r\n+        if (!EnableOrDisable(opt, c)) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\r\n     }\r\n }\r\n```\r\n",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-12T20:01:56Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164585860",
      "id" : 1164585860,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FaiuE",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1382031652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164585860/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T20:43:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164585860",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164601290"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164601290"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah ð¬ waddaya think?",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-12T20:13:02Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164601290",
      "id" : 1164601290,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FamfK",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1382049186,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164601290/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T20:13:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164601290",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164606990"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164606990"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Sure, will update. And add the comments mentioned in https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164530898.",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-12T20:17:51Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164606990",
      "id" : 1164606990,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Fan4O",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1382055523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164606990/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T20:17:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164606990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164674497"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164674497"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done, and also dropped `DEBUG_LOG_OPTS` and the no-longer useful `Assume` check (the `NONFATAL_UNREACHABLE` check does it better), and made the two `EnableOrDisableLogCategories` functions simpler and more similar. Very helpful feedback (thanks!)\r\n\r\n<details><summary><code>git diff e9f6fd0 5991edd</code></summary><p>\r\n\r\n```diff\r\ndiff --git a/src/init/common.cpp b/src/init/common.cpp\r\nindex a5b07420d94..c99a512459b 100644\r\n--- a/src/init/common.cpp\r\n+++ b/src/init/common.cpp\r\n@@ -77,26 +77,28 @@ void SetLoggingLevel(const ArgsManager& args)\r\n     }\r\n }\r\n \r\n-// We run each of these configuration options through SetLoggingCategories. The order matters;\r\n-// -debugexclude settings take priority over -debug ones, so -debugexclude is run after -debug.\r\n-static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\r\n+static bool EnableOrDisable(const std::string& opt, const std::string& category)\r\n+{\r\n+    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\r\n+    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\r\n+    NONFATAL_UNREACHABLE();\r\n+}\r\n \r\n+// Maintain the same logic in both of the EnableOrDisableLogCategories functions in the codebase.\r\n static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\r\n {\r\n-    if (!args.IsArgSet(opt)) return;\r\n-    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\r\n     const std::vector<std::string>& categories{args.GetArgs(opt)};\r\n     if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\r\n     for (const auto& c : categories) {\r\n-        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n-        if (!success) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\r\n+        if (!EnableOrDisable(opt, c)) InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c));\r\n     }\r\n }\r\n \r\n void SetLoggingCategories(const ArgsManager& args)\r\n {\r\n-    for (const std::string& opt : DEBUG_LOG_OPTS) {\r\n-        EnableOrDisableLogCategories(args, opt);\r\n+    // debugexclude settings take priority over debug ones, so run debugexclude last\r\n+    for (const std::string& opt : {\"-debug\", \"-debugexclude\"}) {\r\n+        if (args.IsArgSet(opt)) EnableOrDisableLogCategories(args, opt);\r\n     }\r\n }\r\n \r\ndiff --git a/src/rpc/node.cpp b/src/rpc/node.cpp\r\nindex 3bae7bef722..9c32839231f 100644\r\n--- a/src/rpc/node.cpp\r\n+++ b/src/rpc/node.cpp\r\n@@ -209,14 +209,13 @@ static RPCHelpMan getmemoryinfo()\r\n     };\r\n }\r\n \r\n+// Maintain the same logic in both of the EnableOrDisableLogCategories functions in the codebase.\r\n static void EnableOrDisableLogCategories(const UniValue& categories, bool enable)\r\n {\r\n-    const std::vector<UniValue>& category_values{categories.get_array().getValues()};\r\n-    for (const auto& category : category_values) {\r\n-        if (LogInstance().IsNoneCategory(category.get_str())) return;\r\n-    }\r\n-    for (const auto& category : category_values) {\r\n-        const std::string& c{category.get_str()};\r\n+    const std::vector<UniValue>& cats{categories.get_array().getValues()};\r\n+    if (std::any_of(cats.cbegin(), cats.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c.get_str()); })) return;\r\n+    for (const auto& cat : cats) {\r\n+        const std::string& c{cat.get_str()};\r\n         const bool success{enable ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n         if (!success) throw JSONRPCError(RPC_INVALID_PARAMETER, \"Unsupported logging category: \" + c);\r\n     }\r\n```\r\n</p></details>\r\n",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-04-12T21:33:19Z",
      "diff_hunk" : "@@ -78,27 +79,24 @@ void SetLoggingLevel(const ArgsManager& args)\n     }\n }\n \n-void SetLoggingCategories(const ArgsManager& args)\n+static constexpr std::array DEBUG_LOG_OPTS{\"-debug\", \"-debugexclude\"};\n+\n+static void EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n-                }\n-            }\n-        }\n+    Assume(std::any_of(DEBUG_LOG_OPTS.cbegin(), DEBUG_LOG_OPTS.cend(), [&](const auto& d) { return opt == d; }));\n+    if (!args.IsArgSet(opt)) return;\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\n+    for (const auto& c : categories) {\n+        const bool success{opt == DEBUG_LOG_OPTS[0] ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1164674497",
      "id" : 1164674497,
      "in_reply_to_id" : 1158916354,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Fa4XB",
      "original_commit_id" : "f868de5293e99b8619225d2e3b93417e080888aa",
      "original_line" : 91,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1382150078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164674497/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-12T21:43:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164674497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased following merge of #27632; only change is to commit 4351f26203c6daab321d478a3992e1723cc60814 per `git range-diff ee22ca5 5991edd 630b38e`.",
      "created_at" : "2023-06-20T23:37:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1599735630",
      "id" : 1599735630,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585fWgdO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1599735630/reactions"
      },
      "updated_at" : "2023-06-20T23:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1599735630",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1238714196"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238714196"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I still don't totally understand why you need to split this up into three functions, one of which is a kinda-duplicate The comment makes sense but I'm not familiar enough with the general style of the project to determine if having two functions with the same name doing basically the same thing is acceptable.",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-06-22T15:40:32Z",
      "diff_hunk" : "@@ -80,26 +79,31 @@ util::Result<void> SetLoggingLevel(const ArgsManager& args)\n     return {};\n }\n \n-util::Result<void> SetLoggingCategories(const ArgsManager& args)\n+[[nodiscard]] static bool EnableOrDisable(const std::string& opt, const std::string& category)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat)};\n-                }\n-            }\n-        }\n+    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\n+    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\n+    NONFATAL_UNREACHABLE();\n+}\n+\n+// Maintain similar logic in both of the EnableOrDisableLogCategories() functions in the codebase.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1238714196",
      "id" : 1238714196,
      "line" : 89,
      "node_id" : "PRRC_kwDOABII585J1UdU",
      "original_commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "original_line" : 89,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : 45,
      "pull_request_review_id" : 1493504697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238714196/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-22T15:40:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238714196",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1238977872"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238977872"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Doing so\r\n- makes clear that -debug and -debugexclude use the same logic\r\n- avoids duplicate code for -debug and -debugexclude\r\n- separates the logic to be kept the same, into a method that has the same name and logic as `EnableOrDisableLogCategories()` in the RPC code (for the logging RPC \"include\" and \"exclude\" options), which was added back in 2017-2018 and updated since then. Combining the two into a single method seems non-trivial (maybe for a later pull) but this comment and the shared function name grep-ability makes more clear what logic needs to be the same.\r\n\r\n(Thanks for coming back to this PR!)",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-06-22T20:05:26Z",
      "diff_hunk" : "@@ -80,26 +79,31 @@ util::Result<void> SetLoggingLevel(const ArgsManager& args)\n     return {};\n }\n \n-util::Result<void> SetLoggingCategories(const ArgsManager& args)\n+[[nodiscard]] static bool EnableOrDisable(const std::string& opt, const std::string& category)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat)};\n-                }\n-            }\n-        }\n+    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\n+    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\n+    NONFATAL_UNREACHABLE();\n+}\n+\n+// Maintain similar logic in both of the EnableOrDisableLogCategories() functions in the codebase.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1238977872",
      "id" : 1238977872,
      "in_reply_to_id" : 1238714196,
      "line" : 89,
      "node_id" : "PRRC_kwDOABII585J2U1Q",
      "original_commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "original_line" : 89,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : 45,
      "pull_request_review_id" : 1493916244,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238977872/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-22T20:08:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238977872",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1238979407"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238979407"
         }
      },
      "author_association" : "MEMBER",
      "body" : "OK cool thanks for explaining",
      "commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "created_at" : "2023-06-22T20:07:25Z",
      "diff_hunk" : "@@ -80,26 +79,31 @@ util::Result<void> SetLoggingLevel(const ArgsManager& args)\n     return {};\n }\n \n-util::Result<void> SetLoggingCategories(const ArgsManager& args)\n+[[nodiscard]] static bool EnableOrDisable(const std::string& opt, const std::string& category)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat)};\n-                }\n-            }\n-        }\n+    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\n+    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\n+    NONFATAL_UNREACHABLE();\n+}\n+\n+// Maintain similar logic in both of the EnableOrDisableLogCategories() functions in the codebase.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1238979407",
      "id" : 1238979407,
      "in_reply_to_id" : 1238714196,
      "line" : 89,
      "node_id" : "PRRC_kwDOABII585J2VNP",
      "original_commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "original_line" : 89,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : 45,
      "pull_request_review_id" : 1493918918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238979407/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-22T20:07:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238979407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1239861077"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1239861077"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems a bit clunky, how about:\r\n\r\n```c++\r\n// Maintain similar logic in both of the EnableOrDisableLogCategories() functions in the codebase.\r\nstatic void EnableOrDisableLogCategories(util::Result<void>& result, const ArgsManager& args, const std::string& opt, bool enable)\r\n{\r\n    if (!result) return;\r\n    if (!args.IsArgSet(opt)) return;\r\n    const std::vector<std::string>& categories{args.GetArgs(opt)};\r\n    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\r\n    for (const auto& category : categories) {\r\n        bool success = (enable ? LogInstance().EnableCategory(category) : LogInstance().DisableCategory(category));\r\n        if (!success) {\r\n            result = util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), opt, category)};\r\n            return;\r\n        }\r\n    }\r\n    return;\r\n}\r\n\r\nutil::Result<void> SetLoggingCategories(const ArgsManager& args)\r\n{\r\n    util::Result<void> result;\r\n\r\n    // debugexclude settings take priority over debug ones, so run debugexclude last\r\n    EnableOrDisableLogCategories(result, args, \"-debug\", /*enable=*/true);\r\n    EnableOrDisableLogCategories(result, args, \"-debugexclude\", /*enable=*/false);\r\n    if (!result) return util::Error{util::ErrorString(result)};\r\n    return {};\r\n}\r\n```\r\n\r\n(or just `return result;` at the end -- not sure what the point of `return Error(ErrorString(result))` is?)",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-06-23T14:02:58Z",
      "diff_hunk" : "@@ -80,26 +79,31 @@ util::Result<void> SetLoggingLevel(const ArgsManager& args)\n     return {};\n }\n \n-util::Result<void> SetLoggingCategories(const ArgsManager& args)\n+[[nodiscard]] static bool EnableOrDisable(const std::string& opt, const std::string& category)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat)};\n-                }\n-            }\n-        }\n+    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\n+    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\n+    NONFATAL_UNREACHABLE();\n+}\n+\n+// Maintain similar logic in both of the EnableOrDisableLogCategories() functions in the codebase.\n+[[nodiscard]] static util::Result<void> EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n+{\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return {};\n+    for (const auto& c : categories) {\n+        if (!EnableOrDisable(opt, c)) return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c)};\n     }\n+    return {};\n+}\n \n-    // Now remove the logging categories which were explicitly excluded\n-    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n-        if (!LogInstance().DisableCategory(cat)) {\n-            return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat)};\n+util::Result<void> SetLoggingCategories(const ArgsManager& args)\n+{\n+    // debugexclude settings take priority over debug ones, so run debugexclude last\n+    for (const std::string& opt : {\"-debug\", \"-debugexclude\"}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1239861077",
      "id" : 1239861077,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585J5sdV",
      "original_commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "original_line" : 103,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1495213933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1239861077/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-23T14:07:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1239861077",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1240112630"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240112630"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "LGTM (and with just `return result;`) and this allows dropping the `#include <util/check.h>` from that file.\r\n",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-06-23T17:49:16Z",
      "diff_hunk" : "@@ -80,26 +79,31 @@ util::Result<void> SetLoggingLevel(const ArgsManager& args)\n     return {};\n }\n \n-util::Result<void> SetLoggingCategories(const ArgsManager& args)\n+[[nodiscard]] static bool EnableOrDisable(const std::string& opt, const std::string& category)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat)};\n-                }\n-            }\n-        }\n+    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\n+    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\n+    NONFATAL_UNREACHABLE();\n+}\n+\n+// Maintain similar logic in both of the EnableOrDisableLogCategories() functions in the codebase.\n+[[nodiscard]] static util::Result<void> EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n+{\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return {};\n+    for (const auto& c : categories) {\n+        if (!EnableOrDisable(opt, c)) return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c)};\n     }\n+    return {};\n+}\n \n-    // Now remove the logging categories which were explicitly excluded\n-    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n-        if (!LogInstance().DisableCategory(cat)) {\n-            return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat)};\n+util::Result<void> SetLoggingCategories(const ArgsManager& args)\n+{\n+    // debugexclude settings take priority over debug ones, so run debugexclude last\n+    for (const std::string& opt : {\"-debug\", \"-debugexclude\"}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1240112630",
      "id" : 1240112630,
      "in_reply_to_id" : 1239861077,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585J6p32",
      "original_commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "original_line" : 103,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1495608757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240112630/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-23T17:49:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1240112630",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you @pinheadmz and @ajtowns for the review; updated commit 0c6c39056851d13c0ca3cea227fac72a4338bed0 per https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1239861077.\r\n\r\n<details><summary><code>git diff 630b38e 08a367c</code></summary><p>\r\n\r\n```diff\r\n--- a/src/init/common.cpp\r\n+++ b/src/init/common.cpp\r\n@@ -11,7 +11,6 @@\r\n #include <logging.h>\r\n #include <node/interface_ui.h>\r\n #include <tinyformat.h>\r\n-#include <util/check.h>\r\n #include <util/fs.h>\r\n #include <util/fs_helpers.h>\r\n #include <util/result.h>\r\n@@ -79,34 +78,29 @@ util::Result<void> SetLoggingLevel(const ArgsManager& args)\r\n     return {};\r\n }\r\n \r\n-[[nodiscard]] static bool EnableOrDisable(const std::string& opt, const std::string& category)\r\n-{\r\n-    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\r\n-    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\r\n-    NONFATAL_UNREACHABLE();\r\n-}\r\n-\r\n // Maintain similar logic in both of the EnableOrDisableLogCategories() functions in the codebase.\r\n-[[nodiscard]] static util::Result<void> EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\r\n+static void EnableOrDisableLogCategories(util::Result<void>& result, const ArgsManager& args, const std::string& opt, bool enable)\r\n {\r\n+    if (!result || !args.IsArgSet(opt)) return;\r\n     const std::vector<std::string>& categories{args.GetArgs(opt)};\r\n-    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return {};\r\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return;\r\n     for (const auto& c : categories) {\r\n-        if (!EnableOrDisable(opt, c)) return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c)};\r\n+        const bool success{enable ? LogInstance().EnableCategory(c) : LogInstance().DisableCategory(c)};\r\n+        if (!success) {\r\n+            result = util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c)};\r\n+            return;\r\n+        }\r\n     }\r\n-    return {};\r\n+    return;\r\n }\r\n \r\n util::Result<void> SetLoggingCategories(const ArgsManager& args)\r\n {\r\n+    util::Result<void> result;\r\n     // debugexclude settings take priority over debug ones, so run debugexclude last\r\n-    for (const std::string& opt : {\"-debug\", \"-debugexclude\"}) {\r\n-        if (args.IsArgSet(opt)) {\r\n-            auto result = EnableOrDisableLogCategories(args, opt);\r\n-            if (!result) return util::Error{util::ErrorString(result)};\r\n-        }\r\n-    }\r\n-    return {};\r\n+    EnableOrDisableLogCategories(result, args, \"-debug\", /*enable=*/true);\r\n+    EnableOrDisableLogCategories(result, args, \"-debugexclude\", /*enable=*/false);\r\n+    return result;\r\n }\r\n```\r\n</p></details>\r\n",
      "created_at" : "2023-06-23T18:09:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1604660838",
      "id" : 1604660838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585fpS5m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1604660838/reactions"
      },
      "updated_at" : "2023-06-23T18:10:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1604660838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247319876"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247319876"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```\r\nsrc/test/logging_tests.cpp:262:29: warning: loop variable 's' of type 'const std::string&' {aka 'const std::__cxx11::basic_string<char>&'} binds to a temporary constructed from type 'const char* const' [-Wrange-loop-construct]\r\n  262 |     for (const std::string& s : {\"\", \"NONE\", \"net\", \"all\", \"1\"}) {\r\n      |                             ^\r\nsrc/test/logging_tests.cpp:262:29: note: use non-reference type 'const std::string' {aka 'const std::__cxx11::basic_string<char>'} to make the copy explicit or 'const char* const&' to prevent copying\r\n```",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-06-30T01:44:18Z",
      "diff_hunk" : "@@ -251,4 +260,14 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\n     }\n }\n \n+BOOST_FIXTURE_TEST_CASE(logging_IsNoneCategory, LogSetup)\n+{\n+    for (const std::string& s : {\"none\", \"0\"}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247319876",
      "id" : 1247319876,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KWJdE",
      "original_commit_id" : "08a367c929e55e779d3b06ca75f94d42b5d67e1f",
      "original_line" : 265,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/test/logging_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1506340867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247319876/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-30T02:05:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247319876",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247331119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247331119"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Kinda ugly to call `node.logging()` repeatedly",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-06-30T02:04:13Z",
      "diff_hunk" : "@@ -14,52 +14,76 @@ class LoggingTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-debug=0\"]]\n \n     def relative_log_path(self, name):\n         return os.path.join(self.nodes[0].datadir, self.chain, name)\n \n     def run_test(self):\n-        # test default log file name\n+        node = self.nodes[0]\n+        self.log.info(\"Test default log file name and -debug=0\")\n         default_log_path = self.relative_log_path(\"debug.log\")\n         assert os.path.isfile(default_log_path)\n-\n-        # test alternative log file name in datadir\n-        self.restart_node(0, [\"-debuglogfile=foo.log\"])\n+        assert all(v == False for v in node.logging().values())\n+\n+        self.log.info(\"Test alternative log file name in datadir and -debugexclude={net,tor}\")\n+        self.restart_node(0, extra_args=[\n+            \"-debuglogfile=foo.log\",\n+            \"-debugexclude=net\",\n+            \"-debugexclude=tor\",\n+        ])\n         assert os.path.isfile(self.relative_log_path(\"foo.log\"))\n+        # In addition to net and tor, leveldb/libevent/rand are excluded by the test framework.\n+        for category in [\"leveldb\", \"libevent\", \"net\", \"rand\", \"tor\"]:\n+            assert not node.logging()[category]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247331119",
      "id" : 1247331119,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KWMMv",
      "original_commit_id" : "08a367c929e55e779d3b06ca75f94d42b5d67e1f",
      "original_line" : 38,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/feature_logging.py",
      "position" : null,
      "pull_request_review_id" : 1506340867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247331119/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-30T02:05:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247331119",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247331674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247331674"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why aren't libevent/leveldb being excluded here?",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-06-30T02:05:16Z",
      "diff_hunk" : "@@ -14,52 +14,76 @@ class LoggingTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-debug=0\"]]\n \n     def relative_log_path(self, name):\n         return os.path.join(self.nodes[0].datadir, self.chain, name)\n \n     def run_test(self):\n-        # test default log file name\n+        node = self.nodes[0]\n+        self.log.info(\"Test default log file name and -debug=0\")\n         default_log_path = self.relative_log_path(\"debug.log\")\n         assert os.path.isfile(default_log_path)\n-\n-        # test alternative log file name in datadir\n-        self.restart_node(0, [\"-debuglogfile=foo.log\"])\n+        assert all(v == False for v in node.logging().values())\n+\n+        self.log.info(\"Test alternative log file name in datadir and -debugexclude={net,tor}\")\n+        self.restart_node(0, extra_args=[\n+            \"-debuglogfile=foo.log\",\n+            \"-debugexclude=net\",\n+            \"-debugexclude=tor\",\n+        ])\n         assert os.path.isfile(self.relative_log_path(\"foo.log\"))\n+        # In addition to net and tor, leveldb/libevent/rand are excluded by the test framework.\n+        for category in [\"leveldb\", \"libevent\", \"net\", \"rand\", \"tor\"]:\n+            assert not node.logging()[category]\n \n-        # test alternative log file name outside datadir\n+        self.log.info(\"Test alternative log file name outside datadir and -debugexclude={none,qt}\")\n         tempname = os.path.join(self.options.tmpdir, \"foo.log\")\n-        self.restart_node(0, [f\"-debuglogfile={tempname}\"])\n+        self.restart_node(0, extra_args=[\n+            f\"-debuglogfile={tempname}\",\n+            \"-debugexclude=none\",\n+            \"-debugexclude=qt\",\n+        ])\n         assert os.path.isfile(tempname)\n+        assert all(v == True for v in node.logging().values())  # -debugexclude=[none,qt] does not exclude qt",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247331674",
      "id" : 1247331674,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KWMVa",
      "original_commit_id" : "08a367c929e55e779d3b06ca75f94d42b5d67e1f",
      "original_line" : 48,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/feature_logging.py",
      "position" : null,
      "pull_request_review_id" : 1506340867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247331674/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-30T02:05:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247331674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247340446"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247340446"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point, updated.\r\n\r\n```diff\r\n         # In addition to net and tor, leveldb/libevent/rand are excluded by the test framework.\r\n+        result = node.logging()\r\n         for category in [\"leveldb\", \"libevent\", \"net\", \"rand\", \"tor\"]:\r\n-            assert not node.logging()[category]\r\n+            assert not result[category]\r\n```\r\n",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-06-30T02:22:12Z",
      "diff_hunk" : "@@ -14,52 +14,76 @@ class LoggingTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-debug=0\"]]\n \n     def relative_log_path(self, name):\n         return os.path.join(self.nodes[0].datadir, self.chain, name)\n \n     def run_test(self):\n-        # test default log file name\n+        node = self.nodes[0]\n+        self.log.info(\"Test default log file name and -debug=0\")\n         default_log_path = self.relative_log_path(\"debug.log\")\n         assert os.path.isfile(default_log_path)\n-\n-        # test alternative log file name in datadir\n-        self.restart_node(0, [\"-debuglogfile=foo.log\"])\n+        assert all(v == False for v in node.logging().values())\n+\n+        self.log.info(\"Test alternative log file name in datadir and -debugexclude={net,tor}\")\n+        self.restart_node(0, extra_args=[\n+            \"-debuglogfile=foo.log\",\n+            \"-debugexclude=net\",\n+            \"-debugexclude=tor\",\n+        ])\n         assert os.path.isfile(self.relative_log_path(\"foo.log\"))\n+        # In addition to net and tor, leveldb/libevent/rand are excluded by the test framework.\n+        for category in [\"leveldb\", \"libevent\", \"net\", \"rand\", \"tor\"]:\n+            assert not node.logging()[category]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247340446",
      "id" : 1247340446,
      "in_reply_to_id" : 1247331119,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KWOee",
      "original_commit_id" : "08a367c929e55e779d3b06ca75f94d42b5d67e1f",
      "original_line" : 38,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/feature_logging.py",
      "position" : null,
      "pull_request_review_id" : 1506371015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247340446/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-30T02:22:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247340446",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247342599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247342599"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you, Luke, updated. Is that with GCC? I don't see the warning with Clang 16.0.6.\r\n\r\n```diff\r\n BOOST_FIXTURE_TEST_CASE(logging_IsNoneCategory, LogSetup)\r\n {\r\n-    for (const std::string& s : {\"none\", \"0\"}) {\r\n+    for (const char* const& s : {\"none\", \"0\"}) {\r\n         BOOST_CHECK(LogInstance().IsNoneCategory(s));\r\n     }\r\n-    for (const std::string& s : {\"\", \"NONE\", \"net\", \"all\", \"1\"}) {\r\n+    for (const char* const& s : {\"\", \"NONE\", \"net\", \"all\", \"1\"}) {\r\n         BOOST_CHECK(!LogInstance().IsNoneCategory(s));\r\n     }\r\n }\r\n```\r\n",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-06-30T02:25:11Z",
      "diff_hunk" : "@@ -251,4 +260,14 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\n     }\n }\n \n+BOOST_FIXTURE_TEST_CASE(logging_IsNoneCategory, LogSetup)\n+{\n+    for (const std::string& s : {\"none\", \"0\"}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247342599",
      "id" : 1247342599,
      "in_reply_to_id" : 1247319876,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KWPAH",
      "original_commit_id" : "08a367c929e55e779d3b06ca75f94d42b5d67e1f",
      "original_line" : 265,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/test/logging_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1506374446,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247342599/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-30T02:25:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247342599",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247357530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247357530"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Because `-debugexclude=none\"` is passed. It looks like the passed extra args are concatenated to `self.args` before starting the process, i.e. `self.process = subprocess.Popen(self.args + extra_args...` in `test_framework/test_node.py#L219`, so the \"none\" value cancels the -debugexclude={libevent,leveldb,rand} args in the same file.",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-06-30T02:54:31Z",
      "diff_hunk" : "@@ -14,52 +14,76 @@ class LoggingTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-debug=0\"]]\n \n     def relative_log_path(self, name):\n         return os.path.join(self.nodes[0].datadir, self.chain, name)\n \n     def run_test(self):\n-        # test default log file name\n+        node = self.nodes[0]\n+        self.log.info(\"Test default log file name and -debug=0\")\n         default_log_path = self.relative_log_path(\"debug.log\")\n         assert os.path.isfile(default_log_path)\n-\n-        # test alternative log file name in datadir\n-        self.restart_node(0, [\"-debuglogfile=foo.log\"])\n+        assert all(v == False for v in node.logging().values())\n+\n+        self.log.info(\"Test alternative log file name in datadir and -debugexclude={net,tor}\")\n+        self.restart_node(0, extra_args=[\n+            \"-debuglogfile=foo.log\",\n+            \"-debugexclude=net\",\n+            \"-debugexclude=tor\",\n+        ])\n         assert os.path.isfile(self.relative_log_path(\"foo.log\"))\n+        # In addition to net and tor, leveldb/libevent/rand are excluded by the test framework.\n+        for category in [\"leveldb\", \"libevent\", \"net\", \"rand\", \"tor\"]:\n+            assert not node.logging()[category]\n \n-        # test alternative log file name outside datadir\n+        self.log.info(\"Test alternative log file name outside datadir and -debugexclude={none,qt}\")\n         tempname = os.path.join(self.options.tmpdir, \"foo.log\")\n-        self.restart_node(0, [f\"-debuglogfile={tempname}\"])\n+        self.restart_node(0, extra_args=[\n+            f\"-debuglogfile={tempname}\",\n+            \"-debugexclude=none\",\n+            \"-debugexclude=qt\",\n+        ])\n         assert os.path.isfile(tempname)\n+        assert all(v == True for v in node.logging().values())  # -debugexclude=[none,qt] does not exclude qt",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247357530",
      "id" : 1247357530,
      "in_reply_to_id" : 1247331674,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KWSpa",
      "original_commit_id" : "08a367c929e55e779d3b06ca75f94d42b5d67e1f",
      "original_line" : 48,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/feature_logging.py",
      "position" : null,
      "pull_request_review_id" : 1506395238,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247357530/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-30T02:54:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247357530",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247357713"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247357713"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good question, though. I'll add a comment.",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-06-30T02:54:52Z",
      "diff_hunk" : "@@ -14,52 +14,76 @@ class LoggingTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-debug=0\"]]\n \n     def relative_log_path(self, name):\n         return os.path.join(self.nodes[0].datadir, self.chain, name)\n \n     def run_test(self):\n-        # test default log file name\n+        node = self.nodes[0]\n+        self.log.info(\"Test default log file name and -debug=0\")\n         default_log_path = self.relative_log_path(\"debug.log\")\n         assert os.path.isfile(default_log_path)\n-\n-        # test alternative log file name in datadir\n-        self.restart_node(0, [\"-debuglogfile=foo.log\"])\n+        assert all(v == False for v in node.logging().values())\n+\n+        self.log.info(\"Test alternative log file name in datadir and -debugexclude={net,tor}\")\n+        self.restart_node(0, extra_args=[\n+            \"-debuglogfile=foo.log\",\n+            \"-debugexclude=net\",\n+            \"-debugexclude=tor\",\n+        ])\n         assert os.path.isfile(self.relative_log_path(\"foo.log\"))\n+        # In addition to net and tor, leveldb/libevent/rand are excluded by the test framework.\n+        for category in [\"leveldb\", \"libevent\", \"net\", \"rand\", \"tor\"]:\n+            assert not node.logging()[category]\n \n-        # test alternative log file name outside datadir\n+        self.log.info(\"Test alternative log file name outside datadir and -debugexclude={none,qt}\")\n         tempname = os.path.join(self.options.tmpdir, \"foo.log\")\n-        self.restart_node(0, [f\"-debuglogfile={tempname}\"])\n+        self.restart_node(0, extra_args=[\n+            f\"-debuglogfile={tempname}\",\n+            \"-debugexclude=none\",\n+            \"-debugexclude=qt\",\n+        ])\n         assert os.path.isfile(tempname)\n+        assert all(v == True for v in node.logging().values())  # -debugexclude=[none,qt] does not exclude qt",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1247357713",
      "id" : 1247357713,
      "in_reply_to_id" : 1247331674,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KWSsR",
      "original_commit_id" : "08a367c929e55e779d3b06ca75f94d42b5d67e1f",
      "original_line" : 48,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/feature_logging.py",
      "position" : null,
      "pull_request_review_id" : 1506395455,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247357713/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-30T02:54:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247357713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1248280153"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248280153"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Improved the test comment.\r\n\r\n```diff\r\n-        assert all(v == True for v in node.logging().values())  # -debugexclude=[none,qt] does not exclude qt\r\n+        # Expect the \"none\" value passed in -debugexclude=[none,qt] to mean that\r\n+        # none of the categories passed with -debugexclude are excluded: neither\r\n+        # qt passed here nor leveldb/libevent/rand passed by the test framework.\r\n+        assert all(v == True for v in node.logging().values())\r\n```\r\n",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-06-30T20:56:36Z",
      "diff_hunk" : "@@ -14,52 +14,76 @@ class LoggingTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n         self.setup_clean_chain = True\n+        self.extra_args = [[\"-debug=0\"]]\n \n     def relative_log_path(self, name):\n         return os.path.join(self.nodes[0].datadir, self.chain, name)\n \n     def run_test(self):\n-        # test default log file name\n+        node = self.nodes[0]\n+        self.log.info(\"Test default log file name and -debug=0\")\n         default_log_path = self.relative_log_path(\"debug.log\")\n         assert os.path.isfile(default_log_path)\n-\n-        # test alternative log file name in datadir\n-        self.restart_node(0, [\"-debuglogfile=foo.log\"])\n+        assert all(v == False for v in node.logging().values())\n+\n+        self.log.info(\"Test alternative log file name in datadir and -debugexclude={net,tor}\")\n+        self.restart_node(0, extra_args=[\n+            \"-debuglogfile=foo.log\",\n+            \"-debugexclude=net\",\n+            \"-debugexclude=tor\",\n+        ])\n         assert os.path.isfile(self.relative_log_path(\"foo.log\"))\n+        # In addition to net and tor, leveldb/libevent/rand are excluded by the test framework.\n+        for category in [\"leveldb\", \"libevent\", \"net\", \"rand\", \"tor\"]:\n+            assert not node.logging()[category]\n \n-        # test alternative log file name outside datadir\n+        self.log.info(\"Test alternative log file name outside datadir and -debugexclude={none,qt}\")\n         tempname = os.path.join(self.options.tmpdir, \"foo.log\")\n-        self.restart_node(0, [f\"-debuglogfile={tempname}\"])\n+        self.restart_node(0, extra_args=[\n+            f\"-debuglogfile={tempname}\",\n+            \"-debugexclude=none\",\n+            \"-debugexclude=qt\",\n+        ])\n         assert os.path.isfile(tempname)\n+        assert all(v == True for v in node.logging().values())  # -debugexclude=[none,qt] does not exclude qt",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1248280153",
      "id" : 1248280153,
      "in_reply_to_id" : 1247331674,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KZz5Z",
      "original_commit_id" : "08a367c929e55e779d3b06ca75f94d42b5d67e1f",
      "original_line" : 48,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/feature_logging.py",
      "position" : null,
      "pull_request_review_id" : 1507887642,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248280153/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-30T20:56:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1248280153",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated the tests with @luke-jr's review feedback (thanks!)\r\n\r\n<details><summary>git diff 08a367c 93b387f</summary><p>\r\n\r\n```diff\r\n--- a/src/test/logging_tests.cpp\r\n+++ b/src/test/logging_tests.cpp\r\n@@ -262,11 +262,11 @@ BOOST_FIXTURE_TEST_CASE(logging_Conf, LogSetup)\r\n \r\n BOOST_FIXTURE_TEST_CASE(logging_IsNoneCategory, LogSetup)\r\n {\r\n-    for (const std::string& s : {\"none\", \"0\"}) {\r\n-        BOOST_CHECK(LogInstance().IsNoneCategory(s));\r\n+    for (const char* const& c : {\"none\", \"0\"}) {\r\n+        BOOST_CHECK(LogInstance().IsNoneCategory(c));\r\n     }\r\n-    for (const std::string& s : {\"\", \"NONE\", \"net\", \"all\", \"1\"}) {\r\n-        BOOST_CHECK(!LogInstance().IsNoneCategory(s));\r\n+    for (const char* const& c : {\"\", \"NONE\", \"net\", \"all\", \"1\"}) {\r\n+        BOOST_CHECK(!LogInstance().IsNoneCategory(c));\r\n     }\r\n }\r\n \r\ndiff --git a/test/functional/feature_logging.py b/test/functional/feature_logging.py\r\nindex 7958a743853..8448eff4a43 100755\r\n--- a/test/functional/feature_logging.py\r\n+++ b/test/functional/feature_logging.py\r\n@@ -34,8 +34,9 @@ class LoggingTest(BitcoinTestFramework):\r\n         ])\r\n         assert os.path.isfile(self.relative_log_path(\"foo.log\"))\r\n         # In addition to net and tor, leveldb/libevent/rand are excluded by the test framework.\r\n+        result = node.logging()\r\n         for category in [\"leveldb\", \"libevent\", \"net\", \"rand\", \"tor\"]:\r\n-            assert not node.logging()[category]\r\n+            assert not result[category]\r\n \r\n         self.log.info(\"Test alternative log file name outside datadir and -debugexclude={none,qt}\")\r\n         tempname = os.path.join(self.options.tmpdir, \"foo.log\")\r\n@@ -45,7 +46,10 @@ class LoggingTest(BitcoinTestFramework):\r\n             \"-debugexclude=qt\",\r\n         ])\r\n         assert os.path.isfile(tempname)\r\n-        assert all(v == True for v in node.logging().values())  # -debugexclude=[none,qt] does not exclude qt\r\n+        # Expect the \"none\" value passed in -debugexclude=[none,qt] to mean that\r\n+        # none of the categories passed with -debugexclude are excluded: neither\r\n+        # qt passed here nor leveldb/libevent/rand passed by the test framework.\r\n+        assert all(v == True for v in node.logging().values())\r\n \r\n         self.log.info(\"Test -debugexclude=1/all excludes all categories\")\r\n```\r\n</p></details>\r\n",
      "created_at" : "2023-06-30T21:02:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1615192850",
      "id" : 1615192850,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585gReMS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1615192850/reactions"
      },
      "updated_at" : "2023-06-30T21:02:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1615192850",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1269666789"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269666789"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Great suggestion AJ this are looks a lot better now",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-07-20T15:53:49Z",
      "diff_hunk" : "@@ -80,26 +79,31 @@ util::Result<void> SetLoggingLevel(const ArgsManager& args)\n     return {};\n }\n \n-util::Result<void> SetLoggingCategories(const ArgsManager& args)\n+[[nodiscard]] static bool EnableOrDisable(const std::string& opt, const std::string& category)\n {\n-    if (args.IsArgSet(\"-debug\")) {\n-        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-        const std::vector<std::string> categories = args.GetArgs(\"-debug\");\n-\n-        if (std::none_of(categories.begin(), categories.end(),\n-            [](std::string cat){return cat == \"0\" || cat == \"none\";})) {\n-            for (const auto& cat : categories) {\n-                if (!LogInstance().EnableCategory(cat)) {\n-                    return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat)};\n-                }\n-            }\n-        }\n+    if (opt == \"-debug\") return LogInstance().EnableCategory(category);\n+    if (opt == \"-debugexclude\") return LogInstance().DisableCategory(category);\n+    NONFATAL_UNREACHABLE();\n+}\n+\n+// Maintain similar logic in both of the EnableOrDisableLogCategories() functions in the codebase.\n+[[nodiscard]] static util::Result<void> EnableOrDisableLogCategories(const ArgsManager& args, const std::string& opt)\n+{\n+    const std::vector<std::string>& categories{args.GetArgs(opt)};\n+    if (std::any_of(categories.cbegin(), categories.cend(), [](const auto& c) { return LogInstance().IsNoneCategory(c); })) return {};\n+    for (const auto& c : categories) {\n+        if (!EnableOrDisable(opt, c)) return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), opt, c)};\n     }\n+    return {};\n+}\n \n-    // Now remove the logging categories which were explicitly excluded\n-    for (const std::string& cat : args.GetArgs(\"-debugexclude\")) {\n-        if (!LogInstance().DisableCategory(cat)) {\n-            return util::Error{strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat)};\n+util::Result<void> SetLoggingCategories(const ArgsManager& args)\n+{\n+    // debugexclude settings take priority over debug ones, so run debugexclude last\n+    for (const std::string& opt : {\"-debug\", \"-debugexclude\"}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1269666789",
      "id" : 1269666789,
      "in_reply_to_id" : 1239861077,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585LrZPl",
      "original_commit_id" : "630b38e92b4e40d49d69970b6c5bc02aa39ba210",
      "original_line" : 103,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/init/common.cpp",
      "position" : null,
      "pull_request_review_id" : 1539604568,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269666789/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-20T15:53:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1269666789",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1280574653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280574653"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we should avoid adding comments like this, because they don't really provide any value to the developer. If anything, a comment explaining what the \"not normal\" case is, and/or why that's particularly relevant, would be more useful, because that's the first question I'd have after reading this comment. Also unsure why this code has been re-ordered.",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-08-01T12:41:14Z",
      "diff_hunk" : "@@ -288,6 +284,8 @@ std::string LogCategoryToStr(BCLog::LogFlags category)\n         return \"scan\";\n     case BCLog::LogFlags::ALL:\n         return \"all\";\n+    case BCLog::LogFlags::NONE: // this case is normally never hit",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1280574653",
      "id" : 1280574653,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MVAS9",
      "original_commit_id" : "93b387fe70174d174b840016da8531ef65ec313e",
      "original_line" : 287,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1556904050,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280574653/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-01T12:41:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280574653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated per `git diff 93b387f ce8faad` to address @fanquake's review feedback (thanks!) and replace the comment with clearer code.\r\n\r\n<details><summary>diff</summary><p>\r\n\r\n```diff\r\ndiff --git a/src/logging.cpp b/src/logging.cpp\r\nindex f197943a0bd..d3f61ca54c2 100644\r\n--- a/src/logging.cpp\r\n+++ b/src/logging.cpp\r\n@@ -4,6 +4,7 @@\r\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\r\n \r\n #include <logging.h>\r\n+#include <util/check.h>\r\n #include <util/fs.h>\r\n #include <util/string.h>\r\n #include <util/threadnames.h>\r\n@@ -284,9 +285,9 @@ std::string LogCategoryToStr(BCLog::LogFlags category)\r\n         return \"scan\";\r\n     case BCLog::LogFlags::ALL:\r\n         return \"all\";\r\n-    case BCLog::LogFlags::NONE: // this case is normally never hit\r\n-        return \"\";\r\n-    }\r\n+    case BCLog::LogFlags::NONE:\r\n+        Assume(false);\r\n+    } // no default case, so the compiler can warn about missing cases\r\n     assert(false);\r\n }\r\n```\r\n</p></details>\r\n",
      "created_at" : "2023-08-01T22:04:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1661161279",
      "id" : 1661161279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585jA08_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661161279/reactions"
      },
      "updated_at" : "2023-08-01T22:18:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661161279",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1281205133"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281205133"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you @fanquake for the feedback and having a look. Updated to commit 88211f2b7e12542ba5e65bba4e3398c9592430ea per the diff in https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1661161279, replacing the comment with clearer code along with added explanation in the commit message.",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-08-01T22:17:18Z",
      "diff_hunk" : "@@ -288,6 +284,8 @@ std::string LogCategoryToStr(BCLog::LogFlags category)\n         return \"scan\";\n     case BCLog::LogFlags::ALL:\n         return \"all\";\n+    case BCLog::LogFlags::NONE: // this case is normally never hit",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1281205133",
      "id" : 1281205133,
      "in_reply_to_id" : 1280574653,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585MXaON",
      "original_commit_id" : "93b387fe70174d174b840016da8531ef65ec313e",
      "original_line" : 287,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : null,
      "pull_request_review_id" : 1557913147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281205133/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-01T22:17:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1281205133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1296721837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296721837"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What's the point of an `Assume(false)` that just falls through to an `assert(false)` ?",
      "commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "created_at" : "2023-08-17T06:14:02Z",
      "diff_hunk" : "@@ -288,7 +285,9 @@ std::string LogCategoryToStr(BCLog::LogFlags category)\n         return \"scan\";\n     case BCLog::LogFlags::ALL:\n         return \"all\";\n-    }\n+    case BCLog::LogFlags::NONE:\n+        Assume(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#discussion_r1296721837",
      "id" : 1296721837,
      "line" : 289,
      "node_id" : "PRRC_kwDOABII585NSmet",
      "original_commit_id" : "ce8faad0b791ac7d8e717659081879df78dbc192",
      "original_line" : 289,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/logging.cpp",
      "position" : 32,
      "pull_request_review_id" : 1581848407,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27231",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296721837/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-17T06:14:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1296721837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated per `git range-diff 6ce5e8f ce8faad 05143b2` to take review feedback by @ajtowns  (thanks!) and rebase for CI.",
      "created_at" : "2023-08-17T18:05:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1682735790",
      "id" : 1682735790,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585kTIKu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1682735790/reactions"
      },
      "updated_at" : "2023-08-17T18:05:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1682735790",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems close, has been reviewed by five reviewers (thanks!) and updated for their feedback.  I propose to give this another week for (re-)ACKs and merge. If it hasn't gone in by then, will revert to https://github.com/bitcoin/bitcoin/commit/630b38e92b4e40d49d69970b6c5bc02aa39ba210 with 2 ACKs and handle the minor updates since that commit in a follow-up.",
      "created_at" : "2023-08-31T13:14:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1701018732",
      "id" : 1701018732,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585lY3xs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1701018732/reactions"
      },
      "updated_at" : "2023-09-01T02:28:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1701018732",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated for @ajtowns' feedback to make `IsNoneCategory()` a static function in [`6f4127b` (#27231)](https://github.com/bitcoin/bitcoin/pull/27231/commits/6f4127be01ad75d3e460cdb9e7d902e99a595fbc).\r\n\r\n\r\n<details><summary><code>git diff 05143b2 94b059f</code></summary><p>\r\n\r\n```diff\r\ndiff --git a/src/logging.h b/src/logging.h\r\nindex 4dfb7106327..83c285c905d 100644\r\n--- a/src/logging.h\r\n+++ b/src/logging.h\r\n@@ -180,7 +180,7 @@ namespace BCLog {\r\n \r\n         bool WillLogCategory(LogFlags category) const;\r\n         bool WillLogCategoryLevel(LogFlags category, Level level) const;\r\n-        [[nodiscard]] bool IsNoneCategory(const std::string& s) const { return s == \"0\" || s == \"none\"; }\r\n+        [[nodiscard]] static bool IsNoneCategory(const std::string& s) { return s == \"0\" || s == \"none\"; }\r\n```\r\n",
      "created_at" : "2023-09-01T00:42:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1701955615",
      "id" : 1701955615,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585lccgf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1701955615/reactions"
      },
      "updated_at" : "2023-09-01T00:42:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1701955615",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "reACK 94b059ffe403a948957152b96f24fba4d9ee31f0",
      "created_at" : "2023-09-05T17:14:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1707003772",
      "id" : 1707003772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585lvs98",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1707003772/reactions"
      },
      "updated_at" : "2023-09-05T17:14:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1707003772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > The behavior was intended to be added in #11191.\r\n> \r\n> It's still not clear if this was broken from the time it was merged, or at some other later point. This also does not work with 22.x, and any earlier versions are EOL.\r\n> \r\n> If it's been broken forever (or at least is in all currently maintained releases), and no ones even noticed, we could take advantage of that, to remove some of the complexity here; do we definitely need multiple different ways of achieving the same logging toggling?\r\n\r\nHas this comment being replied to anywhere already?\r\n\r\nIt does seem like it would be pretty easy to remove this behaviour -- removing \"none\" would mean that anyone who specified it would get an error on startup, which is a good clue to fix their config. And you get the same \"actually, for this run I want to disable debugging stuff\" by adding `-nodebug` at the end (eg, on the cli) or by specifying \"-debugexclude=all\". For the logging rpc, just replace the argument with `[]` instead of adding none seems reasonable.",
      "created_at" : "2023-09-12T06:27:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1715067841",
      "id" : 1715067841,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585mOdvB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715067841/reactions"
      },
      "updated_at" : "2023-09-12T06:27:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715067841",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Has this comment being replied to anywhere already?\r\n\r\nYes, https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1492195680 and the pull description contains that discussion as well.",
      "created_at" : "2023-09-12T19:37:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1716308893",
      "id" : 1716308893,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585mTMud",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1716308893/reactions"
      },
      "updated_at" : "2023-09-12T19:37:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1716308893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Exploring this, it doesn't look like there would be much code simplification gained by dropping `none` for `0` only, which would no longer be in symmetry with `all/1` that have been operational for a long time.\r\n\r\nWhy would you keep the `0` option? Just drop the concept entirely: https://github.com/bitcoin/bitcoin/compare/master...ajtowns:bitcoin:202309-debug-no-none That special case was added well prior to `-debugexclude` (namely #3067 vs #10123)\r\n\r\n",
      "created_at" : "2023-09-13T02:25:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1716847997",
      "id" : 1716847997,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585mVQV9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1716847997/reactions"
      },
      "updated_at" : "2023-09-13T02:28:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1716847997",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that question is addressed in the pull description.",
      "created_at" : "2023-09-13T15:40:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1717879008",
      "id" : 1717879008,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585mZMDg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717879008/reactions"
      },
      "updated_at" : "2023-09-13T15:40:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717879008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Why would you keep the `0` option? Just drop the concept entirely: [master...ajtowns:bitcoin:202309-debug-no-none](https://github.com/bitcoin/bitcoin/compare/master...ajtowns:bitcoin:202309-debug-no-none) That special case was added well prior to `-debugexclude` (namely #3067 vs #10123)\r\n\r\n> I think that question is addressed in the pull description.\r\n\r\nI would have thought it was obvious that I don't see an answer to that question in the pull description, so that's an impressively unconstructive response. In the PR description, you claim:\r\n \r\n> * leave the functionality out, raise with an error message if the values are passed, and update the RPC help documentation, or\r\n> * fix the behavior by returning early.\r\n>\r\n> Both solutions involve essentially the same code size and complexity.\r\n\r\nBut that's trivially not true: removing the code obviously results in a lower code size, and it also reduces the number of special cases that have to be documented and understood by users.\r\n\r\nNo longer convinced this makes sense.",
      "created_at" : "2023-09-13T22:36:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1718402101",
      "id" : 1718402101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585mbLw1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1718402101/reactions"
      },
      "updated_at" : "2023-09-13T22:36:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1718402101",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I would have thought it was obvious that I don't see an answer to that question in the pull description, so that's an impressively unconstructive response. \r\n\r\nIt's reasonable to think one could gloss over the long-ish discussion in the OP (or what I attempted to communicate with it), as I think it replies to the question (at least, as I understood it).\r\n\r\nHere's the relevant section:\r\n\r\n```\r\nDuring the same time period, passing `1` and `all` has been operational and documented. \r\n\r\nSolution: detect `none`/`0` values and add test coverage in any case, and either:\r\n    \r\n- leave the functionality out, raise with an error message if the values are passed, and update the RPC\r\n  help documentation, or\r\n\r\n- fix the behavior by returning early.\r\n\r\nBoth solutions involve essentially the same code size and complexity.  Given that `all`/`1` has been\r\noperational, and that `none`/`0` has been documented and appears per the code of the original PR\r\nto have been operational, it seems preferable for consistency to support `none`/`0` in symmetry with\r\n`all`/`1` and as ACKed, intended, and documented in #11191.\r\n```\r\n\r\n> But that's trivially not true: removing the code obviously results in a lower code size\r\n\r\nNo, not if we check for the values and raise with an error message if the values are passed, with relevant test coverage. This ought to be done given that the functionality has been documented in the RPC help for around 7 years now, and perhaps also as it's not clear at what point it broke.\r\n\r\nThat is what I meant by `\"Solution: detect none/0 values and add test coverage in any case\"`, for either way requires code, test coverage, and documentation changes.  As I wrote, I prefer the route of fixing what was ACKed, intended, and documented in #11191.\r\n\r\nThis pull improves a lot of things here. It not only fixes broken functionality while using lesser or equal lines of code (apart from test coverage and added docs), it also adds test coverage that has been missing for a long time and improves the documentation. It would be nice to see this finally move forward, and I appreciate your reviews of it!",
      "created_at" : "2023-09-13T23:08:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1718425060",
      "id" : 1718425060,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585mbRXk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1718425060/reactions"
      },
      "updated_at" : "2023-09-13T23:14:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1718425060",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> ```\r\n> Both solutions involve essentially the same code size and complexity.  Given that `all`/`1` has been\r\n> operational, and that `none`/`0` has been documented and appears per the code of the original PR\r\n> to have been operational, it seems preferable for consistency to support `none`/`0` in symmetry with\r\n> `all`/`1` and as ACKed, intended, and documented in #11191.\r\n> ```\r\n> \r\n> > But that's trivially not true: removing the code obviously results in a lower code size\r\n> \r\n> No, not if we check for the values and raise with an error message if the values are passed, with relevant test coverage.\r\n\r\nWe already check for invalid categories and issue an error message for those. Doing the same thing for none/0 doesn't require extra code or extra test coverage.\r\n\r\n>  This ought to be done given that the functionality has been documented in the RPC help for around 7 years now, and perhaps also as it's not clear at what point it broke.\r\n\r\nFWIW, it broke in #12954 (\"This is purely a refactor with no behavior changes.\" :roll_eyes:) -- previously `getCategoryMask` evaluated all the strings, returning null if \"none\" was passed in and erroring out if any were invalid; after that PR `EnableOrDisableLogCategories` dropped the special handling of \"none\" and enabled/disabled each category as it went, which means `logging [\"net\", \"nosuchcategory\"]` changed its behaviour from just giving an error, to first enabling net logging, then giving an error.\r\n\r\n#11191 was merged 2017-11-30 and #12954 was merged 2018-05-01 so this behaviour only worked for five months if you were running master, and only for the 0.16.x release. 0.16.0 was also the first release that considered `logging` a public api (#11626).\r\n \r\n(I have an alias `git-history` which runs `git log --ignore-cr-at-eol -M -C -L${2},${3}:${1}`; so `git blame rpc/node.cpp` to get the line numbers of the function, then `git-history rpc/node.cpp 187 204` makes it easy to trace things through. At least until the refactorings get too intense. AAAA+++ excellent alias, highly recommended)\r\n\r\n> That is what I meant by `\"Solution: detect none/0 values and add test coverage in any case\"`, for either way requires code, test coverage, and documentation changes. As I wrote, I prefer the route of fixing what was ACKed, intended, and documented in #11191.\r\n\r\nWhy? The people who ACKed an old PR aren't gods, and we don't have to take their opinions at the time as gospel. As far as I can see, the other ways we (now) have of getting this behaviour are strictly superior.\r\n\r\nThe reasons to have that behaviour originally was that \"-debug\" was originally a bool flag that got upgraded to support multiple distinct categories, and the arg parser at the time wasn't as clever/complicated as it is today. The reason given in 11191 for doing anything was `\"0\",\"1\" are allowed in both array of <include> and <exclude>. \"0\" is ignored and \"1\" is treated same as \"all\". It is confusing, so forbid them.` so \"forbid them\" for none/0 still seems pretty reasonable.\r\n\r\n> This pull improves a lot of things here. It not only fixes broken functionality while using lesser or equal lines of code (apart from test coverage and added docs), it also adds test coverage that has been missing for a long time and improves the documentation. It would be nice to see this finally move forward, and I appreciate your reviews of it!\r\n\r\nThese commits have a bunch of extra complexity compared to dropping support for this behaviour:\r\n\r\n * Fix RPC logging behaviour -- bunch of extra code, with a requirement to keep it in sync with code in init, vs dropping the documentation\r\n * Update -debug help docs -- bunch of extra text to read documenting a special case that most people won't want\r\n * Functional test coverage for RPC -- the 0/none loop can be omitted entirely (unknown category just means previously listed categories get actioned)\r\n\r\nOther commits seem mostly fine with 0/none special casing dropped:\r\n\r\n * Unit tests for LogPrintfCategory -- fine\r\n * Functional test does not return all/none -- fine\r\n * Improve RPC logging doc and examples -- fine\r\n * Functional test coverage for -debug -- replace `-debug=0` with `-nodebug`, drop `-debugexclude=none` check\r\n * Remove unused NONE enums -- fine-ish",
      "created_at" : "2023-09-14T01:47:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1718621969",
      "id" : 1718621969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585mcBcR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1718621969/reactions"
      },
      "updated_at" : "2023-09-14T01:47:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1718621969",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm going to open an alternate pull that does what you suggest and see what reviewers (if any) prefer.",
      "created_at" : "2024-01-08T19:26:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1881694073",
      "id" : 1881694073,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585wKF95",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1881694073/reactions"
      },
      "updated_at" : "2024-01-08T19:26:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1881694073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-01-10T21:13:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1885741877",
      "id" : 1885741877,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII585wZiM1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1885741877/reactions"
      },
      "updated_at" : "2024-01-10T21:13:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1885741877",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'm going to open an alternate pull that does what you suggest and see what reviewers (if any) prefer.\r\n\r\nDid this end up getting opened? Moving this PR to draft for now in any case.",
      "created_at" : "2024-03-06T13:59:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27231#issuecomment-1980936723",
      "id" : 1980936723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27231",
      "node_id" : "IC_kwDOABII5852ErIT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1980936723/reactions"
      },
      "updated_at" : "2024-03-06T13:59:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1980936723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]

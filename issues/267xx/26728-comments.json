[
   {
      "documentation_url" : "https://docs.github.com/rest/issues/comments#list-issue-comments",
      "message" : "Not Found"
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/26728).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [RandyMcMillan](https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1832101982), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/26728#pullrequestreview-1765995922) |\n| Approach ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/26728#pullrequestreview-1242740987) |\n| Stale ACK | [furszy](https://github.com/bitcoin/bitcoin/pull/26728#pullrequestreview-1713009811), [Sjors](https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1809604000), [S3RK](https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1863995929) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29130](https://github.com/bitcoin/bitcoin/pull/29130) (wallet: Add `createwalletdescriptor` and `gethdkeys` RPCs for adding new automatically generated descriptors by achow101)\n* [#29124](https://github.com/bitcoin/bitcoin/pull/29124) (wallet: Automatically repair corrupted metadata with doubled derivation path by achow101)\n* [#29054](https://github.com/bitcoin/bitcoin/pull/29054) (wallet: reenable sethdseed for descriptor wallets by achow101)\n* [#29016](https://github.com/bitcoin/bitcoin/pull/29016) (RPC: add new `listmempooltransactions` by niftynei)\n* [#28724](https://github.com/bitcoin/bitcoin/pull/28724) (wallet: Cleanup accidental encryption keys in watchonly wallets by achow101)\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n* [#28574](https://github.com/bitcoin/bitcoin/pull/28574) (wallet: optimize migration process, batch db transactions by furszy)\n* [#28333](https://github.com/bitcoin/bitcoin/pull/28333) (wallet: Construct ScriptPubKeyMans with all data rather than loaded progressively by achow101)\n* [#28142](https://github.com/bitcoin/bitcoin/pull/28142) (wallet: Allow users to create a wallet that encrypts all database records by achow101)\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n* [#27286](https://github.com/bitcoin/bitcoin/pull/27286) (wallet: Keep track of the wallet's own transaction outputs in memory by achow101)\n* [#26008](https://github.com/bitcoin/bitcoin/pull/26008) (wallet: cache IsMine scriptPubKeys to improve performance of descriptor wallets by achow101)\n* [#25907](https://github.com/bitcoin/bitcoin/pull/25907) (wallet: rpc to add automatically generated descriptors by achow101)\n* [#24748](https://github.com/bitcoin/bitcoin/pull/24748) (test/BIP324: functional tests for v2 P2P encryption by stratospher)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n* [#22341](https://github.com/bitcoin/bitcoin/pull/22341) (rpc: add path to gethdkey by Sjors)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-12-19T22:31:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1358496197",
      "id" : 1358496197,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585Q-QHF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1358496197/reactions"
      },
      "updated_at" : "2023-12-22T08:33:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1358496197",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053153953"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053153953"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3d4e3b9cf3801a93d1a4af62994900b4f69f2edd\r\nI suggest renaming instances of `Pubkey` to `PubKey` to be consistent with `*PrivKey` functions.\r\n```suggestion\r\n    virtual void GetRootPubKey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;\r\n```",
      "commit_id" : "4b9ac3e12ba834a4d346fce7a2b23ffcbb854183",
      "created_at" : "2022-12-20T10:23:50Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider\n+     * param[out] pubkeys Any public keys\n+     * param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetRootPubkey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053153953",
      "id" : 1053153953,
      "line" : 208,
      "node_id" : "PRRC_kwDOABII584-xdqh",
      "original_commit_id" : "3d4e3b9cf3801a93d1a4af62994900b4f69f2edd",
      "original_line" : 208,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 9,
      "pull_request_review_id" : 1224244919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053153953/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-20T10:46:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053153953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053162065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053162065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "be4f46edd8c7199b72d3646a1d13cb66d092e43e\r\nI suggest using an initialization list.",
      "commit_id" : "4b9ac3e12ba834a4d346fce7a2b23ffcbb854183",
      "created_at" : "2022-12-20T10:32:22Z",
      "diff_hunk" : "@@ -332,6 +332,15 @@ bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const\n     return ret;\n }\n \n+CExtKey::CExtKey(const CExtPubKey& xpub, const CKey& key_in)\n+{\n+    nDepth = xpub.nDepth;\n+    std::copy(xpub.vchFingerprint, xpub.vchFingerprint + sizeof(xpub.vchFingerprint), vchFingerprint);\n+    nChild = xpub.nChild;\n+    chaincode = xpub.chaincode;\n+    key = key_in;\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053162065",
      "id" : 1053162065,
      "line" : 342,
      "node_id" : "PRRC_kwDOABII584-xfpR",
      "original_commit_id" : "be4f46edd8c7199b72d3646a1d13cb66d092e43e",
      "original_line" : 342,
      "original_position" : 11,
      "original_start_line" : 335,
      "path" : "src/key.cpp",
      "position" : 11,
      "pull_request_review_id" : 1224244919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053162065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 335,
      "start_side" : "RIGHT",
      "updated_at" : "2022-12-20T10:46:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053162065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053171243"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053171243"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3e53cc298ca1037ad2f52c65934a5e71b76f82bd\r\nCould be reduced to:\r\n\r\n```suggestion\r\n            bool ok = std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2; });\r\n```",
      "commit_id" : "4b9ac3e12ba834a4d346fce7a2b23ffcbb854183",
      "created_at" : "2022-12-20T10:41:34Z",
      "diff_hunk" : "@@ -971,6 +1087,106 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubkeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            bool ok = true;\n+            for (const auto& [dtype, count] : dtypes) {\n+                if (count != 2) {\n+                    ok = false;\n+                    break;\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053171243",
      "id" : 1053171243,
      "line" : 1151,
      "node_id" : "PRRC_kwDOABII584-xh4r",
      "original_commit_id" : "4b9ac3e12ba834a4d346fce7a2b23ffcbb854183",
      "original_line" : 1151,
      "original_position" : 209,
      "original_start_line" : 1145,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 209,
      "pull_request_review_id" : 1224244919,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053171243/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1145,
      "start_side" : "RIGHT",
      "updated_at" : "2022-12-20T10:46:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053171243",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679048"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679048"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2022-12-20T19:35:23Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider\n+     * param[out] pubkeys Any public keys\n+     * param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetRootPubkey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679048",
      "id" : 1053679048,
      "in_reply_to_id" : 1053153953,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-zd3I",
      "original_commit_id" : "3d4e3b9cf3801a93d1a4af62994900b4f69f2edd",
      "original_line" : 208,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1225032676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679048/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-20T19:35:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679048",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679088"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2022-12-20T19:35:27Z",
      "diff_hunk" : "@@ -332,6 +332,15 @@ bool CKey::Derive(CKey& keyChild, ChainCode &ccChild, unsigned int nChild, const\n     return ret;\n }\n \n+CExtKey::CExtKey(const CExtPubKey& xpub, const CKey& key_in)\n+{\n+    nDepth = xpub.nDepth;\n+    std::copy(xpub.vchFingerprint, xpub.vchFingerprint + sizeof(xpub.vchFingerprint), vchFingerprint);\n+    nChild = xpub.nChild;\n+    chaincode = xpub.chaincode;\n+    key = key_in;\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679088",
      "id" : 1053679088,
      "in_reply_to_id" : 1053162065,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-zd3w",
      "original_commit_id" : "be4f46edd8c7199b72d3646a1d13cb66d092e43e",
      "original_line" : 342,
      "original_position" : 11,
      "original_start_line" : 335,
      "path" : "src/key.cpp",
      "position" : null,
      "pull_request_review_id" : 1225032750,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679088/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-12-20T19:35:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679088",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679126"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2022-12-20T19:35:31Z",
      "diff_hunk" : "@@ -971,6 +1087,106 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubkeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            bool ok = true;\n+            for (const auto& [dtype, count] : dtypes) {\n+                if (count != 2) {\n+                    ok = false;\n+                    break;\n+                }\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1053679126",
      "id" : 1053679126,
      "in_reply_to_id" : 1053171243,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-zd4W",
      "original_commit_id" : "4b9ac3e12ba834a4d346fce7a2b23ffcbb854183",
      "original_line" : 1151,
      "original_position" : 209,
      "original_start_line" : 1145,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1225032805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679126/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2022-12-20T19:35:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1053679126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1073247236"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073247236"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This presupposes that we will and should allow changing active HD key for a given wallet. I'd like to better understand for what use-cases this is needed. ",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-18T08:47:57Z",
      "diff_hunk" : "@@ -250,6 +250,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended public key to be used for new automatically generated descriptors\n+    CExtPubKey m_xpub GUARDED_BY(cs_wallet);\n+    //! The previous and current extended keys that are used for automatically generated descriptors\n+    std::map<CExtPubKey, CKey> m_hd_keys GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1073247236",
      "id" : 1073247236,
      "line" : 256,
      "node_id" : "PRRC_kwDOABII584_-HQE",
      "original_commit_id" : "abac3e3630aa6bdab825ff628fa9389c23eda417",
      "original_line" : 256,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 7,
      "pull_request_review_id" : 1253050078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073247236/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-18T08:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073247236",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1073249883"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073249883"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Probably I don't follow, but it seems we don't need to add all descriptor keys as HD keys to the wallet",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-18T08:50:32Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2; })) {\n+                xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+                if (desc_time > best_time) {\n+                    best_time = desc_time;\n+                    best_xpub = xpub;\n+                }\n+            }\n+        }\n+        if (best_time > 0) {\n+            pwallet->SetActiveHDKey(best_xpub);\n+        }\n+\n+        // Add hd keys\n+        for (const auto& [id_pair, key] : wss.m_descriptor_keys) {\n+            const auto& [desc_id, keyid] = id_pair;\n+\n+            const auto& it = xpubs.find(keyid);\n+            if (it == xpubs.end()) {\n+                continue;\n+            }\n+\n+            CExtKey extkey(it->second, key);\n+            pwallet->AddHDKey(extkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1073249883",
      "id" : 1073249883,
      "line" : 1167,
      "node_id" : "PRRC_kwDOABII584_-H5b",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1167,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 81,
      "pull_request_review_id" : 1253050078,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073249883/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-18T08:57:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1073249883",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081278325"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081278325"
         }
      },
      "author_association" : "MEMBER",
      "body" : "abac3e3630aa6bdab825ff628fa9389c23eda417 There's also the scenario where we generate a new HD key and mark the existing one inactive. We could at that point delete the old `HD(C)KEY` record, in which case `m_hd_key` could just hold one key. Not sure if that's much better. ",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T13:44:44Z",
      "diff_hunk" : "@@ -250,6 +250,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended public key to be used for new automatically generated descriptors\n+    CExtPubKey m_xpub GUARDED_BY(cs_wallet);\n+    //! The previous and current extended keys that are used for automatically generated descriptors\n+    std::map<CExtPubKey, CKey> m_hd_keys GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081278325",
      "id" : 1081278325,
      "in_reply_to_id" : 1073247236,
      "line" : 256,
      "node_id" : "PRRC_kwDOABII585Acv91",
      "original_commit_id" : "abac3e3630aa6bdab825ff628fa9389c23eda417",
      "original_line" : 256,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 7,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081278325/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081278325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081289252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081289252"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9a173470864f44d494e80b1c155d8ebe8c87c406: if the user downgrades the node, rotates the master key and then upgrades the node again, `ACTIVEHDKEY` would be pointing to the wrong place. So that's an argument to disallow opening in older wallets?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T13:52:09Z",
      "diff_hunk" : "@@ -47,6 +47,9 @@ enum WalletFlags : uint64_t {\n     // Indicates that the descriptor cache has been upgraded to cache last hardened xpubs\n     WALLET_FLAG_LAST_HARDENED_XPUB_CACHED = (1ULL << 2),\n \n+    // Indicates that the wallet is capable of having a wallet hd key\n+    WALLET_FLAG_GLOBAL_HD_KEY = (1ULL << 3),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081289252",
      "id" : 1081289252,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585Acyok",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 51,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 5,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081289252/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081289252",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081559201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081559201"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93: this test will no longer work as advertised once this PR is in a release. Maybe drop the loop, define `node_23` and only use that one? (with a note to bump it to `node_24` if that's added).\r\n\r\nIf we drop the ability to downgrade (see my other comment), that reduces the need to test against multiple versions.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T16:59:00Z",
      "diff_hunk" : "@@ -325,5 +326,35 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+            for node in descriptor_nodes:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081559201",
      "id" : 1081559201,
      "line" : 331,
      "node_id" : "PRRC_kwDOABII585Ad0ih",
      "original_commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "original_line" : 331,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : 14,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081559201/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081559201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081564640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081564640"
         }
      },
      "author_association" : "MEMBER",
      "body" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93 can you also test the upgrade of a locked wallet?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:03:54Z",
      "diff_hunk" : "@@ -325,5 +326,35 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+            for node in descriptor_nodes:\n+                # Make the test wallet\n+                node.createwallet(wallet_name=\"hdkeyupgrade\", descriptors=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081564640",
      "id" : 1081564640,
      "line" : 333,
      "node_id" : "PRRC_kwDOABII585Ad13g",
      "original_commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "original_line" : 333,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : 16,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081564640/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081564640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081565832"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081565832"
         }
      },
      "author_association" : "MEMBER",
      "body" : "21166afaa5106ff31aac3914ad117cff21a999d5: maybe move this repetitive stuff into a helper?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:05:00Z",
      "diff_hunk" : "@@ -297,6 +300,46 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    // hash pubkey/privkey to accelerate wallet load",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081565832",
      "id" : 1081565832,
      "line" : 310,
      "node_id" : "PRRC_kwDOABII585Ad2KI",
      "original_commit_id" : "21166afaa5106ff31aac3914ad117cff21a999d5",
      "original_line" : 310,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 28,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081565832/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081565832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081585278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081585278"
         }
      },
      "author_association" : "MEMBER",
      "body" : "561a8043c6fa41c8f3cdfa57272ca512b6d8ebb2: `CKey`'s `Load()` function already checks that the xpriv match the xpub (mostly). I think that makes the above hash check unnecessary. For good measure we could have a `Load()` function that takes a `CExtPubKey` instead of just a `CPubKey` so it can check the other data stored in the `xpub` too. ",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:19:55Z",
      "diff_hunk" : "@@ -782,6 +782,79 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssKey >> hash;\n             ssKey >> n;\n             pwallet->LockCoin(COutPoint(hash, n));\n+        } else if (strType == DBKeys::ACTIVEHDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssValue >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+            // TODO: Load extpub into the wallet\n+        } else if (strType == DBKeys::HDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssKey >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+\n+            CKey key;\n+            CPrivKey pkey;\n+            uint256 hash;\n+\n+            wss.nKeys++;\n+            ssValue >> pkey;\n+            ssValue >> hash;\n+\n+            // hash pubkey/privkey to accelerate wallet load\n+            std::vector<unsigned char> to_hash;\n+            to_hash.reserve(xpub.size() + pkey.size());\n+            to_hash.insert(to_hash.end(), xpub.begin(), xpub.end());\n+            to_hash.insert(to_hash.end(), pkey.begin(), pkey.end());\n+\n+            if (Hash(to_hash) != hash)\n+            {\n+                strErr = \"Error reading wallet database: CPubKey/CPrivKey corrupt\";\n+                return false;\n+            }\n+\n+            if (!key.Load(pkey, extpub.pubkey, true))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081585278",
      "id" : 1081585278,
      "line" : 827,
      "node_id" : "PRRC_kwDOABII585Ad65-",
      "original_commit_id" : "561a8043c6fa41c8f3cdfa57272ca512b6d8ebb2",
      "original_line" : 827,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 46,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081585278/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081585278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081590764"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081590764"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a: a (future) sanity check may want to prevent calling `SetActiveHDKey` and `AddHDKey` in this order, especially since the latter can fail.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:23:06Z",
      "diff_hunk" : "@@ -3573,6 +3573,10 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n         CExtKey master_key;\n         master_key.SetSeed(seed_key);\n \n+        // Store the master key as our active hd key\n+        SetActiveHDKey(master_key.Neuter());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081590764",
      "id" : 1081590764,
      "line" : 3596,
      "node_id" : "PRRC_kwDOABII585Ad8Ps",
      "original_commit_id" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a",
      "original_line" : 3577,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081590764/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081590764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081592726"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081592726"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a: this function can fail, so let's not ignore the return value.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:24:45Z",
      "diff_hunk" : "@@ -3573,6 +3573,10 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n         CExtKey master_key;\n         master_key.SetSeed(seed_key);\n \n+        // Store the master key as our active hd key\n+        SetActiveHDKey(master_key.Neuter());\n+        AddHDKey(master_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081592726",
      "id" : 1081592726,
      "line" : 3597,
      "node_id" : "PRRC_kwDOABII585Ad8uW",
      "original_commit_id" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a",
      "original_line" : 3578,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 6,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081592726/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081592726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081595596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081595596"
         }
      },
      "author_association" : "MEMBER",
      "body" : "95da2e9808c57a519023c017ca47d76ebd2632fd: Maybe log some final words...",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:26:51Z",
      "diff_hunk" : "@@ -809,6 +809,25 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n             }\n         }\n \n+        // Encrypt the HD keys\n+        assert(m_hd_crypted_keys.empty());\n+        for (const auto& [xpub, key] : m_hd_keys) {\n+            std::vector<unsigned char> crypted_secret;\n+            CKeyingMaterial secret(key.begin(), key.end());\n+            if (!EncryptSecret(_vMasterKey, secret, xpub.pubkey.GetHash(), crypted_secret)) {\n+                encrypted_batch->TxnAbort();\n+                delete encrypted_batch;\n+                encrypted_batch = nullptr;\n+                // We now probably have half of our keys encrypted in memory, and half not...\n+                // die and let the user reload the unencrypted wallet.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081595596",
      "id" : 1081595596,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII585Ad9bM",
      "original_commit_id" : "95da2e9808c57a519023c017ca47d76ebd2632fd",
      "original_line" : 822,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081595596/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081595596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081598484"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081598484"
         }
      },
      "author_association" : "MEMBER",
      "body" : "18ac74d29cf3f1a8c4f46c4d030968b5596e9b09: could use documentation, and clarification that this only works for master keys, not any regular xpub, since this function works by looking through `m_hd(_crypted)_keys` rather than perform derivations.\r\n\r\nAlternatively I might \"upgrade\" it in #22341 to perform derivation, since that's useful. But given the convention of \"hd key\" referring to a master key, a function that performs derivation should probably be called `GetExtendedKey()`",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:29:36Z",
      "diff_hunk" : "@@ -953,6 +953,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     bool LoadHDKey(const CExtPubKey& xpub, const CKey& key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool LoadHDCryptedKey(const CExtPubKey& xpub, const std::vector<unsigned char>& crypted_key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool AddHDKey(const CExtKey& extkey) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    std::optional<CExtKey> GetHDKey(const CExtPubKey& xpub) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081598484",
      "id" : 1081598484,
      "line" : 956,
      "node_id" : "PRRC_kwDOABII585Ad-IU",
      "original_commit_id" : "18ac74d29cf3f1a8c4f46c4d030968b5596e9b09",
      "original_line" : 956,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 4,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081598484/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081598484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081603914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081603914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason why you're putting this in `rpc/wallet.cpp` rather than `rpc/addresses.cpp` like in #23417?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:34:58Z",
      "diff_hunk" : "@@ -756,6 +756,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081603914",
      "id" : 1081603914,
      "line" : 759,
      "node_id" : "PRRC_kwDOABII585Ad_dK",
      "original_commit_id" : "436eab602f7d27ad325ebed60e69acbb6dbf2ef5",
      "original_line" : 759,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 4,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081603914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081603914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081605774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081605774"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Duplicates are skipped (see 8b0af8a56ffe31edcd2ed98d795a63fd302ae67a).",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:36:57Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2; })) {\n+                xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+                if (desc_time > best_time) {\n+                    best_time = desc_time;\n+                    best_xpub = xpub;\n+                }\n+            }\n+        }\n+        if (best_time > 0) {\n+            pwallet->SetActiveHDKey(best_xpub);\n+        }\n+\n+        // Add hd keys\n+        for (const auto& [id_pair, key] : wss.m_descriptor_keys) {\n+            const auto& [desc_id, keyid] = id_pair;\n+\n+            const auto& it = xpubs.find(keyid);\n+            if (it == xpubs.end()) {\n+                continue;\n+            }\n+\n+            CExtKey extkey(it->second, key);\n+            pwallet->AddHDKey(extkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081605774",
      "id" : 1081605774,
      "in_reply_to_id" : 1073249883,
      "line" : 1167,
      "node_id" : "PRRC_kwDOABII585Ad_6O",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1167,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 81,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081605774/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081605774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081607073"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081607073"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1877da9fb564fc6fa7b6c6bc3bcf63bdb29ace7b: I'd prefer a new `wallet_getxpub.py` test case that I can expand in #22341.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:38:16Z",
      "diff_hunk" : "@@ -147,7 +147,28 @@ def run_test(self):\n         else:\n             assert_equal(keypath[0:7], \"m/0'/1'\")\n \n-        if not self.options.descriptors:\n+        if self.options.descriptors:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081607073",
      "id" : 1081607073,
      "line" : 150,
      "node_id" : "PRRC_kwDOABII585AeAOh",
      "original_commit_id" : "1877da9fb564fc6fa7b6c6bc3bcf63bdb29ace7b",
      "original_line" : 150,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : 5,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081607073/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081607073",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081608280"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081608280"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6072b3964582e6883220f3af678675531299b444 nit: missing closing bracket",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:39:32Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081608280",
      "id" : 1081608280,
      "line" : 204,
      "node_id" : "PRRC_kwDOABII585AeAhY",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 204,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 5,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081608280/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081608280",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081610989"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081610989"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6072b3964582e6883220f3af678675531299b444 Should this be plural `GetRootPubKeys`? Or maybe keep this function focussed and only return a single `CExtPubKey`?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:42:12Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider\n+     * param[out] pubkeys Any public keys\n+     * param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetRootPubKey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081610989",
      "id" : 1081610989,
      "line" : 208,
      "node_id" : "PRRC_kwDOABII585AeBLt",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 208,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 9,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081610989/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081610989",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081614403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081614403"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6072b3964582e6883220f3af678675531299b444: why do we care about this, vs only getting a root key?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:45:19Z",
      "diff_hunk" : "@@ -146,6 +146,13 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    /** Return all (extended) public keys for this descriptor, including any from subdescriptors.\n+     *\n+     * @param[out] pubkeys Any public keys\n+     * @param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetPubKeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081614403",
      "id" : 1081614403,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585AeCBD",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 155,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 10,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081614403/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081614403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081620227"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081620227"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9a173470864f44d494e80b1c155d8ebe8c87c406: this function can fail, and `SetActiveHDKey` should probably called last.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:50:11Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2; })) {\n+                xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+                if (desc_time > best_time) {\n+                    best_time = desc_time;\n+                    best_xpub = xpub;\n+                }\n+            }\n+        }\n+        if (best_time > 0) {\n+            pwallet->SetActiveHDKey(best_xpub);\n+        }\n+\n+        // Add hd keys\n+        for (const auto& [id_pair, key] : wss.m_descriptor_keys) {\n+            const auto& [desc_id, keyid] = id_pair;\n+\n+            const auto& it = xpubs.find(keyid);\n+            if (it == xpubs.end()) {\n+                continue;\n+            }\n+\n+            CExtKey extkey(it->second, key);\n+            pwallet->AddHDKey(extkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081620227",
      "id" : 1081620227,
      "in_reply_to_id" : 1073249883,
      "line" : 1167,
      "node_id" : "PRRC_kwDOABII585AeDcD",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1167,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 81,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081620227/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081620227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081622126"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081622126"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9a173470864f44d494e80b1c155d8ebe8c87c406: instead of this string parsing stuff, can we add some method to `Descriptor` to directly get what we need? Even an `enum` with descriptor types seems more clean. \r\n\r\nIf all we need is to find the active HD master key, why not limit the search to `pkh(`? That has the nice benefit of there not potentially being manually inserted descriptors that could be ambiguous).",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:51:55Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081622126",
      "id" : 1081622126,
      "line" : 1124,
      "node_id" : "PRRC_kwDOABII585AeD5u",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1124,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 38,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081622126/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081622126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081623995"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081623995"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9a173470864f44d494e80b1c155d8ebe8c87c406: what do we do with `tr()` descriptors that have been generated since #22364?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:53:28Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081623995",
      "id" : 1081623995,
      "line" : 1092,
      "node_id" : "PRRC_kwDOABII585AeEW7",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1092,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 6,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081623995/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081623995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081631043"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081631043"
         }
      },
      "author_association" : "MEMBER",
      "body" : "9a173470864f44d494e80b1c155d8ebe8c87c406: Why not limit ourselves to `GetActiveScriptPubKeyMans`? Not sure how useful it is to store older HD keys, and it does seem to add some complexity.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T17:59:24Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081631043",
      "id" : 1081631043,
      "line" : 1101,
      "node_id" : "PRRC_kwDOABII585AeGFD",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1101,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 15,
      "pull_request_review_id" : 1261822920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081631043/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T18:01:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081631043",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081705702"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081705702"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is exactly what I'm curious about. Should we allow to generate a new HD key for existing wallet? I'm trying to understand why someone would like to generate new HD key for existing wallet instead of just creating a new wallet?\r\n\r\n Or should we make a rule 1 wallet = 1 HD key. Which is much simpler to understand and manage.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T19:10:01Z",
      "diff_hunk" : "@@ -250,6 +250,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended public key to be used for new automatically generated descriptors\n+    CExtPubKey m_xpub GUARDED_BY(cs_wallet);\n+    //! The previous and current extended keys that are used for automatically generated descriptors\n+    std::map<CExtPubKey, CKey> m_hd_keys GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081705702",
      "id" : 1081705702,
      "in_reply_to_id" : 1073247236,
      "line" : 256,
      "node_id" : "PRRC_kwDOABII585AeYTm",
      "original_commit_id" : "abac3e3630aa6bdab825ff628fa9389c23eda417",
      "original_line" : 256,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 7,
      "pull_request_review_id" : 1262443284,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081705702/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T19:10:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081705702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081708489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081708489"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Older node has no concept of master key for descriptors wallets, so it can't rotate the key. Can it?",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-19T19:13:00Z",
      "diff_hunk" : "@@ -47,6 +47,9 @@ enum WalletFlags : uint64_t {\n     // Indicates that the descriptor cache has been upgraded to cache last hardened xpubs\n     WALLET_FLAG_LAST_HARDENED_XPUB_CACHED = (1ULL << 2),\n \n+    // Indicates that the wallet is capable of having a wallet hd key\n+    WALLET_FLAG_GLOBAL_HD_KEY = (1ULL << 3),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081708489",
      "id" : 1081708489,
      "in_reply_to_id" : 1081289252,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585AeY_J",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 51,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 5,
      "pull_request_review_id" : 1262448072,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081708489/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-19T19:13:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1081708489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1082319264"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082319264"
         }
      },
      "author_association" : "MEMBER",
      "body" : "When it encrypts the wallet I think it generates a new set of descriptors based on a new master key.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-20T10:09:48Z",
      "diff_hunk" : "@@ -47,6 +47,9 @@ enum WalletFlags : uint64_t {\n     // Indicates that the descriptor cache has been upgraded to cache last hardened xpubs\n     WALLET_FLAG_LAST_HARDENED_XPUB_CACHED = (1ULL << 2),\n \n+    // Indicates that the wallet is capable of having a wallet hd key\n+    WALLET_FLAG_GLOBAL_HD_KEY = (1ULL << 3),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1082319264",
      "id" : 1082319264,
      "in_reply_to_id" : 1081289252,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585AguGg",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 51,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 5,
      "pull_request_review_id" : 1263267848,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082319264/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-20T10:09:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1082319264",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085882714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085882714"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, encrypting is the only way to rotate a master key currently.\r\n\r\nThe issue with changing this to a required flag is that it can no longer be an automatic upgrade. It will need to be an explicit upgrade.",
      "commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "created_at" : "2023-01-24T20:22:06Z",
      "diff_hunk" : "@@ -47,6 +47,9 @@ enum WalletFlags : uint64_t {\n     // Indicates that the descriptor cache has been upgraded to cache last hardened xpubs\n     WALLET_FLAG_LAST_HARDENED_XPUB_CACHED = (1ULL << 2),\n \n+    // Indicates that the wallet is capable of having a wallet hd key\n+    WALLET_FLAG_GLOBAL_HD_KEY = (1ULL << 3),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085882714",
      "id" : 1085882714,
      "in_reply_to_id" : 1081289252,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585AuUFa",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 51,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 5,
      "pull_request_review_id" : 1268239082,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085882714/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T20:22:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085882714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085927071"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085927071"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The third parameter in this call skips that check. We use the hash check instead because hashing is faster the ec mult.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T21:11:41Z",
      "diff_hunk" : "@@ -782,6 +782,79 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssKey >> hash;\n             ssKey >> n;\n             pwallet->LockCoin(COutPoint(hash, n));\n+        } else if (strType == DBKeys::ACTIVEHDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssValue >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+            // TODO: Load extpub into the wallet\n+        } else if (strType == DBKeys::HDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssKey >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+\n+            CKey key;\n+            CPrivKey pkey;\n+            uint256 hash;\n+\n+            wss.nKeys++;\n+            ssValue >> pkey;\n+            ssValue >> hash;\n+\n+            // hash pubkey/privkey to accelerate wallet load\n+            std::vector<unsigned char> to_hash;\n+            to_hash.reserve(xpub.size() + pkey.size());\n+            to_hash.insert(to_hash.end(), xpub.begin(), xpub.end());\n+            to_hash.insert(to_hash.end(), pkey.begin(), pkey.end());\n+\n+            if (Hash(to_hash) != hash)\n+            {\n+                strErr = \"Error reading wallet database: CPubKey/CPrivKey corrupt\";\n+                return false;\n+            }\n+\n+            if (!key.Load(pkey, extpub.pubkey, true))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085927071",
      "id" : 1085927071,
      "in_reply_to_id" : 1081585278,
      "line" : 802,
      "node_id" : "PRRC_kwDOABII585Aue6f",
      "original_commit_id" : "561a8043c6fa41c8f3cdfa57272ca512b6d8ebb2",
      "original_line" : 802,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 176,
      "pull_request_review_id" : 1268306116,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085927071/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T21:11:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085927071",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085935623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085935623"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nothing in particular, just seems related more to wallet level information rather than addresses.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T21:22:31Z",
      "diff_hunk" : "@@ -756,6 +756,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085935623",
      "id" : 1085935623,
      "in_reply_to_id" : 1081603914,
      "line" : 759,
      "node_id" : "PRRC_kwDOABII585AuhAH",
      "original_commit_id" : "436eab602f7d27ad325ebed60e69acbb6dbf2ef5",
      "original_line" : 759,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 4,
      "pull_request_review_id" : 1268318929,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085935623/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T21:22:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085935623",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085956443"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085956443"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIRC I had a use for this in a different PR and this behavior was imported from there.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T21:32:16Z",
      "diff_hunk" : "@@ -146,6 +146,13 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    /** Return all (extended) public keys for this descriptor, including any from subdescriptors.\n+     *\n+     * @param[out] pubkeys Any public keys\n+     * @param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetPubKeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085956443",
      "id" : 1085956443,
      "in_reply_to_id" : 1081614403,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585AumFb",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 155,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 10,
      "pull_request_review_id" : 1268355604,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085956443/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T21:32:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085956443",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085968765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085968765"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> If all we need is to find the active HD master key, why not limit the search to `pkh(`? That has the nice benefit of there not potentially being manually inserted descriptors that could be ambiguous).\r\n\r\nUsers can still import `pkh(` descriptors. By checking all of the different types, we can be more sure about which key is active.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T21:43:00Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085968765",
      "id" : 1085968765,
      "in_reply_to_id" : 1081622126,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AupF9",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1124,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1268379151,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085968765/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T21:43:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085968765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085979072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085979072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The user may have imported other keys for some active spkms, so we'd be unable to determine the master if we only looked at the active ones.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T21:52:45Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085979072",
      "id" : 1085979072,
      "in_reply_to_id" : 1081631043,
      "line" : 1076,
      "node_id" : "PRRC_kwDOABII585AurnA",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1076,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 225,
      "pull_request_review_id" : 1268389963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085979072/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T21:52:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085979072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987224"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987224"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed to test against node_v23",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:01:35Z",
      "diff_hunk" : "@@ -325,5 +326,35 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+            for node in descriptor_nodes:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987224",
      "id" : 1085987224,
      "in_reply_to_id" : 1081559201,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AutmY",
      "original_commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "original_line" : 331,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 1268399581,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987224/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:01:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987277"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987277"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:01:41Z",
      "diff_hunk" : "@@ -325,5 +326,35 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+            for node in descriptor_nodes:\n+                # Make the test wallet\n+                node.createwallet(wallet_name=\"hdkeyupgrade\", descriptors=True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987277",
      "id" : 1085987277,
      "in_reply_to_id" : 1081564640,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AutnN",
      "original_commit_id" : "b756f221ccf9885ee08e6a7d20ed54364c6dda93",
      "original_line" : 333,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 1268399686,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987277/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:01:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987277",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987392"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in a separate commit.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:01:51Z",
      "diff_hunk" : "@@ -297,6 +300,46 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    // hash pubkey/privkey to accelerate wallet load",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987392",
      "id" : 1085987392,
      "in_reply_to_id" : 1081565832,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AutpA",
      "original_commit_id" : "21166afaa5106ff31aac3914ad117cff21a999d5",
      "original_line" : 310,
      "original_position" : 28,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1268399857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987392/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:01:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987678"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987678"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Reordered and added an `Assume` to `SetActiveHDKey`.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:02:12Z",
      "diff_hunk" : "@@ -3573,6 +3573,10 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n         CExtKey master_key;\n         master_key.SetSeed(seed_key);\n \n+        // Store the master key as our active hd key\n+        SetActiveHDKey(master_key.Neuter());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987678",
      "id" : 1085987678,
      "in_reply_to_id" : 1081590764,
      "line" : 3599,
      "node_id" : "PRRC_kwDOABII585Autte",
      "original_commit_id" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a",
      "original_line" : 3599,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 34,
      "pull_request_review_id" : 1268400240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987678/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:02:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987678",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:02:21Z",
      "diff_hunk" : "@@ -3573,6 +3573,10 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n         CExtKey master_key;\n         master_key.SetSeed(seed_key);\n \n+        // Store the master key as our active hd key\n+        SetActiveHDKey(master_key.Neuter());\n+        AddHDKey(master_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987787",
      "id" : 1085987787,
      "in_reply_to_id" : 1081592726,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AutvL",
      "original_commit_id" : "8b0af8a56ffe31edcd2ed98d795a63fd302ae67a",
      "original_line" : 3578,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1268400409,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987787/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:02:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987983"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987983"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps something to do for a followup for all of the encrypt wallet failures.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:02:40Z",
      "diff_hunk" : "@@ -809,6 +809,25 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n             }\n         }\n \n+        // Encrypt the HD keys\n+        assert(m_hd_crypted_keys.empty());\n+        for (const auto& [xpub, key] : m_hd_keys) {\n+            std::vector<unsigned char> crypted_secret;\n+            CKeyingMaterial secret(key.begin(), key.end());\n+            if (!EncryptSecret(_vMasterKey, secret, xpub.pubkey.GetHash(), crypted_secret)) {\n+                encrypted_batch->TxnAbort();\n+                delete encrypted_batch;\n+                encrypted_batch = nullptr;\n+                // We now probably have half of our keys encrypted in memory, and half not...\n+                // die and let the user reload the unencrypted wallet.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085987983",
      "id" : 1085987983,
      "in_reply_to_id" : 1081595596,
      "line" : 822,
      "node_id" : "PRRC_kwDOABII585AutyP",
      "original_commit_id" : "95da2e9808c57a519023c017ca47d76ebd2632fd",
      "original_line" : 822,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 1268400717,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987983/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:02:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085987983",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988202"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988202"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a bit more to the comment for this group of functions.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:02:57Z",
      "diff_hunk" : "@@ -953,6 +953,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     bool LoadHDKey(const CExtPubKey& xpub, const CKey& key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool LoadHDCryptedKey(const CExtPubKey& xpub, const std::vector<unsigned char>& crypted_key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool AddHDKey(const CExtKey& extkey) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    std::optional<CExtKey> GetHDKey(const CExtPubKey& xpub) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988202",
      "id" : 1085988202,
      "in_reply_to_id" : 1081598484,
      "line" : 956,
      "node_id" : "PRRC_kwDOABII585Aut1q",
      "original_commit_id" : "18ac74d29cf3f1a8c4f46c4d030968b5596e9b09",
      "original_line" : 956,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 25,
      "pull_request_review_id" : 1268401027,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988202/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:02:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988333"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988333"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:03:06Z",
      "diff_hunk" : "@@ -147,7 +147,28 @@ def run_test(self):\n         else:\n             assert_equal(keypath[0:7], \"m/0'/1'\")\n \n-        if not self.options.descriptors:\n+        if self.options.descriptors:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988333",
      "id" : 1085988333,
      "in_reply_to_id" : 1081607073,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Aut3t",
      "original_commit_id" : "1877da9fb564fc6fa7b6c6bc3bcf63bdb29ace7b",
      "original_line" : 150,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/wallet_hd.py",
      "position" : null,
      "pull_request_review_id" : 1268401191,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988333/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:03:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988333",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988403"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:03:11Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988403",
      "id" : 1085988403,
      "in_reply_to_id" : 1081608280,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Aut4z",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 204,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1268401314,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988403/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:03:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed to plural.\r\n\r\nIt should return multiple to handle multisigs.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:03:30Z",
      "diff_hunk" : "@@ -200,6 +200,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended public keys for this PubkeyProvider\n+     * param[out] pubkeys Any public keys\n+     * param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetRootPubKey(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085988707",
      "id" : 1085988707,
      "in_reply_to_id" : 1081610989,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Aut9j",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 208,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1268401995,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988707/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:03:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085988707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085989103"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989103"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> instead of this string parsing stuff, can we add some method to `Descriptor` to directly get what we need? Even an `enum` with descriptor types seems more clean.\r\n\r\nI've changed it to use `OutputType` that apparently descriptors can report.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:04:05Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085989103",
      "id" : 1085989103,
      "in_reply_to_id" : 1081622126,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585AuuDv",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1124,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1268403147,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989103/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:04:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085989259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989259"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added checking for `tr()` descriptors.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:04:18Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085989259",
      "id" : 1085989259,
      "in_reply_to_id" : 1081623995,
      "line" : 1067,
      "node_id" : "PRRC_kwDOABII585AuuGL",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1067,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 216,
      "pull_request_review_id" : 1268403597,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989259/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:04:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085989259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085991531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085991531"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not entirely sure of the reasoning, but it's been requested as required feature.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-24T22:06:43Z",
      "diff_hunk" : "@@ -250,6 +250,12 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended public key to be used for new automatically generated descriptors\n+    CExtPubKey m_xpub GUARDED_BY(cs_wallet);\n+    //! The previous and current extended keys that are used for automatically generated descriptors\n+    std::map<CExtPubKey, CKey> m_hd_keys GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1085991531",
      "id" : 1085991531,
      "in_reply_to_id" : 1073247236,
      "line" : 256,
      "node_id" : "PRRC_kwDOABII585Auupr",
      "original_commit_id" : "abac3e3630aa6bdab825ff628fa9389c23eda417",
      "original_line" : 256,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 7,
      "pull_request_review_id" : 1268406631,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085991531/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-24T22:06:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1085991531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086349157"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086349157"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The speed benefit seems pretty marginal when dealing with at most a dozen extended keys. It made more sense in the legacy wallet where we deal with thousands of keys in a pool.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-25T08:46:00Z",
      "diff_hunk" : "@@ -782,6 +782,79 @@ ReadKeyValue(CWallet* pwallet, CDataStream& ssKey, CDataStream& ssValue,\n             ssKey >> hash;\n             ssKey >> n;\n             pwallet->LockCoin(COutPoint(hash, n));\n+        } else if (strType == DBKeys::ACTIVEHDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssValue >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+            // TODO: Load extpub into the wallet\n+        } else if (strType == DBKeys::HDKEY) {\n+            CExtPubKey extpub;\n+            std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+            ssKey >> xpub;\n+            extpub.Decode(xpub.data());\n+            if (!extpub.pubkey.IsValid())\n+            {\n+                strErr = \"Error reading wallet database: CExtPubKey corrupt\";\n+                return false;\n+            }\n+\n+            CKey key;\n+            CPrivKey pkey;\n+            uint256 hash;\n+\n+            wss.nKeys++;\n+            ssValue >> pkey;\n+            ssValue >> hash;\n+\n+            // hash pubkey/privkey to accelerate wallet load\n+            std::vector<unsigned char> to_hash;\n+            to_hash.reserve(xpub.size() + pkey.size());\n+            to_hash.insert(to_hash.end(), xpub.begin(), xpub.end());\n+            to_hash.insert(to_hash.end(), pkey.begin(), pkey.end());\n+\n+            if (Hash(to_hash) != hash)\n+            {\n+                strErr = \"Error reading wallet database: CPubKey/CPrivKey corrupt\";\n+                return false;\n+            }\n+\n+            if (!key.Load(pkey, extpub.pubkey, true))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086349157",
      "id" : 1086349157,
      "in_reply_to_id" : 1081585278,
      "line" : 802,
      "node_id" : "PRRC_kwDOABII585AwF9l",
      "original_commit_id" : "561a8043c6fa41c8f3cdfa57272ca512b6d8ebb2",
      "original_line" : 802,
      "original_position" : 46,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 176,
      "pull_request_review_id" : 1268914851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086349157/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-25T08:46:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086349157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086351854"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086351854"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If that's no longer the case I would prefer simplifying things. The Descriptor class is already a bit hard to read.",
      "commit_id" : "e1f97a33d746e93a44a101a8283c5df1201f94b6",
      "created_at" : "2023-01-25T08:48:45Z",
      "diff_hunk" : "@@ -146,6 +146,13 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    /** Return all (extended) public keys for this descriptor, including any from subdescriptors.\n+     *\n+     * @param[out] pubkeys Any public keys\n+     * @param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetPubKeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086351854",
      "id" : 1086351854,
      "in_reply_to_id" : 1081614403,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585AwGnu",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 155,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 10,
      "pull_request_review_id" : 1268918654,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086351854/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-25T08:48:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086351854",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086953840"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086953840"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We do actually use it in this PR to check whether a descriptor has any normal pubkeys in it. If it does, it cannot be a candidate for master hd key extraction.",
      "commit_id" : "5cd42d2feed4edc027e3b5eb861bffa0fee22dd2",
      "created_at" : "2023-01-25T17:38:41Z",
      "diff_hunk" : "@@ -146,6 +146,13 @@ struct Descriptor {\n \n     /** @return The OutputType of the scriptPubKey(s) produced by this descriptor. Or nullopt if indeterminate (multiple or none) */\n     virtual std::optional<OutputType> GetOutputType() const = 0;\n+\n+    /** Return all (extended) public keys for this descriptor, including any from subdescriptors.\n+     *\n+     * @param[out] pubkeys Any public keys\n+     * @param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetPubKeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1086953840",
      "id" : 1086953840,
      "in_reply_to_id" : 1081614403,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585AyZlw",
      "original_commit_id" : "6072b3964582e6883220f3af678675531299b444",
      "original_line" : 155,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/script/descriptor.h",
      "position" : 10,
      "pull_request_review_id" : 1269826389,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086953840/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-01-25T17:38:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1086953840",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1089162369"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089162369"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6bb3bee nit: `and tr()`",
      "commit_id" : "3d50555ec6d47f7ebdd1b74739f00a0385be1fab",
      "created_at" : "2023-01-27T16:18:41Z",
      "diff_hunk" : "@@ -1062,6 +1062,100 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+        std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}, {OutputType::BECH32M, 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1089162369",
      "id" : 1089162369,
      "line" : 1072,
      "node_id" : "PRRC_kwDOABII585A60yB",
      "original_commit_id" : "9ec69417b3ac88ebf6dc719b7571ea0cdb327e13",
      "original_line" : 1072,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 224,
      "pull_request_review_id" : 1273008737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089162369/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-01T14:57:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1089162369",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "At the 2023-01-27 IRC meeting, we discussed the key rotation aspect of this PR. The conclusion was that we could not think of a use case for key rotation that is not sufficiently covered by creating a new wallet.\r\n\r\nSince this PR does not introduce the ability for users to explicitly rotate keys, I don't think there's anything to change to meet this conclusion. Those updates will be in #25907.\r\n\r\nIt's currently possible to rotate keys by encrypting the wallet. Since this is a longstanding behavior that has several tests expecting this behavior, I've decided to leave it in. Removing this behavior has more issues than not introducing explicit key rotation in descriptor wallets. So I've decided to leave the PR as is.",
      "created_at" : "2023-02-10T20:57:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1426336389",
      "id" : 1426336389,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585VBCqF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426336389/reactions"
      },
      "updated_at" : "2023-02-10T20:57:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426336389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "We should add a warning in the release notes that, although you can safely downgrade the node, you should _not_ encrypt the wallet while using that older version. And add a test that shows what happens.",
      "created_at" : "2023-02-11T10:29:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1426688833",
      "id" : 1426688833,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585VCYtB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426688833/reactions"
      },
      "updated_at" : "2023-02-11T10:29:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1426688833",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1105010018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1105010018"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "While you're touching, maybe a good idea to change to `std::vector<unsigned char, secure_allocator<unsigned char>>`?",
      "commit_id" : "0c4b2bc6878b0928e545a8f0468818e98e4aae33",
      "created_at" : "2023-02-13T20:59:52Z",
      "diff_hunk" : "@@ -66,6 +69,17 @@ const std::unordered_set<std::string> LEGACY_TYPES{CRYPTED_KEY, CSCRIPT, DEFAULT\n // WalletBatch\n //\n \n+template <typename P>\n+static uint256 PrivKeyChecksum(const CPrivKey& privkey, const P& pubkey)\n+{\n+    // hash pubkey/privkey to accelerate wallet load\n+    std::vector<unsigned char> to_hash;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1105010018",
      "id" : 1105010018,
      "line" : 76,
      "node_id" : "PRRC_kwDOABII585B3R1i",
      "original_commit_id" : "0c4b2bc6878b0928e545a8f0468818e98e4aae33",
      "original_line" : 76,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 25,
      "pull_request_review_id" : 1296430598,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1105010018/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-13T20:59:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1105010018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/116917595?v=4",
         "events_url" : "https://api.github.com/users/john-moffett/events{/privacy}",
         "followers_url" : "https://api.github.com/users/john-moffett/followers",
         "following_url" : "https://api.github.com/users/john-moffett/following{/other_user}",
         "gists_url" : "https://api.github.com/users/john-moffett/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/john-moffett",
         "id" : 116917595,
         "login" : "john-moffett",
         "node_id" : "U_kgDOBvgFWw",
         "organizations_url" : "https://api.github.com/users/john-moffett/orgs",
         "received_events_url" : "https://api.github.com/users/john-moffett/received_events",
         "repos_url" : "https://api.github.com/users/john-moffett/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/john-moffett/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/john-moffett/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/john-moffett"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-02-27T18:32:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1446850239",
      "id" : 1446850239,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585WPS6_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1446850239/reactions"
      },
      "updated_at" : "2023-02-27T18:32:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1446850239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Checked the rebase to 3d50555ec6d47f7ebdd1b74739f00a0385be1fab. I still have to study a14a7554a6 and 6bb3bee37e more.",
      "created_at" : "2023-03-01T14:54:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1450281652",
      "id" : 1450281652,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585WcYq0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450281652/reactions"
      },
      "updated_at" : "2023-03-01T14:54:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450281652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1121931215"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121931215"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Some suggestions after our chat:\r\n\r\n* let's move this into (a) helper function(s), so that `LoadWallet` remains somewhat readable\r\n  * `FindGlobalHDKeyAmongstDescriptors()`\r\n  * `SetGlobalHDKey()`\r\n* document this function, e.g. explain that it's trying to find the pattern of 3 or 4 descriptor pairs that use the same master key. Note how some might no longer be active because the user imported another descriptor and made it active. There might also be more than one set matching this pattern due to toggling encryption, so we pick the most recent one.\r\n* drop the `tr()` bit; it's not necessary, and it could cause a mismatch if a user did something like manually importing only the receive descriptor\r\n* document the meaning of `WALLET_FLAG_GLOBAL_HD_KEY`. It means we support the feature, but does not guarantee presence of an HD key.\r\n* add (a TODO for) method to the wallet tool to re-run the helper functions; this would be for advanced users who somehow ended up with a wallet not matching this pattern, but have repented, added the right descriptors, and now want the global HD key field set",
      "commit_id" : "3d50555ec6d47f7ebdd1b74739f00a0385be1fab",
      "created_at" : "2023-03-01T15:37:05Z",
      "diff_hunk" : "@@ -1059,6 +1059,100 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1121931215",
      "id" : 1121931215,
      "line" : 1068,
      "node_id" : "PRRC_kwDOABII585C30_P",
      "original_commit_id" : "6bb3bee37e90160155bed94d628648134fe40ef9",
      "original_line" : 1068,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 10,
      "pull_request_review_id" : 1320105973,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121931215/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-01T15:37:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1121931215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1126052875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126052875"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> add (a TODO for) method to the wallet tool to re-run the helper functions; this would be for advanced users who somehow ended up with a wallet not matching this pattern, but have repented, added the right descriptors, and now want the global HD key field set\r\n\r\n\r\nIs this really needed if we add support for `sethdseed` later?",
      "commit_id" : "3d50555ec6d47f7ebdd1b74739f00a0385be1fab",
      "created_at" : "2023-03-06T07:58:09Z",
      "diff_hunk" : "@@ -1059,6 +1059,100 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1126052875",
      "id" : 1126052875,
      "in_reply_to_id" : 1121931215,
      "line" : 1068,
      "node_id" : "PRRC_kwDOABII585DHjQL",
      "original_commit_id" : "6bb3bee37e90160155bed94d628648134fe40ef9",
      "original_line" : 1068,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 10,
      "pull_request_review_id" : 1325672583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126052875/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-06T07:58:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1126052875",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1137722557"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137722557"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved it to a separate function, although I did not split it up into multiple as that does not seem to be actually useful. Also added some additional comments.",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-03-15T20:11:29Z",
      "diff_hunk" : "@@ -1059,6 +1059,100 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1137722557",
      "id" : 1137722557,
      "in_reply_to_id" : 1121931215,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585D0ES9",
      "original_commit_id" : "6bb3bee37e90160155bed94d628648134fe40ef9",
      "original_line" : 1068,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1342352984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137722557/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-15T20:11:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1137722557",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1152831466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1152831466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I meant, that we can write only the key for `best_xpub`. Why do we need to write all the candidates as well?",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-03-30T07:17:02Z",
      "diff_hunk" : "@@ -1087,6 +1087,99 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n     }\n \n+    // Upgrade to having a wallet hd key\n+    // Find the keys which are used in single key internal and external descriptors with\n+    // the pre-taproot output types\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) &&\n+        !pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        std::map<CExtPubKey, std::pair<std::map<std::string, int>, uint64_t>> descs_keys;\n+        std::map<std::string, int> tmpl = {{\"pkh(\", 0}, {\"sh(wpkh(\", 0}, {\"wpkh(\", 0}};\n+\n+        // Find root xpubs used in pkh(), sh(wpkh()), and wpkh() descriptors\n+        for (const auto& spkm : pwallet->GetAllScriptPubKeyMans()) {\n+            const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+            assert(desc_spkm);\n+            LOCK(desc_spkm->cs_desc_man);\n+            WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+            if (!w_desc.descriptor->IsRange()) {\n+                continue;\n+            }\n+\n+            std::set<CPubKey> desc_pubkeys;\n+            std::set<CExtPubKey> desc_xpubs;\n+            w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+            if (desc_xpubs.size() != 1) {\n+                continue;\n+            }\n+            const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+            if (descs_keys.count(xpub) == 0) {\n+                descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+            }\n+\n+            const std::string desc = w_desc.descriptor->ToString();\n+            if (desc.find(\"pkh(\") == 0) {\n+                descs_keys[xpub].first[\"pkh(\"]++;\n+            } else if (desc.find(\"sh(wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"sh(wpkh(\"]++;\n+            } else if (desc.find(\"wpkh(\") == 0) {\n+                descs_keys[xpub].first[\"wpkh(\"]++;\n+            } else {\n+                continue;\n+            }\n+            if (w_desc.creation_time > descs_keys[xpub].second) {\n+                descs_keys[xpub].second = w_desc.creation_time;\n+            }\n+        }\n+\n+        // Find candidate active xpubs\n+        // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+        uint64_t best_time = 0;\n+        CExtPubKey best_xpub;\n+        std::map<CKeyID, CExtPubKey> xpubs;\n+        for (const auto& [xpub, info] : descs_keys) {\n+            const auto& [dtypes, desc_time] = info;\n+            if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2; })) {\n+                xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+                if (desc_time > best_time) {\n+                    best_time = desc_time;\n+                    best_xpub = xpub;\n+                }\n+            }\n+        }\n+        if (best_time > 0) {\n+            pwallet->SetActiveHDKey(best_xpub);\n+        }\n+\n+        // Add hd keys\n+        for (const auto& [id_pair, key] : wss.m_descriptor_keys) {\n+            const auto& [desc_id, keyid] = id_pair;\n+\n+            const auto& it = xpubs.find(keyid);\n+            if (it == xpubs.end()) {\n+                continue;\n+            }\n+\n+            CExtKey extkey(it->second, key);\n+            pwallet->AddHDKey(extkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1152831466",
      "id" : 1152831466,
      "in_reply_to_id" : 1073249883,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ets_q",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 1133,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1364471606,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1152831466/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-30T07:17:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1152831466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Approach ACK.\r\n\r\nDoing a proper code review now. Have a question about the upgrade. What do you think we should do in the following situation?\r\n\r\n- Create a blank wallet with master branch\r\n- import 6 descriptors derived from the same key. `WALLET_FLAG_GLOBAL_HD_KEY` is not set and no master key \r\n- `getxpub` reports \"This wallet does not have an active xpub\"\r\n- reload the wallet. Upgrade code is triggered, it sets the flag and the master key\r\n\r\nThis will become even more confusing when/if we later introduce `addedseed` and/or `manual` wallets. I think it's better to reduce the amount of magic and only trigger upgrades for wallets created with older versions. Maybe we can set `WALLET_FLAG_GLOBAL_HD_KEY` for all new wallets even those that are blank?",
      "created_at" : "2023-03-30T07:27:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1489825161",
      "id" : 1489825161,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585YzO2J",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1489825161/reactions"
      },
      "updated_at" : "2023-03-30T07:27:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1489825161",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155586506"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155586506"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "better\r\n```diff\r\n- if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\r\n+ if (tmpl.count(output_type.value()) == 0) {\r\n```\r\nor\r\n```diff\r\n- if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\r\n+ if (descs_keys[xpub].first.count(output_type.value()) == 0) {\r\n```",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T07:37:48Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155586506",
      "id" : 1155586506,
      "line" : 580,
      "node_id" : "PRRC_kwDOABII585E4NnK",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 580,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 59,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155586506/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155586506",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155604123"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155604123"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "naming nit: `desc_keys` and `descs_keys` are very easy to mix",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T07:54:57Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155604123",
      "id" : 1155604123,
      "line" : 548,
      "node_id" : "PRRC_kwDOABII585E4R6b",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 548,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 27,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155604123/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155604123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155609607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155609607"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do we want to check that we have exactly one `internal=true` and one `internal=false` descriptors?",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T07:59:13Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155609607",
      "id" : 1155609607,
      "line" : 528,
      "node_id" : "PRRC_kwDOABII585E4TQH",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 528,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 7,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155609607/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155609607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155610688"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155610688"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: maybe good time to add typedef. I had a very hard time reading the signature of the fuction",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T08:00:18Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155610688",
      "id" : 1155610688,
      "line" : 538,
      "node_id" : "PRRC_kwDOABII585E4ThA",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 538,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 17,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155610688/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155610688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155615459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155615459"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "they don't have to be active\r\n```diff\r\n- // Find candidate active xpubs\r\n+ // Find candidate xpubs\r\n```",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T08:04:33Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155615459",
      "id" : 1155615459,
      "line" : 590,
      "node_id" : "PRRC_kwDOABII585E4Urj",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 590,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 69,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155615459/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155615459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155618170"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155618170"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could clarify comment:\r\nFor all the candidate xpubs add corresponding private key if available",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T08:07:10Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155618170",
      "id" : 1155618170,
      "line" : 606,
      "node_id" : "PRRC_kwDOABII585E4VV6",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 606,
      "original_position" : 85,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 85,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155618170/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155618170",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155623853"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155623853"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "why do we need to erase it?",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T08:12:26Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155623853",
      "id" : 1155623853,
      "line" : 617,
      "node_id" : "PRRC_kwDOABII585E4Wut",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 617,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 96,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155623853/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155623853",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155626611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155626611"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This requires compatibility between `WALLETDESCRIPTORCKEY` and `HDCKEY`. Should we document it somewhere?",
      "commit_id" : "5c14ed0fcebb829d6b232220e78fbf1fcbbd54c1",
      "created_at" : "2023-04-03T08:15:05Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);\n+    }\n+    for (const auto& [id_pair, key_pair] : desc_crypt_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+        const auto& [pubkey, ckey] = key_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        LoadHDCryptedKey(it->second, ckey);\n+        batch.WriteHDCryptedKey(it->second, ckey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1155626611",
      "id" : 1155626611,
      "line" : 629,
      "node_id" : "PRRC_kwDOABII585E4XZz",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 629,
      "original_position" : 108,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 108,
      "pull_request_review_id" : 1368451328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155626611/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T08:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155626611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161800943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161800943"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If they're no longer active, we don't know internalness.",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:05:23Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161800943",
      "id" : 1161800943,
      "in_reply_to_id" : 1155609607,
      "line" : 528,
      "node_id" : "PRRC_kwDOABII585FP6zv",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 528,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 7,
      "pull_request_review_id" : 1377668644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161800943/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:05:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161800943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161805097"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161805097"
         }
      },
      "author_association" : "MEMBER",
      "body" : "So they aren't repeatedly written when the same key shows up in multiple descriptors.",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:10:19Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161805097",
      "id" : 1161805097,
      "in_reply_to_id" : 1155623853,
      "line" : 617,
      "node_id" : "PRRC_kwDOABII585FP70p",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 617,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 96,
      "pull_request_review_id" : 1377675194,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161805097/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:10:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161805097",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161806010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161806010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The encrypted secrets are all in the same format for both legacy wallet keys, descriptor keys, and now hd ckeys. I suppose this could be documented somewhere, although it's not immediately obvious where.",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:11:30Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);\n+    }\n+    for (const auto& [id_pair, key_pair] : desc_crypt_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+        const auto& [pubkey, ckey] = key_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        LoadHDCryptedKey(it->second, ckey);\n+        batch.WriteHDCryptedKey(it->second, ckey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161806010",
      "id" : 1161806010,
      "in_reply_to_id" : 1155626611,
      "line" : 629,
      "node_id" : "PRRC_kwDOABII585FP8C6",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 629,
      "original_position" : 108,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 108,
      "pull_request_review_id" : 1377676657,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161806010/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:11:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161806010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810575"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810575"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:16:58Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810575",
      "id" : 1161810575,
      "in_reply_to_id" : 1155586506,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FP9KP",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 580,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1377683610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810575/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:16:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810575",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810707"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:17:08Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810707",
      "id" : 1161810707,
      "in_reply_to_id" : 1155604123,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FP9MT",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 548,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1377683811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810707/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:17:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810822"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810822"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:17:19Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810822",
      "id" : 1161810822,
      "in_reply_to_id" : 1155610688,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FP9OG",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 538,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1377684010,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810822/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:17:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810914"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:17:26Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161810914",
      "id" : 1161810914,
      "in_reply_to_id" : 1155615459,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FP9Pi",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 590,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1377684161,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:17:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161810914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161811025"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161811025"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "888b19bd91b8f703a0df4649db1bd3dd59ac4986",
      "created_at" : "2023-04-10T15:17:34Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1161811025",
      "id" : 1161811025,
      "in_reply_to_id" : 1155618170,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585FP9RR",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 606,
      "original_position" : 85,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1377684337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161811025/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T15:17:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161811025",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1162375326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162375326"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes this is nice to have. Since the key format could never change due to backward compatibility requirements, this is not an issue. You can resolve this comment.",
      "commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "created_at" : "2023-04-11T06:55:18Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);\n+    }\n+    for (const auto& [id_pair, key_pair] : desc_crypt_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+        const auto& [pubkey, ckey] = key_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        LoadHDCryptedKey(it->second, ckey);\n+        batch.WriteHDCryptedKey(it->second, ckey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1162375326",
      "id" : 1162375326,
      "in_reply_to_id" : 1155626611,
      "line" : 623,
      "node_id" : "PRRC_kwDOABII585FSHCe",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 623,
      "original_position" : 108,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 108,
      "pull_request_review_id" : 1378559287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162375326/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-11T06:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162375326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1162378013"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162378013"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess that's ok, but `AddHDKey` already has an early return for existing keys.",
      "commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "created_at" : "2023-04-11T06:58:28Z",
      "diff_hunk" : "@@ -522,6 +522,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<std::pair<uint256, CKeyID>, CKey>& desc_keys, const std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> descs_keys;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (descs_keys.count(xpub) == 0) {\n+            descs_keys.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (LEGACY_OUTPUT_TYPES.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        descs_keys[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > descs_keys[xpub].second) {\n+            descs_keys[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate active xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : descs_keys) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // Add hd keys\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1162378013",
      "id" : 1162378013,
      "in_reply_to_id" : 1155623853,
      "line" : 611,
      "node_id" : "PRRC_kwDOABII585FSHsd",
      "original_commit_id" : "0571caf6324549e2b840e58d8b11c3d31973a7c4",
      "original_line" : 611,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 96,
      "pull_request_review_id" : 1378563453,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162378013/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-11T06:58:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162378013",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1196058973"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196058973"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: for the next ~~node~~test",
      "commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "created_at" : "2023-05-17T07:25:49Z",
      "diff_hunk" : "@@ -332,5 +333,43 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+\n+            def check_hd_keyupgrade(wallet_name, passphrase=None):\n+                # Copy to master\n+                node_wallet_dir = os.path.join(node_v23.datadir, \"regtest\", \"wallets\", wallet_name)\n+                node_master_wallet_dir = os.path.join(node_master_wallets_dir, wallet_name)\n+                shutil.copytree(node_wallet_dir, node_master_wallet_dir)\n+\n+                # Checks\n+                node_master.loadwallet(wallet_name)\n+                wallet = node_master.get_wallet_rpc(wallet_name)\n+                if passphrase is not None:\n+                    wallet.walletpassphrase(passphrase, 10)\n+                descs = wallet.listdescriptors(True)\n+                xpub_info = wallet.getxpub(True)\n+                for desc in descs[\"descriptors\"]:\n+                    assert xpub_info[\"xprv\"] in desc[\"desc\"]\n+                wallet.unloadwallet()\n+\n+                # Copy back to older node and make sure it can be loaded\n+                shutil.rmtree(node_wallet_dir)\n+                shutil.copytree(node_master_wallet_dir, node_wallet_dir)\n+                node_v23.loadwallet(wallet_name)\n+                node_v23.unloadwallet(wallet_name)\n+\n+                # Remove wallet from master for next node",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1196058973",
      "id" : 1196058973,
      "line" : 362,
      "node_id" : "PRRC_kwDOABII585HSmld",
      "original_commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "original_line" : 362,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : 38,
      "pull_request_review_id" : 1429990749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196058973/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-17T07:25:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1196058973",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK c79539fc20d902b5f9e098cc996c4e27c8e5b8c5\r\n\r\nI plan to test this manually a bit later",
      "created_at" : "2023-05-17T07:26:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1550888614",
      "id" : 1550888614,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585ccK6m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550888614/reactions"
      },
      "updated_at" : "2023-05-17T07:26:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1550888614",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1218151088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218151088"
         }
      },
      "author_association" : "MEMBER",
      "body" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94 `// Automatically`",
      "commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "created_at" : "2023-06-05T14:24:25Z",
      "diff_hunk" : "@@ -516,6 +516,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1218151088",
      "id" : 1218151088,
      "line" : 556,
      "node_id" : "PRRC_kwDOABII585Im4Kw",
      "original_commit_id" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94",
      "original_line" : 556,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 41,
      "pull_request_review_id" : 1462675329,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218151088/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-05T15:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218151088",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1218161082"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218161082"
         }
      },
      "author_association" : "MEMBER",
      "body" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94: why not loop over `xpubs`?",
      "commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "created_at" : "2023-06-05T14:31:40Z",
      "diff_hunk" : "@@ -516,6 +516,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // For all candidate xpubs, add corresponding private keys if available\n+    for (const auto& [id_pair, key] : desc_keys) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1218161082",
      "id" : 1218161082,
      "line" : 601,
      "node_id" : "PRRC_kwDOABII585Im6m6",
      "original_commit_id" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94",
      "original_line" : 601,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 86,
      "pull_request_review_id" : 1462675329,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218161082/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-05T15:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218161082",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1218166104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218166104"
         }
      },
      "author_association" : "MEMBER",
      "body" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94: can we emit a warning the in the `else` case?",
      "commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "created_at" : "2023-06-05T14:35:28Z",
      "diff_hunk" : "@@ -516,6 +516,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // For all candidate xpubs, add corresponding private keys if available\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);\n+    }\n+    for (const auto& [id_pair, key_pair] : desc_crypt_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+        const auto& [pubkey, ckey] = key_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        LoadHDCryptedKey(it->second, ckey);\n+        batch.WriteHDCryptedKey(it->second, ckey);\n+        xpubs.erase(it);\n+    }\n+\n+    if (best_xpub) {\n+        SetActiveHDKey(*best_xpub);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1218166104",
      "id" : 1218166104,
      "line" : 628,
      "node_id" : "PRRC_kwDOABII585Im71Y",
      "original_commit_id" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94",
      "original_line" : 628,
      "original_position" : 113,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 113,
      "pull_request_review_id" : 1462675329,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218166104/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-05T15:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218166104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1218168069"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218168069"
         }
      },
      "author_association" : "MEMBER",
      "body" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94: it's better if the caller checks this flag. It makes it easier to implement a \"try again\" feature later for folks with complicated wallets where somehow the upgrade fails to find a best xpub. Can wait for followup though.",
      "commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "created_at" : "2023-06-05T14:36:43Z",
      "diff_hunk" : "@@ -516,6 +516,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1218168069",
      "id" : 1218168069,
      "line" : 536,
      "node_id" : "PRRC_kwDOABII585Im8UF",
      "original_commit_id" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94",
      "original_line" : 536,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 21,
      "pull_request_review_id" : 1462675329,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218168069/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-05T15:06:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1218168069",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "tACK c79539fc20d902b5f9e098cc996c4e27c8e5b8c5\r\n\r\nI found one odd behaviour mentioned in https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1489825161\r\nEven if you create a wallet with the master branch you still have one opportunity to trigger upgrade procedure\r\n\r\nReproduction steps\r\n* create new blank wallet with master branch\r\n* import 6 descriptors derived from same HD key\r\n* call to `getxpub` says there is no HD key\r\n* reload wallet (this will trigger upgrade procedure)\r\n* call to `getxpub` shows HD key\r\n\r\nNote, if you reload the empty wallet before you imported anything - you lost your chance to upgrade\r\n\r\nMy proposed fix is to disallow upgrade procedure for wallets created with master by setting `WALLET_FLAG_GLOBAL_HD_KEY` for all newborn wallets. Later we want to add a separate method to change HD key anyway to cover that use case.\r\n",
      "created_at" : "2023-06-07T07:16:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1580076237",
      "id" : 1580076237,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585eLgzN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1580076237/reactions"
      },
      "updated_at" : "2023-06-07T07:16:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1580076237",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1222736555"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222736555"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We won't be able to get the private key since we don't know the descriptor id in order to do the lookup.",
      "commit_id" : "bf82f8d96409f7b06b891d2bdee5a7cb5dd7db8e",
      "created_at" : "2023-06-08T09:49:02Z",
      "diff_hunk" : "@@ -516,6 +516,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // For all candidate xpubs, add corresponding private keys if available\n+    for (const auto& [id_pair, key] : desc_keys) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1222736555",
      "id" : 1222736555,
      "in_reply_to_id" : 1218161082,
      "line" : 601,
      "node_id" : "PRRC_kwDOABII585I4Xqr",
      "original_commit_id" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94",
      "original_line" : 601,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 86,
      "pull_request_review_id" : 1469449304,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222736555/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-08T09:49:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222736555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1222737605"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222737605"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think that's necessary as wallet such as ones without private keys or those with only imports won't have a global hd key.",
      "commit_id" : "bf82f8d96409f7b06b891d2bdee5a7cb5dd7db8e",
      "created_at" : "2023-06-08T09:50:01Z",
      "diff_hunk" : "@@ -516,6 +516,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // For all candidate xpubs, add corresponding private keys if available\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);\n+    }\n+    for (const auto& [id_pair, key_pair] : desc_crypt_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+        const auto& [pubkey, ckey] = key_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        LoadHDCryptedKey(it->second, ckey);\n+        batch.WriteHDCryptedKey(it->second, ckey);\n+        xpubs.erase(it);\n+    }\n+\n+    if (best_xpub) {\n+        SetActiveHDKey(*best_xpub);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1222737605",
      "id" : 1222737605,
      "in_reply_to_id" : 1218166104,
      "line" : 628,
      "node_id" : "PRRC_kwDOABII585I4X7F",
      "original_commit_id" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94",
      "original_line" : 628,
      "original_position" : 113,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 113,
      "pull_request_review_id" : 1469450905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222737605/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-08T09:50:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222737605",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1222738220"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222738220"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This follows the same pattern for the other upgrading methods.",
      "commit_id" : "bf82f8d96409f7b06b891d2bdee5a7cb5dd7db8e",
      "created_at" : "2023-06-08T09:50:37Z",
      "diff_hunk" : "@@ -516,6 +516,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1222738220",
      "id" : 1222738220,
      "in_reply_to_id" : 1218168069,
      "line" : 536,
      "node_id" : "PRRC_kwDOABII585I4YEs",
      "original_commit_id" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94",
      "original_line" : 536,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 21,
      "pull_request_review_id" : 1469451850,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222738220/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-08T09:50:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222738220",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1222817343"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222817343"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "bf82f8d96409f7b06b891d2bdee5a7cb5dd7db8e",
      "created_at" : "2023-06-08T10:19:54Z",
      "diff_hunk" : "@@ -332,5 +333,43 @@ def run_test(self):\n             wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n             assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+        if self.options.descriptors:\n+            self.log.info(\"Test background upgrading of descriptor wallets to have hd key\")\n+\n+            def check_hd_keyupgrade(wallet_name, passphrase=None):\n+                # Copy to master\n+                node_wallet_dir = os.path.join(node_v23.datadir, \"regtest\", \"wallets\", wallet_name)\n+                node_master_wallet_dir = os.path.join(node_master_wallets_dir, wallet_name)\n+                shutil.copytree(node_wallet_dir, node_master_wallet_dir)\n+\n+                # Checks\n+                node_master.loadwallet(wallet_name)\n+                wallet = node_master.get_wallet_rpc(wallet_name)\n+                if passphrase is not None:\n+                    wallet.walletpassphrase(passphrase, 10)\n+                descs = wallet.listdescriptors(True)\n+                xpub_info = wallet.getxpub(True)\n+                for desc in descs[\"descriptors\"]:\n+                    assert xpub_info[\"xprv\"] in desc[\"desc\"]\n+                wallet.unloadwallet()\n+\n+                # Copy back to older node and make sure it can be loaded\n+                shutil.rmtree(node_wallet_dir)\n+                shutil.copytree(node_master_wallet_dir, node_wallet_dir)\n+                node_v23.loadwallet(wallet_name)\n+                node_v23.unloadwallet(wallet_name)\n+\n+                # Remove wallet from master for next node",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1222817343",
      "id" : 1222817343,
      "in_reply_to_id" : 1196058973,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585I4rY_",
      "original_commit_id" : "c79539fc20d902b5f9e098cc996c4e27c8e5b8c5",
      "original_line" : 362,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 1469554689,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222817343/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-08T10:19:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222817343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1222817552"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222817552"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "bf82f8d96409f7b06b891d2bdee5a7cb5dd7db8e",
      "created_at" : "2023-06-08T10:20:00Z",
      "diff_hunk" : "@@ -516,6 +516,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Audotmatically generated descriptors have exactly 1 xpub and no other keys",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1222817552",
      "id" : 1222817552,
      "in_reply_to_id" : 1218151088,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585I4rcQ",
      "original_commit_id" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94",
      "original_line" : 556,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1469555000,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222817552/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-08T10:20:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1222817552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> My proposed fix is to disallow upgrade procedure for wallets created with master by setting `WALLET_FLAG_GLOBAL_HD_KEY` for all newborn wallets. Later we want to add a separate method to change HD key anyway to cover that use case.\r\n\r\nI thought this was doing this already, but it turns out that we don't set the descriptor flag until after the upgrade stuff is run for creation, so it wasn't being set. I've added a commit which will set the flag for all new wallets.",
      "created_at" : "2023-06-08T10:24:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1582321920",
      "id" : 1582321920,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585eUFEA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1582321920/reactions"
      },
      "updated_at" : "2023-06-08T10:24:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1582321920",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1226247485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226247485"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This will set `WALLET_FLAG_GLOBAL_HD_KEY` for non-descriptor wallets as well, which is a minor bug in my opinion.\r\n\r\nI think we should set the flag in `CreateWallet` function in the same place we force sqlite for descriptor wallets. This line begs the question why `wallet_creation_flags` doesn't have the `WALLET_FLAG_GLOBAL_HD_KEY` set already.\r\n\r\n",
      "commit_id" : "bf82f8d96409f7b06b891d2bdee5a7cb5dd7db8e",
      "created_at" : "2023-06-12T08:05:29Z",
      "diff_hunk" : "@@ -2951,7 +2951,7 @@ std::shared_ptr<CWallet> CWallet::Create(WalletContext& context, const std::stri\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        walletInstance->InitWalletFlags(wallet_creation_flags);\n+        walletInstance->InitWalletFlags(wallet_creation_flags | WALLET_FLAG_GLOBAL_HD_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1226247485",
      "id" : 1226247485,
      "line" : 3069,
      "node_id" : "PRRC_kwDOABII585JFw09",
      "original_commit_id" : "ad6971fbf83a9ac103eaa6e4b26b00d493087872",
      "original_line" : 2954,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 153,
      "pull_request_review_id" : 1474291052,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226247485/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-12T08:05:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226247485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1226851026"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226851026"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done as suggested",
      "commit_id" : "24b3ee7ee9b4fd1fb6f07bb03676379b5e58d3ad",
      "created_at" : "2023-06-12T15:27:46Z",
      "diff_hunk" : "@@ -2951,7 +2951,7 @@ std::shared_ptr<CWallet> CWallet::Create(WalletContext& context, const std::stri\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        walletInstance->InitWalletFlags(wallet_creation_flags);\n+        walletInstance->InitWalletFlags(wallet_creation_flags | WALLET_FLAG_GLOBAL_HD_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1226851026",
      "id" : 1226851026,
      "in_reply_to_id" : 1226247485,
      "line" : 3072,
      "node_id" : "PRRC_kwDOABII585JIELS",
      "original_commit_id" : "ad6971fbf83a9ac103eaa6e4b26b00d493087872",
      "original_line" : 3072,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 165,
      "pull_request_review_id" : 1475208993,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226851026/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-12T15:27:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226851026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added a commit to make sure that migrated wallets also have the global hd key.",
      "created_at" : "2023-06-12T15:27:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1587570689",
      "id" : 1587570689,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585eoGgB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587570689/reactions"
      },
      "updated_at" : "2023-06-12T15:27:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587570689",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1229134617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229134617"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Great catch! Should we also set if for watch only wallets? On line 4190?",
      "commit_id" : "24b3ee7ee9b4fd1fb6f07bb03676379b5e58d3ad",
      "created_at" : "2023-06-14T07:21:13Z",
      "diff_hunk" : "@@ -4021,11 +4021,17 @@ bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error)\n     m_internal_spk_managers.clear();\n \n     // Setup new descriptors\n-    SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    SetWalletFlag(WALLET_FLAG_DESCRIPTORS | WALLET_FLAG_GLOBAL_HD_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1229134617",
      "id" : 1229134617,
      "line" : 4024,
      "node_id" : "PRRC_kwDOABII585JQxsZ",
      "original_commit_id" : "24b3ee7ee9b4fd1fb6f07bb03676379b5e58d3ad",
      "original_line" : 4024,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 187,
      "pull_request_review_id" : 1478692297,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229134617/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-14T07:21:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229134617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "reACK 24b3ee7ee9b4fd1fb6f07bb03676379b5e58d3ad\r\n\r\nTwo new commits added since last review to ensure `WALLET_FLAG_GLOBAL_HD_KEY` is set for all new and migrated descriptor wallets. ",
      "created_at" : "2023-06-14T07:24:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1590624734",
      "id" : 1590624734,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585ezwHe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1590624734/reactions"
      },
      "updated_at" : "2023-06-14T07:24:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1590624734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1229734423"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229734423"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It doesn't make a difference for watchonly wallets, but since we are setting it for all descriptor wallets regardless of watchonly, I suppose so.\r\n\r\nDone.",
      "commit_id" : "14e2b74332bfdf455ed80ae2487762b24596235d",
      "created_at" : "2023-06-14T14:40:50Z",
      "diff_hunk" : "@@ -4021,11 +4021,17 @@ bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error)\n     m_internal_spk_managers.clear();\n \n     // Setup new descriptors\n-    SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    SetWalletFlag(WALLET_FLAG_DESCRIPTORS | WALLET_FLAG_GLOBAL_HD_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1229734423",
      "id" : 1229734423,
      "in_reply_to_id" : 1229134617,
      "line" : 4024,
      "node_id" : "PRRC_kwDOABII585JTEIX",
      "original_commit_id" : "24b3ee7ee9b4fd1fb6f07bb03676379b5e58d3ad",
      "original_line" : 4024,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 187,
      "pull_request_review_id" : 1479642326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229734423/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-14T14:40:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1229734423",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "reACK 14e2b74332bfdf455ed80ae2487762b24596235d\r\n\r\nNow `WALLET_FLAG_GLOBAL_HD_KEY` is set for all descriptors wallets, including watch only",
      "created_at" : "2023-06-19T07:01:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1596619419",
      "id" : 1596619419,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585fKnqb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1596619419/reactions"
      },
      "updated_at" : "2023-06-19T07:01:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1596619419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I mentioned in #27915 that we could make the flag mandatory, but _if_ we do that, let's keep that to a followup. Will review the last changes asap.",
      "created_at" : "2023-06-22T10:28:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1602399701",
      "id" : 1602399701,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585fgq3V",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1602399701/reactions"
      },
      "updated_at" : "2023-06-22T10:28:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1602399701",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1238422024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238422024"
         }
      },
      "author_association" : "MEMBER",
      "body" : "fcbdc4873588ebab1644ffe59b7ab30fb2ecbed6: This line is still here though.\r\n\r\nCommit description could say \"for new descriptor wallets\"",
      "commit_id" : "14e2b74332bfdf455ed80ae2487762b24596235d",
      "created_at" : "2023-06-22T11:55:29Z",
      "diff_hunk" : "@@ -2951,7 +2951,7 @@ std::shared_ptr<CWallet> CWallet::Create(WalletContext& context, const std::stri\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        walletInstance->InitWalletFlags(wallet_creation_flags);\n+        walletInstance->InitWalletFlags(wallet_creation_flags | WALLET_FLAG_GLOBAL_HD_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1238422024",
      "id" : 1238422024,
      "in_reply_to_id" : 1226247485,
      "line" : 3072,
      "node_id" : "PRRC_kwDOABII585J0NII",
      "original_commit_id" : "ad6971fbf83a9ac103eaa6e4b26b00d493087872",
      "original_line" : 3072,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 165,
      "pull_request_review_id" : 1493021885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238422024/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-22T11:58:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238422024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1238472507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238472507"
         }
      },
      "author_association" : "MEMBER",
      "body" : "But those can't fail. In any case, it can be changed later.",
      "commit_id" : "14e2b74332bfdf455ed80ae2487762b24596235d",
      "created_at" : "2023-06-22T12:41:32Z",
      "diff_hunk" : "@@ -516,6 +516,121 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(WalletBatch& batch, const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1238472507",
      "id" : 1238472507,
      "in_reply_to_id" : 1218168069,
      "line" : 539,
      "node_id" : "PRRC_kwDOABII585J0Zc7",
      "original_commit_id" : "95d11f09c2c0d4ad66ba2e4ce2d15be4c002fb94",
      "original_line" : 539,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 33,
      "pull_request_review_id" : 1493100833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238472507/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-22T12:41:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238472507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1238650445"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238650445"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops, fixed.",
      "commit_id" : "ecb87f090bc53c2d9167d5468c8c9c9129981420",
      "created_at" : "2023-06-22T14:53:00Z",
      "diff_hunk" : "@@ -2951,7 +2951,7 @@ std::shared_ptr<CWallet> CWallet::Create(WalletContext& context, const std::stri\n         // ensure this wallet.dat can only be opened by clients supporting HD with chain split and expects no default key\n         walletInstance->SetMinVersion(FEATURE_LATEST);\n \n-        walletInstance->InitWalletFlags(wallet_creation_flags);\n+        walletInstance->InitWalletFlags(wallet_creation_flags | WALLET_FLAG_GLOBAL_HD_KEY);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1238650445",
      "id" : 1238650445,
      "in_reply_to_id" : 1226247485,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585J1E5N",
      "original_commit_id" : "ad6971fbf83a9ac103eaa6e4b26b00d493087872",
      "original_line" : 3072,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1493393875,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238650445/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-22T14:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1238650445",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK ecb87f090bc53c2d9167d5468c8c9c9129981420",
      "created_at" : "2023-06-22T18:19:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1603119065",
      "id" : 1603119065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585fjafZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1603119065/reactions"
      },
      "updated_at" : "2023-06-22T18:19:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1603119065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-06-28T01:13:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1610436101",
      "id" : 1610436101,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585f_U4F",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1610436101/reactions"
      },
      "updated_at" : "2023-06-28T01:13:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1610436101",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Looks like a slightly non trivial rebase. For context, which PR's triggered it?",
      "created_at" : "2023-07-02T08:20:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1616438227",
      "id" : 1616438227,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585gWOPT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1616438227/reactions"
      },
      "updated_at" : "2023-07-02T08:20:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1616438227",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Building 8587bfbbbc33f2b5e3737c9afe42e6d09464064c on Ubuntu 23.04 with gcc 12.2.0 fails with:\r\n\r\n```\r\nwallet/wallet.cpp: In function âstd::shared_ptr<wallet::CWallet> wallet::CreateWallet(WalletContext&, const std::string&, std::optional<bool>, DatabaseOptions&, DatabaseStatus&, bilingual_str&, std::vector<bilingual_str>&)â:\r\nwallet/wallet.cpp:342:34: error: âWALLET_FLAG_GLOBAL_HD_KEYâ was not declared in this scope\r\n  342 |         wallet_creation_flags |= WALLET_FLAG_GLOBAL_HD_KEY;\r\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~\r\nmake[2]: *** [Makefile:11876: wallet/libbitcoin_wallet_a-wallet.o] Error 1\r\n```\r\n\r\nThat commit didn't change since my last review, so it's a bit odd I didn't catch it then (I often run a script to build all commits in a PR).\r\n",
      "created_at" : "2023-07-04T15:29:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1620448305",
      "id" : 1620448305,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585glhQx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1620448305/reactions"
      },
      "updated_at" : "2023-07-04T15:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1620448305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Looks like a slightly non trivial rebase. For context, which PR's triggered it?\r\n\r\n#24914 I think\r\n\r\n\r\n\r\n> Building [8587bfb](https://github.com/bitcoin/bitcoin/commit/8587bfbbbc33f2b5e3737c9afe42e6d09464064c) on Ubuntu 23.04 with gcc 12.2.0 fails with:\r\n> \r\n> ```\r\n> wallet/wallet.cpp: In function âstd::shared_ptr<wallet::CWallet> wallet::CreateWallet(WalletContext&, const std::string&, std::optional<bool>, DatabaseOptions&, DatabaseStatus&, bilingual_str&, std::vector<bilingual_str>&)â:\r\n> wallet/wallet.cpp:342:34: error: âWALLET_FLAG_GLOBAL_HD_KEYâ was not declared in this scope\r\n>   342 |         wallet_creation_flags |= WALLET_FLAG_GLOBAL_HD_KEY;\r\n>       |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n> make[2]: *** [Makefile:11876: wallet/libbitcoin_wallet_a-wallet.o] Error 1\r\n> ```\r\n> \r\n> That commit didn't change since my last review, so it's a bit odd I didn't catch it then (I often run a script to build all commits in a PR).\r\n\r\nI think I may have changed the order of some commits, should be fixed now.",
      "created_at" : "2023-07-04T15:52:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1620477978",
      "id" : 1620477978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585gloga",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1620477978/reactions"
      },
      "updated_at" : "2023-07-04T15:52:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1620477978",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1279302592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279302592"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 3de9672a:\r\n\r\nThese two variables are being set but not accessed here. Might be good to move them to the commit where they are used.",
      "commit_id" : "481f63e927c27679dbc18f763575c394e12251c7",
      "created_at" : "2023-07-31T13:32:39Z",
      "diff_hunk" : "@@ -811,12 +811,15 @@ static DataStream PrefixStream(const Args&... args)\n static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& batch, int last_client) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     AssertLockHeld(pwallet->cs_wallet);\n+    DBErrors result = DBErrors::LOAD_OK;\n \n     // Load descriptor record\n     int num_keys = 0;\n     int num_ckeys= 0;\n+    std::map<std::pair<uint256, CKeyID>, CKey> desc_keys;\n+    std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>> desc_crypt_keys;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1279302592",
      "id" : 1279302592,
      "line" : 820,
      "node_id" : "PRRC_kwDOABII585MQJvA",
      "original_commit_id" : "3de9672a60a385572c294f796aff60ab38c75861",
      "original_line" : 820,
      "original_position" : 10,
      "original_start_line" : 819,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 131,
      "pull_request_review_id" : 1554781243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279302592/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 819,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-07-31T20:29:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279302592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK 481f63e\r\n\r\n3de9672a60a385572c294f796aff60ab38c75861 became more complicated compared to my last review, because of #24914. But it makes sense. Rest of the rebase is straight-forward.",
      "created_at" : "2023-07-31T13:38:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1658394919",
      "id" : 1658394919,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585i2Rkn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658394919/reactions"
      },
      "updated_at" : "2023-07-31T13:38:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658394919",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1279310998"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279310998"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 3de9672a:\r\n\r\nCould verify here that when `num_ckeys > 0`, `num_keys == 0` and viceversa. Failing early if it is not true.",
      "commit_id" : "481f63e927c27679dbc18f763575c394e12251c7",
      "created_at" : "2023-07-31T13:39:15Z",
      "diff_hunk" : "@@ -948,21 +952,102 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n             value >> privkey;\n \n             spk_man->AddCryptedKey(pubkey.GetID(), pubkey, privkey);\n+            desc_crypt_keys.insert(std::make_pair(std::make_pair(desc_id, pubkey.GetID()), std::make_pair(pubkey, privkey)));\n             return DBErrors::LOAD_OK;\n         });\n         result = std::max(result, ckey_res.m_result);\n         num_ckeys = ckey_res.m_records;\n \n         return result;\n     });\n+    result = std::max(result, desc_res.m_result);\n+\n+    // Get Active HD Key\n+    LoadResult active_hdkey_res = LoadRecords(pwallet, batch, DBKeys::ACTIVEHDKEY,\n+        [] (CWallet* pwallet, DataStream& key, CDataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {\n+        std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+        value >> xpub;\n+        CExtPubKey extpub;\n+        extpub.Decode(xpub.data());\n+        if (!extpub.pubkey.IsValid()) {\n+            err = \"Error reading wallet database: CExtPubKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+        // TODO: Load extpub into the wallet\n+        return DBErrors::LOAD_OK;\n+    });\n+    result = std::max(result, active_hdkey_res.m_result);\n+\n+    // Get HDKeys\n+    LoadResult hdkey_res = LoadRecords(pwallet, batch, DBKeys::HDKEY,\n+        [] (CWallet* pwallet, DataStream& key, CDataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {\n+        CExtPubKey extpub;\n+        std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+        key >> xpub;\n+        extpub.Decode(xpub.data());\n+        if (!extpub.pubkey.IsValid()) {\n+            err = \"Error reading wallet database: CExtPubKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+\n+        CKey pkey;\n+        CPrivKey pkey_data;\n+        uint256 hash;\n+\n+        value >> pkey_data;\n+        value >> hash;\n+\n+        if (PrivKeyChecksum(pkey_data, xpub) != hash) {\n+            err = \"Error reading wallet database: CPubKey/CPrivKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+\n+        if (!pkey.Load(pkey_data, extpub.pubkey, true)) {\n+            err = \"Error reading wallet database: CPrivKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+        // TODO: Load xprv into the wallet\n+        return DBErrors::LOAD_OK;\n+    });\n+    result = std::max(result, hdkey_res.m_result);\n+    num_keys += hdkey_res.m_records;\n+\n+    // Get encrypted HDKeys\n+    LoadResult enc_hdkey_res = LoadRecords(pwallet, batch, DBKeys::HDCKEY,\n+        [] (CWallet* pwallet, DataStream& key, CDataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {\n+        CExtPubKey extpub;\n+        std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+        key >> xpub;\n+        extpub.Decode(xpub.data());\n+        if (!extpub.pubkey.IsValid()) {\n+            err = \"Error reading wallet database: CExtPubKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+\n+        std::vector<unsigned char> privkey;\n+        value >> privkey;\n+\n+        // Get the checksum and check it\n+        uint256 checksum;\n+        value >> checksum;\n+        if (Hash(privkey) != checksum) {\n+            err = \"Error reading wallet database: Encrypted hd key corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+\n+        // TODO: Load crypted xprv into the wallet\n+        return DBErrors::LOAD_OK;\n+    });\n+    result = std::max(result, enc_hdkey_res.m_result);\n+    num_ckeys += enc_hdkey_res.m_records;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1279310998",
      "id" : 1279310998,
      "line" : 1041,
      "node_id" : "PRRC_kwDOABII585MQLyW",
      "original_commit_id" : "3de9672a60a385572c294f796aff60ab38c75861",
      "original_line" : 1042,
      "original_position" : 134,
      "original_start_line" : 1041,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 269,
      "pull_request_review_id" : 1554781243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279310998/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1040,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-07-31T20:29:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279310998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1279450800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279450800"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 97493ab8:\r\n\r\nWhat `best_time` is here?\r\nShouldn't this be looking for the oldest one?, e.g `(best_time == 0 || best_time > desc_time)`.\r\n\r\nOr.. you wrote it in this way because imported descriptors usually have no timestamp, so they are usually 1?.",
      "commit_id" : "481f63e927c27679dbc18f763575c394e12251c7",
      "created_at" : "2023-07-31T15:09:13Z",
      "diff_hunk" : "@@ -520,6 +520,122 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1279450800",
      "id" : 1279450800,
      "line" : 600,
      "node_id" : "PRRC_kwDOABII585MQt6w",
      "original_commit_id" : "97493ab8e6160a8af61f7c3f382e2114ec108588",
      "original_line" : 600,
      "original_position" : 81,
      "original_start_line" : 596,
      "path" : "src/wallet/wallet.cpp",
      "position" : 93,
      "pull_request_review_id" : 1554781243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279450800/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 596,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-08-01T13:04:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279450800",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1279844391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279844391"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Instead of adding all keys, which could be a high number, what about only adding the ones related to xpubs?\r\ne.g. (quick and dirty, should also do the same for the encrypted ones)\r\n```diff\r\ndiff --git a/src/wallet/walletdb.cpp b/src/wallet/walletdb.cpp\r\n--- a/src/wallet/walletdb.cpp\t(revision 7f44e83bb544f1e5c398b87c8eb7870eed3ed1ba)\r\n+++ b/src/wallet/walletdb.cpp\t(date 1690835678842)\r\n@@ -903,10 +903,21 @@\r\n         assert(spk_man);\r\n         spk_man->SetCache(cache);\r\n \r\n+        // For upgrade purposes, obtain root xpub (if exist)\r\n+        std::optional<CPubKey> op_xpub_pubkey;\r\n+        {\r\n+            std::set<CPubKey> desc_pubkeys;\r\n+            std::set<CExtPubKey> desc_xpubs;\r\n+            WITH_LOCK(spk_man->cs_desc_man, spk_man->GetWalletDescriptor().descriptor->GetPubKeys(desc_pubkeys, desc_xpubs));\r\n+            if (desc_xpubs.size() == 1 && desc_pubkeys.size() == 0) {\r\n+                op_xpub_pubkey = desc_xpubs.begin()->pubkey;\r\n+            }\r\n+        }\r\n+\r\n         // Get unencrypted keys\r\n         prefix = PrefixStream(DBKeys::WALLETDESCRIPTORKEY, id);\r\n         LoadResult key_res = LoadRecords(pwallet, batch, DBKeys::WALLETDESCRIPTORKEY, prefix,\r\n-            [&id, &spk_man, &desc_keys] (CWallet* pwallet, DataStream& key, CDataStream& value, std::string& strErr) {\r\n+            [&id, &spk_man, &desc_keys, &op_xpub_pubkey] (CWallet* pwallet, DataStream& key, CDataStream& value, std::string& strErr) {\r\n             uint256 desc_id;\r\n             CPubKey pubkey;\r\n             key >> desc_id;\r\n@@ -936,7 +947,10 @@\r\n                 return DBErrors::CORRUPT;\r\n             }\r\n             spk_man->AddKey(pubkey.GetID(), privkey);\r\n-            desc_keys.insert(std::make_pair(std::make_pair(desc_id, pubkey.GetID()), privkey));\r\n+\r\n+            if (op_xpub_pubkey && op_xpub_pubkey == pubkey) {\r\n+                desc_keys.insert(std::make_pair(std::make_pair(desc_id, pubkey.GetID()), privkey));\r\n+            }\r\n             return DBErrors::LOAD_OK;\r\n         });\r\n         result = std::max(result, key_res.m_result);\r\n```",
      "commit_id" : "481f63e927c27679dbc18f763575c394e12251c7",
      "created_at" : "2023-07-31T20:24:35Z",
      "diff_hunk" : "@@ -925,6 +928,7 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n                 return DBErrors::CORRUPT;\n             }\n             spk_man->AddKey(pubkey.GetID(), privkey);\n+            desc_keys.insert(std::make_pair(std::make_pair(desc_id, pubkey.GetID()), privkey));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1279844391",
      "id" : 1279844391,
      "line" : 931,
      "node_id" : "PRRC_kwDOABII585MSOAn",
      "original_commit_id" : "3de9672a60a385572c294f796aff60ab38c75861",
      "original_line" : 931,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 166,
      "pull_request_review_id" : 1554781243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279844391/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-01T12:20:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1279844391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1280568616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280568616"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Or.. another possible patch to not mix the keys reading code with the upgrade code could be to read the xpub root key alone at the end of the spkm loading process:\r\n\r\n```diff\r\ndiff --git a/src/wallet/walletdb.cpp b/src/wallet/walletdb.cpp\r\n--- a/src/wallet/walletdb.cpp\t(revision 7f44e83bb544f1e5c398b87c8eb7870eed3ed1ba)\r\n+++ b/src/wallet/walletdb.cpp\t(date 1690893250659)\r\n@@ -966,6 +966,31 @@\r\n         result = std::max(result, ckey_res.m_result);\r\n         num_ckeys = ckey_res.m_records;\r\n \r\n+        // For upgrade purposes, obtain root xpub privkey (if exist)\r\n+        CKey root_key;\r\n+        {\r\n+            std::set<CPubKey> desc_pubkeys;\r\n+            std::set<CExtPubKey> desc_xpubs;\r\n+            WITH_LOCK(spk_man->cs_desc_man, spk_man->GetWalletDescriptor().descriptor->GetPubKeys(desc_pubkeys, desc_xpubs));\r\n+            if (desc_xpubs.size() == 1 && desc_pubkeys.size() == 0) {\r\n+                const auto& pubkey = desc_xpubs.begin()->pubkey;\r\n+                std::vector<unsigned char> val;\r\n+                if (!batch.Read(std::make_pair(DBKeys::WALLETDESCRIPTORKEY, std::make_pair(spk_man->GetID(), pubkey)), val)) {\r\n+                    strErr = \"Error reading wallet database: WALLETDESCRIPTORKEY corrupt\";\r\n+                    return DBErrors::CORRUPT;\r\n+                }\r\n+\r\n+                DataStream stream(val);\r\n+                CPrivKey privkey;\r\n+                stream >> privkey;\r\n+                if (!root_key.Load(privkey, pubkey, false)) {\r\n+                    strErr = \"Error reading wallet database: CPrivKey corrupt\";\r\n+                    return DBErrors::CORRUPT;\r\n+                }\r\n+                // todo: do something with the root_key..\r\n+            }\r\n+        }\r\n+\r\n         return result;\r\n     });\r\n     result = std::max(result, desc_res.m_result);\r\n```",
      "commit_id" : "481f63e927c27679dbc18f763575c394e12251c7",
      "created_at" : "2023-08-01T12:36:47Z",
      "diff_hunk" : "@@ -925,6 +928,7 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n                 return DBErrors::CORRUPT;\n             }\n             spk_man->AddKey(pubkey.GetID(), privkey);\n+            desc_keys.insert(std::make_pair(std::make_pair(desc_id, pubkey.GetID()), privkey));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1280568616",
      "id" : 1280568616,
      "in_reply_to_id" : 1279844391,
      "line" : 931,
      "node_id" : "PRRC_kwDOABII585MU-0o",
      "original_commit_id" : "3de9672a60a385572c294f796aff60ab38c75861",
      "original_line" : 931,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 166,
      "pull_request_review_id" : 1556896271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280568616/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-01T12:54:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280568616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1280577467"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280577467"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 87abceea:\r\n\r\nMaybe better `WALLET_FLAG_GLOBAL_HD_KEY`?",
      "commit_id" : "481f63e927c27679dbc18f763575c394e12251c7",
      "created_at" : "2023-08-01T12:43:20Z",
      "diff_hunk" : "@@ -804,6 +804,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()\n+{\n+    return RPCHelpMan{\"getxpub\",\n+                \"Returns the xpub most recently used to generate descriptors for this descriptor wallet. \"\n+                \"Not entirely useful right now as it returns the xpub of the root, and there are \"\n+                \"hardened derivation steps involved in normal key derivation.\\n\",\n+                {\n+                    {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Whether to include the xprv\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {{\n+                        {RPCResult::Type::STR, \"xpub\", \"The xpub\"},\n+                        {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The xprv if private is true\"},\n+                    }},\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getxpub\", \"\")\n+            + HelpExampleRpc(\"getxpub\", \"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<CWallet> pwallet = GetWalletForJSONRPCRequest(request);\n+            if (!pwallet) return NullUniValue;\n+\n+            if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1280577467",
      "id" : 1280577467,
      "line" : 832,
      "node_id" : "PRRC_kwDOABII585MVA-7",
      "original_commit_id" : "87abceeab41a88ffd65a3a8aebea1fccc4e26137",
      "original_line" : 832,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 29,
      "pull_request_review_id" : 1556896271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280577467/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-01T12:54:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1280577467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Light re-utACK 39ba99e7796bec967ce1ec8f5661723bb5d75fe6",
      "created_at" : "2023-09-07T19:18:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1710655463",
      "id" : 1710655463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585l9ofn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1710655463/reactions"
      },
      "updated_at" : "2023-09-07T19:18:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1710655463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321550269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321550269"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I know that this is a limitation of our current db model. But, the amount of db records containing this private key is, at least, unorthodox.\r\n\r\nWe are writing it 9 times under different db keys; one for the HDKey, then one time per descriptor.",
      "commit_id" : "54ff18034cb80f24cf4c9e919b4a1b33c63d8992",
      "created_at" : "2023-09-11T13:26:18Z",
      "diff_hunk" : "@@ -298,6 +301,40 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    return WriteIC(std::make_pair(DBKeys::HDKEY, xpub), std::make_pair(privkey, PrivKeyChecksum(privkey, xpub)), false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321550269",
      "id" : 1321550269,
      "line" : 311,
      "node_id" : "PRRC_kwDOABII585OxUG9",
      "original_commit_id" : "b88337dabae54e3ef6fb8240853fb908eb5da79b",
      "original_line" : 311,
      "original_position" : 28,
      "original_start_line" : 309,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 76,
      "pull_request_review_id" : 1619995366,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321550269/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 309,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-11T13:26:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321550269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321572735"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321572735"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 7bbe3b48:\r\n\r\nMisses to treat the boolean returned from the function (if not needed, the new function shouldn't return anything).",
      "commit_id" : "54ff18034cb80f24cf4c9e919b4a1b33c63d8992",
      "created_at" : "2023-09-11T13:41:22Z",
      "diff_hunk" : "@@ -982,7 +982,7 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n             err = \"Error reading wallet database: CExtPubKey corrupt\";\n             return DBErrors::CORRUPT;\n         }\n-        // TODO: Load extpub into the wallet\n+        pwallet->LoadActiveHDKey(extpub);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321572735",
      "id" : 1321572735,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OxZl_",
      "original_commit_id" : "7bbe3b48c38d306d6ec2372d6d21ac4707041650",
      "original_line" : 985,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1620035328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321572735/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T13:44:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321572735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321577456"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321577456"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 7bbe3b48:\r\n\r\nSame as above; misses to treat the boolean returned from the function (if not needed, the new function shouldn't return anything).\r\n\r\nSame for the `LoadHDCryptedKey` call.",
      "commit_id" : "54ff18034cb80f24cf4c9e919b4a1b33c63d8992",
      "created_at" : "2023-09-11T13:43:59Z",
      "diff_hunk" : "@@ -1015,7 +1015,7 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n             err = \"Error reading wallet database: CPrivKey corrupt\";\n             return DBErrors::CORRUPT;\n         }\n-        // TODO: Load xprv into the wallet\n+        pwallet->LoadHDKey(extpub, pkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321577456",
      "id" : 1321577456,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Oxavw",
      "original_commit_id" : "7bbe3b48c38d306d6ec2372d6d21ac4707041650",
      "original_line" : 1018,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1620035328,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321577456/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T13:44:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321577456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321584520"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321584520"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 079c74ed:\r\n\r\nThis also misses to treat the boolean returned from the function (if not needed, the new function shouldn't return anything).",
      "commit_id" : "54ff18034cb80f24cf4c9e919b4a1b33c63d8992",
      "created_at" : "2023-09-11T13:47:33Z",
      "diff_hunk" : "@@ -3578,6 +3578,12 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n         CExtKey master_key;\n         master_key.SetSeed(seed_key);\n \n+        // Store the master key as our active hd key\n+        if (!AddHDKey(master_key)) {\n+            throw std::runtime_error(std::string(__func__) + \": Unable to add new random HD key\");\n+        }\n+        SetActiveHDKey(master_key.Neuter());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321584520",
      "id" : 1321584520,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OxceI",
      "original_commit_id" : "079c74ed406303f3a34b3b7357aafb7e5fd34124",
      "original_line" : 3585,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1620053894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321584520/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T14:15:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321584520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321587777"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321587777"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 079c74ed:\r\n\r\nShould either treat `LoadActiveHDKey()` bool or remove the return value from the function.",
      "commit_id" : "54ff18034cb80f24cf4c9e919b4a1b33c63d8992",
      "created_at" : "2023-09-11T13:49:10Z",
      "diff_hunk" : "@@ -4265,6 +4271,14 @@ bool CWallet::LoadActiveHDKey(const CExtPubKey& xpub)\n     return true;\n }\n \n+bool CWallet::SetActiveHDKey(const CExtPubKey& xpub)\n+{\n+    AssertLockHeld(cs_wallet);\n+    Assume(m_hd_keys.count(xpub) + m_hd_crypted_keys.count(xpub) == 1);\n+    LoadActiveHDKey(xpub);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321587777",
      "id" : 1321587777,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OxdRB",
      "original_commit_id" : "079c74ed406303f3a34b3b7357aafb7e5fd34124",
      "original_line" : 4278,
      "original_position" : 21,
      "original_start_line" : 4274,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1620053894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321587777/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-11T14:15:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321587777",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321789948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321789948"
         }
      },
      "author_association" : "NONE",
      "body" : "I do wonder why the default wallet stores the master extended private key in the private descriptor even though the key itself such as what you see in listdecriptors (not true) is a private child derivation.  It would be helpful for privacy if it did not do that. Ie: being able to spend one BIP32 account, allows being able to spend them all in the current default descriptors.\r\n\r\nBut if the master extended private key is going to be stored anyways now (does it need to be?) then no gain is possible. Seems like just the public masterkey could be stored or just the child extended public key for multisig.",
      "commit_id" : "54ff18034cb80f24cf4c9e919b4a1b33c63d8992",
      "created_at" : "2023-09-11T16:20:58Z",
      "diff_hunk" : "@@ -298,6 +301,40 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    return WriteIC(std::make_pair(DBKeys::HDKEY, xpub), std::make_pair(privkey, PrivKeyChecksum(privkey, xpub)), false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321789948",
      "id" : 1321789948,
      "in_reply_to_id" : 1321550269,
      "line" : 311,
      "node_id" : "PRRC_kwDOABII585OyOn8",
      "original_commit_id" : "b88337dabae54e3ef6fb8240853fb908eb5da79b",
      "original_line" : 311,
      "original_position" : 28,
      "original_start_line" : 309,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 76,
      "pull_request_review_id" : 1620380551,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321789948/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 309,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-11T16:20:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321789948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73506583?v=4",
         "events_url" : "https://api.github.com/users/BenWestgate/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BenWestgate/followers",
         "following_url" : "https://api.github.com/users/BenWestgate/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BenWestgate/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BenWestgate",
         "id" : 73506583,
         "login" : "BenWestgate",
         "node_id" : "MDQ6VXNlcjczNTA2NTgz",
         "organizations_url" : "https://api.github.com/users/BenWestgate/orgs",
         "received_events_url" : "https://api.github.com/users/BenWestgate/received_events",
         "repos_url" : "https://api.github.com/users/BenWestgate/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BenWestgate/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BenWestgate/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BenWestgate"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321885199"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321885199"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved to \"wallet: Automatically upgrade a wallet to have global hd key\"",
      "commit_id" : "54ff18034cb80f24cf4c9e919b4a1b33c63d8992",
      "created_at" : "2023-09-11T17:54:20Z",
      "diff_hunk" : "@@ -811,12 +811,15 @@ static DataStream PrefixStream(const Args&... args)\n static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& batch, int last_client) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     AssertLockHeld(pwallet->cs_wallet);\n+    DBErrors result = DBErrors::LOAD_OK;\n \n     // Load descriptor record\n     int num_keys = 0;\n     int num_ckeys= 0;\n+    std::map<std::pair<uint256, CKeyID>, CKey> desc_keys;\n+    std::map<std::pair<uint256, CKeyID>, std::pair<CPubKey, std::vector<unsigned char>>> desc_crypt_keys;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321885199",
      "id" : 1321885199,
      "in_reply_to_id" : 1279302592,
      "line" : 821,
      "node_id" : "PRRC_kwDOABII585Oyl4P",
      "original_commit_id" : "3de9672a60a385572c294f796aff60ab38c75861",
      "original_line" : 821,
      "original_position" : 10,
      "original_start_line" : 819,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 131,
      "pull_request_review_id" : 1620530082,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321885199/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 820,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-11T17:54:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321885199",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321885373"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321885373"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "54ff18034cb80f24cf4c9e919b4a1b33c63d8992",
      "created_at" : "2023-09-11T17:54:29Z",
      "diff_hunk" : "@@ -948,21 +952,102 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n             value >> privkey;\n \n             spk_man->AddCryptedKey(pubkey.GetID(), pubkey, privkey);\n+            desc_crypt_keys.insert(std::make_pair(std::make_pair(desc_id, pubkey.GetID()), std::make_pair(pubkey, privkey)));\n             return DBErrors::LOAD_OK;\n         });\n         result = std::max(result, ckey_res.m_result);\n         num_ckeys = ckey_res.m_records;\n \n         return result;\n     });\n+    result = std::max(result, desc_res.m_result);\n+\n+    // Get Active HD Key\n+    LoadResult active_hdkey_res = LoadRecords(pwallet, batch, DBKeys::ACTIVEHDKEY,\n+        [] (CWallet* pwallet, DataStream& key, CDataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {\n+        std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+        value >> xpub;\n+        CExtPubKey extpub;\n+        extpub.Decode(xpub.data());\n+        if (!extpub.pubkey.IsValid()) {\n+            err = \"Error reading wallet database: CExtPubKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+        // TODO: Load extpub into the wallet\n+        return DBErrors::LOAD_OK;\n+    });\n+    result = std::max(result, active_hdkey_res.m_result);\n+\n+    // Get HDKeys\n+    LoadResult hdkey_res = LoadRecords(pwallet, batch, DBKeys::HDKEY,\n+        [] (CWallet* pwallet, DataStream& key, CDataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {\n+        CExtPubKey extpub;\n+        std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+        key >> xpub;\n+        extpub.Decode(xpub.data());\n+        if (!extpub.pubkey.IsValid()) {\n+            err = \"Error reading wallet database: CExtPubKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+\n+        CKey pkey;\n+        CPrivKey pkey_data;\n+        uint256 hash;\n+\n+        value >> pkey_data;\n+        value >> hash;\n+\n+        if (PrivKeyChecksum(pkey_data, xpub) != hash) {\n+            err = \"Error reading wallet database: CPubKey/CPrivKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+\n+        if (!pkey.Load(pkey_data, extpub.pubkey, true)) {\n+            err = \"Error reading wallet database: CPrivKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+        // TODO: Load xprv into the wallet\n+        return DBErrors::LOAD_OK;\n+    });\n+    result = std::max(result, hdkey_res.m_result);\n+    num_keys += hdkey_res.m_records;\n+\n+    // Get encrypted HDKeys\n+    LoadResult enc_hdkey_res = LoadRecords(pwallet, batch, DBKeys::HDCKEY,\n+        [] (CWallet* pwallet, DataStream& key, CDataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {\n+        CExtPubKey extpub;\n+        std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+        key >> xpub;\n+        extpub.Decode(xpub.data());\n+        if (!extpub.pubkey.IsValid()) {\n+            err = \"Error reading wallet database: CExtPubKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+\n+        std::vector<unsigned char> privkey;\n+        value >> privkey;\n+\n+        // Get the checksum and check it\n+        uint256 checksum;\n+        value >> checksum;\n+        if (Hash(privkey) != checksum) {\n+            err = \"Error reading wallet database: Encrypted hd key corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+\n+        // TODO: Load crypted xprv into the wallet\n+        return DBErrors::LOAD_OK;\n+    });\n+    result = std::max(result, enc_hdkey_res.m_result);\n+    num_ckeys += enc_hdkey_res.m_records;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321885373",
      "id" : 1321885373,
      "in_reply_to_id" : 1279310998,
      "line" : 1059,
      "node_id" : "PRRC_kwDOABII585Oyl69",
      "original_commit_id" : "3de9672a60a385572c294f796aff60ab38c75861",
      "original_line" : 1059,
      "original_position" : 134,
      "original_start_line" : 1041,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 279,
      "pull_request_review_id" : 1620530315,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321885373/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1058,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-11T17:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321885373",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321886002"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321886002"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It's to find the latest descriptors as the descriptors in the wallet may have been rotated once already.\r\n\r\nAdded a comment explaining that.",
      "commit_id" : "54ff18034cb80f24cf4c9e919b4a1b33c63d8992",
      "created_at" : "2023-09-11T17:55:08Z",
      "diff_hunk" : "@@ -520,6 +520,122 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321886002",
      "id" : 1321886002,
      "in_reply_to_id" : 1279450800,
      "line" : 639,
      "node_id" : "PRRC_kwDOABII585OymEy",
      "original_commit_id" : "97493ab8e6160a8af61f7c3f382e2114ec108588",
      "original_line" : 639,
      "original_position" : 81,
      "original_start_line" : 596,
      "path" : "src/wallet/wallet.cpp",
      "position" : 95,
      "pull_request_review_id" : 1620531316,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321886002/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 635,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-11T17:55:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321886002",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321888514"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321888514"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added an additional check for that.",
      "commit_id" : "54ff18034cb80f24cf4c9e919b4a1b33c63d8992",
      "created_at" : "2023-09-11T17:57:37Z",
      "diff_hunk" : "@@ -804,6 +804,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()\n+{\n+    return RPCHelpMan{\"getxpub\",\n+                \"Returns the xpub most recently used to generate descriptors for this descriptor wallet. \"\n+                \"Not entirely useful right now as it returns the xpub of the root, and there are \"\n+                \"hardened derivation steps involved in normal key derivation.\\n\",\n+                {\n+                    {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Whether to include the xprv\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {{\n+                        {RPCResult::Type::STR, \"xpub\", \"The xpub\"},\n+                        {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The xprv if private is true\"},\n+                    }},\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getxpub\", \"\")\n+            + HelpExampleRpc(\"getxpub\", \"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<CWallet> pwallet = GetWalletForJSONRPCRequest(request);\n+            if (!pwallet) return NullUniValue;\n+\n+            if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321888514",
      "id" : 1321888514,
      "in_reply_to_id" : 1280577467,
      "line" : 832,
      "node_id" : "PRRC_kwDOABII585OymsC",
      "original_commit_id" : "87abceeab41a88ffd65a3a8aebea1fccc4e26137",
      "original_line" : 832,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 29,
      "pull_request_review_id" : 1620535172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321888514/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T17:57:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321888514",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321891034"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321891034"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b76070b721abf023ae02b45123591e7482d53799",
      "created_at" : "2023-09-11T18:00:09Z",
      "diff_hunk" : "@@ -982,7 +982,7 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n             err = \"Error reading wallet database: CExtPubKey corrupt\";\n             return DBErrors::CORRUPT;\n         }\n-        // TODO: Load extpub into the wallet\n+        pwallet->LoadActiveHDKey(extpub);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321891034",
      "id" : 1321891034,
      "in_reply_to_id" : 1321572735,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OynTa",
      "original_commit_id" : "7bbe3b48c38d306d6ec2372d6d21ac4707041650",
      "original_line" : 985,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1620539185,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321891034/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-11T18:00:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321891034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321891217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321891217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "b76070b721abf023ae02b45123591e7482d53799",
      "created_at" : "2023-09-11T18:00:20Z",
      "diff_hunk" : "@@ -4265,6 +4271,14 @@ bool CWallet::LoadActiveHDKey(const CExtPubKey& xpub)\n     return true;\n }\n \n+bool CWallet::SetActiveHDKey(const CExtPubKey& xpub)\n+{\n+    AssertLockHeld(cs_wallet);\n+    Assume(m_hd_keys.count(xpub) + m_hd_crypted_keys.count(xpub) == 1);\n+    LoadActiveHDKey(xpub);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1321891217",
      "id" : 1321891217,
      "in_reply_to_id" : 1321587777,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585OynWR",
      "original_commit_id" : "079c74ed406303f3a34b3b7357aafb7e5fd34124",
      "original_line" : 4278,
      "original_position" : 21,
      "original_start_line" : 4274,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1620539485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321891217/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-09-11T18:00:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1321891217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I'm not seeing any reason for keeping the HD keys in memory. Their only use case is the RPC `getxpub` command. Which shouldn't be frequent at all, and could easily look them up in db on-demand.\r\n\r\nDo you mean to only keep in memory and not store them in DB? \r\n\r\nThis approach won't allow to create a wallet with just HD key and then generate descriptors from it.\r\n\r\n",
      "created_at" : "2023-09-12T07:33:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1715159531",
      "id" : 1715159531,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585mO0Hr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715159531/reactions"
      },
      "updated_at" : "2023-09-12T07:33:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715159531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-10-03T10:33:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1744690391",
      "id" : 1744690391,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585n_dzX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1744690391/reactions"
      },
      "updated_at" : "2023-10-03T10:33:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1744690391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1346981186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346981186"
         }
      },
      "author_association" : "MEMBER",
      "body" : "37527c9c6930dd86d5d012e94d2e08d6a207d240 could add a comment here that we're deleting the unencrypted key. Or make the intention more readable:\r\n\r\n```cpp\r\nconst auto db_key_plain_text = std::make_pair(DBKeys::HDKEY, xpub);\r\nconst auto db_key_encrypted = std::make_pair(DBKeys::HDCKEY, xpub);\r\nif (!WriteIC(db_key_plain_text, std::make_pair(crypted_key, checksum), false)) {\r\n    return false;\r\n}\r\nEraseIC(db_key_unencrypted);\r\n\r\n```\r\n\r\nI find it a worrying that no test caught the fact that we weren't deleting this in an earlier version of the PR (b88337daba). Can we introduce a test that looks for unencrypted key material e.g. by just checking _every_ record?",
      "commit_id" : "d9ad6dd782f1b135d53b5b22f4745d00a25eaea6",
      "created_at" : "2023-10-05T08:06:17Z",
      "diff_hunk" : "@@ -298,6 +301,40 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    return WriteIC(std::make_pair(DBKeys::HDKEY, xpub), std::make_pair(privkey, PrivKeyChecksum(privkey, xpub)), false);\n+}\n+\n+bool WalletBatch::WriteHDCryptedKey(const CExtPubKey& extpub, const std::vector<unsigned char>& crypted_key)\n+{\n+    // Compute a checksum of the encrypted key\n+    uint256 checksum = Hash(crypted_key);\n+\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extpub.Encode(xpub.data());\n+\n+    const auto key = std::make_pair(DBKeys::HDCKEY, xpub);\n+    if (!WriteIC(key, std::make_pair(crypted_key, checksum), false)) {\n+        return false;\n+    }\n+    EraseIC(std::make_pair(DBKeys::HDKEY, xpub));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1346981186",
      "id" : 1346981186,
      "line" : 326,
      "node_id" : "PRRC_kwDOABII585QSU1C",
      "original_commit_id" : "37527c9c6930dd86d5d012e94d2e08d6a207d240",
      "original_line" : 326,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 91,
      "pull_request_review_id" : 1659161387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346981186/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-05T08:27:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346981186",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1346993482"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346993482"
         }
      },
      "author_association" : "MEMBER",
      "body" : "@furszy it would be better to address that now than to introduce yet another migration later.\r\n\r\n@BenWestgate since unlocking a wallet decrypts everything, I don't think that matters. We could however make export safer by not including the root in the RPC output (and have some other way to obtain the seed), but that's unrelated to this PR.",
      "commit_id" : "d9ad6dd782f1b135d53b5b22f4745d00a25eaea6",
      "created_at" : "2023-10-05T08:14:46Z",
      "diff_hunk" : "@@ -298,6 +301,40 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    return WriteIC(std::make_pair(DBKeys::HDKEY, xpub), std::make_pair(privkey, PrivKeyChecksum(privkey, xpub)), false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1346993482",
      "id" : 1346993482,
      "in_reply_to_id" : 1321550269,
      "line" : 311,
      "node_id" : "PRRC_kwDOABII585QSX1K",
      "original_commit_id" : "b88337dabae54e3ef6fb8240853fb908eb5da79b",
      "original_line" : 311,
      "original_position" : 28,
      "original_start_line" : 309,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 76,
      "pull_request_review_id" : 1659161387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346993482/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 309,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-05T08:27:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346993482",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-10-05T16:54:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1749308093",
      "id" : 1749308093,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585oRFK9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1749308093/reactions"
      },
      "updated_at" : "2023-10-05T16:54:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1749308093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1347959949"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347959949"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a test that should catch that in the future.",
      "commit_id" : "474eceb8a5396596cf283832b6f742dada1a5f8e",
      "created_at" : "2023-10-05T20:54:14Z",
      "diff_hunk" : "@@ -298,6 +301,40 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    return WriteIC(std::make_pair(DBKeys::HDKEY, xpub), std::make_pair(privkey, PrivKeyChecksum(privkey, xpub)), false);\n+}\n+\n+bool WalletBatch::WriteHDCryptedKey(const CExtPubKey& extpub, const std::vector<unsigned char>& crypted_key)\n+{\n+    // Compute a checksum of the encrypted key\n+    uint256 checksum = Hash(crypted_key);\n+\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extpub.Encode(xpub.data());\n+\n+    const auto key = std::make_pair(DBKeys::HDCKEY, xpub);\n+    if (!WriteIC(key, std::make_pair(crypted_key, checksum), false)) {\n+        return false;\n+    }\n+    EraseIC(std::make_pair(DBKeys::HDKEY, xpub));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1347959949",
      "id" : 1347959949,
      "in_reply_to_id" : 1346981186,
      "line" : 326,
      "node_id" : "PRRC_kwDOABII585QWDyN",
      "original_commit_id" : "37527c9c6930dd86d5d012e94d2e08d6a207d240",
      "original_line" : 326,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 91,
      "pull_request_review_id" : 1660697030,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347959949/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-05T20:54:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347959949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > I'm not seeing any reason for keeping the HD keys in memory.\r\n> \r\n> What do you think of this?\r\n\r\nIt follows the existing pattern already in use for all other wallet data structures. Loading things on demand from the database is orthogonal to this PR, and when implementing that, it should be done almost all at once, not piecemeal. I'm concerned that a piecemeal approach would result in developers missing that some data is in fact stored on disk and could be read, which could lead to further duplication and confusion when working on the wallet.\r\n\r\n> And the second is whether we really want to store these private keys 9 times, see inline comment.\r\n\r\nIt's done for backwards compatibility reasons. Without storing the master key for each descriptor, a wallet would not be able to be opened in an older version of the software.",
      "created_at" : "2023-10-05T20:58:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1749632927",
      "id" : 1749632927,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585oSUef",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1749632927/reactions"
      },
      "updated_at" : "2023-10-05T20:58:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1749632927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1348340546"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348340546"
         }
      },
      "author_association" : "MEMBER",
      "body" : "474eceb8a5396596cf283832b6f742dada1a5f8e: lint seems upset out this line\r\n\r\nOn my Ubuntu machine I get this from the linter (Python 3.8.17):\r\n```\r\nPython's open(...) seems to be used to open text files without explicitly specifying encoding='utf8':\r\n\r\ntest/functional/wallet_encryption.py:        with open(dump_file, \"r\") as f:\r\n```",
      "commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-06T07:22:02Z",
      "diff_hunk" : "@@ -46,6 +48,27 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\n+        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)\n+        self.nodes[0].loadwallet(self.default_wallet_name)\n+        # Look for records that contain the hex for 'key' but not 'ckey'\n+        key_hex = b\"key\".hex()\n+        ckey_hex = b\"ckey\".hex()\n+        # Hex for records to skip\n+        skip_records = [b\"mkey\".hex(), b\"activehdkey\".hex(), b\"defaultkey\".hex(), b\"keymeta\".hex()]\n+        print(f\"key_hex {key_hex}\")\n+        print(f\"ckey_hex {ckey_hex}\")\n+        with open(dump_file, \"r\") as f:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1348340546",
      "id" : 1348340546,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QXgtC",
      "original_commit_id" : "474eceb8a5396596cf283832b6f742dada1a5f8e",
      "original_line" : 64,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : null,
      "pull_request_review_id" : 1661263860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348340546/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-06T09:06:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348340546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1348343027"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348343027"
         }
      },
      "author_association" : "MEMBER",
      "body" : "474eceb8a5396596cf283832b6f742dada1a5f8e: these print statements are a leftover?",
      "commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-06T07:24:37Z",
      "diff_hunk" : "@@ -46,6 +48,27 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\n+        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)\n+        self.nodes[0].loadwallet(self.default_wallet_name)\n+        # Look for records that contain the hex for 'key' but not 'ckey'\n+        key_hex = b\"key\".hex()\n+        ckey_hex = b\"ckey\".hex()\n+        # Hex for records to skip\n+        skip_records = [b\"mkey\".hex(), b\"activehdkey\".hex(), b\"defaultkey\".hex(), b\"keymeta\".hex()]\n+        print(f\"key_hex {key_hex}\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1348343027",
      "id" : 1348343027,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QXhTz",
      "original_commit_id" : "474eceb8a5396596cf283832b6f742dada1a5f8e",
      "original_line" : 62,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : null,
      "pull_request_review_id" : 1661267610,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348343027/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-06T09:05:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348343027",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1348868139"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348868139"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-06T15:21:34Z",
      "diff_hunk" : "@@ -46,6 +48,27 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\n+        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)\n+        self.nodes[0].loadwallet(self.default_wallet_name)\n+        # Look for records that contain the hex for 'key' but not 'ckey'\n+        key_hex = b\"key\".hex()\n+        ckey_hex = b\"ckey\".hex()\n+        # Hex for records to skip\n+        skip_records = [b\"mkey\".hex(), b\"activehdkey\".hex(), b\"defaultkey\".hex(), b\"keymeta\".hex()]\n+        print(f\"key_hex {key_hex}\")\n+        print(f\"ckey_hex {ckey_hex}\")\n+        with open(dump_file, \"r\") as f:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1348868139",
      "id" : 1348868139,
      "in_reply_to_id" : 1348340546,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QZhgr",
      "original_commit_id" : "474eceb8a5396596cf283832b6f742dada1a5f8e",
      "original_line" : 64,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : null,
      "pull_request_review_id" : 1662120531,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348868139/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-06T15:21:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348868139",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1348868247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348868247"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed",
      "commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-06T15:21:40Z",
      "diff_hunk" : "@@ -46,6 +48,27 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\n+        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)\n+        self.nodes[0].loadwallet(self.default_wallet_name)\n+        # Look for records that contain the hex for 'key' but not 'ckey'\n+        key_hex = b\"key\".hex()\n+        ckey_hex = b\"ckey\".hex()\n+        # Hex for records to skip\n+        skip_records = [b\"mkey\".hex(), b\"activehdkey\".hex(), b\"defaultkey\".hex(), b\"keymeta\".hex()]\n+        print(f\"key_hex {key_hex}\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1348868247",
      "id" : 1348868247,
      "in_reply_to_id" : 1348343027,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QZhiX",
      "original_commit_id" : "474eceb8a5396596cf283832b6f742dada1a5f8e",
      "original_line" : 62,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : null,
      "pull_request_review_id" : 1662120723,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348868247/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-06T15:21:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1348868247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> [d4c96c9](https://github.com/bitcoin/bitcoin/commit/d4c96c9fa4e7efa181e50d46a1a962c6e2095279) is still causing the tests to fail as I mentioned above. The next commit passes again. If it's hard to avoid that some intermediate commits cause the tests to break, just mention it in the commit message.\r\n\r\nSwapped the two commits so everything works now.",
      "created_at" : "2023-10-06T15:21:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1750886945",
      "id" : 1750886945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585oXGoh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1750886945/reactions"
      },
      "updated_at" : "2023-10-06T15:22:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1750886945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-06T17:33:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1751164680",
      "id" : 1751164680,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585oYKcI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1751164680/reactions"
      },
      "updated_at" : "2023-10-06T17:33:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1751164680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Just FYI. I'm still very much interested in this PR as I believe it unblocks many improvements for the wallet. We likely need more reviews anyway, so I'll wait for @furszy to do a closer review, before re-reviewing again.",
      "created_at" : "2023-10-10T14:29:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1755543990",
      "id" : 1755543990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585oo3m2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1755543990/reactions"
      },
      "updated_at" : "2023-10-12T07:43:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1755543990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@josibake may also like this PR since it's a prerequisite for adding silent payment spend/watch keys to an existing wallet.",
      "created_at" : "2023-10-11T07:37:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1757027765",
      "id" : 1757027765,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585ouh21",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1757027765/reactions"
      },
      "updated_at" : "2023-10-11T07:37:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1757027765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1364553908"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364553908"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 75ded425ea:\r\n\r\nnit: `AddHDKey()` uses `HasEncryptionKeys()`, and  `GetHDKey()` uses `IsCrypted()`. Let's pick one of them and stick to it.",
      "commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-18T21:20:37Z",
      "diff_hunk" : "@@ -4373,4 +4373,32 @@ bool CWallet::AddHDKey(const CExtKey& extkey)\n         return WalletBatch(GetDatabase()).WriteHDKey(extkey);\n     }\n }\n+\n+std::optional<CExtKey> CWallet::GetHDKey(const CExtPubKey& xpub)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    CKey key;\n+    if (IsCrypted()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1364553908",
      "id" : 1364553908,
      "line" : 4512,
      "node_id" : "PRRC_kwDOABII585RVXC0",
      "original_commit_id" : "75ded425eaf473d840fb56a5382508102c1f75ca",
      "original_line" : 4382,
      "original_position" : 10,
      "original_start_line" : 4381,
      "path" : "src/wallet/wallet.cpp",
      "position" : 289,
      "pull_request_review_id" : 1685945721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364553908/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 4511,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-19T13:47:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1364553908",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1365490080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365490080"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 283fe566d:\r\n\r\nAs this is part of the migration process, better to error out instead of throwing an exception.\r\nThe difference is: (1) exception means crashing, (2) error means the migration process will automatically recover from the inconsistent state. Cleaning up the created wallets and restoring the pre-migration legacy wallet.\r\n\r\n```c++\r\n// Store the master key as our active hd key\r\nif (!AddHDKey(data.master_key)) {\r\n    error += _(\"Error: Unable to add seed's HD key\");\r\n    return false;\r\n}\r\n```",
      "commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-19T12:59:47Z",
      "diff_hunk" : "@@ -4042,11 +4042,17 @@ bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error)\n     m_internal_spk_managers.clear();\n \n     // Setup new descriptors\n-    SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    SetWalletFlag(WALLET_FLAG_DESCRIPTORS | WALLET_FLAG_GLOBAL_HD_KEY);\n     if (!IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         // Use the existing master key if we have it\n         if (data.master_key.key.IsValid()) {\n             SetupDescriptorScriptPubKeyMans(data.master_key);\n+\n+            // Store the master key as our active hd key\n+            if (!AddHDKey(data.master_key)) {\n+                throw std::runtime_error(std::string(__func__) + \": Unable to add original seed's HD key\");\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1365490080",
      "id" : 1365490080,
      "line" : 4054,
      "node_id" : "PRRC_kwDOABII585RY7mg",
      "original_commit_id" : "283fe566d629800113df5f90554352c536c326dd",
      "original_line" : 4054,
      "original_position" : 14,
      "original_start_line" : 4051,
      "path" : "src/wallet/wallet.cpp",
      "position" : 192,
      "pull_request_review_id" : 1685945721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365490080/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 4051,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-19T13:47:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365490080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1365491216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365491216"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 283fe566d:\r\n\r\nShould check the error here.\r\n```c++\r\nif (!SetActiveHDKey(data.master_key.Neuter())) {\r\n    error += _(\"Error: Unable to set active HD key\");\r\n    return false;\r\n}\r\n```",
      "commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-19T13:00:38Z",
      "diff_hunk" : "@@ -4042,11 +4042,17 @@ bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error)\n     m_internal_spk_managers.clear();\n \n     // Setup new descriptors\n-    SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    SetWalletFlag(WALLET_FLAG_DESCRIPTORS | WALLET_FLAG_GLOBAL_HD_KEY);\n     if (!IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         // Use the existing master key if we have it\n         if (data.master_key.key.IsValid()) {\n             SetupDescriptorScriptPubKeyMans(data.master_key);\n+\n+            // Store the master key as our active hd key\n+            if (!AddHDKey(data.master_key)) {\n+                throw std::runtime_error(std::string(__func__) + \": Unable to add original seed's HD key\");\n+            }\n+            SetActiveHDKey(data.master_key.Neuter());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1365491216",
      "id" : 1365491216,
      "line" : 4055,
      "node_id" : "PRRC_kwDOABII585RY74Q",
      "original_commit_id" : "283fe566d629800113df5f90554352c536c326dd",
      "original_line" : 4055,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 193,
      "pull_request_review_id" : 1685945721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365491216/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-19T13:47:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365491216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1365532672"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365532672"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm unable to run this locally. Python 3.11.\r\nAnd seems that the CI is also complaining about it.\r\n\r\n```python\r\ndump_file = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"<frozen posixpath>\", line 76, in join\r\nTypeError: expected str, bytes or os.PathLike object, not AuthServiceProxyWrapper\r\n```",
      "commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-19T13:24:43Z",
      "diff_hunk" : "@@ -46,6 +48,25 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir, \"wallet.dump\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1365532672",
      "id" : 1365532672,
      "line" : 54,
      "node_id" : "PRRC_kwDOABII585RZGAA",
      "original_commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "original_line" : 54,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : 16,
      "pull_request_review_id" : 1685945721,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365532672/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-19T14:08:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365532672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1365645203"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365645203"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ok, found the problem. This should use `datadir_path` not `datadir` (which is a `AuthServiceProxyWrapper`):\r\n\r\n``` python3\r\nself.nodes[0].datadir_path / \"wallet.dump\"\r\n```",
      "commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-19T14:30:19Z",
      "diff_hunk" : "@@ -46,6 +48,25 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir, \"wallet.dump\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1365645203",
      "id" : 1365645203,
      "in_reply_to_id" : 1365532672,
      "line" : 54,
      "node_id" : "PRRC_kwDOABII585RZheT",
      "original_commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "original_line" : 54,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : 16,
      "pull_request_review_id" : 1687906675,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365645203/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-19T14:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365645203",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1365647438"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365647438"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In e986d5a15:\r\n\r\nSame here, need to change `f\"-datadir={self.nodes[0].datadir}\"` for `f\"-datadir={self.nodes[0].datadir_path}\"`.\r\n\r\n```suggestion\r\n        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir_path}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)\r\n```",
      "commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "created_at" : "2023-10-19T14:31:31Z",
      "diff_hunk" : "@@ -46,6 +48,25 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\n+        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1365647438",
      "id" : 1365647438,
      "line" : 55,
      "node_id" : "PRRC_kwDOABII585RZiBO",
      "original_commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "original_line" : 55,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : 17,
      "pull_request_review_id" : 1687906675,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365647438/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-19T14:32:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1365647438",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1370462880"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370462880"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed `AddHDKey()` to use `IsCrypted()`",
      "commit_id" : "dfb58e499e053bf24425bb23cf455d280d2b2c3a",
      "created_at" : "2023-10-24T16:03:17Z",
      "diff_hunk" : "@@ -4373,4 +4373,32 @@ bool CWallet::AddHDKey(const CExtKey& extkey)\n         return WalletBatch(GetDatabase()).WriteHDKey(extkey);\n     }\n }\n+\n+std::optional<CExtKey> CWallet::GetHDKey(const CExtPubKey& xpub)\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    CKey key;\n+    if (IsCrypted()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1370462880",
      "id" : 1370462880,
      "in_reply_to_id" : 1364553908,
      "line" : 4571,
      "node_id" : "PRRC_kwDOABII585Rr5qg",
      "original_commit_id" : "75ded425eaf473d840fb56a5382508102c1f75ca",
      "original_line" : 4571,
      "original_position" : 10,
      "original_start_line" : 4381,
      "path" : "src/wallet/wallet.cpp",
      "position" : 293,
      "pull_request_review_id" : 1695319046,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370462880/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 4570,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-24T16:03:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370462880",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1370463023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463023"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done as suggested",
      "commit_id" : "dfb58e499e053bf24425bb23cf455d280d2b2c3a",
      "created_at" : "2023-10-24T16:03:25Z",
      "diff_hunk" : "@@ -4042,11 +4042,17 @@ bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error)\n     m_internal_spk_managers.clear();\n \n     // Setup new descriptors\n-    SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    SetWalletFlag(WALLET_FLAG_DESCRIPTORS | WALLET_FLAG_GLOBAL_HD_KEY);\n     if (!IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         // Use the existing master key if we have it\n         if (data.master_key.key.IsValid()) {\n             SetupDescriptorScriptPubKeyMans(data.master_key);\n+\n+            // Store the master key as our active hd key\n+            if (!AddHDKey(data.master_key)) {\n+                throw std::runtime_error(std::string(__func__) + \": Unable to add original seed's HD key\");\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1370463023",
      "id" : 1370463023,
      "in_reply_to_id" : 1365490080,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Rr5sv",
      "original_commit_id" : "283fe566d629800113df5f90554352c536c326dd",
      "original_line" : 4059,
      "original_position" : 14,
      "original_start_line" : 4051,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1695319289,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463023/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-24T16:03:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1370463112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463112"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done as suggested",
      "commit_id" : "dfb58e499e053bf24425bb23cf455d280d2b2c3a",
      "created_at" : "2023-10-24T16:03:29Z",
      "diff_hunk" : "@@ -4042,11 +4042,17 @@ bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error)\n     m_internal_spk_managers.clear();\n \n     // Setup new descriptors\n-    SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+    SetWalletFlag(WALLET_FLAG_DESCRIPTORS | WALLET_FLAG_GLOBAL_HD_KEY);\n     if (!IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS)) {\n         // Use the existing master key if we have it\n         if (data.master_key.key.IsValid()) {\n             SetupDescriptorScriptPubKeyMans(data.master_key);\n+\n+            // Store the master key as our active hd key\n+            if (!AddHDKey(data.master_key)) {\n+                throw std::runtime_error(std::string(__func__) + \": Unable to add original seed's HD key\");\n+            }\n+            SetActiveHDKey(data.master_key.Neuter());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1370463112",
      "id" : 1370463112,
      "in_reply_to_id" : 1365491216,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Rr5uI",
      "original_commit_id" : "283fe566d629800113df5f90554352c536c326dd",
      "original_line" : 4055,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1695319470,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463112/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-24T16:03:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1370463217"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463217"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "dfb58e499e053bf24425bb23cf455d280d2b2c3a",
      "created_at" : "2023-10-24T16:03:35Z",
      "diff_hunk" : "@@ -46,6 +48,25 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir, \"wallet.dump\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1370463217",
      "id" : 1370463217,
      "in_reply_to_id" : 1365532672,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Rr5vx",
      "original_commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "original_line" : 54,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : null,
      "pull_request_review_id" : 1695319616,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463217/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-24T16:03:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463217",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1370463374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463374"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Fixed",
      "commit_id" : "dfb58e499e053bf24425bb23cf455d280d2b2c3a",
      "created_at" : "2023-10-24T16:03:42Z",
      "diff_hunk" : "@@ -46,6 +48,25 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir, \"wallet.dump\")\n+        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1370463374",
      "id" : 1370463374,
      "in_reply_to_id" : 1365647438,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Rr5yO",
      "original_commit_id" : "e986d5a15174c8abf6979f1c03a04913e7c2e90f",
      "original_line" : 55,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : null,
      "pull_request_review_id" : 1695319864,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463374/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-24T16:03:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1370463374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK dfb58e499e053bf24425bb23cf455d280d2b2c3a",
      "created_at" : "2023-10-26T06:39:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1780502065",
      "id" : 1780502065,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585qIE4x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1780502065/reactions"
      },
      "updated_at" : "2023-10-26T06:39:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1780502065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1381885030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381885030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit:\r\nCould also check that all active descriptors have this new xprv.",
      "commit_id" : "dfb58e499e053bf24425bb23cf455d280d2b2c3a",
      "created_at" : "2023-11-03T15:31:59Z",
      "diff_hunk" : "@@ -0,0 +1,52 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet getxpub RPC.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+\n+class WalletGetXpubTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, descriptors=True, legacy=False)\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_basic_getxpub()\n+\n+    def test_basic_getxpub(self):\n+        self.log.info(\"Test getxpub basics\")\n+        xpub_info = self.nodes[0].getxpub()\n+        assert \"xprv\" not in xpub_info\n+        xpub = xpub_info[\"xpub\"]\n+\n+        xpub_info = self.nodes[0].getxpub(True)\n+        xprv = xpub_info[\"xprv\"]\n+        assert_equal(xpub_info[\"xpub\"], xpub)\n+\n+        descs = self.nodes[0].listdescriptors(True)\n+        for desc in descs[\"descriptors\"]:\n+            if \"range\" in desc:\n+                assert xprv in desc[\"desc\"]\n+\n+        self.nodes[0].encryptwallet(\"pass\")\n+        assert_raises_rpc_error(-13, \"Error: Please enter the wallet passphrase with walletpassphrase first\", self.nodes[0].getxpub, True)\n+        self.nodes[0].walletpassphrase(\"pass\", 10)\n+        xpub_info = self.nodes[0].getxpub(True)\n+        assert xpub_info[\"xpub\"] != xpub\n+        assert xpub_info[\"xprv\"] != xprv",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1381885030",
      "id" : 1381885030,
      "line" : 48,
      "node_id" : "PRRC_kwDOABII585SXeRm",
      "original_commit_id" : "7bc7c7cc8ad2fad1e3ed47b8593983f782523569",
      "original_line" : 48,
      "original_position" : 48,
      "original_start_line" : 45,
      "path" : "test/functional/wallet_getxpub.py",
      "position" : 48,
      "pull_request_review_id" : 1713009811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381885030/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 45,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-03T16:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381885030",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1381905163"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381905163"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 97de2a4af:\r\nA note explaining why this is not needed would be nice.",
      "commit_id" : "dfb58e499e053bf24425bb23cf455d280d2b2c3a",
      "created_at" : "2023-11-03T15:46:28Z",
      "diff_hunk" : "@@ -306,86 +306,107 @@ def run_test(self):\n \n         self.log.info(\"Test that a wallet can upgrade to and downgrade from master, from:\")\n         for node in descriptors_nodes if self.options.descriptors else legacy_nodes:\n-            self.log.info(f\"- {node.version}\")\n-            wallet_name = f\"up_{node.version}\"\n-            if self.major_version_less_than(node, 17):\n-                # createwallet is only available in 0.17+\n-                self.restart_node(node.index, extra_args=[f\"-wallet={wallet_name}\"])\n-                wallet_prev = node.get_wallet_rpc(wallet_name)\n-                address = wallet_prev.getnewaddress('', \"bech32\")\n-                addr_info = wallet_prev.validateaddress(address)\n-            else:\n-                if self.major_version_at_least(node, 21):\n-                    node.rpc.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n+            # Run twice for each node to also test encrypted wallets\n+            for encrypt in [False, True]:\n+                self.log.info(f\"- {node.version} {'encrypted' if encrypt else ''}\")\n+                wallet_name = f\"up_{node.version}{'_enc' if encrypt else ''}\"\n+                if self.major_version_less_than(node, 17):\n+                    # createwallet is only available in 0.17+\n+                    self.restart_node(node.index, extra_args=[f\"-wallet={wallet_name}\"])\n+                    wallet_prev = node.get_wallet_rpc(wallet_name)\n+                    address = wallet_prev.getnewaddress('', \"bech32\")\n+                    addr_info = wallet_prev.validateaddress(address)\n                 else:\n-                    node.rpc.createwallet(wallet_name=wallet_name)\n-                wallet_prev = node.get_wallet_rpc(wallet_name)\n-                address = wallet_prev.getnewaddress('', \"bech32\")\n-                addr_info = wallet_prev.getaddressinfo(address)\n-\n-            hdkeypath = addr_info[\"hdkeypath\"].replace(\"'\", \"h\")\n-            pubkey = addr_info[\"pubkey\"]\n-\n-            # Make a backup of the wallet file\n-            backup_path = os.path.join(self.options.tmpdir, f\"{wallet_name}.dat\")\n-            wallet_prev.backupwallet(backup_path)\n-\n-            # Remove the wallet from old node\n-            if self.major_version_at_least(node, 17):\n-                wallet_prev.unloadwallet()\n-            else:\n-                self.stop_node(node.index)\n-\n-            # Restore the wallet to master\n-            load_res = node_master.restorewallet(wallet_name, backup_path)\n-\n-            # Make sure this wallet opens with only the migration warning. See https://github.com/bitcoin/bitcoin/pull/19054\n-            if not self.options.descriptors:\n-                # Legacy wallets will have only a deprecation warning\n-                assert_equal(load_res[\"warnings\"], [\"Wallet loaded successfully. The legacy wallet type is being deprecated and support for creating and opening legacy wallets will be removed in the future. Legacy wallets can be migrated to a descriptor wallet with migratewallet.\"])\n-            else:\n-                assert \"warnings\" not in load_res\n+                    if self.major_version_at_least(node, 21):\n+                        node.rpc.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n+                    else:\n+                        node.rpc.createwallet(wallet_name=wallet_name)\n+                    wallet_prev = node.get_wallet_rpc(wallet_name)\n+                    address = wallet_prev.getnewaddress('', \"bech32\")\n+                    addr_info = wallet_prev.getaddressinfo(address)\n+\n+                if encrypt:\n+                    wallet_prev.encryptwallet(\"pass\")\n+                    #if self.major_version_less_than(node, 18):\n+                    #    # 0.18 stopped the shutdown on encrypt behavior\n+                    #    node.wait_until_stopped()\n+                    #    self.start_node(node.index)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1381905163",
      "id" : 1381905163,
      "line" : 333,
      "node_id" : "PRRC_kwDOABII585SXjML",
      "original_commit_id" : "97de2a4af6f03184f2db40afdd65bd71da87ccf0",
      "original_line" : 333,
      "original_position" : 66,
      "original_start_line" : 328,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : 71,
      "pull_request_review_id" : 1713009811,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381905163/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 328,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-03T16:02:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381905163",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1381951356"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381951356"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this is a substantially useful optimization, and it still results in mixing upgrading code with the loading which I would rather not do.",
      "commit_id" : "dfb58e499e053bf24425bb23cf455d280d2b2c3a",
      "created_at" : "2023-11-03T16:28:24Z",
      "diff_hunk" : "@@ -925,6 +928,7 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n                 return DBErrors::CORRUPT;\n             }\n             spk_man->AddKey(pubkey.GetID(), privkey);\n+            desc_keys.insert(std::make_pair(std::make_pair(desc_id, pubkey.GetID()), privkey));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1381951356",
      "id" : 1381951356,
      "in_reply_to_id" : 1279844391,
      "line" : 940,
      "node_id" : "PRRC_kwDOABII585SXud8",
      "original_commit_id" : "3de9672a60a385572c294f796aff60ab38c75861",
      "original_line" : 940,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 166,
      "pull_request_review_id" : 1713111480,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381951356/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-03T16:28:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381951356",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1381994842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381994842"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "9f6d1a706d85b09dd0c198fd33ff8e38e5c28fb1",
      "created_at" : "2023-11-03T17:10:49Z",
      "diff_hunk" : "@@ -0,0 +1,52 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet getxpub RPC.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+\n+\n+class WalletGetXpubTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, descriptors=True, legacy=False)\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_basic_getxpub()\n+\n+    def test_basic_getxpub(self):\n+        self.log.info(\"Test getxpub basics\")\n+        xpub_info = self.nodes[0].getxpub()\n+        assert \"xprv\" not in xpub_info\n+        xpub = xpub_info[\"xpub\"]\n+\n+        xpub_info = self.nodes[0].getxpub(True)\n+        xprv = xpub_info[\"xprv\"]\n+        assert_equal(xpub_info[\"xpub\"], xpub)\n+\n+        descs = self.nodes[0].listdescriptors(True)\n+        for desc in descs[\"descriptors\"]:\n+            if \"range\" in desc:\n+                assert xprv in desc[\"desc\"]\n+\n+        self.nodes[0].encryptwallet(\"pass\")\n+        assert_raises_rpc_error(-13, \"Error: Please enter the wallet passphrase with walletpassphrase first\", self.nodes[0].getxpub, True)\n+        self.nodes[0].walletpassphrase(\"pass\", 10)\n+        xpub_info = self.nodes[0].getxpub(True)\n+        assert xpub_info[\"xpub\"] != xpub\n+        assert xpub_info[\"xprv\"] != xprv",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1381994842",
      "id" : 1381994842,
      "in_reply_to_id" : 1381885030,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585SX5Fa",
      "original_commit_id" : "7bc7c7cc8ad2fad1e3ed47b8593983f782523569",
      "original_line" : 48,
      "original_position" : 48,
      "original_start_line" : 45,
      "path" : "test/functional/wallet_getxpub.py",
      "position" : null,
      "pull_request_review_id" : 1713180822,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381994842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-03T17:10:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381994842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1381995099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381995099"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This ended up being unnecessary and I just forgot to remove it.",
      "commit_id" : "9f6d1a706d85b09dd0c198fd33ff8e38e5c28fb1",
      "created_at" : "2023-11-03T17:11:06Z",
      "diff_hunk" : "@@ -306,86 +306,107 @@ def run_test(self):\n \n         self.log.info(\"Test that a wallet can upgrade to and downgrade from master, from:\")\n         for node in descriptors_nodes if self.options.descriptors else legacy_nodes:\n-            self.log.info(f\"- {node.version}\")\n-            wallet_name = f\"up_{node.version}\"\n-            if self.major_version_less_than(node, 17):\n-                # createwallet is only available in 0.17+\n-                self.restart_node(node.index, extra_args=[f\"-wallet={wallet_name}\"])\n-                wallet_prev = node.get_wallet_rpc(wallet_name)\n-                address = wallet_prev.getnewaddress('', \"bech32\")\n-                addr_info = wallet_prev.validateaddress(address)\n-            else:\n-                if self.major_version_at_least(node, 21):\n-                    node.rpc.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n+            # Run twice for each node to also test encrypted wallets\n+            for encrypt in [False, True]:\n+                self.log.info(f\"- {node.version} {'encrypted' if encrypt else ''}\")\n+                wallet_name = f\"up_{node.version}{'_enc' if encrypt else ''}\"\n+                if self.major_version_less_than(node, 17):\n+                    # createwallet is only available in 0.17+\n+                    self.restart_node(node.index, extra_args=[f\"-wallet={wallet_name}\"])\n+                    wallet_prev = node.get_wallet_rpc(wallet_name)\n+                    address = wallet_prev.getnewaddress('', \"bech32\")\n+                    addr_info = wallet_prev.validateaddress(address)\n                 else:\n-                    node.rpc.createwallet(wallet_name=wallet_name)\n-                wallet_prev = node.get_wallet_rpc(wallet_name)\n-                address = wallet_prev.getnewaddress('', \"bech32\")\n-                addr_info = wallet_prev.getaddressinfo(address)\n-\n-            hdkeypath = addr_info[\"hdkeypath\"].replace(\"'\", \"h\")\n-            pubkey = addr_info[\"pubkey\"]\n-\n-            # Make a backup of the wallet file\n-            backup_path = os.path.join(self.options.tmpdir, f\"{wallet_name}.dat\")\n-            wallet_prev.backupwallet(backup_path)\n-\n-            # Remove the wallet from old node\n-            if self.major_version_at_least(node, 17):\n-                wallet_prev.unloadwallet()\n-            else:\n-                self.stop_node(node.index)\n-\n-            # Restore the wallet to master\n-            load_res = node_master.restorewallet(wallet_name, backup_path)\n-\n-            # Make sure this wallet opens with only the migration warning. See https://github.com/bitcoin/bitcoin/pull/19054\n-            if not self.options.descriptors:\n-                # Legacy wallets will have only a deprecation warning\n-                assert_equal(load_res[\"warnings\"], [\"Wallet loaded successfully. The legacy wallet type is being deprecated and support for creating and opening legacy wallets will be removed in the future. Legacy wallets can be migrated to a descriptor wallet with migratewallet.\"])\n-            else:\n-                assert \"warnings\" not in load_res\n+                    if self.major_version_at_least(node, 21):\n+                        node.rpc.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n+                    else:\n+                        node.rpc.createwallet(wallet_name=wallet_name)\n+                    wallet_prev = node.get_wallet_rpc(wallet_name)\n+                    address = wallet_prev.getnewaddress('', \"bech32\")\n+                    addr_info = wallet_prev.getaddressinfo(address)\n+\n+                if encrypt:\n+                    wallet_prev.encryptwallet(\"pass\")\n+                    #if self.major_version_less_than(node, 18):\n+                    #    # 0.18 stopped the shutdown on encrypt behavior\n+                    #    node.wait_until_stopped()\n+                    #    self.start_node(node.index)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1381995099",
      "id" : 1381995099,
      "in_reply_to_id" : 1381905163,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585SX5Jb",
      "original_commit_id" : "97de2a4af6f03184f2db40afdd65bd71da87ccf0",
      "original_line" : 333,
      "original_position" : 66,
      "original_start_line" : 328,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 1713181240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381995099/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-03T17:11:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381995099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\ntest/functional/wallet_backwards_compatibility.py:29:1: F401 'test_framework.wallet_util.WalletUnlock' imported but unused",
      "created_at" : "2023-11-04T07:33:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1793371057",
      "id" : 1793371057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585q5Kux",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793371057/reactions"
      },
      "updated_at" : "2023-11-04T07:33:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793371057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Nice, I'm going to re-review this once I'm done with 25273",
      "created_at" : "2023-11-05T14:20:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1793751225",
      "id" : 1793751225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585q6ni5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793751225/reactions"
      },
      "updated_at" : "2023-11-05T14:20:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793751225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK b1b12d1b88492fe66b26243760689c7f040c67c2",
      "created_at" : "2023-11-06T01:43:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1793951200",
      "id" : 1793951200,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585q7YXg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793951200/reactions"
      },
      "updated_at" : "2023-11-06T01:43:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793951200",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1384538002"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384538002"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 8a2475573270b7bc0a7d99cd94d9908cd48bd6bd\r\n\r\nnit: The code would be easier to understand if we drop template and just use `const CPubKey&`, it's trivial to get the right type on the caller side.",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-07T08:23:29Z",
      "diff_hunk" : "@@ -68,6 +68,17 @@ const std::unordered_set<std::string> LEGACY_TYPES{CRYPTED_KEY, CSCRIPT, DEFAULT\n // WalletBatch\n //\n \n+template <typename P>\n+static uint256 PrivKeyChecksum(const CPrivKey& privkey, const P& pubkey)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1384538002",
      "id" : 1384538002,
      "line" : 75,
      "node_id" : "PRRC_kwDOABII585Shl-S",
      "original_commit_id" : "8a2475573270b7bc0a7d99cd94d9908cd48bd6bd",
      "original_line" : 72,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 22,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384538002/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384538002",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1385428552"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385428552"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 4ad97b519e7:\r\nAs the default value for \"internal\" is false, I infer you wanted `internal=true`?.\r\n\r\nSame for the other one that is below.",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-07T19:08:45Z",
      "diff_hunk" : "@@ -306,86 +307,143 @@ def run_test(self):\n \n         self.log.info(\"Test that a wallet can upgrade to and downgrade from master, from:\")\n         for node in descriptors_nodes if self.options.descriptors else legacy_nodes:\n-            self.log.info(f\"- {node.version}\")\n-            wallet_name = f\"up_{node.version}\"\n-            if self.major_version_less_than(node, 17):\n-                # createwallet is only available in 0.17+\n-                self.restart_node(node.index, extra_args=[f\"-wallet={wallet_name}\"])\n-                wallet_prev = node.get_wallet_rpc(wallet_name)\n-                address = wallet_prev.getnewaddress('', \"bech32\")\n-                addr_info = wallet_prev.validateaddress(address)\n-            else:\n-                if self.major_version_at_least(node, 21):\n-                    node.rpc.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n+            # Run twice for each node to also test encrypted wallets\n+            for encrypt in [False, True]:\n+                self.log.info(f\"- {node.version} {'encrypted' if encrypt else ''}\")\n+                wallet_name = f\"up_{node.version}{'_enc' if encrypt else ''}\"\n+                if self.major_version_less_than(node, 17):\n+                    # createwallet is only available in 0.17+\n+                    self.restart_node(node.index, extra_args=[f\"-wallet={wallet_name}\"])\n+                    wallet_prev = node.get_wallet_rpc(wallet_name)\n+                    address = wallet_prev.getnewaddress('', \"bech32\")\n+                    addr_info = wallet_prev.validateaddress(address)\n                 else:\n-                    node.rpc.createwallet(wallet_name=wallet_name)\n-                wallet_prev = node.get_wallet_rpc(wallet_name)\n-                address = wallet_prev.getnewaddress('', \"bech32\")\n-                addr_info = wallet_prev.getaddressinfo(address)\n-\n-            hdkeypath = addr_info[\"hdkeypath\"].replace(\"'\", \"h\")\n-            pubkey = addr_info[\"pubkey\"]\n-\n-            # Make a backup of the wallet file\n-            backup_path = os.path.join(self.options.tmpdir, f\"{wallet_name}.dat\")\n-            wallet_prev.backupwallet(backup_path)\n-\n-            # Remove the wallet from old node\n-            if self.major_version_at_least(node, 17):\n-                wallet_prev.unloadwallet()\n-            else:\n-                self.stop_node(node.index)\n-\n-            # Restore the wallet to master\n-            load_res = node_master.restorewallet(wallet_name, backup_path)\n-\n-            # Make sure this wallet opens with only the migration warning. See https://github.com/bitcoin/bitcoin/pull/19054\n-            if not self.options.descriptors:\n-                # Legacy wallets will have only a deprecation warning\n-                assert_equal(load_res[\"warnings\"], [\"Wallet loaded successfully. The legacy wallet type is being deprecated and support for creating and opening legacy wallets will be removed in the future. Legacy wallets can be migrated to a descriptor wallet with migratewallet.\"])\n-            else:\n-                assert \"warnings\" not in load_res\n+                    if self.major_version_at_least(node, 21):\n+                        node.rpc.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n+                    else:\n+                        node.rpc.createwallet(wallet_name=wallet_name)\n+                    wallet_prev = node.get_wallet_rpc(wallet_name)\n+                    address = wallet_prev.getnewaddress('', \"bech32\")\n+                    addr_info = wallet_prev.getaddressinfo(address)\n+\n+                if encrypt:\n+                    # Mock time forward so that the new active descriptors have a distinct timestamp\n+                    node.setmocktime(int(time.time()) + 60)\n+                    wallet_prev.encryptwallet(\"pass\")\n+\n+                if self.options.descriptors and self.major_version_at_least(node, 23):\n+                    # Retrieve the xprv that is expected for the wallet hd key upgrade\n+                    # This depends on listdescriptors(True) which requires at least 23.0\n+                    if encrypt:\n+                        wallet_prev.walletpassphrase(\"pass\", 100000)\n+                    descs = wallet_prev.listdescriptors(True)[\"descriptors\"]\n+                    for desc in descs:\n+                        if desc[\"active\"] and desc[\"desc\"].startswith(\"wpkh(\"):\n+                            expected_xprv = desc[\"desc\"][5:116]\n+                            break\n+                    # Import a few new descriptors as active, but not enough to be considered the active hd key\n+                    wallet_prev.importdescriptors([\n+                        {\n+                            \"desc\": descsum_create(\"wpkh(tprv8ZgxMBicQKsPeNLUGrbv3b7qhUk1LQJZAGMuk9gVuKh9sd4BWGp1eMsehUni6qGb8bjkdwBxCbgNGdh2bYGACK5C5dRTaif9KBKGVnSezxV/0/*\"),\n+                            \"timestamp\": int(time.time()) + 70,\n+                            \"active\": True,\n+                        },\n+                        {\n+                            \"desc\": descsum_create(\"wpkh(tprv8ZgxMBicQKsPeNLUGrbv3b7qhUk1LQJZAGMuk9gVuKh9sd4BWGp1eMsehUni6qGb8bjkdwBxCbgNGdh2bYGACK5C5dRTaif9KBKGVnSezxV/1/*\"),\n+                            \"timestamp\": int(time.time()) + 70,\n+                            \"active\": True,\n+                            \"internal\": False,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1385428552",
      "id" : 1385428552,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Sk_ZI",
      "original_commit_id" : "4ad97b519e7625247e70fb5bd25a02dad8bf2371",
      "original_line" : 355,
      "original_position" : 95,
      "original_start_line" : 352,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 1718519262,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385428552/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-07T19:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385428552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1385459943"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385459943"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 3e250b10:\r\n\r\nThere is a discrepancy here. The upgrade mechanism is skipped for private key disabled wallets without set the `WALLET_FLAG_GLOBAL_HD_KEY`. This differs from what is being done in the wallet creation and the migration processes where we set this flag for all types (only requirement is `WALLET_FLAG_DESCRIPTORS`).\r\n\r\nIs this intended?",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-07T19:35:08Z",
      "diff_hunk" : "@@ -555,6 +558,124 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1385459943",
      "id" : 1385459943,
      "line" : 583,
      "node_id" : "PRRC_kwDOABII585SlHDn",
      "original_commit_id" : "b1b12d1b88492fe66b26243760689c7f040c67c2",
      "original_line" : 583,
      "original_position" : 36,
      "original_start_line" : 574,
      "path" : "src/wallet/wallet.cpp",
      "position" : 38,
      "pull_request_review_id" : 1718519262,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385459943/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 576,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-07T19:42:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385459943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1385495818"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385495818"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I don't think this is a substantially useful optimization, and it still results in mixing upgrading code with the loading which I would rather not do.\r\n\r\nAs far as I remember, the last patch I shared doesn't mixes the upgrading code with the loading code.\r\nIt loads only the descriptor root key alone at the end of the spkm loading process so we can avoid loading all descriptors keys into a vector, just to obtain the private keys related to each descriptor xpub later in the upgrade process.\r\n\r\nIn other words, the difference is on a process who loads all keys in ram vs a process who loads only one key per descriptor.\r\n\r\nThat being said, my memory could be failing.. so np if you don't want to tackle it here. I could read what I did and revive it in a follow-up if it worth it.",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-07T20:07:28Z",
      "diff_hunk" : "@@ -925,6 +928,7 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n                 return DBErrors::CORRUPT;\n             }\n             spk_man->AddKey(pubkey.GetID(), privkey);\n+            desc_keys.insert(std::make_pair(std::make_pair(desc_id, pubkey.GetID()), privkey));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1385495818",
      "id" : 1385495818,
      "in_reply_to_id" : 1279844391,
      "line" : 940,
      "node_id" : "PRRC_kwDOABII585SlP0K",
      "original_commit_id" : "3de9672a60a385572c294f796aff60ab38c75861",
      "original_line" : 940,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 166,
      "pull_request_review_id" : 1718626380,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385495818/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-07T20:07:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385495818",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1385542152"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385542152"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah, good catch. Fixed",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-07T20:44:40Z",
      "diff_hunk" : "@@ -306,86 +307,143 @@ def run_test(self):\n \n         self.log.info(\"Test that a wallet can upgrade to and downgrade from master, from:\")\n         for node in descriptors_nodes if self.options.descriptors else legacy_nodes:\n-            self.log.info(f\"- {node.version}\")\n-            wallet_name = f\"up_{node.version}\"\n-            if self.major_version_less_than(node, 17):\n-                # createwallet is only available in 0.17+\n-                self.restart_node(node.index, extra_args=[f\"-wallet={wallet_name}\"])\n-                wallet_prev = node.get_wallet_rpc(wallet_name)\n-                address = wallet_prev.getnewaddress('', \"bech32\")\n-                addr_info = wallet_prev.validateaddress(address)\n-            else:\n-                if self.major_version_at_least(node, 21):\n-                    node.rpc.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n+            # Run twice for each node to also test encrypted wallets\n+            for encrypt in [False, True]:\n+                self.log.info(f\"- {node.version} {'encrypted' if encrypt else ''}\")\n+                wallet_name = f\"up_{node.version}{'_enc' if encrypt else ''}\"\n+                if self.major_version_less_than(node, 17):\n+                    # createwallet is only available in 0.17+\n+                    self.restart_node(node.index, extra_args=[f\"-wallet={wallet_name}\"])\n+                    wallet_prev = node.get_wallet_rpc(wallet_name)\n+                    address = wallet_prev.getnewaddress('', \"bech32\")\n+                    addr_info = wallet_prev.validateaddress(address)\n                 else:\n-                    node.rpc.createwallet(wallet_name=wallet_name)\n-                wallet_prev = node.get_wallet_rpc(wallet_name)\n-                address = wallet_prev.getnewaddress('', \"bech32\")\n-                addr_info = wallet_prev.getaddressinfo(address)\n-\n-            hdkeypath = addr_info[\"hdkeypath\"].replace(\"'\", \"h\")\n-            pubkey = addr_info[\"pubkey\"]\n-\n-            # Make a backup of the wallet file\n-            backup_path = os.path.join(self.options.tmpdir, f\"{wallet_name}.dat\")\n-            wallet_prev.backupwallet(backup_path)\n-\n-            # Remove the wallet from old node\n-            if self.major_version_at_least(node, 17):\n-                wallet_prev.unloadwallet()\n-            else:\n-                self.stop_node(node.index)\n-\n-            # Restore the wallet to master\n-            load_res = node_master.restorewallet(wallet_name, backup_path)\n-\n-            # Make sure this wallet opens with only the migration warning. See https://github.com/bitcoin/bitcoin/pull/19054\n-            if not self.options.descriptors:\n-                # Legacy wallets will have only a deprecation warning\n-                assert_equal(load_res[\"warnings\"], [\"Wallet loaded successfully. The legacy wallet type is being deprecated and support for creating and opening legacy wallets will be removed in the future. Legacy wallets can be migrated to a descriptor wallet with migratewallet.\"])\n-            else:\n-                assert \"warnings\" not in load_res\n+                    if self.major_version_at_least(node, 21):\n+                        node.rpc.createwallet(wallet_name=wallet_name, descriptors=self.options.descriptors)\n+                    else:\n+                        node.rpc.createwallet(wallet_name=wallet_name)\n+                    wallet_prev = node.get_wallet_rpc(wallet_name)\n+                    address = wallet_prev.getnewaddress('', \"bech32\")\n+                    addr_info = wallet_prev.getaddressinfo(address)\n+\n+                if encrypt:\n+                    # Mock time forward so that the new active descriptors have a distinct timestamp\n+                    node.setmocktime(int(time.time()) + 60)\n+                    wallet_prev.encryptwallet(\"pass\")\n+\n+                if self.options.descriptors and self.major_version_at_least(node, 23):\n+                    # Retrieve the xprv that is expected for the wallet hd key upgrade\n+                    # This depends on listdescriptors(True) which requires at least 23.0\n+                    if encrypt:\n+                        wallet_prev.walletpassphrase(\"pass\", 100000)\n+                    descs = wallet_prev.listdescriptors(True)[\"descriptors\"]\n+                    for desc in descs:\n+                        if desc[\"active\"] and desc[\"desc\"].startswith(\"wpkh(\"):\n+                            expected_xprv = desc[\"desc\"][5:116]\n+                            break\n+                    # Import a few new descriptors as active, but not enough to be considered the active hd key\n+                    wallet_prev.importdescriptors([\n+                        {\n+                            \"desc\": descsum_create(\"wpkh(tprv8ZgxMBicQKsPeNLUGrbv3b7qhUk1LQJZAGMuk9gVuKh9sd4BWGp1eMsehUni6qGb8bjkdwBxCbgNGdh2bYGACK5C5dRTaif9KBKGVnSezxV/0/*\"),\n+                            \"timestamp\": int(time.time()) + 70,\n+                            \"active\": True,\n+                        },\n+                        {\n+                            \"desc\": descsum_create(\"wpkh(tprv8ZgxMBicQKsPeNLUGrbv3b7qhUk1LQJZAGMuk9gVuKh9sd4BWGp1eMsehUni6qGb8bjkdwBxCbgNGdh2bYGACK5C5dRTaif9KBKGVnSezxV/1/*\"),\n+                            \"timestamp\": int(time.time()) + 70,\n+                            \"active\": True,\n+                            \"internal\": False,",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1385542152",
      "id" : 1385542152,
      "in_reply_to_id" : 1385428552,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585SlbII",
      "original_commit_id" : "4ad97b519e7625247e70fb5bd25a02dad8bf2371",
      "original_line" : 355,
      "original_position" : 95,
      "original_start_line" : 352,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 1718699345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385542152/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-07T20:44:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385542152",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1385543718"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385543718"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it particularly matters since a wallet without private keys cannot have a global hd key. However I have changed it so that it is set only if private keys are enabled.",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-07T20:46:33Z",
      "diff_hunk" : "@@ -555,6 +558,124 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1385543718",
      "id" : 1385543718,
      "in_reply_to_id" : 1385459943,
      "line" : 583,
      "node_id" : "PRRC_kwDOABII585Slbgm",
      "original_commit_id" : "b1b12d1b88492fe66b26243760689c7f040c67c2",
      "original_line" : 583,
      "original_position" : 36,
      "original_start_line" : 574,
      "path" : "src/wallet/wallet.cpp",
      "position" : 38,
      "pull_request_review_id" : 1718701984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385543718/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 576,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-07T20:46:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385543718",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1386191801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386191801"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 95153f0152c057101e894e2ca73aee78be267b33\r\n\r\nnit: Should we just add serialization methods to `CExtPubKey`? Instead of explicitly calling `Encode()`",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-08T08:31:35Z",
      "diff_hunk" : "@@ -298,6 +301,40 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    return WriteIC(std::make_pair(DBKeys::HDKEY, xpub), std::make_pair(privkey, PrivKeyChecksum(privkey, xpub)), false);\n+}\n+\n+bool WalletBatch::WriteHDCryptedKey(const CExtPubKey& extpub, const std::vector<unsigned char>& crypted_key)\n+{\n+    // Compute a checksum of the encrypted key\n+    uint256 checksum = Hash(crypted_key);\n+\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extpub.Encode(xpub.data());\n+\n+    const auto key = std::make_pair(DBKeys::HDCKEY, xpub);\n+    if (!WriteIC(key, std::make_pair(crypted_key, checksum), false)) {\n+        return false;\n+    }\n+    EraseIC(std::make_pair(DBKeys::HDKEY, xpub));\n+    return true;\n+}\n+\n+bool WalletBatch::WriteActiveHDKey(const CExtPubKey& extpub)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extpub.Encode(xpub.data());\n+\n+    return WriteIC(DBKeys::ACTIVEHDKEY, xpub, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1386191801",
      "id" : 1386191801,
      "line" : 335,
      "node_id" : "PRRC_kwDOABII585Sn5u5",
      "original_commit_id" : "95153f0152c057101e894e2ca73aee78be267b33",
      "original_line" : 335,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 100,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386191801/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1386191801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-09T01:42:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1803029813",
      "id" : 1803029813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585reA01",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1803029813/reactions"
      },
      "updated_at" : "2023-11-09T01:42:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1803029813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1388101787"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388101787"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 5809c90fee6:\r\n\r\nNeed to remove this change. Otherwise the migrated watch-only and solvables wallets will have the global hd key flag set while newly created private key disabled wallets will not.\r\n\r\nThis is because the wallets are created calling `CWallet::Create()` here, which takes this variable and sets the wallet flags calling `CWallet::InitWalletFlags()`. \r\n\r\nIt would be nice to add a test verifying that we do not create a private key disabled wallet with the global hd key flag set.",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-09T14:39:24Z",
      "diff_hunk" : "@@ -4239,7 +4249,7 @@ bool DoMigration(CWallet& wallet, WalletContext& context, bilingual_str& error,\n         empty_context.args = context.args;\n \n         // Make the wallets\n-        options.create_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET | WALLET_FLAG_DESCRIPTORS;\n+        options.create_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET | WALLET_FLAG_DESCRIPTORS | WALLET_FLAG_GLOBAL_HD_KEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1388101787",
      "id" : 1388101787,
      "line" : 4252,
      "node_id" : "PRRC_kwDOABII585SvMCb",
      "original_commit_id" : "5809c90fee6dd2c2a16ef6e9cf104ecaf9ec5fdf",
      "original_line" : 4252,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 202,
      "pull_request_review_id" : 1722702904,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388101787/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-09T14:50:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388101787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390404008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390404008"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 96365a0b182858d686e695a153af232c7b3740c9\r\n\r\ncheck return value",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-12T12:49:22Z",
      "diff_hunk" : "@@ -844,6 +844,25 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n             }\n         }\n \n+        // Encrypt the HD keys\n+        assert(m_hd_crypted_keys.empty());\n+        for (const auto& [xpub, key] : m_hd_keys) {\n+            std::vector<unsigned char> crypted_secret;\n+            CKeyingMaterial secret(key.begin(), key.end());\n+            if (!EncryptSecret(_vMasterKey, secret, xpub.pubkey.GetHash(), crypted_secret)) {\n+                encrypted_batch->TxnAbort();\n+                delete encrypted_batch;\n+                encrypted_batch = nullptr;\n+                // We now probably have half of our keys encrypted in memory, and half not...\n+                // die and let the user reload the unencrypted wallet.\n+                assert(false);\n+            }\n+\n+            m_hd_crypted_keys[xpub] = crypted_secret;\n+            encrypted_batch->WriteHDCryptedKey(xpub, crypted_secret);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390404008",
      "id" : 1390404008,
      "line" : 985,
      "node_id" : "PRRC_kwDOABII585S3-Go",
      "original_commit_id" : "96365a0b182858d686e695a153af232c7b3740c9",
      "original_line" : 862,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 158,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390404008/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390404008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390405493"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390405493"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Checking my understanding. This assume verifies that we loaded the key we want to set as active. Correct?",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-12T12:57:46Z",
      "diff_hunk" : "@@ -4358,6 +4366,14 @@ bool CWallet::LoadActiveHDKey(const CExtPubKey& xpub)\n     return true;\n }\n \n+bool CWallet::SetActiveHDKey(const CExtPubKey& xpub)\n+{\n+    AssertLockHeld(cs_wallet);\n+    Assume(m_hd_keys.count(xpub) + m_hd_crypted_keys.count(xpub) == 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390405493",
      "id" : 1390405493,
      "line" : 4505,
      "node_id" : "PRRC_kwDOABII585S3-d1",
      "original_commit_id" : "8276bbeb040c2621afd41ad42e0d84f8f4d249c6",
      "original_line" : 4372,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 221,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390405493/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390405493",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390408127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390408127"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in e693bd02610df20f73c008b03c739da5d69fcf76\r\n\r\nnit: If the key is not valid - it should be an error and it should be detected in `LoadActiveHDKey()`",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-12T13:13:21Z",
      "diff_hunk" : "@@ -4374,6 +4374,15 @@ bool CWallet::SetActiveHDKey(const CExtPubKey& xpub)\n     return WalletBatch(GetDatabase()).WriteActiveHDKey(xpub);\n }\n \n+std::optional<CExtPubKey> CWallet::GetActiveHDPubKey()\n+{\n+    AssertLockHeld(cs_wallet);\n+    if (m_xpub.pubkey.IsValid()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390408127",
      "id" : 1390408127,
      "line" : 4516,
      "node_id" : "PRRC_kwDOABII585S3_G_",
      "original_commit_id" : "e693bd02610df20f73c008b03c739da5d69fcf76",
      "original_line" : 4380,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 232,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390408127/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390408127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390409054"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390409054"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in e693bd02610df20f73c008b03c739da5d69fcf76\r\n\r\nnit: inconsistent naming.\r\n\r\nPropose to rename to `GetActiveHDKey()` analogous to `LoadActiveHDKey()` and `SetActiveHDKey()`",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-12T13:16:00Z",
      "diff_hunk" : "@@ -4374,6 +4374,15 @@ bool CWallet::SetActiveHDKey(const CExtPubKey& xpub)\n     return WalletBatch(GetDatabase()).WriteActiveHDKey(xpub);\n }\n \n+std::optional<CExtPubKey> CWallet::GetActiveHDPubKey()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390409054",
      "id" : 1390409054,
      "line" : 4513,
      "node_id" : "PRRC_kwDOABII585S3_Ve",
      "original_commit_id" : "e693bd02610df20f73c008b03c739da5d69fcf76",
      "original_line" : 4377,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 229,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390409054/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390409054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390410589"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390410589"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 9900207360a2852041ceed260c3430e92ff860c5\r\n\r\nThe RPC can return xprv as well as xpub. We should find a better name as it becomes our API and users will depend on it.\r\n\r\nHow about `gethdkey`?",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-12T13:24:44Z",
      "diff_hunk" : "@@ -809,6 +809,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390410589",
      "id" : 1390410589,
      "line" : 812,
      "node_id" : "PRRC_kwDOABII585S3_td",
      "original_commit_id" : "9900207360a2852041ceed260c3430e92ff860c5",
      "original_line" : 812,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 4,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390410589/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390410589",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390410691"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390410691"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 9900207360a2852041ceed260c3430e92ff860c5\r\n\r\nThe comment is a bit outdated it seems, since the method can also return xprv.",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-12T13:25:08Z",
      "diff_hunk" : "@@ -809,6 +809,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()\n+{\n+    return RPCHelpMan{\"getxpub\",\n+                \"Returns the xpub most recently used to generate descriptors for this descriptor wallet. \"\n+                \"Not entirely useful right now as it returns the xpub of the root, and there are \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390410691",
      "id" : 1390410691,
      "line" : 816,
      "node_id" : "PRRC_kwDOABII585S3_vD",
      "original_commit_id" : "9900207360a2852041ceed260c3430e92ff860c5",
      "original_line" : 816,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 8,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390410691/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390410691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390411731"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390411731"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 9900207360a2852041ceed260c3430e92ff860c5\r\n\r\nnit: \"The wallet does not have an active **HD key**\"\r\n\r\n\"active xpub\" could mean xpub of active descriptor",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-12T13:29:21Z",
      "diff_hunk" : "@@ -809,6 +809,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()\n+{\n+    return RPCHelpMan{\"getxpub\",\n+                \"Returns the xpub most recently used to generate descriptors for this descriptor wallet. \"\n+                \"Not entirely useful right now as it returns the xpub of the root, and there are \"\n+                \"hardened derivation steps involved in normal key derivation.\\n\",\n+                {\n+                    {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Whether to include the xprv\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {{\n+                        {RPCResult::Type::STR, \"xpub\", \"The xpub\"},\n+                        {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The xprv if private is true\"},\n+                    }},\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getxpub\", \"\")\n+            + HelpExampleRpc(\"getxpub\", \"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<CWallet> pwallet = GetWalletForJSONRPCRequest(request);\n+            if (!pwallet) return NullUniValue;\n+\n+            if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"getxpub is not available for non-descriptor wallets\");\n+            }\n+\n+            LOCK(pwallet->cs_wallet);\n+\n+            UniValue obj(UniValue::VOBJ);\n+            std::optional<CExtPubKey> extpub = pwallet->GetActiveHDPubKey();\n+            if (!extpub) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"This wallet does not have an active xpub\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390411731",
      "id" : 1390411731,
      "line" : 850,
      "node_id" : "PRRC_kwDOABII585S3__T",
      "original_commit_id" : "9900207360a2852041ceed260c3430e92ff860c5",
      "original_line" : 846,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 42,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390411731/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390411731",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390411824"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390411824"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 9900207360a2852041ceed260c3430e92ff860c5\r\n\r\nnit: \"Could not find the xprv for active **HD** key\"",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-12T13:29:53Z",
      "diff_hunk" : "@@ -809,6 +809,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()\n+{\n+    return RPCHelpMan{\"getxpub\",\n+                \"Returns the xpub most recently used to generate descriptors for this descriptor wallet. \"\n+                \"Not entirely useful right now as it returns the xpub of the root, and there are \"\n+                \"hardened derivation steps involved in normal key derivation.\\n\",\n+                {\n+                    {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Whether to include the xprv\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {{\n+                        {RPCResult::Type::STR, \"xpub\", \"The xpub\"},\n+                        {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The xprv if private is true\"},\n+                    }},\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getxpub\", \"\")\n+            + HelpExampleRpc(\"getxpub\", \"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<CWallet> pwallet = GetWalletForJSONRPCRequest(request);\n+            if (!pwallet) return NullUniValue;\n+\n+            if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"getxpub is not available for non-descriptor wallets\");\n+            }\n+\n+            LOCK(pwallet->cs_wallet);\n+\n+            UniValue obj(UniValue::VOBJ);\n+            std::optional<CExtPubKey> extpub = pwallet->GetActiveHDPubKey();\n+            if (!extpub) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"This wallet does not have an active xpub\");\n+            }\n+            std::string xpub = EncodeExtPubKey(*extpub);\n+            obj.pushKV(\"xpub\", xpub);\n+\n+            bool priv = !request.params[0].isNull() && request.params[0].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*pwallet);\n+                std::optional<CExtKey> extkey = pwallet->GetHDKey(*extpub);\n+                if (!extkey) {\n+                    throw JSONRPCError(RPC_WALLET_ERROR, \"Could not find the xprv for active key\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390411824",
      "id" : 1390411824,
      "line" : 860,
      "node_id" : "PRRC_kwDOABII585S4AAw",
      "original_commit_id" : "9900207360a2852041ceed260c3430e92ff860c5",
      "original_line" : 856,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : 52,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390411824/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390411824",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390414352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390414352"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 8fcd9cfb4c1dac680e9c6702b7af9517a578210d\r\n\r\nI think `PubkeyProvider` can hold only 1 (extended) public key.  So should we have a different signature for the method?\r\nDo I miss something?",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-12T13:44:17Z",
      "diff_hunk" : "@@ -212,6 +212,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended) public keys for this PubkeyProvider\n+     * param[out] pubkeys Any public keys\n+     * param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetRootPubKeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390414352",
      "id" : 1390414352,
      "line" : 220,
      "node_id" : "PRRC_kwDOABII585S4AoQ",
      "original_commit_id" : "8fcd9cfb4c1dac680e9c6702b7af9517a578210d",
      "original_line" : 220,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : 9,
      "pull_request_review_id" : 1717079324,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390414352/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:58:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390414352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390418490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390418490"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should we add some documentation about this quirk?",
      "commit_id" : "b31d9bf1ae764421c8937dd126ad9e29845ebc5e",
      "created_at" : "2023-11-12T13:59:30Z",
      "diff_hunk" : "@@ -47,6 +47,9 @@ enum WalletFlags : uint64_t {\n     // Indicates that the descriptor cache has been upgraded to cache last hardened xpubs\n     WALLET_FLAG_LAST_HARDENED_XPUB_CACHED = (1ULL << 2),\n \n+    // Indicates that the wallet is capable of having a wallet hd key\n+    WALLET_FLAG_GLOBAL_HD_KEY = (1ULL << 3),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390418490",
      "id" : 1390418490,
      "in_reply_to_id" : 1081289252,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585S4Bo6",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 51,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 5,
      "pull_request_review_id" : 1726266300,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390418490/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-12T13:59:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390418490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Should we spend a bit more time discussing the public API? I.e. what to name `getxpub` method and how we would like to evolve in the future?\r\n\r\nI'm keeping #22341 rebased on top of this. Since that's a breaking API change anyway, I suggest we move discussion there rather than introduce more changes in this PR.",
      "created_at" : "2023-11-13T06:18:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1807535377",
      "id" : 1807535377,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585rvM0R",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1807535377/reactions"
      },
      "updated_at" : "2023-11-13T06:21:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1807535377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390757392"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390757392"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 18dc28f14ee1de561625913d286d68031ab9b3dd\r\n\r\nnit: it could've been just `std:map<keyid, key>` since `desc_id` is not used",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-13T08:33:06Z",
      "diff_hunk" : "@@ -560,6 +560,124 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // For all candidate xpubs, add corresponding private keys if available\n+    for (const auto& [id_pair, key] : desc_keys) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390757392",
      "id" : 1390757392,
      "line" : 647,
      "node_id" : "PRRC_kwDOABII585S5UYQ",
      "original_commit_id" : "18dc28f14ee1de561625913d286d68031ab9b3dd",
      "original_line" : 647,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 102,
      "pull_request_review_id" : 1726760385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390757392/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T08:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390757392",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390758254"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390758254"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 18dc28f14ee1de561625913d286d68031ab9b3dd\r\n\r\nnit: it could've been just `std::map<keyid, ckey>` since `desc_id` and `pubkey` are not used",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-13T08:34:03Z",
      "diff_hunk" : "@@ -560,6 +560,124 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // For all candidate xpubs, add corresponding private keys if available\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);\n+    }\n+    WalletBatch batch(GetDatabase());\n+    for (const auto& [id_pair, key_pair] : desc_crypt_keys) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390758254",
      "id" : 1390758254,
      "line" : 660,
      "node_id" : "PRRC_kwDOABII585S5Ulu",
      "original_commit_id" : "18dc28f14ee1de561625913d286d68031ab9b3dd",
      "original_line" : 660,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 115,
      "pull_request_review_id" : 1726760385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390758254/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T08:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390758254",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390768618"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390768618"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 52697ecc3fd46fdf3c02eba0d474949a9d05d885\r\n\r\nnit: can test that `gethdkey(False)` succeeds on encrypted and locked wallet",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-13T08:44:29Z",
      "diff_hunk" : "@@ -0,0 +1,60 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet getxpub RPC.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet_util import WalletUnlock\n+\n+\n+class WalletGetXpubTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, descriptors=True, legacy=False)\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_basic_getxpub()\n+\n+    def test_basic_getxpub(self):\n+        self.log.info(\"Test getxpub basics\")\n+        self.nodes[0].createwallet(\"basic\")\n+        wallet = self.nodes[0].get_wallet_rpc(\"basic\")\n+        xpub_info = wallet.getxpub()\n+        assert \"xprv\" not in xpub_info\n+        xpub = xpub_info[\"xpub\"]\n+\n+        xpub_info = wallet.getxpub(True)\n+        xprv = xpub_info[\"xprv\"]\n+        assert_equal(xpub_info[\"xpub\"], xpub)\n+\n+        descs = wallet.listdescriptors(True)\n+        for desc in descs[\"descriptors\"]:\n+            if \"range\" in desc:\n+                assert xprv in desc[\"desc\"]\n+\n+        wallet.encryptwallet(\"pass\")\n+        assert_raises_rpc_error(-13, \"Error: Please enter the wallet passphrase with walletpassphrase first\", wallet.getxpub, True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390768618",
      "id" : 1390768618,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S5XHq",
      "original_commit_id" : "52697ecc3fd46fdf3c02eba0d474949a9d05d885",
      "original_line" : 47,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "test/functional/wallet_getxpub.py",
      "position" : null,
      "pull_request_review_id" : 1726760385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390768618/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T08:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390768618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390770187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390770187"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 52697ecc3fd46fdf3c02eba0d474949a9d05d885\r\n\r\nnit: maybe add a comment, that you're checking key rotation and non-active descriptors should have pre-rotation key",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-13T08:45:53Z",
      "diff_hunk" : "@@ -0,0 +1,60 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet getxpub RPC.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet_util import WalletUnlock\n+\n+\n+class WalletGetXpubTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, descriptors=True, legacy=False)\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_basic_getxpub()\n+\n+    def test_basic_getxpub(self):\n+        self.log.info(\"Test getxpub basics\")\n+        self.nodes[0].createwallet(\"basic\")\n+        wallet = self.nodes[0].get_wallet_rpc(\"basic\")\n+        xpub_info = wallet.getxpub()\n+        assert \"xprv\" not in xpub_info\n+        xpub = xpub_info[\"xpub\"]\n+\n+        xpub_info = wallet.getxpub(True)\n+        xprv = xpub_info[\"xprv\"]\n+        assert_equal(xpub_info[\"xpub\"], xpub)\n+\n+        descs = wallet.listdescriptors(True)\n+        for desc in descs[\"descriptors\"]:\n+            if \"range\" in desc:\n+                assert xprv in desc[\"desc\"]\n+\n+        wallet.encryptwallet(\"pass\")\n+        assert_raises_rpc_error(-13, \"Error: Please enter the wallet passphrase with walletpassphrase first\", wallet.getxpub, True)\n+        with WalletUnlock(wallet, \"pass\"):\n+            xpub_info = wallet.getxpub(True)\n+            assert xpub_info[\"xpub\"] != xpub\n+            assert xpub_info[\"xprv\"] != xprv\n+            for desc in wallet.listdescriptors(True)[\"descriptors\"]:\n+                if desc[\"active\"]:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1390770187",
      "id" : 1390770187,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S5XgL",
      "original_commit_id" : "52697ecc3fd46fdf3c02eba0d474949a9d05d885",
      "original_line" : 53,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "test/functional/wallet_getxpub.py",
      "position" : null,
      "pull_request_review_id" : 1726760385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390770187/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T08:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390770187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391808366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391808366"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes.",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-13T23:25:55Z",
      "diff_hunk" : "@@ -4358,6 +4366,14 @@ bool CWallet::LoadActiveHDKey(const CExtPubKey& xpub)\n     return true;\n }\n \n+bool CWallet::SetActiveHDKey(const CExtPubKey& xpub)\n+{\n+    AssertLockHeld(cs_wallet);\n+    Assume(m_hd_keys.count(xpub) + m_hd_crypted_keys.count(xpub) == 1);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391808366",
      "id" : 1391808366,
      "in_reply_to_id" : 1390405493,
      "line" : 4510,
      "node_id" : "PRRC_kwDOABII585S9U9u",
      "original_commit_id" : "8276bbeb040c2621afd41ad42e0d84f8f4d249c6",
      "original_line" : 4510,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 217,
      "pull_request_review_id" : 1728442628,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391808366/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-13T23:25:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391808366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391811792"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391811792"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No, the point is so that when we are writing an HD key, this checksum covers the entire xpub too, not just the pubkey part.",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-13T23:31:28Z",
      "diff_hunk" : "@@ -68,6 +68,17 @@ const std::unordered_set<std::string> LEGACY_TYPES{CRYPTED_KEY, CSCRIPT, DEFAULT\n // WalletBatch\n //\n \n+template <typename P>\n+static uint256 PrivKeyChecksum(const CPrivKey& privkey, const P& pubkey)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391811792",
      "id" : 1391811792,
      "in_reply_to_id" : 1384538002,
      "line" : 75,
      "node_id" : "PRRC_kwDOABII585S9VzQ",
      "original_commit_id" : "8a2475573270b7bc0a7d99cd94d9908cd48bd6bd",
      "original_line" : 72,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 22,
      "pull_request_review_id" : 1728447109,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391811792/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-13T23:31:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391811792",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391815934"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391815934"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think that's helpful here since we need to get a copy of the serialized xpub in order to calculate the checksum.",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-13T23:38:58Z",
      "diff_hunk" : "@@ -298,6 +301,40 @@ bool WalletBatch::EraseLockedUTXO(const COutPoint& output)\n     return EraseIC(std::make_pair(DBKeys::LOCKED_UTXO, std::make_pair(output.hash, output.n)));\n }\n \n+bool WalletBatch::WriteHDKey(const CExtKey& extkey)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extkey.Neuter().Encode(xpub.data());\n+\n+    CPrivKey privkey = extkey.key.GetPrivKey();\n+\n+    return WriteIC(std::make_pair(DBKeys::HDKEY, xpub), std::make_pair(privkey, PrivKeyChecksum(privkey, xpub)), false);\n+}\n+\n+bool WalletBatch::WriteHDCryptedKey(const CExtPubKey& extpub, const std::vector<unsigned char>& crypted_key)\n+{\n+    // Compute a checksum of the encrypted key\n+    uint256 checksum = Hash(crypted_key);\n+\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extpub.Encode(xpub.data());\n+\n+    const auto key = std::make_pair(DBKeys::HDCKEY, xpub);\n+    if (!WriteIC(key, std::make_pair(crypted_key, checksum), false)) {\n+        return false;\n+    }\n+    EraseIC(std::make_pair(DBKeys::HDKEY, xpub));\n+    return true;\n+}\n+\n+bool WalletBatch::WriteActiveHDKey(const CExtPubKey& extpub)\n+{\n+    std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+    extpub.Encode(xpub.data());\n+\n+    return WriteIC(DBKeys::ACTIVEHDKEY, xpub, true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391815934",
      "id" : 1391815934,
      "in_reply_to_id" : 1386191801,
      "line" : 335,
      "node_id" : "PRRC_kwDOABII585S9Wz-",
      "original_commit_id" : "95153f0152c057101e894e2ca73aee78be267b33",
      "original_line" : 335,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 100,
      "pull_request_review_id" : 1728453018,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391815934/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-13T23:38:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391815934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833461"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-14T00:10:40Z",
      "diff_hunk" : "@@ -844,6 +844,25 @@ bool CWallet::EncryptWallet(const SecureString& strWalletPassphrase)\n             }\n         }\n \n+        // Encrypt the HD keys\n+        assert(m_hd_crypted_keys.empty());\n+        for (const auto& [xpub, key] : m_hd_keys) {\n+            std::vector<unsigned char> crypted_secret;\n+            CKeyingMaterial secret(key.begin(), key.end());\n+            if (!EncryptSecret(_vMasterKey, secret, xpub.pubkey.GetHash(), crypted_secret)) {\n+                encrypted_batch->TxnAbort();\n+                delete encrypted_batch;\n+                encrypted_batch = nullptr;\n+                // We now probably have half of our keys encrypted in memory, and half not...\n+                // die and let the user reload the unencrypted wallet.\n+                assert(false);\n+            }\n+\n+            m_hd_crypted_keys[xpub] = crypted_secret;\n+            encrypted_batch->WriteHDCryptedKey(xpub, crypted_secret);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833461",
      "id" : 1391833461,
      "in_reply_to_id" : 1390404008,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S9bF1",
      "original_commit_id" : "96365a0b182858d686e695a153af232c7b3740c9",
      "original_line" : 862,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1728476595,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833461/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-14T00:10:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833501"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833501"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added `Assume`",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-14T00:10:44Z",
      "diff_hunk" : "@@ -4374,6 +4374,15 @@ bool CWallet::SetActiveHDKey(const CExtPubKey& xpub)\n     return WalletBatch(GetDatabase()).WriteActiveHDKey(xpub);\n }\n \n+std::optional<CExtPubKey> CWallet::GetActiveHDPubKey()\n+{\n+    AssertLockHeld(cs_wallet);\n+    if (m_xpub.pubkey.IsValid()) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833501",
      "id" : 1391833501,
      "in_reply_to_id" : 1390408127,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S9bGd",
      "original_commit_id" : "e693bd02610df20f73c008b03c739da5d69fcf76",
      "original_line" : 4380,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1728476655,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833501/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-14T00:10:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833501",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done as suggested",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-14T00:10:48Z",
      "diff_hunk" : "@@ -4374,6 +4374,15 @@ bool CWallet::SetActiveHDKey(const CExtPubKey& xpub)\n     return WalletBatch(GetDatabase()).WriteActiveHDKey(xpub);\n }\n \n+std::optional<CExtPubKey> CWallet::GetActiveHDPubKey()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833534",
      "id" : 1391833534,
      "in_reply_to_id" : 1390409054,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S9bG-",
      "original_commit_id" : "e693bd02610df20f73c008b03c739da5d69fcf76",
      "original_line" : 4377,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1728476704,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-14T00:10:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833557"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833557"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Renamed as suggested",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-14T00:10:51Z",
      "diff_hunk" : "@@ -809,6 +809,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833557",
      "id" : 1391833557,
      "in_reply_to_id" : 1390410589,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S9bHV",
      "original_commit_id" : "9900207360a2852041ceed260c3430e92ff860c5",
      "original_line" : 812,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1728476741,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833557/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-14T00:10:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833557",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833583"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Dropped",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-14T00:10:54Z",
      "diff_hunk" : "@@ -809,6 +809,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()\n+{\n+    return RPCHelpMan{\"getxpub\",\n+                \"Returns the xpub most recently used to generate descriptors for this descriptor wallet. \"\n+                \"Not entirely useful right now as it returns the xpub of the root, and there are \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833583",
      "id" : 1391833583,
      "in_reply_to_id" : 1390410691,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S9bHv",
      "original_commit_id" : "9900207360a2852041ceed260c3430e92ff860c5",
      "original_line" : 816,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1728476779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833583/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-14T00:10:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833583",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833609"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-14T00:10:57Z",
      "diff_hunk" : "@@ -809,6 +809,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()\n+{\n+    return RPCHelpMan{\"getxpub\",\n+                \"Returns the xpub most recently used to generate descriptors for this descriptor wallet. \"\n+                \"Not entirely useful right now as it returns the xpub of the root, and there are \"\n+                \"hardened derivation steps involved in normal key derivation.\\n\",\n+                {\n+                    {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Whether to include the xprv\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {{\n+                        {RPCResult::Type::STR, \"xpub\", \"The xpub\"},\n+                        {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The xprv if private is true\"},\n+                    }},\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getxpub\", \"\")\n+            + HelpExampleRpc(\"getxpub\", \"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<CWallet> pwallet = GetWalletForJSONRPCRequest(request);\n+            if (!pwallet) return NullUniValue;\n+\n+            if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"getxpub is not available for non-descriptor wallets\");\n+            }\n+\n+            LOCK(pwallet->cs_wallet);\n+\n+            UniValue obj(UniValue::VOBJ);\n+            std::optional<CExtPubKey> extpub = pwallet->GetActiveHDPubKey();\n+            if (!extpub) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"This wallet does not have an active xpub\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833609",
      "id" : 1391833609,
      "in_reply_to_id" : 1390411731,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S9bIJ",
      "original_commit_id" : "9900207360a2852041ceed260c3430e92ff860c5",
      "original_line" : 846,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1728476807,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833609/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-14T00:10:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833667"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-14T00:11:02Z",
      "diff_hunk" : "@@ -809,6 +809,61 @@ static RPCHelpMan migratewallet()\n     };\n }\n \n+RPCHelpMan getxpub()\n+{\n+    return RPCHelpMan{\"getxpub\",\n+                \"Returns the xpub most recently used to generate descriptors for this descriptor wallet. \"\n+                \"Not entirely useful right now as it returns the xpub of the root, and there are \"\n+                \"hardened derivation steps involved in normal key derivation.\\n\",\n+                {\n+                    {\"private\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"Whether to include the xprv\"},\n+                },\n+                RPCResult{\n+                    RPCResult::Type::OBJ, \"\", \"\",\n+                    {{\n+                        {RPCResult::Type::STR, \"xpub\", \"The xpub\"},\n+                        {RPCResult::Type::STR, \"xprv\", /*optional=*/true, \"The xprv if private is true\"},\n+                    }},\n+                },\n+                RPCExamples{\n+                    HelpExampleCli(\"getxpub\", \"\")\n+            + HelpExampleRpc(\"getxpub\", \"\")\n+                },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            const std::shared_ptr<CWallet> pwallet = GetWalletForJSONRPCRequest(request);\n+            if (!pwallet) return NullUniValue;\n+\n+            if (!pwallet->IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"getxpub is not available for non-descriptor wallets\");\n+            }\n+\n+            LOCK(pwallet->cs_wallet);\n+\n+            UniValue obj(UniValue::VOBJ);\n+            std::optional<CExtPubKey> extpub = pwallet->GetActiveHDPubKey();\n+            if (!extpub) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"This wallet does not have an active xpub\");\n+            }\n+            std::string xpub = EncodeExtPubKey(*extpub);\n+            obj.pushKV(\"xpub\", xpub);\n+\n+            bool priv = !request.params[0].isNull() && request.params[0].get_bool();\n+            if (priv) {\n+                EnsureWalletIsUnlocked(*pwallet);\n+                std::optional<CExtKey> extkey = pwallet->GetHDKey(*extpub);\n+                if (!extkey) {\n+                    throw JSONRPCError(RPC_WALLET_ERROR, \"Could not find the xprv for active key\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833667",
      "id" : 1391833667,
      "in_reply_to_id" : 1390411824,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S9bJD",
      "original_commit_id" : "9900207360a2852041ceed260c3430e92ff860c5",
      "original_line" : 856,
      "original_position" : 48,
      "original_start_line" : null,
      "path" : "src/wallet/rpc/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1728476875,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833667/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-14T00:11:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833705"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833705"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point, changed to two functions `GetRootPubKey` and `GetRootExtPubKey`, each returning an optional `CPubKey` or `CExtPubKey`, respectively.",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-14T00:11:06Z",
      "diff_hunk" : "@@ -212,6 +212,12 @@ struct PubkeyProvider\n \n     /** Derive a private key, if private data is available in arg. */\n     virtual bool GetPrivKey(int pos, const SigningProvider& arg, CKey& key) const = 0;\n+\n+    /** Return all (extended) public keys for this PubkeyProvider\n+     * param[out] pubkeys Any public keys\n+     * param[out] ext_pubs Any extended public keys\n+     */\n+    virtual void GetRootPubKeys(std::set<CPubKey>& pubkeys, std::set<CExtPubKey>& ext_pubs) const = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1391833705",
      "id" : 1391833705,
      "in_reply_to_id" : 1390414352,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S9bJp",
      "original_commit_id" : "8fcd9cfb4c1dac680e9c6702b7af9517a578210d",
      "original_line" : 220,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/script/descriptor.cpp",
      "position" : null,
      "pull_request_review_id" : 1728476918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833705/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-14T00:11:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391833705",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-utACK e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1\r\n\r\nAlso rebased #22341 after the name change.",
      "created_at" : "2023-11-14T06:12:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1809604000",
      "id" : 1809604000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585r3F2g",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809604000/reactions"
      },
      "updated_at" : "2023-11-14T06:12:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809604000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1392138071"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392138071"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "@achow101 IIUC you addressed this as well",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-14T07:59:46Z",
      "diff_hunk" : "@@ -4239,7 +4249,7 @@ bool DoMigration(CWallet& wallet, WalletContext& context, bilingual_str& error,\n         empty_context.args = context.args;\n \n         // Make the wallets\n-        options.create_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET | WALLET_FLAG_DESCRIPTORS;\n+        options.create_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET | WALLET_FLAG_DESCRIPTORS | WALLET_FLAG_GLOBAL_HD_KEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1392138071",
      "id" : 1392138071,
      "in_reply_to_id" : 1388101787,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S-ldX",
      "original_commit_id" : "5809c90fee6dd2c2a16ef6e9cf104ecaf9ec5fdf",
      "original_line" : 4252,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1726760385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392138071/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T08:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1392138071",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395310367"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395310367"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 2657c1295cb156d6021844edf18b1a4dc5ce7136\r\n\r\nnit: can also check that HD key is the same as return by the old version (e.g. by checking fingerprint with `hdmasterfingerprint`)",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-16T08:20:16Z",
      "diff_hunk" : "@@ -351,6 +351,13 @@ def run_test(self):\n             descriptor = f\"wpkh([{info['hdmasterfingerprint']}{hdkeypath[1:]}]{pubkey})\"\n             assert_equal(info[\"desc\"], descsum_create(descriptor))\n \n+            # Check that descriptor wallets have hd key\n+            if self.options.descriptors:\n+                descs = wallet.listdescriptors(True)\n+                xpub_info = wallet.gethdkey(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395310367",
      "id" : 1395310367,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585TKr8f",
      "original_commit_id" : "2657c1295cb156d6021844edf18b1a4dc5ce7136",
      "original_line" : 357,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 1726760385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395310367/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T08:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395310367",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395327696"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395327696"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1\r\n\r\nif `key_hex not in k` then `ckey_hex not in k` is always true by definition\r\nTherefore `key_hex not in k and ckey_hex not in k` seems redundant to me.",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-16T08:33:11Z",
      "diff_hunk" : "@@ -47,6 +49,25 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir_path, \"wallet.dump\")\n+        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir_path}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)\n+        self.nodes[0].loadwallet(self.default_wallet_name)\n+        # Look for records that contain the hex for 'key' but not 'ckey'\n+        key_hex = b\"key\".hex()\n+        ckey_hex = b\"ckey\".hex()\n+        # Hex for records to skip\n+        skip_records = [b\"mkey\".hex(), b\"activehdkey\".hex(), b\"defaultkey\".hex(), b\"keymeta\".hex()]\n+        with open(dump_file, \"r\", encoding=\"utf8\") as f:\n+            for row in f:\n+                k, v = row.split(\",\")\n+                # Skip 'mkey' records. These aren't private key records.\n+                if any([skip in k for skip in skip_records]):\n+                    continue\n+                assert (key_hex in k and ckey_hex in k) or (key_hex not in k and ckey_hex not in k), \"Unexpected unencrypted key record\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395327696",
      "id" : 1395327696,
      "line" : 69,
      "node_id" : "PRRC_kwDOABII585TKwLQ",
      "original_commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "original_line" : 69,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : 30,
      "pull_request_review_id" : 1726760385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395327696/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T08:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395327696",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395330786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395330786"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1\r\n\r\nRelying that all encrypted keys contain `ckey` seems fragile. Can we maybe list all the encrypted key records?",
      "commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "created_at" : "2023-11-16T08:34:23Z",
      "diff_hunk" : "@@ -47,6 +49,25 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir_path, \"wallet.dump\")\n+        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir_path}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)\n+        self.nodes[0].loadwallet(self.default_wallet_name)\n+        # Look for records that contain the hex for 'key' but not 'ckey'\n+        key_hex = b\"key\".hex()\n+        ckey_hex = b\"ckey\".hex()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395330786",
      "id" : 1395330786,
      "line" : 60,
      "node_id" : "PRRC_kwDOABII585TKw7i",
      "original_commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "original_line" : 60,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : 21,
      "pull_request_review_id" : 1726760385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395330786/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T08:35:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395330786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395768687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395768687"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes.",
      "commit_id" : "bdc97edb730ae60a6fdc7c153f7aa058e06dc849",
      "created_at" : "2023-11-16T14:21:17Z",
      "diff_hunk" : "@@ -4239,7 +4249,7 @@ bool DoMigration(CWallet& wallet, WalletContext& context, bilingual_str& error,\n         empty_context.args = context.args;\n \n         // Make the wallets\n-        options.create_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET | WALLET_FLAG_DESCRIPTORS;\n+        options.create_flags = WALLET_FLAG_DISABLE_PRIVATE_KEYS | WALLET_FLAG_BLANK_WALLET | WALLET_FLAG_DESCRIPTORS | WALLET_FLAG_GLOBAL_HD_KEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395768687",
      "id" : 1395768687,
      "in_reply_to_id" : 1388101787,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585TMb1v",
      "original_commit_id" : "5809c90fee6dd2c2a16ef6e9cf104ecaf9ec5fdf",
      "original_line" : 4252,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1734504663,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395768687/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T14:21:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395768687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395832165"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395832165"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "bdc97edb730ae60a6fdc7c153f7aa058e06dc849",
      "created_at" : "2023-11-16T14:48:36Z",
      "diff_hunk" : "@@ -560,6 +560,124 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // For all candidate xpubs, add corresponding private keys if available\n+    for (const auto& [id_pair, key] : desc_keys) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395832165",
      "id" : 1395832165,
      "in_reply_to_id" : 1390757392,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585TMrVl",
      "original_commit_id" : "18dc28f14ee1de561625913d286d68031ab9b3dd",
      "original_line" : 647,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1734605347,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395832165/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T14:48:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395832165",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395832532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395832532"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "bdc97edb730ae60a6fdc7c153f7aa058e06dc849",
      "created_at" : "2023-11-16T14:48:41Z",
      "diff_hunk" : "@@ -560,6 +560,124 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet and tries to find a CExtPubKey\n+ * which is likely to be the most recent one used to generate all of the automatically generated descriptors.\n+ * The automatically generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh. There may\n+ * be 2 p2tr descriptors, as well as imports. Those are ignored as they are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as the only key. The best candidate is\n+ * selected as the one that was most recently used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key. Any other candidates will be added as\n+ * HD keys that have been rotated out.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade has occurred.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<DescIDKeyIDPair, CKey>& desc_keys, const std::map<DescIDKeyIDPair, CryptedKeyPair>& desc_crypt_keys)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY)\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    // For all candidate xpubs, add corresponding private keys if available\n+    for (const auto& [id_pair, key] : desc_keys) {\n+        const auto& [desc_id, keyid] = id_pair;\n+\n+        const auto& it = xpubs.find(keyid);\n+        if (it == xpubs.end()) {\n+            continue;\n+        }\n+\n+        CExtKey extkey(it->second, key);\n+        AddHDKey(extkey);\n+        xpubs.erase(it);\n+    }\n+    WalletBatch batch(GetDatabase());\n+    for (const auto& [id_pair, key_pair] : desc_crypt_keys) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395832532",
      "id" : 1395832532,
      "in_reply_to_id" : 1390758254,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585TMrbU",
      "original_commit_id" : "18dc28f14ee1de561625913d286d68031ab9b3dd",
      "original_line" : 660,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1734605885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395832532/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T14:48:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395832532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395833096"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395833096"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a test",
      "commit_id" : "bdc97edb730ae60a6fdc7c153f7aa058e06dc849",
      "created_at" : "2023-11-16T14:48:48Z",
      "diff_hunk" : "@@ -0,0 +1,60 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet getxpub RPC.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet_util import WalletUnlock\n+\n+\n+class WalletGetXpubTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, descriptors=True, legacy=False)\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_basic_getxpub()\n+\n+    def test_basic_getxpub(self):\n+        self.log.info(\"Test getxpub basics\")\n+        self.nodes[0].createwallet(\"basic\")\n+        wallet = self.nodes[0].get_wallet_rpc(\"basic\")\n+        xpub_info = wallet.getxpub()\n+        assert \"xprv\" not in xpub_info\n+        xpub = xpub_info[\"xpub\"]\n+\n+        xpub_info = wallet.getxpub(True)\n+        xprv = xpub_info[\"xprv\"]\n+        assert_equal(xpub_info[\"xpub\"], xpub)\n+\n+        descs = wallet.listdescriptors(True)\n+        for desc in descs[\"descriptors\"]:\n+            if \"range\" in desc:\n+                assert xprv in desc[\"desc\"]\n+\n+        wallet.encryptwallet(\"pass\")\n+        assert_raises_rpc_error(-13, \"Error: Please enter the wallet passphrase with walletpassphrase first\", wallet.getxpub, True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395833096",
      "id" : 1395833096,
      "in_reply_to_id" : 1390768618,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585TMrkI",
      "original_commit_id" : "52697ecc3fd46fdf3c02eba0d474949a9d05d885",
      "original_line" : 47,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "test/functional/wallet_getxpub.py",
      "position" : null,
      "pull_request_review_id" : 1734606738,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395833096/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T14:48:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395833096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395833751"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395833751"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added some comments.",
      "commit_id" : "bdc97edb730ae60a6fdc7c153f7aa058e06dc849",
      "created_at" : "2023-11-16T14:48:55Z",
      "diff_hunk" : "@@ -0,0 +1,60 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2023 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test wallet getxpub RPC.\"\"\"\n+\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import (\n+    assert_equal,\n+    assert_raises_rpc_error,\n+)\n+from test_framework.wallet_util import WalletUnlock\n+\n+\n+class WalletGetXpubTest(BitcoinTestFramework):\n+    def add_options(self, parser):\n+        self.add_wallet_options(parser, descriptors=True, legacy=False)\n+\n+    def set_test_params(self):\n+        self.setup_clean_chain = True\n+        self.num_nodes = 1\n+\n+    def skip_test_if_missing_module(self):\n+        self.skip_if_no_wallet()\n+\n+    def run_test(self):\n+        self.test_basic_getxpub()\n+\n+    def test_basic_getxpub(self):\n+        self.log.info(\"Test getxpub basics\")\n+        self.nodes[0].createwallet(\"basic\")\n+        wallet = self.nodes[0].get_wallet_rpc(\"basic\")\n+        xpub_info = wallet.getxpub()\n+        assert \"xprv\" not in xpub_info\n+        xpub = xpub_info[\"xpub\"]\n+\n+        xpub_info = wallet.getxpub(True)\n+        xprv = xpub_info[\"xprv\"]\n+        assert_equal(xpub_info[\"xpub\"], xpub)\n+\n+        descs = wallet.listdescriptors(True)\n+        for desc in descs[\"descriptors\"]:\n+            if \"range\" in desc:\n+                assert xprv in desc[\"desc\"]\n+\n+        wallet.encryptwallet(\"pass\")\n+        assert_raises_rpc_error(-13, \"Error: Please enter the wallet passphrase with walletpassphrase first\", wallet.getxpub, True)\n+        with WalletUnlock(wallet, \"pass\"):\n+            xpub_info = wallet.getxpub(True)\n+            assert xpub_info[\"xpub\"] != xpub\n+            assert xpub_info[\"xprv\"] != xprv\n+            for desc in wallet.listdescriptors(True)[\"descriptors\"]:\n+                if desc[\"active\"]:",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395833751",
      "id" : 1395833751,
      "in_reply_to_id" : 1390770187,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585TMruX",
      "original_commit_id" : "52697ecc3fd46fdf3c02eba0d474949a9d05d885",
      "original_line" : 53,
      "original_position" : 53,
      "original_start_line" : null,
      "path" : "test/functional/wallet_getxpub.py",
      "position" : null,
      "pull_request_review_id" : 1734607758,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395833751/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T14:48:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395833751",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395834444"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395834444"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "bdc97edb730ae60a6fdc7c153f7aa058e06dc849",
      "created_at" : "2023-11-16T14:49:03Z",
      "diff_hunk" : "@@ -351,6 +351,13 @@ def run_test(self):\n             descriptor = f\"wpkh([{info['hdmasterfingerprint']}{hdkeypath[1:]}]{pubkey})\"\n             assert_equal(info[\"desc\"], descsum_create(descriptor))\n \n+            # Check that descriptor wallets have hd key\n+            if self.options.descriptors:\n+                descs = wallet.listdescriptors(True)\n+                xpub_info = wallet.gethdkey(True)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395834444",
      "id" : 1395834444,
      "in_reply_to_id" : 1395310367,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585TMr5M",
      "original_commit_id" : "2657c1295cb156d6021844edf18b1a4dc5ce7136",
      "original_line" : 357,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : null,
      "pull_request_review_id" : 1734608892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395834444/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T14:49:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395834444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395835281"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395835281"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Simplified this check",
      "commit_id" : "bdc97edb730ae60a6fdc7c153f7aa058e06dc849",
      "created_at" : "2023-11-16T14:49:12Z",
      "diff_hunk" : "@@ -47,6 +49,25 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir_path, \"wallet.dump\")\n+        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir_path}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)\n+        self.nodes[0].loadwallet(self.default_wallet_name)\n+        # Look for records that contain the hex for 'key' but not 'ckey'\n+        key_hex = b\"key\".hex()\n+        ckey_hex = b\"ckey\".hex()\n+        # Hex for records to skip\n+        skip_records = [b\"mkey\".hex(), b\"activehdkey\".hex(), b\"defaultkey\".hex(), b\"keymeta\".hex()]\n+        with open(dump_file, \"r\", encoding=\"utf8\") as f:\n+            for row in f:\n+                k, v = row.split(\",\")\n+                # Skip 'mkey' records. These aren't private key records.\n+                if any([skip in k for skip in skip_records]):\n+                    continue\n+                assert (key_hex in k and ckey_hex in k) or (key_hex not in k and ckey_hex not in k), \"Unexpected unencrypted key record\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395835281",
      "id" : 1395835281,
      "in_reply_to_id" : 1395327696,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585TMsGR",
      "original_commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "original_line" : 69,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : null,
      "pull_request_review_id" : 1734610192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395835281/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T14:49:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395835281",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395839164"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395839164"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's more futureproof to check for `ckey` since all new records involving encrypted keys have always had that suffix.",
      "commit_id" : "bdc97edb730ae60a6fdc7c153f7aa058e06dc849",
      "created_at" : "2023-11-16T14:50:04Z",
      "diff_hunk" : "@@ -47,6 +49,25 @@ def run_test(self):\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrase, '', 1)\n         assert_raises_rpc_error(-8, \"passphrase cannot be empty\", self.nodes[0].walletpassphrasechange, '', 'ff')\n \n+        # Make sure there are no unencrypted key records\n+        # Use the wallet tool's dump mechanism to get all of the records to inspect them.\n+        self.nodes[0].unloadwallet(self.default_wallet_name)\n+        dump_file = os.path.join(self.nodes[0].datadir_path, \"wallet.dump\")\n+        subprocess.check_call([self.options.bitcoinwallet, f\"-datadir={self.nodes[0].datadir_path}\", f\"-chain={self.chain}\", f\"-wallet={self.default_wallet_name}\", f\"-dumpfile={dump_file}\", \"dump\"], stdout=subprocess.DEVNULL)\n+        self.nodes[0].loadwallet(self.default_wallet_name)\n+        # Look for records that contain the hex for 'key' but not 'ckey'\n+        key_hex = b\"key\".hex()\n+        ckey_hex = b\"ckey\".hex()",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1395839164",
      "id" : 1395839164,
      "in_reply_to_id" : 1395330786,
      "line" : 60,
      "node_id" : "PRRC_kwDOABII585TMtC8",
      "original_commit_id" : "e3c292b298e5e6f2ec319fb93ba67fd64a0f4ac1",
      "original_line" : 60,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "test/functional/wallet_encryption.py",
      "position" : 21,
      "pull_request_review_id" : 1734616586,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395839164/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-16T14:50:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1395839164",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1401672632"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401672632"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 9426d3e7e5c884cd9ed31f2569a38a6e3712cc2c\r\n\r\nWe do other upgrade procedures in `LoadWallet()` function and only if `result != DBErrors::LOAD_OK`\r\nDo we want to do the same for `UpgradeToGlobalHDKey`?",
      "commit_id" : "e145b32442a47d330c3b3db82a8fdd48dc1c8150",
      "created_at" : "2023-11-22T08:27:49Z",
      "diff_hunk" : "@@ -1063,6 +1067,9 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n         // Only log if there are no critical errors\n         pwallet->WalletLogPrintf(\"Descriptors: %u, Descriptor Keys: %u plaintext, %u encrypted, %u total.\\n\",\n                desc_res.m_records, num_keys, num_ckeys, num_keys + num_ckeys);\n+\n+        // Upgrade the wallet to have a global HD key\n+        pwallet->UpgradeToGlobalHDKey(desc_keys, desc_crypt_keys);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1401672632",
      "id" : 1401672632,
      "line" : 1072,
      "node_id" : "PRRC_kwDOABII585Ti9O4",
      "original_commit_id" : "9426d3e7e5c884cd9ed31f2569a38a6e3712cc2c",
      "original_line" : 1072,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 292,
      "pull_request_review_id" : 1743811603,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401672632/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-22T08:27:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401672632",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1401779127"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401779127"
         }
      },
      "author_association" : "NONE",
      "body" : "Hello ",
      "commit_id" : "e145b32442a47d330c3b3db82a8fdd48dc1c8150",
      "created_at" : "2023-11-22T09:49:51Z",
      "diff_hunk" : "@@ -1063,6 +1067,9 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n         // Only log if there are no critical errors\n         pwallet->WalletLogPrintf(\"Descriptors: %u, Descriptor Keys: %u plaintext, %u encrypted, %u total.\\n\",\n                desc_res.m_records, num_keys, num_ckeys, num_keys + num_ckeys);\n+\n+        // Upgrade the wallet to have a global HD key\n+        pwallet->UpgradeToGlobalHDKey(desc_keys, desc_crypt_keys);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1401779127",
      "id" : 1401779127,
      "in_reply_to_id" : 1401672632,
      "line" : 1072,
      "node_id" : "PRRC_kwDOABII585TjXO3",
      "original_commit_id" : "9426d3e7e5c884cd9ed31f2569a38a6e3712cc2c",
      "original_line" : 1072,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 292,
      "pull_request_review_id" : 1743970962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401779127/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-22T09:49:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401779127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/151169232?v=4",
         "events_url" : "https://api.github.com/users/Oeunchamreun90/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Oeunchamreun90/followers",
         "following_url" : "https://api.github.com/users/Oeunchamreun90/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Oeunchamreun90/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Oeunchamreun90",
         "id" : 151169232,
         "login" : "Oeunchamreun90",
         "node_id" : "U_kgDOCQKo0A",
         "organizations_url" : "https://api.github.com/users/Oeunchamreun90/orgs",
         "received_events_url" : "https://api.github.com/users/Oeunchamreun90/received_events",
         "repos_url" : "https://api.github.com/users/Oeunchamreun90/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Oeunchamreun90/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Oeunchamreun90/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Oeunchamreun90"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Almost tested ACK.\r\n\r\nTwo bugs found:\r\n1) For blank wallets `gehdkey` fails due to Assume in GetActiveHDKey\r\n2) create wallet in the feature branch, downgrade to master, encrypt wallet, upgrade to feature branch again. The wallet will fai to load because it now contains both encrypted and non-encrypted records.\r\n\r\nAlso quick question.\r\nShould we add new flag to `KNOWN_WALLET_FLAGS` and `WALLET_FLAG_MAP` maps? \r\n\r\n",
      "created_at" : "2023-11-25T18:44:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1826396081",
      "id" : 1826396081,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585s3Jex",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1826396081/reactions"
      },
      "updated_at" : "2023-11-25T18:44:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1826396081",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The `WalletAvailableCoins` benchmark crashes on this pull:\r\n```bash\r\n./src/bench/bench_bitcoin -filter=WalletAvailableCoins\r\nbench_bitcoin: bench/wallet_create_tx.cpp:148: void AvailableCoins(ankerl::nanobench::Bench&, const std::vector<OutputType>&): Assertion `false' failed.\r\nAborted\r\n```",
      "created_at" : "2023-11-26T15:19:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1826811477",
      "id" : 1826811477,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585s4u5V",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1826811477/reactions"
      },
      "updated_at" : "2023-11-26T15:19:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1826811477",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22493292?v=4",
         "events_url" : "https://api.github.com/users/aureleoules/events{/privacy}",
         "followers_url" : "https://api.github.com/users/aureleoules/followers",
         "following_url" : "https://api.github.com/users/aureleoules/following{/other_user}",
         "gists_url" : "https://api.github.com/users/aureleoules/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/aureleoules",
         "id" : 22493292,
         "login" : "aureleoules",
         "node_id" : "MDQ6VXNlcjIyNDkzMjky",
         "organizations_url" : "https://api.github.com/users/aureleoules/orgs",
         "received_events_url" : "https://api.github.com/users/aureleoules/received_events",
         "repos_url" : "https://api.github.com/users/aureleoules/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/aureleoules/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/aureleoules/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/aureleoules"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1406626136"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406626136"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's fine/better to be doing the upgrade after loading the necessary records. Those other upgrades should probably be moved.",
      "commit_id" : "e145b32442a47d330c3b3db82a8fdd48dc1c8150",
      "created_at" : "2023-11-27T19:06:54Z",
      "diff_hunk" : "@@ -1063,6 +1067,9 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n         // Only log if there are no critical errors\n         pwallet->WalletLogPrintf(\"Descriptors: %u, Descriptor Keys: %u plaintext, %u encrypted, %u total.\\n\",\n                desc_res.m_records, num_keys, num_ckeys, num_keys + num_ckeys);\n+\n+        // Upgrade the wallet to have a global HD key\n+        pwallet->UpgradeToGlobalHDKey(desc_keys, desc_crypt_keys);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1406626136",
      "id" : 1406626136,
      "in_reply_to_id" : 1401672632,
      "line" : 1072,
      "node_id" : "PRRC_kwDOABII585T12lY",
      "original_commit_id" : "9426d3e7e5c884cd9ed31f2569a38a6e3712cc2c",
      "original_line" : 1072,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 292,
      "pull_request_review_id" : 1751171976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406626136/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-27T19:06:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1406626136",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> 1\\. For blank wallets `gehdkey` fails due to Assume in GetActiveHDKey\r\n\r\nFixed.\r\n\r\n> 2\\. create wallet in the feature branch, downgrade to master, encrypt wallet, upgrade to feature branch again. The wallet will fai to load because it now contains both encrypted and non-encrypted records.\r\n\r\nThis is slightly problematic since we don't want to automatically upgrade a wallet in a way that prevents downgrading. I've changed the approach in this PR to only store the active xpub. The private keys will instead be retrieved from the descriptors during loading and stored in memory in the wallet, so there is no longer `hdkey` or `hdckey` records. This should resolve the downgrading issue while retaining most of the functionality of this PR.\r\n\r\nThis does mean that key rotation as had been previously implemented is no longer easy to do.",
      "created_at" : "2023-11-27T21:21:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1828635642",
      "id" : 1828635642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585s_sP6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828635642/reactions"
      },
      "updated_at" : "2023-11-27T21:21:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828635642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The `WalletAvailableCoins` benchmark crashes on this pull:\r\n\r\nSeems to have been fixed.",
      "created_at" : "2023-11-27T22:11:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1828706627",
      "id" : 1828706627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585s_9lD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828706627/reactions"
      },
      "updated_at" : "2023-11-27T22:11:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1828706627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Mmm, I'm not a huge fan of running the relatively complicated migration code in c938680fb97010b16209f1ae05063cd1ff5c8b83 on every wallet load for all future versions of Bitcoin Core, just to deal with an unlikely downgrade -> upgrade path.",
      "created_at" : "2023-11-28T13:34:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1829858182",
      "id" : 1829858182,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585tEWuG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1829858182/reactions"
      },
      "updated_at" : "2023-11-28T13:34:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1829858182",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Mmm, I'm not a huge fan of running the relatively complicated migration code in [c938680](https://github.com/bitcoin/bitcoin/commit/c938680fb97010b16209f1ae05063cd1ff5c8b83) on every wallet load for all future versions of Bitcoin Core, just to deal with an unlikely downgrade -> upgrade path.\r\n\r\nIt doesn't. It still only runs once in order to set `activehdkey`. After that, on loading, we just check to see if 1) there is an `activehdkey` and 2) which descriptor key matches the `activehdkey`. It's also valid to not have an `activehdkey`.",
      "created_at" : "2023-11-28T13:53:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1829891377",
      "id" : 1829891377,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585tEe0x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1829891377/reactions"
      },
      "updated_at" : "2023-11-28T13:53:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1829891377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-11-28T19:10:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1830510610",
      "id" : 1830510610,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585tG2AS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1830510610/reactions"
      },
      "updated_at" : "2023-11-28T19:10:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1830510610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It might be useful to update the PR description to briefly describe the new fields that are added and what the migration does.",
      "created_at" : "2023-11-29T09:30:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1831530404",
      "id" : 1831530404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585tKu-k",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1831530404/reactions"
      },
      "updated_at" : "2023-11-29T09:30:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1831530404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-11-29T15:20:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1832101982",
      "id" : 1832101982,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585tM6he",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832101982/reactions"
      },
      "updated_at" : "2023-11-29T15:20:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832101982",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/152159?v=4",
         "events_url" : "https://api.github.com/users/RandyMcMillan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/RandyMcMillan/followers",
         "following_url" : "https://api.github.com/users/RandyMcMillan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/RandyMcMillan",
         "id" : 152159,
         "login" : "RandyMcMillan",
         "node_id" : "MDQ6VXNlcjE1MjE1OQ==",
         "organizations_url" : "https://api.github.com/users/RandyMcMillan/orgs",
         "received_events_url" : "https://api.github.com/users/RandyMcMillan/received_events",
         "repos_url" : "https://api.github.com/users/RandyMcMillan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/RandyMcMillan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/RandyMcMillan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> added basic coverage for it here [furszy@c9fcda2](https://github.com/furszy/bitcoin-core/commit/c9fcda2de1d6165229f0c45eec9052b02c9516cd). Feel free to take it achow.\r\n\r\nPulled\r\n\r\n> It might be useful to update the PR description to briefly describe the new fields that are added and what the migration does.\r\n\r\nUpdated.",
      "created_at" : "2023-11-29T17:19:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1832374836",
      "id" : 1832374836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585tN9I0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832374836/reactions"
      },
      "updated_at" : "2023-11-29T17:24:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832374836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1410304313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410304313"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 14738e9a12c3d128f52875cf56b2ecacc6e62642\r\n\r\nnit. The code is used during wallet loading. Should we instead of `Assert` return error so we can log proper corruption error?",
      "commit_id" : "ac3b860bff4279ff470560d0ccad9b2fc09672a9",
      "created_at" : "2023-11-30T08:16:39Z",
      "diff_hunk" : "@@ -4317,4 +4317,16 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     }\n     return res;\n }\n+\n+void CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const CKey& key, const std::vector<unsigned char>& crypted_key)\n+{\n+    AssertLockHeld(cs_wallet);\n+    Assert(xpub.pubkey.IsValid());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1410304313",
      "id" : 1410304313,
      "line" : 4438,
      "node_id" : "PRRC_kwDOABII585UD4k5",
      "original_commit_id" : "14738e9a12c3d128f52875cf56b2ecacc6e62642",
      "original_line" : 4324,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 159,
      "pull_request_review_id" : 1756870858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410304313/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T08:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1410304313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1413520408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413520408"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 14738e9a12c3d128f52875cf56b2ecacc6e62642\r\n\r\nCan we make `key` optional to avoid passing invalid keys?",
      "commit_id" : "ac3b860bff4279ff470560d0ccad9b2fc09672a9",
      "created_at" : "2023-12-04T08:26:33Z",
      "diff_hunk" : "@@ -4317,4 +4317,16 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     }\n     return res;\n }\n+\n+void CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const CKey& key, const std::vector<unsigned char>& crypted_key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1413520408",
      "id" : 1413520408,
      "line" : 4435,
      "node_id" : "PRRC_kwDOABII585UQJwY",
      "original_commit_id" : "14738e9a12c3d128f52875cf56b2ecacc6e62642",
      "original_line" : 4321,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 156,
      "pull_request_review_id" : 1756870858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413520408/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T08:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413520408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1413528877"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413528877"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in eca964a8c07cf43b45e2c0482614ded390d42fec\r\n\r\nnit: Could also `Assume` that decryption is successful ",
      "commit_id" : "ac3b860bff4279ff470560d0ccad9b2fc09672a9",
      "created_at" : "2023-12-04T08:34:58Z",
      "diff_hunk" : "@@ -4369,4 +4369,34 @@ std::optional<CExtPubKey> CWallet::GetActiveHDPubKey()\n     }\n     return std::nullopt;\n }\n+\n+std::optional<CExtKey> CWallet::GetActiveHDPrivKey()\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    if (!m_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+\n+    CKey key;\n+    if (IsCrypted()) {\n+        if (IsLocked()) {\n+            return std::nullopt;\n+        }\n+        if (!Assume(!m_hd_crypted_key.empty())) {\n+            return std::nullopt;\n+        }\n+        if (!DecryptKey(GetEncryptionKey(), m_hd_crypted_key, m_xpub.pubkey, key)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1413528877",
      "id" : 1413528877,
      "line" : 4501,
      "node_id" : "PRRC_kwDOABII585UQL0t",
      "original_commit_id" : "eca964a8c07cf43b45e2c0482614ded390d42fec",
      "original_line" : 4389,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 222,
      "pull_request_review_id" : 1756870858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413528877/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T08:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413528877",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1413558248"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413558248"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "in 14738e9a12c3d128f52875cf56b2ecacc6e62642\r\n\r\nnit: should we make the variables optional to avoid storing invalid keys?",
      "commit_id" : "ac3b860bff4279ff470560d0ccad9b2fc09672a9",
      "created_at" : "2023-12-04T09:01:18Z",
      "diff_hunk" : "@@ -315,6 +315,11 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended key used for new automatically generated descriptors\n+    CExtPubKey m_xpub GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1413558248",
      "id" : 1413558248,
      "line" : 320,
      "node_id" : "PRRC_kwDOABII585UQS_o",
      "original_commit_id" : "14738e9a12c3d128f52875cf56b2ecacc6e62642",
      "original_line" : 319,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 15,
      "pull_request_review_id" : 1756870858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413558248/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T08:04:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413558248",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416209707"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416209707"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Refactor privkey checksum calc\" (0a59e878006763817d53017e50d268b32868bd8d)\r\n\r\n> No, the point is so that when we are writing an HD key, this checksum covers the entire xpub too, not just the pubkey part.\r\n\r\nI don't understand this, since the following change compiles:\r\n\r\n```diff\r\n--- a/src/wallet/walletdb.cpp\r\n+++ b/src/wallet/walletdb.cpp\r\n@@ -69,8 +69,7 @@ const std::unordered_set<std::string> LEGACY_TYPES{CRYPTED_KEY, CSCRIPT, DEFAULT\r\n // WalletBatch\r\n //\r\n \r\n-template <typename P>\r\n-static uint256 PrivKeyChecksum(const CPrivKey& privkey, const P& pubkey)\r\n+static uint256 PrivKeyChecksum(const CPrivKey& privkey, const CPubKey& pubkey)\r\n {\r\n     // hash pubkey/privkey to accelerate wallet load\r\n     std::vector<unsigned char> to_hash;\r\n```\r\n\r\nMaybe you have changes in a later PR depending on this this being a template? IMO, though, it'd be clearer not to make it this template until its needed, and probably add a comment explaining it at that point.",
      "commit_id" : "ac3b860bff4279ff470560d0ccad9b2fc09672a9",
      "created_at" : "2023-12-05T19:56:59Z",
      "diff_hunk" : "@@ -68,6 +68,17 @@ const std::unordered_set<std::string> LEGACY_TYPES{CRYPTED_KEY, CSCRIPT, DEFAULT\n // WalletBatch\n //\n \n+template <typename P>\n+static uint256 PrivKeyChecksum(const CPrivKey& privkey, const P& pubkey)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416209707",
      "id" : 1416209707,
      "in_reply_to_id" : 1384538002,
      "line" : 73,
      "node_id" : "PRRC_kwDOABII585UaaUr",
      "original_commit_id" : "8a2475573270b7bc0a7d99cd94d9908cd48bd6bd",
      "original_line" : 73,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 13,
      "pull_request_review_id" : 1765995922,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416209707/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T20:11:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416209707",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> But I don't think I understand the reason for adding a new flag to indicate the presence of an ACTIVEHDKEY record, when it seems like code would be simpler and more reliable just handling absence of the record as necessary. It would be helpful if PR description mentioned the reason for adding a new flag and whether it's actually needed or just desired for some other reason.\r\n\r\nThe description currently states:\r\n\r\n> This loading is backwards compatible and uses a new non-required flag `WALLET_FLAG_GLOBAL_HD_KEY` to signal that the upgrade completed. The upgrade will search for an xpub that is shared by `pkh()`, `wpkh()`, and `sh(wpkh()` descriptors with the derivation pattern that we use. For new wallets, the xpub will be set during descriptor creation rather than trying to reverse engineer it. The flag will be set for all wallets, regardless of whether such an xpub was found or can even exist, in order to indicate that the upgrade will not need to be run in the future.\r\n\r\nBasically the point is to signal that the upgrade is done so we don't do it every time a wallet starts. An important point is that `ACTIVEHDKEY` does not need to exist after the upgrade was done.",
      "created_at" : "2023-12-05T20:17:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1841551086",
      "id" : 1841551086,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585tw9bu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841551086/reactions"
      },
      "updated_at" : "2023-12-05T20:17:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841551086",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> An important point is that `ACTIVEHDKEY` does not need to exist after the upgrade was done.\r\n\r\nOh, that explains why you would want a flag. But I'm not sure when this would happen except when the key can't be determined, which seems like an unusual case. But I need to look into the PR more in any case, so thanks for the correction.",
      "created_at" : "2023-12-05T20:42:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1841580968",
      "id" : 1841580968,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585txEuo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841580968/reactions"
      },
      "updated_at" : "2023-12-05T20:42:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841580968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> But I'm not sure when this would happen except when the key can't be determined, which seems like an unusual case.\r\n\r\nIt would happen for all watch-only wallets, for example, although we do check for that flag separately.",
      "created_at" : "2023-12-05T21:05:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1841609784",
      "id" : 1841609784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585txLw4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841609784/reactions"
      },
      "updated_at" : "2023-12-05T21:05:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841609784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416405430"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416405430"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It was previously needed in a later commit when xpubs with private keys were being written, but it is no longer needed. I've ended up dropping this commit from this PR.",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-05T23:39:01Z",
      "diff_hunk" : "@@ -68,6 +68,17 @@ const std::unordered_set<std::string> LEGACY_TYPES{CRYPTED_KEY, CSCRIPT, DEFAULT\n // WalletBatch\n //\n \n+template <typename P>\n+static uint256 PrivKeyChecksum(const CPrivKey& privkey, const P& pubkey)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416405430",
      "id" : 1416405430,
      "in_reply_to_id" : 1384538002,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UbKG2",
      "original_commit_id" : "8a2475573270b7bc0a7d99cd94d9908cd48bd6bd",
      "original_line" : 73,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1766302218,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416405430/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T23:39:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416405430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416405890"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416405890"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Changed to `if(!Assume...`",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-05T23:39:41Z",
      "diff_hunk" : "@@ -4317,4 +4317,16 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     }\n     return res;\n }\n+\n+void CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const CKey& key, const std::vector<unsigned char>& crypted_key)\n+{\n+    AssertLockHeld(cs_wallet);\n+    Assert(xpub.pubkey.IsValid());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416405890",
      "id" : 1416405890,
      "in_reply_to_id" : 1410304313,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UbKOC",
      "original_commit_id" : "14738e9a12c3d128f52875cf56b2ecacc6e62642",
      "original_line" : 4324,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1766302740,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416405890/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T23:39:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416405890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416405961"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416405961"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-05T23:39:49Z",
      "diff_hunk" : "@@ -4317,4 +4317,16 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     }\n     return res;\n }\n+\n+void CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const CKey& key, const std::vector<unsigned char>& crypted_key)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416405961",
      "id" : 1416405961,
      "in_reply_to_id" : 1413520408,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UbKPJ",
      "original_commit_id" : "14738e9a12c3d128f52875cf56b2ecacc6e62642",
      "original_line" : 4321,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1766302830,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416405961/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T23:39:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416405961",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416406078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416406078"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-05T23:39:55Z",
      "diff_hunk" : "@@ -4369,4 +4369,34 @@ std::optional<CExtPubKey> CWallet::GetActiveHDPubKey()\n     }\n     return std::nullopt;\n }\n+\n+std::optional<CExtKey> CWallet::GetActiveHDPrivKey()\n+{\n+    AssertLockHeld(cs_wallet);\n+\n+    if (!m_xpub.pubkey.IsValid()) {\n+        return std::nullopt;\n+    }\n+\n+    CKey key;\n+    if (IsCrypted()) {\n+        if (IsLocked()) {\n+            return std::nullopt;\n+        }\n+        if (!Assume(!m_hd_crypted_key.empty())) {\n+            return std::nullopt;\n+        }\n+        if (!DecryptKey(GetEncryptionKey(), m_hd_crypted_key, m_xpub.pubkey, key)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416406078",
      "id" : 1416406078,
      "in_reply_to_id" : 1413528877,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UbKQ-",
      "original_commit_id" : "eca964a8c07cf43b45e2c0482614ded390d42fec",
      "original_line" : 4389,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1766302979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416406078/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T23:39:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416406078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416406114"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416406114"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-05T23:39:59Z",
      "diff_hunk" : "@@ -315,6 +315,11 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended key used for new automatically generated descriptors\n+    CExtPubKey m_xpub GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1416406114",
      "id" : 1416406114,
      "in_reply_to_id" : 1413558248,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UbKRi",
      "original_commit_id" : "14738e9a12c3d128f52875cf56b2ecacc6e62642",
      "original_line" : 319,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 1766303039,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416406114/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T23:39:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1416406114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Repeated my manual tests, all works.\r\n\r\nThe only thing I want to clarify is the downgrade + encrypt situation. So now the wallet loads and not \"corrupted\" but if the user would generate new descriptors (as proposed in future PRs) the wallet will use the pre-encryption HD key. The scenario seems pretty rare, but still slightly concerning as the pre-encryption HD key could've been compromised.\r\n\r\nMaybe we should consider only loading key from active descriptors? In this case the wallet will \"loose\" its HD key, but the behaviour is more safe.\r\n\r\nAn alternative would be to do the upgrade on every load, but that seems like a worse alternative to me given the scenario should be pretty rare.",
      "created_at" : "2023-12-07T08:38:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1844899295",
      "id" : 1844899295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585t9u3f",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1844899295/reactions"
      },
      "updated_at" : "2023-12-07T08:38:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1844899295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I've changed the approach in this PR to only store the active xpub. The private keys will instead be retrieved from the descriptors during loading and stored in memory in the wallet, so there is no longer `hdkey` or `hdckey` records.\r\n\r\nAs much as I don't like having to go through half the PR again, I do think this is a nice simplification.\r\n\r\n@furszy without key rotation* the only thing that can be done with older descriptor wallets is add the missing taproot descriptor (and future descriptor types). These would then use the old unencrypted master key, which is indeed not good.\r\n\r\nOne solution could be for the `createwalletdescriptor` (proposed in #26728) to explicitly check for this scenario. Before creating a descriptor it could check that at least one of the active descriptors derives from `activehdkey`.\r\n\r\nIf not, it could tell the user to run the wallet tool, where we could add a method that removes the `activehdkey` and redo the migration (atomically, so only if that actually works).\r\n\r\n`* =` in #26728 as it's currently proposed, using key rotation adds a wallet flag that prevents any downgrade.  ",
      "created_at" : "2023-12-07T11:27:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1845173418",
      "id" : 1845173418,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585t-xyq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1845173418/reactions"
      },
      "updated_at" : "2023-12-07T11:53:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1845173418",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418839247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418839247"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You could create a pre-v22 wallet, upgrade to master (which won't add the `tr()` descriptor) and then continue the test.\r\n\r\nAlthough I don't think we care that deeply about downgrading that far, testing a wallet without a `tr()` descriptor is useful - for followup PR's that enable adding that desciptor.",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-07T11:45:02Z",
      "diff_hunk" : "@@ -131,6 +131,60 @@ def test_v19_addmultisigaddress(self):\n         wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n         assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+    def test_downgrade_encryption(self, node_master, descriptors_nodes, legacy_nodes):\n+        self.log.info(\"Test downgrade encryption + re-open on master\")\n+\n+        # Create wallet on master, downgrade and encrypt the wallet. Then, try to open it again on master.\n+        name_wallet_on_master = \"new_wallet\"\n+        node_master.createwallet(name_wallet_on_master, descriptors=self.options.descriptors)\n+        wallet_on_master = node_master.get_wallet_rpc(name_wallet_on_master)\n+\n+        # Make a backup of the wallet file\n+        backup_path = os.path.join(self.options.tmpdir, f\"{name_wallet_on_master}.dat\")\n+        wallet_on_master.backupwallet(backup_path)\n+\n+        # Downgrade and encrypt the wallet.\n+        for node in descriptors_nodes if self.options.descriptors else legacy_nodes:\n+            if self.major_version_less_than(node, 22):\n+                continue  # cannot downgrade further than v22, tr() descriptors aren't supported.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418839247",
      "id" : 1418839247,
      "line" : 149,
      "node_id" : "PRRC_kwDOABII585UkcTP",
      "original_commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "original_line" : 149,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : 19,
      "pull_request_review_id" : 1769980820,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418839247/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T11:45:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418839247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418884402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418884402"
         }
      },
      "author_association" : "MEMBER",
      "body" : "e491e5c4e6eb2f9b9ec53f4c2df602a755178726: could make it more clear that this only needs to happen for _one_ descriptor: `if (!(wallet_key || wallet_crypted_key) && â¦`\r\n\r\nAdditionally, either here or elsewhere, it's useful to clarify the following:\r\n\r\n```cpp\r\n// Although at this point in the loading process we can't tell if a descriptor is active,\r\n// checking inactive descriptors is necessary in any case. The private key for the active\r\n// wallet master extended public key will initially be found in all active descriptors.\r\n// This changes after a new descriptor is imported, or (exceptionally) if the wallet is\r\n// downgraded to a pre-ACTIVEHDKEY release and then encrypted. \r\n``` ",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-07T12:23:41Z",
      "diff_hunk" : "@@ -936,6 +939,9 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n                 return DBErrors::CORRUPT;\n             }\n             spk_man->AddKey(pubkey.GetID(), privkey);\n+            if (wallet_xpub && pubkey == wallet_xpub->pubkey) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418884402",
      "id" : 1418884402,
      "line" : 944,
      "node_id" : "PRRC_kwDOABII585UknUy",
      "original_commit_id" : "e491e5c4e6eb2f9b9ec53f4c2df602a755178726",
      "original_line" : 942,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 72,
      "pull_request_review_id" : 1770044461,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418884402/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T13:30:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418884402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418893185"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418893185"
         }
      },
      "author_association" : "MEMBER",
      "body" : "e491e5c4e6eb2f9b9ec53f4c2df602a755178726: I thought about adding an additional warning here for the scenario where a user downgraded, encrypted and upgraded. However, for that we need to know if the descriptor is active, which this function (`LoadDescriptorWalletRecords`) doesn't know. The caller `LoadWallet` won't know it until `LoadActiveSPKMs`. So it would involve passing a bunch of information around.\r\n\r\nAnyway, in principle we could count the number of active descriptors for which `pubkey == wallet_xpub->pubkey`. Then also count the number of inactive descriptors for which this is the case. Warn if 0 for the active descriptors && >0 for the inactive descriptors.\r\n\r\nYou could further restrict the warning by seeing if any crypted keys exist (otherwise it may have been the user manually manually importing and overriding all of their active descriptors).",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-07T12:30:39Z",
      "diff_hunk" : "@@ -973,6 +982,12 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n         return DBErrors::CORRUPT;\n     }\n \n+    // Load the active hd key\n+    if (wallet_xpub && !pwallet->LoadActiveHDPubKey(*wallet_xpub, wallet_key, wallet_crypted_key)) {\n+        pwallet->WalletLogPrintf(\"Error: Unable to load active hd pubkey\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418893185",
      "id" : 1418893185,
      "line" : 991,
      "node_id" : "PRRC_kwDOABII585UkpeB",
      "original_commit_id" : "e491e5c4e6eb2f9b9ec53f4c2df602a755178726",
      "original_line" : 987,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 112,
      "pull_request_review_id" : 1770044461,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418893185/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T13:29:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418893185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418907338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418907338"
         }
      },
      "author_association" : "MEMBER",
      "body" : "e67898f47152b756acc7ccafb654e2600b0e7a03 nit: could be its own commit?",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-07T12:42:33Z",
      "diff_hunk" : "@@ -940,14 +966,20 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n \n         return result;\n     });\n+    result = std::max(result, desc_res.m_result);\n+\n+    if (num_ckeys > 0 && num_keys != 0) {\n+        pwallet->WalletLogPrintf(\"Error: Wallet has both encrypted and unencrypted HD keys\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418907338",
      "id" : 1418907338,
      "line" : 985,
      "node_id" : "PRRC_kwDOABII585Uks7K",
      "original_commit_id" : "e67898f47152b756acc7ccafb654e2600b0e7a03",
      "original_line" : 972,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 106,
      "pull_request_review_id" : 1770044461,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418907338/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T13:29:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418907338",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418924286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418924286"
         }
      },
      "author_association" : "MEMBER",
      "body" : "6d7163d8e8127a18a299eaa1309bf7d613713d51: maybe assert that either `key` or `crypted_key` is provided\r\n\r\n(though `LoadActiveHDPubKey` eventually does that)",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-07T12:56:22Z",
      "diff_hunk" : "@@ -4344,4 +4349,30 @@ bool CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const std::optional<CKe\n     // We should have had either a key or a crypted key. Having neither is an error.\n     return Assume(false);\n }\n+\n+bool CWallet::SetActiveHDKey(const CExtKey& xprv)\n+{\n+    AssertLockHeld(cs_wallet);\n+    std::optional<CKey> key;\n+    std::vector<unsigned char> crypted_key;\n+    if (IsCrypted()) {\n+        if (IsLocked()) {\n+            return false;\n+        }\n+        CKeyingMaterial secret(xprv.key.begin(), xprv.key.end());\n+        if (!EncryptSecret(GetEncryptionKey(), secret, xprv.key.GetPubKey().GetHash(), crypted_key)) {\n+            return false;\n+        }\n+    } else {\n+        key = xprv.key;\n+    }\n+    return SetActiveHDKey(xprv.Neuter(), key, crypted_key);\n+}\n+\n+bool CWallet::SetActiveHDKey(const CExtPubKey& xpub, const std::optional<CKey>& key, const std::vector<unsigned char>& crypted_key)\n+{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418924286",
      "id" : 1418924286,
      "line" : 4482,
      "node_id" : "PRRC_kwDOABII585UkxD-",
      "original_commit_id" : "6d7163d8e8127a18a299eaa1309bf7d613713d51",
      "original_line" : 4373,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 203,
      "pull_request_review_id" : 1770044461,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418924286/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T14:41:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418924286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418940623"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418940623"
         }
      },
      "author_association" : "MEMBER",
      "body" : "a5ba1d83827475ef3f8f3851733007db5b8dc848: not a fan of touching legacy wallets even in the slightest if we don't have toâ¦ in that respect I prefer fca4584ad3.\r\n\r\nIt seems contradictory to the fact that we _always_ generate the global hd key field when migrating a legacy wallet, whether it was newly created or not. We _could_ set this field when creating a legacy wallet, but we (gladly) choose not to. It wouldn't do anything useful and would suffer from the same downgrade->encrypt->upgrade incorrectness. So I think we also shouldn't set the flag.\r\n\r\nI do agree with setting the flag for watch-only. That seems future-proof, e.g. imagine a scenario where a `WALLET_FLAG_DISABLE_PRIVATE_KEYS` can be removed; such a change should take care of setting the master hdkey, and not (implicitly) rely on the migration code in ea7a61ca94cc0d59cfe25307cd60fcda2aedec5f.\r\n\r\nThat in turn insures that migration code should never have to updated to account for future features, as it's only ever run on wallets that were last loaded with <v27.0",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-07T13:08:28Z",
      "diff_hunk" : "@@ -375,6 +375,9 @@ std::shared_ptr<CWallet> CreateWallet(WalletContext& context, const std::string&\n     uint64_t wallet_creation_flags = options.create_flags;\n     const SecureString& passphrase = options.create_passphrase;\n \n+    // Always set global HD key since the wallet supports it, even if the flag is not useful\n+    wallet_creation_flags |= WALLET_FLAG_GLOBAL_HD_KEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1418940623",
      "id" : 1418940623,
      "line" : 379,
      "node_id" : "PRRC_kwDOABII585Uk1DP",
      "original_commit_id" : "a5ba1d83827475ef3f8f3851733007db5b8dc848",
      "original_line" : 379,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1770044461,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418940623/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T13:29:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418940623",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419057454"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419057454"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ea7a61ca94cc0d59cfe25307cd60fcda2aedec5f nit, keeping it closer to 80 characters wide, and drops \"Any other candidates will be added as HD keys that have been rotated out.\":\r\n\r\n```\r\n/**\r\n * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet\r\n * and tries to find a CExtPubKey which is likely to be the most recent one used\r\n * to generate all of the automatically generated descriptors. The automatically\r\n * generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh.\r\n * There may be 2 p2tr descriptors, as well as imports. Those are ignored as they\r\n * are not guaranteed to be present in all wallets.\r\n * Candidate CExtKeys are those that appear in the aforementioned descriptors as\r\n * the only key. The best candidate is selected as the one that was most recently\r\n * used.\r\n *\r\n * The best candidate will be added to the wallet as the current active HD key.\r\n *\r\n * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade\r\n * has occurred, regardless of whether the active HD key was found.\r\n */\r\n```\r\n\r\nI appended \", regardlessâ¦\"",
      "commit_id" : "a86756aed266a1c7569dc3849f66f468f3810821",
      "created_at" : "2023-12-07T14:32:24Z",
      "diff_hunk" : "@@ -558,6 +558,106 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419057454",
      "id" : 1419057454,
      "line" : 561,
      "node_id" : "PRRC_kwDOABII585UlRku",
      "original_commit_id" : "ea7a61ca94cc0d59cfe25307cd60fcda2aedec5f",
      "original_line" : 561,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 1770297883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419057454/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T14:41:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419057454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The only thing I want to clarify is the downgrade + encrypt situation. So now the wallet loads and not \"corrupted\" but if the user would generate new descriptors (as proposed in future PRs) the wallet will use the pre-encryption HD key. The scenario seems pretty rare, but still slightly concerning as the pre-encryption HD key could've been compromised.\r\n\r\nWe have the `version` which stores the version of the last client which opened the wallet. Maybe we should use that to also determine whether an upgrade needs to be performed? e.g. if the last client's version is less than 270000, always do the upgrade? This would cover the encryption case, and we could drop the wallet flag.",
      "created_at" : "2023-12-07T15:51:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1845593963",
      "id" : 1845593963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585uAYdr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1845593963/reactions"
      },
      "updated_at" : "2023-12-07T15:51:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1845593963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419184599"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419184599"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this explainer is relevant in this section, nor really relevant at all. The wallet's hdkey does not have to be in any active descriptor - the user could have imported new active descriptors with different keys and the hdkey should not be changed.",
      "commit_id" : "a5d91908d6cc69f7fd4c8243d52599888099b84f",
      "created_at" : "2023-12-07T15:54:32Z",
      "diff_hunk" : "@@ -936,6 +939,9 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n                 return DBErrors::CORRUPT;\n             }\n             spk_man->AddKey(pubkey.GetID(), privkey);\n+            if (wallet_xpub && pubkey == wallet_xpub->pubkey) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419184599",
      "id" : 1419184599,
      "in_reply_to_id" : 1418884402,
      "line" : 944,
      "node_id" : "PRRC_kwDOABII585UlwnX",
      "original_commit_id" : "e491e5c4e6eb2f9b9ec53f4c2df602a755178726",
      "original_line" : 944,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 72,
      "pull_request_review_id" : 1770502274,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419184599/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T15:54:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419184599",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419188377"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419188377"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Activeness of descriptors does not necessarily correlate to the hdkey. The user could have imported new active descriptors with different keys and the hdkey would not change.\r\n\r\nAlso warnings in wallet loading don't really go anywhere. They show up in the log, but people aren't going to be looking at their log file unless the wallet isn't loading.",
      "commit_id" : "a5d91908d6cc69f7fd4c8243d52599888099b84f",
      "created_at" : "2023-12-07T15:57:02Z",
      "diff_hunk" : "@@ -973,6 +982,12 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n         return DBErrors::CORRUPT;\n     }\n \n+    // Load the active hd key\n+    if (wallet_xpub && !pwallet->LoadActiveHDPubKey(*wallet_xpub, wallet_key, wallet_crypted_key)) {\n+        pwallet->WalletLogPrintf(\"Error: Unable to load active hd pubkey\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419188377",
      "id" : 1419188377,
      "in_reply_to_id" : 1418893185,
      "line" : 991,
      "node_id" : "PRRC_kwDOABII585UlxiZ",
      "original_commit_id" : "e491e5c4e6eb2f9b9ec53f4c2df602a755178726",
      "original_line" : 991,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 112,
      "pull_request_review_id" : 1770510624,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419188377/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T15:57:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419188377",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419193242"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419193242"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`LoadActiveHDPubKey` already does this.",
      "commit_id" : "a5d91908d6cc69f7fd4c8243d52599888099b84f",
      "created_at" : "2023-12-07T16:00:12Z",
      "diff_hunk" : "@@ -4344,4 +4349,30 @@ bool CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const std::optional<CKe\n     // We should have had either a key or a crypted key. Having neither is an error.\n     return Assume(false);\n }\n+\n+bool CWallet::SetActiveHDKey(const CExtKey& xprv)\n+{\n+    AssertLockHeld(cs_wallet);\n+    std::optional<CKey> key;\n+    std::vector<unsigned char> crypted_key;\n+    if (IsCrypted()) {\n+        if (IsLocked()) {\n+            return false;\n+        }\n+        CKeyingMaterial secret(xprv.key.begin(), xprv.key.end());\n+        if (!EncryptSecret(GetEncryptionKey(), secret, xprv.key.GetPubKey().GetHash(), crypted_key)) {\n+            return false;\n+        }\n+    } else {\n+        key = xprv.key;\n+    }\n+    return SetActiveHDKey(xprv.Neuter(), key, crypted_key);\n+}\n+\n+bool CWallet::SetActiveHDKey(const CExtPubKey& xpub, const std::optional<CKey>& key, const std::vector<unsigned char>& crypted_key)\n+{",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419193242",
      "id" : 1419193242,
      "in_reply_to_id" : 1418924286,
      "line" : 4485,
      "node_id" : "PRRC_kwDOABII585Ulyua",
      "original_commit_id" : "6d7163d8e8127a18a299eaa1309bf7d613713d51",
      "original_line" : 4485,
      "original_position" : 37,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 206,
      "pull_request_review_id" : 1770520891,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419193242/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T16:00:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419193242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419197086"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419197086"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We always generate new descriptors for migrated wallets, regardless of a preexisting HD seed. I don't see why setting this flag would be contradictory with that.",
      "commit_id" : "a5d91908d6cc69f7fd4c8243d52599888099b84f",
      "created_at" : "2023-12-07T16:02:20Z",
      "diff_hunk" : "@@ -375,6 +375,9 @@ std::shared_ptr<CWallet> CreateWallet(WalletContext& context, const std::string&\n     uint64_t wallet_creation_flags = options.create_flags;\n     const SecureString& passphrase = options.create_passphrase;\n \n+    // Always set global HD key since the wallet supports it, even if the flag is not useful\n+    wallet_creation_flags |= WALLET_FLAG_GLOBAL_HD_KEY;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419197086",
      "id" : 1419197086,
      "in_reply_to_id" : 1418940623,
      "line" : 379,
      "node_id" : "PRRC_kwDOABII585Ulzqe",
      "original_commit_id" : "a5ba1d83827475ef3f8f3851733007db5b8dc848",
      "original_line" : 379,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 5,
      "pull_request_review_id" : 1770525205,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419197086/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T16:02:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419197086",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419201996"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419201996"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "a5d91908d6cc69f7fd4c8243d52599888099b84f",
      "created_at" : "2023-12-07T16:05:06Z",
      "diff_hunk" : "@@ -940,14 +966,20 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n \n         return result;\n     });\n+    result = std::max(result, desc_res.m_result);\n+\n+    if (num_ckeys > 0 && num_keys != 0) {\n+        pwallet->WalletLogPrintf(\"Error: Wallet has both encrypted and unencrypted HD keys\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419201996",
      "id" : 1419201996,
      "in_reply_to_id" : 1418907338,
      "line" : 985,
      "node_id" : "PRRC_kwDOABII585Ul03M",
      "original_commit_id" : "e67898f47152b756acc7ccafb654e2600b0e7a03",
      "original_line" : 985,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 106,
      "pull_request_review_id" : 1770530644,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419201996/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T16:05:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419201996",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419202326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419202326"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Taken",
      "commit_id" : "a5d91908d6cc69f7fd4c8243d52599888099b84f",
      "created_at" : "2023-12-07T16:05:17Z",
      "diff_hunk" : "@@ -558,6 +558,106 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419202326",
      "id" : 1419202326,
      "in_reply_to_id" : 1419057454,
      "line" : 561,
      "node_id" : "PRRC_kwDOABII585Ul08W",
      "original_commit_id" : "ea7a61ca94cc0d59cfe25307cd60fcda2aedec5f",
      "original_line" : 561,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 14,
      "pull_request_review_id" : 1770531013,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419202326/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T16:05:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419202326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We have the `version` which stores the version of the last client which opened the wallet. Maybe we should use that to also determine whether an upgrade needs to be performed?\r\n\r\nHmm, this seems to not necessarily be true for older versions. 23.0 has it has updating only when less than, not just not equal.\r\n\r\nSeems like 23.x and earlier didn't always write the record, so we could use that as a signal here too.\r\n\r\nEdit: nvm, doesn't work for upgrade then downgrade then upgrade again.",
      "created_at" : "2023-12-07T16:35:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1845666417",
      "id" : 1845666417,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585uAqJx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1845666417/reactions"
      },
      "updated_at" : "2023-12-07T17:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1845666417",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419345302"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419345302"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That's why it says \"This changes after a new descriptor is imported\".\r\n\r\nBut right now the logic behind populating this field is not documented. Without reading a bunch of pull request comments, one might wonder why we don't just store the xpriv, why we go through all descriptors instead of one, etc. I get it now, but will probably forget in a few months.",
      "commit_id" : "f013ad96011b14f277a5e13fc86f2c7b81bcfa26",
      "created_at" : "2023-12-07T17:35:14Z",
      "diff_hunk" : "@@ -936,6 +939,9 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n                 return DBErrors::CORRUPT;\n             }\n             spk_man->AddKey(pubkey.GetID(), privkey);\n+            if (wallet_xpub && pubkey == wallet_xpub->pubkey) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419345302",
      "id" : 1419345302,
      "in_reply_to_id" : 1418884402,
      "line" : 952,
      "node_id" : "PRRC_kwDOABII585UmX2W",
      "original_commit_id" : "e491e5c4e6eb2f9b9ec53f4c2df602a755178726",
      "original_line" : 952,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 80,
      "pull_request_review_id" : 1770699102,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419345302/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T17:35:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419345302",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419392876"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419392876"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure, but that's not what your suggested text documents. I've added a comment earlier during the actual loading that describes it.",
      "commit_id" : "f013ad96011b14f277a5e13fc86f2c7b81bcfa26",
      "created_at" : "2023-12-07T17:50:35Z",
      "diff_hunk" : "@@ -936,6 +939,9 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n                 return DBErrors::CORRUPT;\n             }\n             spk_man->AddKey(pubkey.GetID(), privkey);\n+            if (wallet_xpub && pubkey == wallet_xpub->pubkey) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419392876",
      "id" : 1419392876,
      "in_reply_to_id" : 1418884402,
      "line" : 952,
      "node_id" : "PRRC_kwDOABII585Umjds",
      "original_commit_id" : "e491e5c4e6eb2f9b9ec53f4c2df602a755178726",
      "original_line" : 952,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 80,
      "pull_request_review_id" : 1770743039,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419392876/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T17:50:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1419392876",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've pushed a solution for the downgrade and encrypt issue. This will store an extra boolean in `ACTIVEHDKEY` which indicates whether the wallet was encrypted at the time that record was written. Then, when we detect that the wallet is now encrypted, but the `ACTIVEHDKEY` was written when the wallet was unencrypted, we will run the upgrade again to detect the new hd key.\r\n\r\nFor wallets that are encrypted with software supporting the record, the encryption status flag will be updated when the new hd key is written. For wallets encrypted on older software, we will be able to detect the new hd key when the software is upgraded.\r\n\r\nNote that key rotation on encryption can happen only once in a wallet's lifetime - when the wallet is encrypted the first. We do not do key rotation when the passphrase changes.",
      "created_at" : "2023-12-11T19:43:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1850768688",
      "id" : 1850768688,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585uUH0w",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850768688/reactions"
      },
      "updated_at" : "2023-12-11T19:43:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850768688",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1426540509"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1426540509"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ce5495a4b27fe9646c9933dc39f0cb4e8510eaff: I still think it's nicer to check\r\n\r\n```cpp\r\n// Upgrade the wallet to have a global HD key, or in the special case\r\n// where the user downgraded and then encrypted / decrypted.\r\nif(!pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY) || enc_status != IsCrypted()) {\r\n```\r\n\r\nhere rather than inside `UpgradeToGlobalHDKey`, so that it's clear to people reading this code when they need to open `wallet.cpp` and look at the function body.\r\n\r\nAlternatively, you could expand the description in `wallet.h` (e.g. using my suggested text), since a good IDE will show that on hover.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-14T10:36:00Z",
      "diff_hunk" : "@@ -997,6 +1001,9 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n         // Only log if there are no critical errors\n         pwallet->WalletLogPrintf(\"Descriptors: %u, Descriptor Keys: %u plaintext, %u encrypted, %u total.\\n\",\n                desc_res.m_records, num_keys, num_ckeys, num_keys + num_ckeys);\n+\n+        // Upgrade the wallet to have a global HD key",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1426540509",
      "id" : 1426540509,
      "line" : 1010,
      "node_id" : "PRRC_kwDOABII585VB0fd",
      "original_commit_id" : "ce5495a4b27fe9646c9933dc39f0cb4e8510eaff",
      "original_line" : 1005,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 132,
      "pull_request_review_id" : 1781522971,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1426540509/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-14T11:05:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1426540509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "The code looks good. That's quite a small change and fully fixes the problem. Didn't repeat manual tests though, but there is an automatic test coverage. Great job!\r\n\r\nCI failure seems relevant. I was able to reproduce locally, didn't have time to debug yet though. Will look tomorrow if nobody beats me to it.\r\n```\r\n                                   Traceback (most recent call last):\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 131, in main\r\n                                       self.run_test()\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_backwards_compatibility.py\", line 371, in run_test\r\n                                       self.test_downgrade_encryption(node_master, descriptors_nodes, legacy_nodes)\r\n                                     File \"/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_backwards_compatibility.py\", line 186, in test_downgrade_encryption\r\n                                       assert xpub != enc_wallet.gethdkey()[\"xpub\"]\r\n                                   AssertionError\r\n```\r\n\r\n> [059d847](https://github.com/bitcoin/bitcoin/commit/059d847810051b52d33b5b16711a031c3fd199a9) looks good, except that you need to call `SetActiveHDKey()` in `CWallet::EncryptWallet` (to avoid needlessly running the upgrade code).\r\n\r\nOr maybe even add it to `SetupDescriptorScriptPubKeyMans(const CExtKey& master_key)`",
      "created_at" : "2023-12-18T09:37:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1859942803",
      "id" : 1859942803,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585u3HmT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1859942803/reactions"
      },
      "updated_at" : "2023-12-18T09:37:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1859942803",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1430209041"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430209041"
         }
      },
      "author_association" : "MEMBER",
      "body" : "in 8bb7a8b06:\r\n\r\nnit: probably for the future; as `ACTIVEHDKEY` is unique, we don't need to call `LoadRecords` here. Could call a bare `Read()` or implement a `GetActiveHDKey()` at the `WalletBatch` level.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-18T14:24:50Z",
      "diff_hunk" : "@@ -782,6 +791,25 @@ static DataStream PrefixStream(const Args&... args)\n static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& batch, int last_client) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     AssertLockHeld(pwallet->cs_wallet);\n+    DBErrors result = DBErrors::LOAD_OK;\n+\n+    // Get Active HD Key\n+    LoadResult active_hdkey_res = LoadRecords(pwallet, batch, DBKeys::ACTIVEHDKEY,\n+        [] (CWallet* pwallet, DataStream& key, DataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {\n+        std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+        bool enc_status = false;\n+        value >> xpub;\n+        value >> enc_status;\n+        CExtPubKey extpub;\n+        extpub.Decode(xpub.data());\n+        if (!extpub.pubkey.IsValid()) {\n+            err = \"Error reading wallet database: CExtPubKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+        // TODO: Load extpub into the wallet\n+        return DBErrors::LOAD_OK;\n+    });\n+    result = std::max(result, active_hdkey_res.m_result);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1430209041",
      "id" : 1430209041,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VP0IR",
      "original_commit_id" : "8bb7a8b06f1f0558bdb0bda696f5fb5748dacf7e",
      "original_line" : 812,
      "original_position" : 45,
      "original_start_line" : 797,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1787001982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430209041/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T13:48:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430209041",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1430231352"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430231352"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 2e840bcfc03:\r\n\r\nWould be good to cleanup `m_hd_key` when `m_hd_crypted_key` is set and vice versa. Just as a safety measure in case this method is called twice pre and post encryption.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-18T14:42:20Z",
      "diff_hunk" : "@@ -4336,4 +4336,31 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     }\n     return res;\n }\n+\n+bool CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const std::optional<CKey>& key, const std::vector<unsigned char>& crypted_key)\n+{\n+    AssertLockHeld(cs_wallet);\n+    if (!Assume(xpub.pubkey.IsValid())) {\n+        return false;\n+    }\n+    m_xpub = xpub;\n+\n+    if (key) {\n+        if (!Assume(key->IsValid() && crypted_key.empty() && xpub.pubkey == key->GetPubKey())) {\n+            return false;\n+        }\n+        m_hd_key = key;\n+        return true;\n+    }\n+    if (!crypted_key.empty()) {\n+        if (!Assume(!key)) {\n+            return false;\n+        }\n+        m_hd_crypted_key = crypted_key;\n+        return true;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1430231352",
      "id" : 1430231352,
      "line" : 4478,
      "node_id" : "PRRC_kwDOABII585VP5k4",
      "original_commit_id" : "2e840bcfc0308a461d210e0c7ed66a9bbc723b62",
      "original_line" : 4361,
      "original_position" : 26,
      "original_start_line" : 4340,
      "path" : "src/wallet/wallet.cpp",
      "position" : 180,
      "pull_request_review_id" : 1787001982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430231352/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 4457,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T13:47:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430231352",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > [059d847](https://github.com/bitcoin/bitcoin/commit/059d847810051b52d33b5b16711a031c3fd199a9) looks good, except that you need to call `SetActiveHDKey()` in `CWallet::EncryptWallet` (to avoid needlessly running the upgrade code).\r\n> \r\n> Or maybe even add it to `SetupDescriptorScriptPubKeyMans(const CExtKey& master_key)`\r\n\r\nIt already does that in the `SetupDescriptorScriptPubKeyMans()` that is called by `EncryptWallet`.",
      "created_at" : "2023-12-19T22:31:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1863562737",
      "id" : 1863562737,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vE7Xx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1863562737/reactions"
      },
      "updated_at" : "2023-12-19T22:31:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1863562737",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Intermittent failure should be fixed.",
      "created_at" : "2023-12-19T23:27:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1863611791",
      "id" : 1863611791,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vFHWP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1863611791/reactions"
      },
      "updated_at" : "2023-12-19T23:27:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1863611791",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Code review ACK db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T07:39:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1863995929",
      "id" : 1863995929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vGlIZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1863995929/reactions"
      },
      "updated_at" : "2023-12-20T07:39:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1863995929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432692273"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432692273"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 8bb7a8b06:\r\n\r\n`EXCLUSIVE_LOCKS_REQUIRED` annotation is not required.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T13:06:19Z",
      "diff_hunk" : "@@ -782,6 +791,25 @@ static DataStream PrefixStream(const Args&... args)\n static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& batch, int last_client) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     AssertLockHeld(pwallet->cs_wallet);\n+    DBErrors result = DBErrors::LOAD_OK;\n+\n+    // Get Active HD Key\n+    LoadResult active_hdkey_res = LoadRecords(pwallet, batch, DBKeys::ACTIVEHDKEY,\n+        [] (CWallet* pwallet, DataStream& key, DataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432692273",
      "id" : 1432692273,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VZSYx",
      "original_commit_id" : "8bb7a8b06f1f0558bdb0bda696f5fb5748dacf7e",
      "original_line" : 798,
      "original_position" : 31,
      "original_start_line" : 797,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1787001982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432692273/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:05:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432692273",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432698232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432698232"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 8bb7a8b0:\r\n\r\nThis is moved without an explanation. Could mention the rationale in the commit description.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T13:12:25Z",
      "diff_hunk" : "@@ -1170,6 +1199,9 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n #endif\n \n+        // Load decryption keys\n+        result = std::max(LoadDecryptionKeys(pwallet, *m_batch), result);\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432698232",
      "id" : 1432698232,
      "line" : 1239,
      "node_id" : "PRRC_kwDOABII585VZT14",
      "original_commit_id" : "8bb7a8b06f1f0558bdb0bda696f5fb5748dacf7e",
      "original_line" : 1204,
      "original_position" : 73,
      "original_start_line" : 1202,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 147,
      "pull_request_review_id" : 1787001982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432698232/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1237,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T13:47:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432698232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432718349"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432718349"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 2e2545c3a:\r\n\r\nMissing check for `LoadActiveHDPubKey()` output.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T13:30:58Z",
      "diff_hunk" : "@@ -4363,4 +4368,30 @@ bool CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const std::optional<CKe\n     // We should have had either a key or a crypted key. Having neither is an error.\n     return Assume(false);\n }\n+\n+bool CWallet::SetActiveHDKey(const CExtKey& xprv)\n+{\n+    AssertLockHeld(cs_wallet);\n+    std::optional<CKey> key;\n+    std::vector<unsigned char> crypted_key;\n+    if (IsCrypted()) {\n+        if (IsLocked()) {\n+            return false;\n+        }\n+        CKeyingMaterial secret(xprv.key.begin(), xprv.key.end());\n+        if (!EncryptSecret(GetEncryptionKey(), secret, xprv.key.GetPubKey().GetHash(), crypted_key)) {\n+            return false;\n+        }\n+    } else {\n+        key = xprv.key;\n+    }\n+    return SetActiveHDKey(xprv.Neuter(), key, crypted_key);\n+}\n+\n+bool CWallet::SetActiveHDKey(const CExtPubKey& xpub, const std::optional<CKey>& key, const std::vector<unsigned char>& crypted_key)\n+{\n+    AssertLockHeld(cs_wallet);\n+    LoadActiveHDPubKey(xpub, key, crypted_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432718349",
      "id" : 1432718349,
      "line" : 4506,
      "node_id" : "PRRC_kwDOABII585VZYwN",
      "original_commit_id" : "2e2545c3a20f67b71433a25dd8ff75bd00ebe2d5",
      "original_line" : 4394,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 208,
      "pull_request_review_id" : 1787001982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432718349/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T13:47:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432718349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432727652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432727652"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In ce5495a4b27f:\r\n\r\nNeed to check `SetActiveHDKey()` output. If it fails, the procedure should fail.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T13:39:38Z",
      "diff_hunk" : "@@ -558,6 +558,109 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet\n+ * and tries to find a CExtPubKey which is likely to be the most recent one used\n+ * to generate all of the automatically generated descriptors. The automatically\n+ * generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh.\n+ * There may be 2 p2tr descriptors, as well as imports. Those are ignored as they\n+ * are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as\n+ * the only key. The best candidate is selected as the one that was most recently\n+ * used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade\n+ * has occurred, regardless of whether the active HD key was found.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<CPubKey, CKey>& desc_keys, const std::map<CPubKey, std::vector<unsigned char>>& desc_crypt_keys, bool encryption_status)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        (IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY) && encryption_status == IsCrypted())\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    if (best_xpub) {\n+        std::optional<CKey> key;\n+        auto key_it = desc_keys.find(best_xpub->pubkey);\n+        if (key_it != desc_keys.end()) {\n+            key = key_it->second;\n+        }\n+        std::vector<unsigned char> crypted_key;\n+        auto ckey_it = desc_crypt_keys.find(best_xpub->pubkey);\n+        if (ckey_it != desc_crypt_keys.end()) {\n+            crypted_key = ckey_it->second;\n+        }\n+        SetActiveHDKey(*best_xpub, key, crypted_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432727652",
      "id" : 1432727652,
      "line" : 658,
      "node_id" : "PRRC_kwDOABII585VZbBk",
      "original_commit_id" : "ce5495a4b27fe9646c9933dc39f0cb4e8510eaff",
      "original_line" : 658,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 111,
      "pull_request_review_id" : 1787001982,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432727652/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T13:47:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432727652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432731105"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432731105"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet: Automatically upgrade a wallet to have global hd key\" (ce5495a4b27fe9646c9933dc39f0cb4e8510eaff)\r\n\r\nWould seem a little safer to write `if (!best_xpub || desc_time > best_time)` to work even if desc_time is not set.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T13:42:28Z",
      "diff_hunk" : "@@ -555,6 +558,109 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet\n+ * and tries to find a CExtPubKey which is likely to be the most recent one used\n+ * to generate all of the automatically generated descriptors. The automatically\n+ * generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh.\n+ * There may be 2 p2tr descriptors, as well as imports. Those are ignored as they\n+ * are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as\n+ * the only key. The best candidate is selected as the one that was most recently\n+ * used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade\n+ * has occurred, regardless of whether the active HD key was found.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<CPubKey, CKey>& desc_keys, const std::map<CPubKey, std::vector<unsigned char>>& desc_crypt_keys, bool encryption_status)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        (IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY) && encryption_status == IsCrypted())\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432731105",
      "id" : 1432731105,
      "line" : 640,
      "node_id" : "PRRC_kwDOABII585VZb3h",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 640,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 93,
      "pull_request_review_id" : 1790921397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432731105/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432731105",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432741629"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432741629"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet: Automatically upgrade a wallet to have global hd key\" (ce5495a4b27fe9646c9933dc39f0cb4e8510eaff)\r\n\r\nCan you write a comment explaining when this find is expected to fail (also the find below)?\r\n\r\nNaively, I would think if this find fails, probably it means \"best_xpub\" is not really the best xpub. I would have expected these lookups to have already been done in one of the previous two loops and used to determine the best key candidate.\r\n\r\nThis is probably wrong, but either way, it would be help to have a comment saying why these finds are allowed to fail.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T13:52:03Z",
      "diff_hunk" : "@@ -555,6 +558,109 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet\n+ * and tries to find a CExtPubKey which is likely to be the most recent one used\n+ * to generate all of the automatically generated descriptors. The automatically\n+ * generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh.\n+ * There may be 2 p2tr descriptors, as well as imports. Those are ignored as they\n+ * are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as\n+ * the only key. The best candidate is selected as the one that was most recently\n+ * used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade\n+ * has occurred, regardless of whether the active HD key was found.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<CPubKey, CKey>& desc_keys, const std::map<CPubKey, std::vector<unsigned char>>& desc_crypt_keys, bool encryption_status)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        (IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY) && encryption_status == IsCrypted())\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    if (best_xpub) {\n+        std::optional<CKey> key;\n+        auto key_it = desc_keys.find(best_xpub->pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432741629",
      "id" : 1432741629,
      "line" : 649,
      "node_id" : "PRRC_kwDOABII585VZeb9",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 649,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 102,
      "pull_request_review_id" : 1790921397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432741629/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432741629",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432749103"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432749103"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet: Automatically upgrade a wallet to have global hd key\" (ce5495a4b27fe9646c9933dc39f0cb4e8510eaff)\r\n\r\nReturn value here is ignored. It would be good to add [[nodiscard]], (void) and comment saying why failure is ignored.\r\n\r\nInstinctively, I'd say it even if makes sense to set the GLOBAL_HD_KEY flag when no HD key candidate is written, I don't think it makes sense to set it when there is an unexpected error trying to write it, or trying to find it.\r\n\r\nThis could be wrong, and maybe the current approach to error handling here makes more sense, but it should be explained either way I think.\r\n",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T13:58:24Z",
      "diff_hunk" : "@@ -555,6 +558,109 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet\n+ * and tries to find a CExtPubKey which is likely to be the most recent one used\n+ * to generate all of the automatically generated descriptors. The automatically\n+ * generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh.\n+ * There may be 2 p2tr descriptors, as well as imports. Those are ignored as they\n+ * are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as\n+ * the only key. The best candidate is selected as the one that was most recently\n+ * used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade\n+ * has occurred, regardless of whether the active HD key was found.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<CPubKey, CKey>& desc_keys, const std::map<CPubKey, std::vector<unsigned char>>& desc_crypt_keys, bool encryption_status)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        (IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY) && encryption_status == IsCrypted())\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    if (best_xpub) {\n+        std::optional<CKey> key;\n+        auto key_it = desc_keys.find(best_xpub->pubkey);\n+        if (key_it != desc_keys.end()) {\n+            key = key_it->second;\n+        }\n+        std::vector<unsigned char> crypted_key;\n+        auto ckey_it = desc_crypt_keys.find(best_xpub->pubkey);\n+        if (ckey_it != desc_crypt_keys.end()) {\n+            crypted_key = ckey_it->second;\n+        }\n+        SetActiveHDKey(*best_xpub, key, crypted_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432749103",
      "id" : 1432749103,
      "line" : 658,
      "node_id" : "PRRC_kwDOABII585VZgQv",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 658,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 111,
      "pull_request_review_id" : 1790921397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432749103/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432749103",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432799216"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432799216"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"walletdb: Read and write activehdkey record\" (8bb7a8b06f1f0558bdb0bda696f5fb5748dacf7e)\r\n\r\nThis makes sense, but it sounds so fragile it makes me wonder why we want to store this unreliable value.\r\n\r\nCan there be a comment (here or in  LoadDescriptorWalletRecords) saying why it is necessary to store this? Or what the drawbacks would be of not storing it and just figuring out the active seed when the wallet is loaded, or when the gethdkey RPC is called?",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T14:39:10Z",
      "diff_hunk" : "@@ -274,6 +275,21 @@ class WalletBatch\n     bool WriteActiveScriptPubKeyMan(uint8_t type, const uint256& id, bool internal);\n     bool EraseActiveScriptPubKeyMan(uint8_t type, bool internal);\n \n+    /**\n+     * The active hd key for a wallet is the xpub of the xprv used to generate the\n+     * automatically generated descriptors. However not all descriptor wallets will\n+     * have this record, and so will need to be upgraded to include it.\n+     * Additionally, it is possible to load a wallet that has had the upgrade performed\n+     * into an older version of the software which does not know about this record,\n+     * then generate new descriptors by encrypting, and then loading in a version that\n+     * does know about the record. There would then be a mismatch between the stored\n+     * xpub and the actual keys used to generate those descriptors. To account for this,\n+     * we store whether the wallet was encrypted at the time this record was written,\n+     * and can perform the upgrade again if the stored encryption status doesn't\n+     * match the real status.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432799216",
      "id" : 1432799216,
      "line" : 289,
      "node_id" : "PRRC_kwDOABII585VZsfw",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 289,
      "original_position" : 23,
      "original_start_line" : 282,
      "path" : "src/wallet/walletdb.h",
      "position" : 23,
      "pull_request_review_id" : 1790921397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432799216/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 282,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432799216",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432801718"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432801718"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1081289252\r\n\r\n> Should we add some documentation about this quirk?\r\n\r\nThis is now described in the WalletBatch::WriteActiveHDKey comment, so marking this resolved.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T14:41:16Z",
      "diff_hunk" : "@@ -47,6 +47,9 @@ enum WalletFlags : uint64_t {\n     // Indicates that the descriptor cache has been upgraded to cache last hardened xpubs\n     WALLET_FLAG_LAST_HARDENED_XPUB_CACHED = (1ULL << 2),\n \n+    // Indicates that the wallet is capable of having a wallet hd key\n+    WALLET_FLAG_GLOBAL_HD_KEY = (1ULL << 3),",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432801718",
      "id" : 1432801718,
      "in_reply_to_id" : 1081289252,
      "line" : 51,
      "node_id" : "PRRC_kwDOABII585VZtG2",
      "original_commit_id" : "9a173470864f44d494e80b1c155d8ebe8c87c406",
      "original_line" : 51,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/walletutil.h",
      "position" : 5,
      "pull_request_review_id" : 1790921397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432801718/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432801718",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432845653"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432845653"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1419188377\r\n\r\nIn commit \"wallet: Load activehdkey and its private keys\" (2e840bcfc0308a461d210e0c7ed66a9bbc723b62)\r\n\r\n> Activeness of descriptors does not necessarily correlate to the hdkey. The user could have imported new active descriptors with different keys and the hdkey would not change.\r\n\r\nThis is counterintuitive and I think it would be really helpful if one of the explanations of the ACTIVEHDKEY field (in the LoadDescriptorWalletRecords comment, or the LoadActiveHDPubKey comment, or the gethdkey RPC documentation) said what the relationship is between the active hd key and active descriptors. Presumeably the active hd key will be used for one set of things, and the active descriptors will be used for another set of things, but I don't think it's obvious what those things are.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T15:16:09Z",
      "diff_hunk" : "@@ -973,6 +982,12 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n         return DBErrors::CORRUPT;\n     }\n \n+    // Load the active hd key\n+    if (wallet_xpub && !pwallet->LoadActiveHDPubKey(*wallet_xpub, wallet_key, wallet_crypted_key)) {\n+        pwallet->WalletLogPrintf(\"Error: Unable to load active hd pubkey\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432845653",
      "id" : 1432845653,
      "in_reply_to_id" : 1418893185,
      "line" : 1001,
      "node_id" : "PRRC_kwDOABII585VZ31V",
      "original_commit_id" : "e491e5c4e6eb2f9b9ec53f4c2df602a755178726",
      "original_line" : 1001,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 123,
      "pull_request_review_id" : 1790921397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432845653/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432845653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432858600"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432858600"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Not a comment for this PR specifically, but I think this `!Assume` code is hard to read and unnatural to parse, even though it does seem like a good way to handle bad assumptions at runtime. IMO, the code would be easier to read with a dedicated macro like:\r\n\r\n```c++\r\nASSERT_ELSE(xpub.pubkey.IsValid(), return false);\r\n\r\nASSERT_ELSE(m_hd_crypted_key.empty(), return std::nullopt);\r\n\r\nASSERT_ELSE(pwallet->IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY), \r\n    throw JSONRPCError(RPC_WALLET_ERROR, \"Wallet has not been upgraded to support global hd keys\"));\r\n```",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T15:25:57Z",
      "diff_hunk" : "@@ -4336,4 +4453,96 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     }\n     return res;\n }\n+\n+bool CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const std::optional<CKey>& key, const std::vector<unsigned char>& crypted_key)\n+{\n+    AssertLockHeld(cs_wallet);\n+    if (!Assume(xpub.pubkey.IsValid())) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432858600",
      "id" : 1432858600,
      "line" : 4460,
      "node_id" : "PRRC_kwDOABII585VZ6_o",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 4460,
      "original_position" : 162,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 162,
      "pull_request_review_id" : 1790921397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432858600/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432858600",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432889935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432889935"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet: Load activehdkey and its private keys\" (2e840bcfc0308a461d210e0c7ed66a9bbc723b62)\r\n\r\nIt's not obvious what the relationship between `m_xpub`, `m_hd_key`, and `m_hd_crypted_key` is here. I think it would clearer to have a struct like:\r\n\r\n```c++\r\nstruct HDKey {\r\n    CExtPubKey xpub;\r\n    //! Variant storing CKey if the wallet is unencrypted, otherwise the encrypted key.\r\n    std::variant<CKey, std::vector<unsigned char>> xpriv;\r\n}\r\n```\r\n\r\nThen `CWallet` could just add:\r\n\r\n```c++\r\n//! The extended key used for new automatically generated descriptors\r\nstd::optional<HDKey> m_active_hd_key;\r\n```\r\n\r\nUsing a variant and single optional value rather than separate optional values should also make code more type-safe and reduce the number of Assume() checks that are needed.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T15:51:07Z",
      "diff_hunk" : "@@ -315,6 +316,11 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended key used for new automatically generated descriptors\n+    std::optional<CExtPubKey> m_xpub GUARDED_BY(cs_wallet);\n+    std::optional<CKey> m_hd_key GUARDED_BY(cs_wallet);\n+    std::vector<unsigned char> m_hd_crypted_key GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432889935",
      "id" : 1432889935,
      "line" : 322,
      "node_id" : "PRRC_kwDOABII585VaCpP",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 322,
      "original_position" : 17,
      "original_start_line" : 319,
      "path" : "src/wallet/wallet.h",
      "position" : 17,
      "pull_request_review_id" : 1790921397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432889935/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 319,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432889935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432899832"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432899832"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432692273\r\n\r\nIn commit \"walletdb: Read and write activehdkey record\" (8bb7a8b06f1f0558bdb0bda696f5fb5748dacf7e)\r\n\r\n> `EXCLUSIVE_LOCKS_REQUIRED` annotation is not required.\r\n\r\nIf you drop it would also suggest dropping the unused pwallet variable (just write `[] (CWallet*, ...)`)",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T15:59:02Z",
      "diff_hunk" : "@@ -782,6 +791,25 @@ static DataStream PrefixStream(const Args&... args)\n static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& batch, int last_client) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     AssertLockHeld(pwallet->cs_wallet);\n+    DBErrors result = DBErrors::LOAD_OK;\n+\n+    // Get Active HD Key\n+    LoadResult active_hdkey_res = LoadRecords(pwallet, batch, DBKeys::ACTIVEHDKEY,\n+        [] (CWallet* pwallet, DataStream& key, DataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432899832",
      "id" : 1432899832,
      "in_reply_to_id" : 1432692273,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VaFD4",
      "original_commit_id" : "8bb7a8b06f1f0558bdb0bda696f5fb5748dacf7e",
      "original_line" : 798,
      "original_position" : 31,
      "original_start_line" : 797,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1790921397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432899832/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432899832",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432910673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432910673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet: Load activehdkey and its private keys\" (2e840bcfc0308a461d210e0c7ed66a9bbc723b62)\r\n\r\nWhat does no deriviation will be performed mean? Would suggest clarifying, or maybe removing.",
      "commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "created_at" : "2023-12-20T16:08:23Z",
      "diff_hunk" : "@@ -1038,6 +1043,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     //! Whether the (external) signer performs R-value signature grinding\n     bool CanGrindR() const;\n+\n+    //! Handling wallet HD Master Keys that are used for new automatic descriptors. No derivation will be performed.\n+    bool LoadActiveHDPubKey(const CExtPubKey& xpub, const std::optional<CKey>& key, const std::vector<unsigned char>& crypted_key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1432910673",
      "id" : 1432910673,
      "line" : 1052,
      "node_id" : "PRRC_kwDOABII585VaHtR",
      "original_commit_id" : "2e840bcfc0308a461d210e0c7ed66a9bbc723b62",
      "original_line" : 1048,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 38,
      "pull_request_review_id" : 1790921397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432910673/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T16:41:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1432910673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think it would be better not to introduce the concept of an \"active hd key\" at all, and instead follow an approach more like what apoelstra implemented in #27351 where a hd seed is just extra information associated with a descriptor, and different descriptors can have different seeds.\r\n\r\nThis is essentially what we do today, albeit with hd keys rather than hd seeds.\r\n\r\n> I think it is useful to have a `gethdkey` method similar to the one added here that would return the hd key associated with various descriptors. But that could be implemented more simply without changing the database format, or adding a flag, or bringing in other complexity introduced in this PR.\r\n\r\nWhat would the API for that look like?\r\n\r\n> I also think the `createwalletdescriptor` RPC from #25907 should be added to make it easy to upgrade wallets when new address types are added. But this could work the same way as `gethdkey` and use the HD key already in the wallet, or allow one to be specified if there are multiple.\r\n\r\nUltimately, the work in this PR is the product of different iterations of how to implement `createwalletdescriptor`. The main thing blocking that is the question of which key should be used in the new descriptors. I've tried a couple of different approaches, and they all have drawbacks in some form:\r\n\r\n* **Generate a new hd key and use that for the descriptor.** Feedback on this was essentially that it would be confusing to users since all other descriptors use the same hd key. It would also make a wallet made in the past inconsistent with the pattern for wallets made today.\r\n* **Have the user provide the hd key.** This really sucks for the user since they need to figure out how to get a hd key. The easiest way is to just pull it out from a descriptor in the same wallet, then we should be smart enough to figure that out for them.\r\n* **Have the user specify a descriptor.** This is basically providing the hd key but worse since descriptors are longer, and it would only work for single key descriptors.\r\n  * **Specify a descriptor id.** While shorter than specifying a full descriptor, it's still not a good UX. The user has to find a descriptor id, and we don't currently expose that info. The descriptor id is also completely opaque and we'd then have to settle on what an id even means.\r\n\r\nThe goal of this PR is to provide an answer for this question. Whenever there is more than one hd key, there is a UX problem in how the user is supposed to specify it. So this PR resolves that by picking only one key. Then there is the problem with upgrading. This PR solves that by being consistent with new wallets - new wallets have a master key that is automatically generated and used in all the automatically generated descriptors, so it tries to reverse engineer the hd key from the existing descriptors. Using the automatically generated key means that all wallets, both old and new, should behave consistently.\r\n\r\n> does it make sense for getwalletinfo to start returning an hdseedid value?\r\n\r\nWe can't do that since we're dealing with hd keys rather than hd seeds. The seed is hashed in order to become a master key, and descriptor wallets always throw that away once the master key is computed as it is no longer needed. We wouldn't be able to compute this for old wallets.",
      "created_at" : "2023-12-20T21:26:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1865160784",
      "id" : 1865160784,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vLBhQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1865160784/reactions"
      },
      "updated_at" : "2023-12-20T21:32:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1865160784",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433281929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433281929"
         }
      },
      "author_association" : "MEMBER",
      "body" : "`Read` requires an unserializable object as a parameter, and since this record has 2 objects, using `Read()` is a non-trivial change.",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:42:25Z",
      "diff_hunk" : "@@ -782,6 +791,25 @@ static DataStream PrefixStream(const Args&... args)\n static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& batch, int last_client) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     AssertLockHeld(pwallet->cs_wallet);\n+    DBErrors result = DBErrors::LOAD_OK;\n+\n+    // Get Active HD Key\n+    LoadResult active_hdkey_res = LoadRecords(pwallet, batch, DBKeys::ACTIVEHDKEY,\n+        [] (CWallet* pwallet, DataStream& key, DataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {\n+        std::vector<unsigned char> xpub(BIP32_EXTKEY_SIZE);\n+        bool enc_status = false;\n+        value >> xpub;\n+        value >> enc_status;\n+        CExtPubKey extpub;\n+        extpub.Decode(xpub.data());\n+        if (!extpub.pubkey.IsValid()) {\n+            err = \"Error reading wallet database: CExtPubKey corrupt\";\n+            return DBErrors::CORRUPT;\n+        }\n+        // TODO: Load extpub into the wallet\n+        return DBErrors::LOAD_OK;\n+    });\n+    result = std::max(result, active_hdkey_res.m_result);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433281929",
      "id" : 1433281929,
      "in_reply_to_id" : 1430209041,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VbiWJ",
      "original_commit_id" : "8bb7a8b06f1f0558bdb0bda696f5fb5748dacf7e",
      "original_line" : 823,
      "original_position" : 45,
      "original_start_line" : 797,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1791871432,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433281929/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:42:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433281929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282244"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282244"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Both are now a variant in a new struct, so should no longer be a problem.",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:43:07Z",
      "diff_hunk" : "@@ -4336,4 +4336,31 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     }\n     return res;\n }\n+\n+bool CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const std::optional<CKey>& key, const std::vector<unsigned char>& crypted_key)\n+{\n+    AssertLockHeld(cs_wallet);\n+    if (!Assume(xpub.pubkey.IsValid())) {\n+        return false;\n+    }\n+    m_xpub = xpub;\n+\n+    if (key) {\n+        if (!Assume(key->IsValid() && crypted_key.empty() && xpub.pubkey == key->GetPubKey())) {\n+            return false;\n+        }\n+        m_hd_key = key;\n+        return true;\n+    }\n+    if (!crypted_key.empty()) {\n+        if (!Assume(!key)) {\n+            return false;\n+        }\n+        m_hd_crypted_key = crypted_key;\n+        return true;\n+    }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282244",
      "id" : 1433282244,
      "in_reply_to_id" : 1430231352,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VbibE",
      "original_commit_id" : "2e840bcfc0308a461d210e0c7ed66a9bbc723b62",
      "original_line" : 4485,
      "original_position" : 26,
      "original_start_line" : 4340,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1791872791,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282244/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:43:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282276"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282276"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:43:12Z",
      "diff_hunk" : "@@ -782,6 +791,25 @@ static DataStream PrefixStream(const Args&... args)\n static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& batch, int last_client) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet)\n {\n     AssertLockHeld(pwallet->cs_wallet);\n+    DBErrors result = DBErrors::LOAD_OK;\n+\n+    // Get Active HD Key\n+    LoadResult active_hdkey_res = LoadRecords(pwallet, batch, DBKeys::ACTIVEHDKEY,\n+        [] (CWallet* pwallet, DataStream& key, DataStream& value, std::string& err) EXCLUSIVE_LOCKS_REQUIRED(pwallet->cs_wallet) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282276",
      "id" : 1433282276,
      "in_reply_to_id" : 1432692273,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Vbibk",
      "original_commit_id" : "8bb7a8b06f1f0558bdb0bda696f5fb5748dacf7e",
      "original_line" : 798,
      "original_position" : 31,
      "original_start_line" : 797,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1791872965,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282276/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:43:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282276",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282437"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282437"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Moved this to the commit where it actually matters, so should hopefully make more sense.",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:43:32Z",
      "diff_hunk" : "@@ -1170,6 +1199,9 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         }\n #endif\n \n+        // Load decryption keys\n+        result = std::max(LoadDecryptionKeys(pwallet, *m_batch), result);\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282437",
      "id" : 1433282437,
      "in_reply_to_id" : 1432698232,
      "line" : 1239,
      "node_id" : "PRRC_kwDOABII585VbieF",
      "original_commit_id" : "8bb7a8b06f1f0558bdb0bda696f5fb5748dacf7e",
      "original_line" : 1239,
      "original_position" : 73,
      "original_start_line" : 1202,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 147,
      "pull_request_review_id" : 1791873669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282437/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1237,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282437",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282519"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282519"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:43:43Z",
      "diff_hunk" : "@@ -4363,4 +4368,30 @@ bool CWallet::LoadActiveHDPubKey(const CExtPubKey& xpub, const std::optional<CKe\n     // We should have had either a key or a crypted key. Having neither is an error.\n     return Assume(false);\n }\n+\n+bool CWallet::SetActiveHDKey(const CExtKey& xprv)\n+{\n+    AssertLockHeld(cs_wallet);\n+    std::optional<CKey> key;\n+    std::vector<unsigned char> crypted_key;\n+    if (IsCrypted()) {\n+        if (IsLocked()) {\n+            return false;\n+        }\n+        CKeyingMaterial secret(xprv.key.begin(), xprv.key.end());\n+        if (!EncryptSecret(GetEncryptionKey(), secret, xprv.key.GetPubKey().GetHash(), crypted_key)) {\n+            return false;\n+        }\n+    } else {\n+        key = xprv.key;\n+    }\n+    return SetActiveHDKey(xprv.Neuter(), key, crypted_key);\n+}\n+\n+bool CWallet::SetActiveHDKey(const CExtPubKey& xpub, const std::optional<CKey>& key, const std::vector<unsigned char>& crypted_key)\n+{\n+    AssertLockHeld(cs_wallet);\n+    LoadActiveHDPubKey(xpub, key, crypted_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282519",
      "id" : 1433282519,
      "in_reply_to_id" : 1432718349,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VbifX",
      "original_commit_id" : "2e2545c3a20f67b71433a25dd8ff75bd00ebe2d5",
      "original_line" : 4394,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1791874007,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282519/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:43:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282519",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282680"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282680"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've added an `Assume` here. There isn't really a valid failure scenario here other than write failure.",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:44:14Z",
      "diff_hunk" : "@@ -558,6 +558,109 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet\n+ * and tries to find a CExtPubKey which is likely to be the most recent one used\n+ * to generate all of the automatically generated descriptors. The automatically\n+ * generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh.\n+ * There may be 2 p2tr descriptors, as well as imports. Those are ignored as they\n+ * are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as\n+ * the only key. The best candidate is selected as the one that was most recently\n+ * used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade\n+ * has occurred, regardless of whether the active HD key was found.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<CPubKey, CKey>& desc_keys, const std::map<CPubKey, std::vector<unsigned char>>& desc_crypt_keys, bool encryption_status)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        (IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY) && encryption_status == IsCrypted())\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    if (best_xpub) {\n+        std::optional<CKey> key;\n+        auto key_it = desc_keys.find(best_xpub->pubkey);\n+        if (key_it != desc_keys.end()) {\n+            key = key_it->second;\n+        }\n+        std::vector<unsigned char> crypted_key;\n+        auto ckey_it = desc_crypt_keys.find(best_xpub->pubkey);\n+        if (ckey_it != desc_crypt_keys.end()) {\n+            crypted_key = ckey_it->second;\n+        }\n+        SetActiveHDKey(*best_xpub, key, crypted_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282680",
      "id" : 1433282680,
      "in_reply_to_id" : 1432727652,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Vbih4",
      "original_commit_id" : "ce5495a4b27fe9646c9933dc39f0cb4e8510eaff",
      "original_line" : 658,
      "original_position" : 101,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1791874928,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282680/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:44:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282680",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282737"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282737"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:44:22Z",
      "diff_hunk" : "@@ -555,6 +558,109 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet\n+ * and tries to find a CExtPubKey which is likely to be the most recent one used\n+ * to generate all of the automatically generated descriptors. The automatically\n+ * generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh.\n+ * There may be 2 p2tr descriptors, as well as imports. Those are ignored as they\n+ * are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as\n+ * the only key. The best candidate is selected as the one that was most recently\n+ * used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade\n+ * has occurred, regardless of whether the active HD key was found.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<CPubKey, CKey>& desc_keys, const std::map<CPubKey, std::vector<unsigned char>>& desc_crypt_keys, bool encryption_status)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        (IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY) && encryption_status == IsCrypted())\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433282737",
      "id" : 1433282737,
      "in_reply_to_id" : 1432731105,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Vbiix",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 640,
      "original_position" : 93,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1791875177,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282737/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:44:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433282737",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433283055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433283055"
         }
      },
      "author_association" : "MEMBER",
      "body" : "These can fail because the key may or may not be encrypted. I've added a few comments.",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:45:06Z",
      "diff_hunk" : "@@ -555,6 +558,109 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet\n+ * and tries to find a CExtPubKey which is likely to be the most recent one used\n+ * to generate all of the automatically generated descriptors. The automatically\n+ * generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh.\n+ * There may be 2 p2tr descriptors, as well as imports. Those are ignored as they\n+ * are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as\n+ * the only key. The best candidate is selected as the one that was most recently\n+ * used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade\n+ * has occurred, regardless of whether the active HD key was found.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<CPubKey, CKey>& desc_keys, const std::map<CPubKey, std::vector<unsigned char>>& desc_crypt_keys, bool encryption_status)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        (IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY) && encryption_status == IsCrypted())\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    if (best_xpub) {\n+        std::optional<CKey> key;\n+        auto key_it = desc_keys.find(best_xpub->pubkey);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433283055",
      "id" : 1433283055,
      "in_reply_to_id" : 1432741629,
      "line" : 649,
      "node_id" : "PRRC_kwDOABII585Vbinv",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 649,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 102,
      "pull_request_review_id" : 1791876589,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433283055/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:45:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433283055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433283360"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433283360"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've changed it to `Assume`. Also changed the flag setting to only occur if there were no other problems.",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:45:52Z",
      "diff_hunk" : "@@ -555,6 +558,109 @@ void CWallet::UpgradeDescriptorCache()\n     SetWalletFlag(WALLET_FLAG_LAST_HARDENED_XPUB_CACHED);\n }\n \n+/**\n+ * UpgradeToGlobalHDKey searches through the descriptors in a descriptor wallet\n+ * and tries to find a CExtPubKey which is likely to be the most recent one used\n+ * to generate all of the automatically generated descriptors. The automatically\n+ * generated descriptors are guaranteed to be 2 p2pkh, 2 p2sh-segwit, and 2 p2wpkh.\n+ * There may be 2 p2tr descriptors, as well as imports. Those are ignored as they\n+ * are not guaranteed to be present in all wallets.\n+ * Candidate CExtKeys are those that appear in the aforementioned descriptors as\n+ * the only key. The best candidate is selected as the one that was most recently\n+ * used.\n+ *\n+ * The best candidate will be added to the wallet as the current active HD key.\n+ *\n+ * WALLET_FLAG_GLOBAL_HD_KEY will be set in order to indicate that this upgrade\n+ * has occurred, regardless of whether the active HD key was found.\n+ */\n+void CWallet::UpgradeToGlobalHDKey(const std::map<CPubKey, CKey>& desc_keys, const std::map<CPubKey, std::vector<unsigned char>>& desc_crypt_keys, bool encryption_status)\n+{\n+    if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS) ||\n+        IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) ||\n+        (IsWalletFlagSet(WALLET_FLAG_GLOBAL_HD_KEY) && encryption_status == IsCrypted())\n+        ) {\n+        return;\n+    }\n+\n+\n+    std::map<CExtPubKey, std::pair<std::map<OutputType, int>, uint64_t>> key_counts;\n+    std::map<OutputType, int> tmpl = {{OutputType::LEGACY, 0}, {OutputType::P2SH_SEGWIT, 0}, {OutputType::BECH32, 0}};\n+\n+    for (const auto& spkm : GetAllScriptPubKeyMans()) {\n+        const DescriptorScriptPubKeyMan* desc_spkm = dynamic_cast<DescriptorScriptPubKeyMan*>(spkm);\n+        assert(desc_spkm);\n+        LOCK(desc_spkm->cs_desc_man);\n+        WalletDescriptor w_desc = desc_spkm->GetWalletDescriptor();\n+\n+        // Automatically generated descriptors are ranged\n+        if (!w_desc.descriptor->IsRange()) {\n+            continue;\n+        }\n+\n+        // Automatically generated descriptors have exactly 1 xpub and no other keys\n+        std::set<CPubKey> desc_pubkeys;\n+        std::set<CExtPubKey> desc_xpubs;\n+        w_desc.descriptor->GetPubKeys(desc_pubkeys, desc_xpubs);\n+        if (desc_xpubs.size() != 1 || desc_pubkeys.size() != 0) {\n+            continue;\n+        }\n+        const CExtPubKey& xpub = *desc_xpubs.begin();\n+\n+        if (key_counts.count(xpub) == 0) {\n+            key_counts.emplace(xpub, std::make_pair(tmpl, 0));\n+        }\n+\n+        // Automatically generated descriptors have an output type that is one of legacy, p2sh-segwit, or bech32\n+        std::optional<OutputType> output_type = w_desc.descriptor->GetOutputType();\n+        if (!output_type.has_value()) {\n+            continue;\n+        }\n+        if (tmpl.count(output_type.value()) == 0) {\n+            continue;\n+        }\n+        key_counts[xpub].first[output_type.value()]++;\n+\n+        if (w_desc.creation_time > key_counts[xpub].second) {\n+            key_counts[xpub].second = w_desc.creation_time;\n+        }\n+    }\n+\n+    // Find candidate xpubs\n+    // These are the ones that are used in 2 pkh(), 2 sh(wpkh()), and 2 wpkh() descriptors\n+    // If the wallet's descriptors have been rotated before, then we want to get the most recent ones\n+    // as those contain the master key that we currently want to use.\n+    uint64_t best_time = 0;\n+    std::optional<CExtPubKey> best_xpub;\n+    std::map<CKeyID, CExtPubKey> xpubs;\n+    for (const auto& [xpub, info] : key_counts) {\n+        const auto& [dtypes, desc_time] = info;\n+        if (std::all_of(dtypes.begin(), dtypes.end(), [](const auto& p) { return p.second == 2;})) {\n+            xpubs.emplace(xpub.pubkey.GetID(), xpub);\n+            if (desc_time > best_time) {\n+                best_time = desc_time;\n+                best_xpub.emplace(xpub);\n+            }\n+        }\n+    }\n+\n+    if (best_xpub) {\n+        std::optional<CKey> key;\n+        auto key_it = desc_keys.find(best_xpub->pubkey);\n+        if (key_it != desc_keys.end()) {\n+            key = key_it->second;\n+        }\n+        std::vector<unsigned char> crypted_key;\n+        auto ckey_it = desc_crypt_keys.find(best_xpub->pubkey);\n+        if (ckey_it != desc_crypt_keys.end()) {\n+            crypted_key = ckey_it->second;\n+        }\n+        SetActiveHDKey(*best_xpub, key, crypted_key);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433283360",
      "id" : 1433283360,
      "in_reply_to_id" : 1432749103,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Vbisg",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 658,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1791878059,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433283360/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:45:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433283360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433283984"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433283984"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a comment. The purpose is to be consistent so that the user is not confused. Otherwise an import could change the result of `gethdkey` unexpectedly. With the future `sethdseed` change, `gethdkey`'s result being different will at least be explicit, whereas an import may or may not change the detection of the hd key, depending on what else is/has been imported.",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:47:26Z",
      "diff_hunk" : "@@ -274,6 +275,21 @@ class WalletBatch\n     bool WriteActiveScriptPubKeyMan(uint8_t type, const uint256& id, bool internal);\n     bool EraseActiveScriptPubKeyMan(uint8_t type, bool internal);\n \n+    /**\n+     * The active hd key for a wallet is the xpub of the xprv used to generate the\n+     * automatically generated descriptors. However not all descriptor wallets will\n+     * have this record, and so will need to be upgraded to include it.\n+     * Additionally, it is possible to load a wallet that has had the upgrade performed\n+     * into an older version of the software which does not know about this record,\n+     * then generate new descriptors by encrypting, and then loading in a version that\n+     * does know about the record. There would then be a mismatch between the stored\n+     * xpub and the actual keys used to generate those descriptors. To account for this,\n+     * we store whether the wallet was encrypted at the time this record was written,\n+     * and can perform the upgrade again if the stored encryption status doesn't\n+     * match the real status.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433283984",
      "id" : 1433283984,
      "in_reply_to_id" : 1432799216,
      "line" : 289,
      "node_id" : "PRRC_kwDOABII585Vbi2Q",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 289,
      "original_position" : 23,
      "original_start_line" : 282,
      "path" : "src/wallet/walletdb.h",
      "position" : 23,
      "pull_request_review_id" : 1791880969,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433283984/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 282,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:47:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433283984",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433284084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433284084"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done as suggested.",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:47:39Z",
      "diff_hunk" : "@@ -315,6 +316,11 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     //! the current wallet version: clients below this version are not able to load the wallet\n     int nWalletVersion GUARDED_BY(cs_wallet){FEATURE_BASE};\n \n+    //! The extended key used for new automatically generated descriptors\n+    std::optional<CExtPubKey> m_xpub GUARDED_BY(cs_wallet);\n+    std::optional<CKey> m_hd_key GUARDED_BY(cs_wallet);\n+    std::vector<unsigned char> m_hd_crypted_key GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433284084",
      "id" : 1433284084,
      "in_reply_to_id" : 1432889935,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Vbi30",
      "original_commit_id" : "db6b61e9e7635c9cb97d73fd44b9e7266b8eef51",
      "original_line" : 322,
      "original_position" : 17,
      "original_start_line" : 319,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 1791881384,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433284084/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:47:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433284084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433284159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433284159"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:47:51Z",
      "diff_hunk" : "@@ -1038,6 +1043,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     //! Whether the (external) signer performs R-value signature grinding\n     bool CanGrindR() const;\n+\n+    //! Handling wallet HD Master Keys that are used for new automatic descriptors. No derivation will be performed.\n+    bool LoadActiveHDPubKey(const CExtPubKey& xpub, const std::optional<CKey>& key, const std::vector<unsigned char>& crypted_key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433284159",
      "id" : 1433284159,
      "in_reply_to_id" : 1432910673,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Vbi4_",
      "original_commit_id" : "2e840bcfc0308a461d210e0c7ed66a9bbc723b62",
      "original_line" : 1048,
      "original_position" : 18,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 1791881736,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433284159/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:47:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433284159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433284534"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433284534"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I prefer these checks to be in the function itself rather than the caller for these upgrades as we may want to call these from elsewhere in the future.",
      "commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "created_at" : "2023-12-20T23:48:43Z",
      "diff_hunk" : "@@ -997,6 +1001,9 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n         // Only log if there are no critical errors\n         pwallet->WalletLogPrintf(\"Descriptors: %u, Descriptor Keys: %u plaintext, %u encrypted, %u total.\\n\",\n                desc_res.m_records, num_keys, num_ckeys, num_keys + num_ckeys);\n+\n+        // Upgrade the wallet to have a global HD key",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433284534",
      "id" : 1433284534,
      "in_reply_to_id" : 1426540509,
      "line" : 1010,
      "node_id" : "PRRC_kwDOABII585Vbi-2",
      "original_commit_id" : "ce5495a4b27fe9646c9933dc39f0cb4e8510eaff",
      "original_line" : 1010,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 132,
      "pull_request_review_id" : 1791883380,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433284534/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-20T23:48:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433284534",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433362520"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433362520"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet: Automatically upgrade a wallet to have global hd key\" (442962d4410edd985fe336f29070c55516ae7de4)\r\n\r\nIt seems like these variables are unnecessary, and CWallet::UpgradeToGlobalHDKey could just get the keys from the descriptors in the wallet instance, instead of requiring them to be passed as extra argument. This would require adding an extra loop to UpgradeToGlobalHDKey, but also make it less fragile, simpler to call, and easier to understand without having to look at outside code.",
      "commit_id" : "ea6a87a12353c134cd55cd06b533e9415932397d",
      "created_at" : "2023-12-21T02:01:16Z",
      "diff_hunk" : "@@ -825,8 +825,10 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n     // Load descriptor record\n     int num_keys = 0;\n     int num_ckeys= 0;\n+    std::map<CPubKey, CKey> desc_keys;\n+    std::map<CPubKey, std::vector<unsigned char>> desc_crypt_keys;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433362520",
      "id" : 1433362520,
      "line" : 829,
      "node_id" : "PRRC_kwDOABII585Vb2BY",
      "original_commit_id" : "442962d4410edd985fe336f29070c55516ae7de4",
      "original_line" : 829,
      "original_position" : 18,
      "original_start_line" : 828,
      "path" : "src/wallet/walletdb.cpp",
      "position" : 62,
      "pull_request_review_id" : 1791999003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433362520/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 828,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-21T03:01:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433362520",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433383580"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433383580"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"test: add coverage for re-opening a downgraded encrypted wallet on master\" (98b6fad226640a0827e39574a91dd3d2fdeac94a)\r\n\r\nI think your renaming script went too far ð, this commit used to be authored by furszy (db6b61e9e7635c9cb97d73fd44b9e7266b8eef51)",
      "commit_id" : "ea6a87a12353c134cd55cd06b533e9415932397d",
      "created_at" : "2023-12-21T02:34:57Z",
      "diff_hunk" : "@@ -131,6 +131,71 @@ def test_v19_addmultisigaddress(self):\n         wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n         assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+    def test_downgrade_encryption(self, node_master, descriptors_nodes, legacy_nodes):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433383580",
      "id" : 1433383580,
      "line" : 134,
      "node_id" : "PRRC_kwDOABII585Vb7Kc",
      "original_commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "original_line" : 134,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : 12,
      "pull_request_review_id" : 1791999003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433383580/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-21T03:01:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433383580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433433918"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433433918"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oops fixed",
      "commit_id" : "ea6a87a12353c134cd55cd06b533e9415932397d",
      "created_at" : "2023-12-21T03:45:44Z",
      "diff_hunk" : "@@ -131,6 +131,71 @@ def test_v19_addmultisigaddress(self):\n         wallet = node_v19.get_wallet_rpc(\"w1_v19\")\n         assert wallet.getaddressinfo(address_18075)[\"solvable\"]\n \n+    def test_downgrade_encryption(self, node_master, descriptors_nodes, legacy_nodes):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1433433918",
      "id" : 1433433918,
      "in_reply_to_id" : 1433383580,
      "line" : 134,
      "node_id" : "PRRC_kwDOABII585VcHc-",
      "original_commit_id" : "98b6fad226640a0827e39574a91dd3d2fdeac94a",
      "original_line" : 134,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/wallet_backwards_compatibility.py",
      "position" : 12,
      "pull_request_review_id" : 1792141614,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433433918/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-21T03:45:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1433433918",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Instead of returning an object with \"xpub\" and \"xpriv\" fields, it would return a list of objects with \"xpub\", \"xpriv\", and \"descriptors\" fields. The \"descriptors\" field would contain a list of descriptors using the hd key.\r\n> \r\n> It would also be good for the method to accept an \"active_only\" option, and only return hd keys associated with active descriptors by default.\r\n> \r\n> This would make it easy to get the hd key, and easy to understand how the hd key is referenced by descriptors. In the typical case it would only return 1 hd key, and in more complicated cases it would be easier to understand than the `gethdmethod` in this PR, because it would give you all the information about hd keys, instead of just choosing one hd key and not telling you which descriptors it is associated with.\r\n> \r\n> The approach I would suggest is making the hd key an optional parameter to `createwalletdescriptor`, and if it is not specified, using the same hd key as other active descriptors. Unless I am misunderstanding something, in normal cases we would expect there to be exactly one hd key. But in cases where there is more than one key, we could choose the active descriptor for the default output type (like `getnewaddress`), or be more conservative and raise an exception asking for an hd key to be specified to disambiguate.\r\n> \r\n> For cases where the hd key is specified to `createwalletdescriptor`, I think we would want it to be flexible and accept multiple formats, but accepting \"xpub\" value from `gethdkey` would be an obvious start. It could also accept the xpriv value, or even the seed keys or bytes. If it accepted private keys or seeds, we could treat it as a generalized alternative to `sethdseed`, which would be great because it would simplify usage, and let us deprecate the `sethdseed` method instead of keeping both methods.\r\n\r\nHmm. I suppose that could be a viable approach. I will experiment with it.\r\n\r\nI know that @Sjors has some ideas for `gethdkey`/`getxpub` but I'm not sure if those are compatible with this proposed approach. Otherwise, it does seem like it would cover the use cases targeted by this PR and it's descendant.",
      "created_at" : "2023-12-21T03:56:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1865439673",
      "id" : 1865439673,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vMFm5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1865439673/reactions"
      },
      "updated_at" : "2023-12-21T03:56:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1865439673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "IIUC the approach proposed by @ryanofsky is to basically figure out the key on demand instead of storing it in the DB.\r\n\r\nSo this works for generating tr() descriptors for existing wallets, but it doesn't work that well for #24861. The desired flow is to have a wallet with HD key but without descriptors and then retrieve an xpub to construct multisig descriptor. How would it work if we don't have an HD key associated with the wallet?\r\n\r\nIn my opinion, approach proposed in this PR resolves a regression we had with transition to descriptor wallets. In legacy we actually had a proper HD key residing in a wallet. And this is the same thing we want to bring back to descriptors. 1 wallet = 1 HD key. Yes, the matter is complicated by the fact that users can add any other keys they wish, but the model and the default flow are actually pretty straightforward. ",
      "created_at" : "2023-12-21T07:58:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1865817132",
      "id" : 1865817132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vNhws",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1865817132/reactions"
      },
      "updated_at" : "2023-12-21T07:58:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1865817132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@achow101 wrote:\r\n\r\n> I've tried a couple of different approaches, and they all have drawbacks in some form:\r\n>\r\n> Generate a new hd key and use that for the descriptor.\r\n\r\nAnother drawback of that approach is that it requires a new backup, e.g. for anyone who just wants to add taproot support to a wallet that doesn't have it yet.\r\n\r\nSomething I still need to do, but waiting for this PR to land, is to enable adding a `tr()` to a external signer wallet. Hardware wallets would typically derive those from the same master seed, though from our end that ~doesn't~ shouldn't matter; external signer wallets are watch-only. Well, except that we identify the physical device by the fingerprint of its master key.\r\n\r\n@s3rk wrote:\r\n\r\n> The desired flow is to have a wallet with HD key but without descriptors and then retrieve an xpub to construct multisig descriptor. How would it work if we don't have an HD key associated with the wallet?\r\n\r\nIndeed. There's different proposals out there of how to derive keys for a multisig wallet, but I'm mainly thinking of two approaches:\r\n\r\n1. Take an existing wallet with the usual descriptors, pick an unused derivation path (e.g. `m/48'/...`, based on [BIP 48](https://github.com/bitcoin/bips/blob/master/bip-0048.mediawiki)) and share that with the other participants. You then import the resulting multisig descriptor.\r\n\r\n2. Create a fresh wallet with only a seed / master key, and no descriptors. Pick any derivation... (same as 1)\r\n\r\nI prefer (2) because I think you shouldn't co-mingle multisig and single sig funds in the same wallet, for privacy reason and because it's potentially confusing. Multisig setups _always_ require a new backup, so if we need to generate a fresh master key that's not a big deal to me.  ",
      "created_at" : "2023-12-21T09:15:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1865915848",
      "id" : 1865915848,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vN53I",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1865915848/reactions"
      },
      "updated_at" : "2023-12-21T09:37:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1865915848",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1434279569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434279569"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point, done.",
      "commit_id" : "d1caefc0e1fa013f8ba198e8ad0dc9fbc8b9af32",
      "created_at" : "2023-12-21T16:29:26Z",
      "diff_hunk" : "@@ -825,8 +825,10 @@ static DBErrors LoadDescriptorWalletRecords(CWallet* pwallet, DatabaseBatch& bat\n     // Load descriptor record\n     int num_keys = 0;\n     int num_ckeys= 0;\n+    std::map<CPubKey, CKey> desc_keys;\n+    std::map<CPubKey, std::vector<unsigned char>> desc_crypt_keys;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#discussion_r1434279569",
      "id" : 1434279569,
      "in_reply_to_id" : 1433362520,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VfV6R",
      "original_commit_id" : "442962d4410edd985fe336f29070c55516ae7de4",
      "original_line" : 829,
      "original_position" : 18,
      "original_start_line" : 828,
      "path" : "src/wallet/walletdb.cpp",
      "position" : null,
      "pull_request_review_id" : 1793303485,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26728",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434279569/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-21T16:29:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434279569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@Sjors and @S3RK, can you help me out by being specific about the flows you have in mind? Like in terms of what RPC calls users will make to do a particular operation? I'm trying to fill in the gaps myself, but in the cases I can think of, it seems like adding the concept of a sticky master key doesn't actually make things simpler, just more opaque and confusing.\r\n\r\nI understand that if you were designing a new wallet model and API, you would both prefer an approach that required all active descriptors to have a single master key, and would take advantage of having that master key to simplify certain things.\r\n\r\nBut I see real drawbacks to usability and code complexity if we are going to try to pretend that the wallet only has an single active hd key while not actually enforcing this. I think you if compare the API implemented in this PR and its followups to the API proposed in https://github.com/bitcoin/bitcoin/pull/26728#pullrequestreview-1791999003 I think you would see the same problems and hopefully agree. To be specific:\r\n\r\n- The `gethdkey` method implemented in this PR currently picks one master key used by descriptors, and ignores others that may be present. The proposed `gethdkey` described in [#26728 (review) ](https://github.com/bitcoin/bitcoin/pull/26728#pullrequestreview-1791999003) would return any hd key that is actively being used to generate addresses in the wallet by default (and would return inactive hd keys with an option) and also list descriptors associated with hd keys. This should be better and less confusing in every case compared to the implementation in this PR which just returns a single hd key with no descriptor information, with the key chosen in a complicated way that is sticky and can't be controlled by the user, even if they import new descriptors and set them to be active.\r\n\r\n- The `createwalletdescriptor` method implemented in [#25907](https://github.com/bitcoin/bitcoin/pull/25907) and `sethdseed` method added for descriptor wallets in [#29054](https://github.com/bitcoin/bitcoin/pull/29054) have overlapping functionality and confusing limitations that would be avoided by dropping `sethdseed` and making `createwalletdescriptor` more flexible as described [#26728 (review) ](https://github.com/bitcoin/bitcoin/pull/26728#pullrequestreview-1791999003).\r\n\r\n- IIUC, the `importdescriptor` extension from [#23544](https://github.com/bitcoin/bitcoin/pull/23544/commits/7841583080e33f616422464142290f871c31a2e4) to allow importing descriptors with known xpubs seems like it would be more robust and less confusing if it just worked with any xpub in the wallet or any active xpub, instead of only working for the sticky master key and failing with an error about not having private keys which are actually present.\r\n\r\n- IIUC, the `importdescriptor` extension from [#27351](https://github.com/bitcoin/bitcoin/pull/27351) would also seem to work more smoothly with the suggested approach, because there would be no need for a separate `sethdseed` call, and the descriptor and master key would show up together in `gethdkey` output.\r\n\r\nFor external signing and multisig, I could believe in theory that there are cases that may be more complicated by not having a sticky hd key. But I haven't seen examples of that yet, and don't think it should be hard to come up with them if they exist. Also I wouldn't want to make the wallet model more complicated prematurely if it seems like all the improvements we want to make are possible without this.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1865817132\r\n\r\n> it doesn't work that well for #24861. The desired flow is to have a wallet with HD key but without descriptors and then retrieve an xpub to construct multisig descriptor. How would it work if we don't have an HD key associated with the wallet?\r\n\r\nThis flow actually sounds more complicated than what I would expect. If you have a blank wallet, why would you want creating a multisig desriptor and creating the hd key to be two separate steps, and require a separate `sethdseed` call before whatever call is used to add the multisig descriptor? Wouldn't the flow be simpler if you just made one call to `createwalletdescriptor` or `importdescriptor` and it did both things? (__EDIT__: Actually rereading this, I can see why this wouldn't work because when you have multiple wallets you need to generate all the seeds first before you can generate the descriptor. I'm still not sure that requires all the complexity in this PR, but it does suggest why it is there.)  In the case of a non-blank wallet, I also think not having a sticky hd key would be more transparent. Creating a multisig desciptor in that case could use the wallet's one hd key if there is one or require one to be specified if there are multiple.\r\n\r\n> In my opinion, approach proposed in this PR resolves a regression we had with transition to descriptor wallets. In legacy we actually had a proper HD key residing in a wallet.\r\n\r\nYes I can see the aspiration to do this, and I could imagine a different wallet model with a less flexible `importdescriptor` RPC that required all descriptor to have the same hd key, or required any descriptors with different hd keys to be inactive. But this is not the current wallet model we have, and it seems like at this point trying to bolt on the concept of a having one hd key when wallet doesn't actually enforce it just seems messy and possibly the worst of both worlds.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1865915848\r\n\r\n> Something I still need to do, but waiting for this PR to land, is to enable adding a tr() to a external signer wallet. Hardware wallets would typically derive those from the same master seed, though from our end that doesn't shouldn't matter; external signer wallets are watch-only. Well, except that we identify the physical device by the fingerprint of its master key.\r\n\r\nI think I am probably missing the point and don't have enough context, but I don't see how the current PR helps with this. I don't see how the wallet having a sticky hd key would help working with an external signer or creating a tr() descriptor. Like in general I could see how the wallet storing more information could help it work with external signers, but I don't understand how storing this particular bit of information would help.\r\n\r\n> Indeed. There's different proposals out there of how to derive keys for a multisig wallet, but I'm mainly thinking of two approaches [...] I prefer (2)\r\n\r\nI see, but that suggests this PR is good because the limitations it adds will force users to choose approach (2). So if you have a wallet with default descriptors you can't import a multisig using the same hd key, and if you have a wallet with a multisig descriptor you can't create default descriptors with the same hd key. But it seems like the approach in this PR would only be enforcing that selectively, and the resulting behavior would probably just be confusing. Wouldn't it be simpler and clearer to just have explicit checks when adding descriptors for the combinations of descriptors you don't want to allow? Again here I think it would be helpful to be more concrete and think about the specific RPC methods that would be used for these flows.\r\n\r\nI definitely don't understand everything and there could be real reasons why the approach in this PR makes sense. Just so far I haven't seen what the benefits are, and the drawbacks seem unpleasant.",
      "created_at" : "2023-12-21T16:50:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1866636473",
      "id" : 1866636473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vQpy5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1866636473/reactions"
      },
      "updated_at" : "2023-12-21T17:04:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1866636473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1866636473\r\n\r\n> If you have a blank wallet, why would you want creating a multisig desriptor and creating the hd key to be two separate steps, and require a separate `sethdseed` call before whatever call is used to add the multisig descriptor? Wouldn't the flow be simpler if you just made one call to `createwalletdescriptor` or `importdescriptor` and it did both things? (**EDIT**: Actually rereading this, I can see why this wouldn't work because when you have multiple wallets you need to generate all the seeds first before you can generate the descriptor. I'm still not sure that requires all the complexity in this PR, but it does suggest why it is there.)\r\n\r\nReplying to my own comment, since I had a realization after I posted it and made the edit above.\r\n\r\nI think neither the approach in this PR nor the suggested approach in https://github.com/bitcoin/bitcoin/pull/26728#pullrequestreview-1791999003 will support multisig well by themselves. But I think this PR's approach of deriving a master key from existing (non-multisig) descriptors, storing it separately, and adding new wallet code in followup PRs to rely on it puts us in a worse starting place for providing a good multisig UX than the suggested approach. Mostly because of the complexity it adds, but also because it does not assign a specific purpose to the HD key, so it could encourages uses that \"co-mingle multisig and single sig funds in the same wallet\" like Sjors was trying to avoid.\r\n\r\nI don't think the flow for how we support multisig has to be decided now, since it's beyond the scope of this PR. But I do want to spell out how I think things could work more simply without this PR. I think to support multisig  and other more complicated cases well we will want to give the wallet the ability to store an HD master key not associated with any descriptor, and which can be used later to create complicated descriptors. But this could be supported with a new wallet field holding a `CExtPubKey` that is only set temporarily between creating the master key and creating a descriptor that uses it. It would need to be accompanied by a wallet flag preventing older wallets from using the wallet while the field exists, but as soon as the first descriptor is created using the master key, the flag and temporary field could be deleted, and the wallet would be backward compatible again and stay within our current data model.\r\n\r\nThis would allow a simpler flow for creating multisig wallets without adding a permanent burden and increase in complexity after they are created.",
      "created_at" : "2023-12-21T18:40:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1866775284",
      "id" : 1866775284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vRLr0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1866775284/reactions"
      },
      "updated_at" : "2023-12-21T18:40:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1866775284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "achow101, S3RK, Sjors, and me talked about this on a call. I think the plan for now is that achow will make 2 independent PRs targeted at different use-cases:\r\n\r\n- First PR would add a `gethdkey` method like the one in this PR and a `createwalletdescriptor` method like the one in [#25907](https://github.com/bitcoin/bitcoin/pull/25907) that should both make reusing existing hd keys easier. Specifically these methods should be useful for adding new types of descriptors to existing wallets and upgrading existing wallets. Unlike the current PRs, this new PR would be fully backwards compatible and not change the database format.\r\n\r\n- Second PR would implement a `sethdseed` implementation for descriptor wallets like [#29054](https://github.com/bitcoin/bitcoin/pull/29054) or a similar method that generates standalone hd keys not (yet) associated with any descriptor. This would be useful for creating multisig descriptors. The new keys would need to be stored in a new database field, or possibly multiple fields, so this would change the database format, but in a simple way that should avoid upgrade/downgrade pitfalls encountered in previous iterations of this PR with `DBKeys::ACTIVEHDKEY`. If we are concerned with having more than one HD key per wallet, this could be conservative about when it allows creating standalone HD keys. \r\n\r\n~S3RK~ achow made a wiki page https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Use-Cases where we can start to look at different use cases, and what RPC calls would look like under different flows and models. On the call S3RK made the point that a model where wallets have exactly one active hd key at a time would be more consistent with other wallet software and more naturally align with the BIPs. I think this is definitely true, and I think we should optimize wallet UX for the case where there is only one active hd key, but also not be broken or confusing in cases where there is more than one hd key. So far, I haven't seen specific cases where supporting more than one hd key seems to hurt the UX or implementation, so I'm still skeptical of the idea that there is something wrong or bad about our current wallet model, even if it is different. But I think things should become clearer as we add features, and I think the two PR's above will keep our options open.",
      "created_at" : "2023-12-21T21:36:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1866961865",
      "id" : 1866961865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vR5PJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1866961865/reactions"
      },
      "updated_at" : "2023-12-22T14:16:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1866961865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1866961865\r\n\r\n> The new keys would need to be stored in a new database field\r\n\r\nThis is not actually true. Thinking about this more, I wonder if a more natural way of representing standalone keys in the wallet is just to treat them as a new [descriptor type](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md#reference), like `void(KEY)`, where the void descriptor would hold the key, but instead of [expanding](https://github.com/bitcoin/bitcoin/blob/4b1196a9855dcd188a24f393aa2fa21e2d61f061/src/script/descriptor.h#L98) to a scriptPubKey or set of scriptPubKeys like other descriptors it would expand to the empty set. \r\n\r\nWe could treat this as an internal implementation detail, just using `void(xpub....)` as a way for the wallet to reference unused hd keys. But there could be benefits to using the type externally. For example, if we included these in `listdescriptors` output, users could continue using `listdescriptors` as a form of wallet backup, or way to see all the wallet keys a wallet contains, without having to call a new RPC method like `gethdkey`.\r\n\r\nBut I think the main advantage of this approach would just be fitting better into the existing database format, keeping it clean and easy to reason about, and also having more backwards compatibility.\r\n\r\nThe idea of naming the descriptor `void(KEY)` just comes the void operator in javascript, and void type in c/c++/java\r\nwhich consume values without returning returning or signify functions that don't return values.",
      "created_at" : "2023-12-22T14:01:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1867721948",
      "id" : 1867721948,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vUyzc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1867721948/reactions"
      },
      "updated_at" : "2023-12-22T14:01:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1867721948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky interesting idea, I especially like the backup implication, because descriptors can be used for paper backups.",
      "created_at" : "2023-12-22T14:32:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1867754041",
      "id" : 1867754041,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vU6o5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1867754041/reactions"
      },
      "updated_at" : "2023-12-22T14:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1867754041",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I was also trying to think of names for these other than void descriptors. For example maybe they could be called data descriptors and written like data(xpub...) to convey the idea that these descriptors are just used to hold data and don't produce scriptpubkeys.",
      "created_at" : "2023-12-22T16:31:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1867873246",
      "id" : 1867873246,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vVXve",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1867873246/reactions"
      },
      "updated_at" : "2023-12-22T16:31:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1867873246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This is not actually true. Thinking about this more, I wonder if a more natural way of representing standalone keys in the wallet is just to treat them as a new [descriptor type](https://github.com/bitcoin/bitcoin/blob/master/doc/descriptors.md#reference), like `void(KEY)`, where the void descriptor would hold the key, but instead of [expanding](https://github.com/bitcoin/bitcoin/blob/4b1196a9855dcd188a24f393aa2fa21e2d61f061/src/script/descriptor.h#L98) to a scriptPubKey or set of scriptPubKeys like other descriptors it would expand to the empty set.\r\n\r\nNice idea, I think that could work. These could be imported with `importdescriptors`. If the user wants their wallet to generate a key automatically though, we'll still need a `sethdseed` equivalent (probably name it something else since it's not the same as setting a hd seed).",
      "created_at" : "2023-12-22T16:49:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26728#issuecomment-1867889571",
      "id" : 1867889571,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26728",
      "node_id" : "IC_kwDOABII585vVbuj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1867889571/reactions"
      },
      "updated_at" : "2023-12-22T16:49:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1867889571",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]

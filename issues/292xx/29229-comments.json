[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29229).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29015](https://github.com/bitcoin/bitcoin/pull/29015) (kernel: Streamline util library by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-01-11T15:11:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1887384915",
      "id" : 1887384915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wfzVT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887384915/reactions"
      },
      "updated_at" : "2024-01-13T00:41:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887384915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @vasild ",
      "created_at" : "2024-01-11T15:15:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1887392642",
      "id" : 1887392642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wf1OC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887392642/reactions"
      },
      "updated_at" : "2024-01-11T15:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887392642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449027121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449027121"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you change the return type, why not use `std::optional`? Otherwise, it seems better to keep it untouched?",
      "commit_id" : "9b7be63fd17bd506a7ec00d6d6a859a31f21d55d",
      "created_at" : "2024-01-11T15:26:16Z",
      "diff_hunk" : "@@ -11,18 +11,24 @@\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[out] output  Result\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return true if successful, false if an error occured.\n  */\n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize=std::numeric_limits<size_t>::max());\n+template <typename T>\n+bool ReadBinaryFile(const fs::path& filename, T& output, size_t maxsize=std::numeric_limits<size_t>::max());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449027121",
      "id" : 1449027121,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585WXmYx",
      "original_commit_id" : "634f29f2efa96263a2b108b9b5532d19a1d64e48",
      "original_line" : 26,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : 22,
      "pull_request_review_id" : 1815862283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449027121/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T15:26:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449027121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449031987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449031987"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I had to change it because AFAIK you can't differentiate functions only by their return type. It's also more readable imo, no more `->first` ... `->second`.\r\n\r\n`std::optional<T>` won't work, unless someone can explain how...",
      "commit_id" : "9b7be63fd17bd506a7ec00d6d6a859a31f21d55d",
      "created_at" : "2024-01-11T15:29:36Z",
      "diff_hunk" : "@@ -11,18 +11,24 @@\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[out] output  Result\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return true if successful, false if an error occured.\n  */\n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize=std::numeric_limits<size_t>::max());\n+template <typename T>\n+bool ReadBinaryFile(const fs::path& filename, T& output, size_t maxsize=std::numeric_limits<size_t>::max());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449031987",
      "id" : 1449031987,
      "in_reply_to_id" : 1449027121,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585WXnkz",
      "original_commit_id" : "634f29f2efa96263a2b108b9b5532d19a1d64e48",
      "original_line" : 26,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : 22,
      "pull_request_review_id" : 1815870327,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449031987/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T15:29:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449031987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449035810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449035810"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> However, functions can not be overloaded if they differ only in the return type.\r\n\r\nhttps://www.geeksforgeeks.org/function-overloading-and-return-type-in-cpp/",
      "commit_id" : "9b7be63fd17bd506a7ec00d6d6a859a31f21d55d",
      "created_at" : "2024-01-11T15:32:09Z",
      "diff_hunk" : "@@ -11,18 +11,24 @@\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[out] output  Result\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return true if successful, false if an error occured.\n  */\n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize=std::numeric_limits<size_t>::max());\n+template <typename T>\n+bool ReadBinaryFile(const fs::path& filename, T& output, size_t maxsize=std::numeric_limits<size_t>::max());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449035810",
      "id" : 1449035810,
      "in_reply_to_id" : 1449027121,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585WXogi",
      "original_commit_id" : "634f29f2efa96263a2b108b9b5532d19a1d64e48",
      "original_line" : 26,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : 22,
      "pull_request_review_id" : 1815876640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449035810/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T15:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449035810",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449048489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449048489"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> `std::optional<T>` won't work, unless someone can explain how...\r\n\r\nWhat about this:\r\n\r\n```cpp\r\n#include <vector>\r\n#include <optional>\r\n#include <string>\r\n#include <cstdint>\r\n\r\ntemplate<class T>\r\nstd::optional<T> ReadBinaryFile()\r\n{\r\n    return {};\r\n}\r\n \r\nint main()\r\n{\r\n    auto a{ReadBinaryFile<std::string>()};\r\n    auto b{ReadBinaryFile<std::vector<uint8_t>>()};\r\n}",
      "commit_id" : "9b7be63fd17bd506a7ec00d6d6a859a31f21d55d",
      "created_at" : "2024-01-11T15:41:49Z",
      "diff_hunk" : "@@ -11,18 +11,24 @@\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[out] output  Result\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return true if successful, false if an error occured.\n  */\n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize=std::numeric_limits<size_t>::max());\n+template <typename T>\n+bool ReadBinaryFile(const fs::path& filename, T& output, size_t maxsize=std::numeric_limits<size_t>::max());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449048489",
      "id" : 1449048489,
      "in_reply_to_id" : 1449027121,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585WXrmp",
      "original_commit_id" : "634f29f2efa96263a2b108b9b5532d19a1d64e48",
      "original_line" : 26,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : 22,
      "pull_request_review_id" : 1815897161,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449048489/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T15:41:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449048489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added `extern template ...` to the header to prevent \"implicit instantiation of undefined template\" error on the \"no wallet, libbitcoinkernel\" CI (https://cirrus-ci.com/task/6254856449556480)\r\n\r\nThat error doesn't happen on my machine running macOS clang 15, nor on Ubuntu gcc 13.2 - maybe a specific configure warning flag?\r\n\r\nUpdate: that didn't work, still not sure how to reproduce.\r\n\r\n```\r\n util/readwritefile.cpp:23:84: error: implicit instantiation of undefined template 'std::vector<unsigned char>'\r\n        const size_t n = fread(buffer, 1, std::min(sizeof(buffer), maxsize - output.size()), f);\r\n```",
      "created_at" : "2024-01-11T15:51:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1887460716",
      "id" : 1887460716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wgF1s",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887460716/reactions"
      },
      "updated_at" : "2024-01-11T16:19:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887460716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20390186031</sub>",
      "created_at" : "2024-01-11T15:51:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1887460825",
      "id" : 1887460825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wgF3Z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887460825/reactions"
      },
      "updated_at" : "2024-01-11T15:51:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887460825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449063112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449063112"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll give that a try tomorrow.",
      "commit_id" : "9b7be63fd17bd506a7ec00d6d6a859a31f21d55d",
      "created_at" : "2024-01-11T15:52:44Z",
      "diff_hunk" : "@@ -11,18 +11,24 @@\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[out] output  Result\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return true if successful, false if an error occured.\n  */\n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize=std::numeric_limits<size_t>::max());\n+template <typename T>\n+bool ReadBinaryFile(const fs::path& filename, T& output, size_t maxsize=std::numeric_limits<size_t>::max());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449063112",
      "id" : 1449063112,
      "in_reply_to_id" : 1449027121,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585WXvLI",
      "original_commit_id" : "634f29f2efa96263a2b108b9b5532d19a1d64e48",
      "original_line" : 26,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : 22,
      "pull_request_review_id" : 1815920975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449063112/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T15:52:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449063112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I switched to using `std::optional` as the return type. It happily compiles on my end, we'll see what CI thinks...",
      "created_at" : "2024-01-12T08:26:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1888644663",
      "id" : 1888644663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wkm43",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888644663/reactions"
      },
      "updated_at" : "2024-01-12T08:26:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888644663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Had to `#include <vector>` to please clang13 (should have included it anyway since it's used).",
      "created_at" : "2024-01-12T08:47:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1888672189",
      "id" : 1888672189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wktm9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888672189/reactions"
      },
      "updated_at" : "2024-01-12T08:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888672189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1457418125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1457418125"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: in the commit message:\r\n\r\n> ReadBinaryFile and WriteBinaryFile current work with std::string\r\n\r\ns/current/currently/\r\n\r\nWould be nice to wrap lines in the commit message at [72 columns](https://duckduckgo.com/?q=commit+message+50%2F72).",
      "commit_id" : "f9b134e2b2534aac21a9df43cad0c6283dd78be9",
      "created_at" : "2024-01-18T13:09:39Z",
      "diff_hunk" : "@@ -126,6 +126,7 @@ BITCOIN_TESTS =\\\n   test/raii_event_tests.cpp \\\n   test/random_tests.cpp \\\n   test/rbf_tests.cpp \\\n+  test/readwritefile_tests.cpp \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1457418125",
      "id" : 1457418125,
      "line" : 129,
      "node_id" : "PRRC_kwDOABII585W3m-N",
      "original_commit_id" : "ac5a83b91f28a1bb2948c576c3796234c17f392f",
      "original_line" : 129,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/Makefile.test.include",
      "position" : 4,
      "pull_request_review_id" : 1829642426,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1457418125/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-18T15:13:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1457418125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1457430349"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1457430349"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit:\r\n```suggestion\r\n * @return result if successful, std::nullopt otherwise\r\n```",
      "commit_id" : "f9b134e2b2534aac21a9df43cad0c6283dd78be9",
      "created_at" : "2024-01-18T13:20:15Z",
      "diff_hunk" : "@@ -8,21 +8,27 @@\n #include <util/fs.h>\n \n #include <limits>\n+#include <optional>\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return result successful, {} otherwise",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1457430349",
      "id" : 1457430349,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585W3p9N",
      "original_commit_id" : "ac5a83b91f28a1bb2948c576c3796234c17f392f",
      "original_line" : 23,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : null,
      "pull_request_review_id" : 1829642426,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1457430349/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-18T15:13:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1457430349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> However it made no sense to me to store a `CKey` as plain text\r\n\r\nI guess that by \"plain text\" here you mean `std::string`, right? `std::string` can store arbitrary non-ASCII characters, including `'\\0'`, so it is technically ok to use it for binary data.\r\n\r\nMore relevant in this case is that `CKey` stores sensitive data and takes care to wipe it from memory when freed. In https://github.com/bitcoin/bitcoin/pull/28983 `Read/WriteBinaryData()` is used in a way that defeats that - the sensitive data will be copied to a temporary variable (ordinary `std::vector`) for IO. Can we change `Read/WriteBinaryData()` to operate directly on `CKey` in such a way that data goes directly from `CKey` to the disk?",
      "created_at" : "2024-01-18T15:12:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1898668856",
      "id" : 1898668856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xK2M4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1898668856/reactions"
      },
      "updated_at" : "2024-01-18T15:12:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1898668856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Can we change `Read/WriteBinaryData()` to operate directly on `CKey` in such a way that data goes directly from `CKey` to the disk?\r\n\r\nI haven't looked in detail, but writing bytes to a file can be achieved with one line of code:\r\n\r\n```cpp\r\nCAutoFile{...} << Span{data};",
      "created_at" : "2024-01-18T15:19:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1898681016",
      "id" : 1898681016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xK5K4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1898681016/reactions"
      },
      "updated_at" : "2024-01-18T15:19:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1898681016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I like the idea of operating on `CKey` directly. I'll try to add that, though not sure how to implement that securely.\r\n\r\nThe keys used in #28983 are not as important as wallet keys, but if we add a generic method to store a `CKey` on disk, then it should do so securely - so that future devs using that function don't shoot themselves in the foot. At least the current `std::vector<unsigned char>>` does not pretend to be secure.",
      "created_at" : "2024-01-22T09:11:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1903550684",
      "id" : 1903550684,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xdeDc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903550684/reactions"
      },
      "updated_at" : "2024-01-22T09:12:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903550684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I guess that by \"plain text\" here you mean `std::string`, right? `std::string` can store arbitrary non-ASCII characters, including `'\\0'`, so it is technically ok to use it for binary data.\r\n\r\nI think the way `WriteBinaryFile` was initially used with Tor was that we parse the JSON returned by the Tor daemon and store the `PrivateKey` key field (UTF8 encoced?) in a file.",
      "created_at" : "2024-01-22T09:15:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1903561636",
      "id" : 1903561636,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xdguk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903561636/reactions"
      },
      "updated_at" : "2024-01-22T09:15:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903561636",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I haven't looked in detail, but writing bytes to a file can be achieved with one line of code\r\n\r\nThat would be a nice simplification. Almost (?) to the point of not needing these helper functions.",
      "created_at" : "2024-01-22T09:20:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1903570460",
      "id" : 1903570460,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xdi4c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903570460/reactions"
      },
      "updated_at" : "2024-01-22T09:20:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903570460",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > I haven't looked in detail, but writing bytes to a file can be achieved with one line of code\r\n> \r\n> That would be a nice simplification. Almost (?) to the point of not needing these helper functions.\r\n\r\nWriteBinaryFile is unused right now either way outside of tests, so I guess this could be removed regardless, as future code can just use the in-line one-liner?",
      "created_at" : "2024-01-22T13:20:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1903992967",
      "id" : 1903992967,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xfKCH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903992967/reactions"
      },
      "updated_at" : "2024-01-22T13:20:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903992967",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@maflcko `WriteBinaryFile` is used by Tor and I2P to cache the service private key.\r\n\r\nBut I might still close this PR if all that's needed is one-liner. ",
      "created_at" : "2024-01-23T08:38:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1905560370",
      "id" : 1905560370,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xlIsy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905560370/reactions"
      },
      "updated_at" : "2024-01-23T08:38:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905560370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It's not quite a one-liner because you still need to open a close a `FILE` and deal with various errors. So instead I modified  `[Write/Write]BinaryFile` to use `AutoFile` instead of `fwrite` / `fread`.\r\n\r\nHowever, `AutoFile{f} >> output` only returns a fraction of the file in the test...",
      "created_at" : "2024-01-23T09:53:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1905684497",
      "id" : 1905684497,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xlnAR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905684497/reactions"
      },
      "updated_at" : "2024-01-23T09:53:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905684497",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> However, `AutoFile{f} >> output` only returns a fraction of the file in the test...\r\n\r\n(De)serialization of vectors or strings assumes the run-time length to be encoded first. Only arrays and spans assume no length, because it is assumed to be known at compile-time.",
      "created_at" : "2024-01-23T10:03:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1905703500",
      "id" : 1905703500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xlrpM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905703500/reactions"
      },
      "updated_at" : "2024-01-23T10:03:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905703500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20764871422</sub>",
      "created_at" : "2024-01-23T10:32:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1905752383",
      "id" : 1905752383,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xl3k_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905752383/reactions"
      },
      "updated_at" : "2024-01-23T10:32:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905752383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok, fixed that issue by first getting the file size and then resizing the `std::vector` / `std::string`.\r\n\r\nThat doesn't generalise nicely to known-size things like `CKey`. The `maxsize` argument also makes no sense for things with known size. So I might make a separate method for that. Which in turn makes this PR just a refactor with unused, but tested, support for `std::vector<unsigned char>`.\r\n\r\n(this is ready for review even without CKey support, which I'll add in a separate commit and/or PR when I get to it)",
      "created_at" : "2024-01-23T10:37:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1905760878",
      "id" : 1905760878,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xl5pu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905760878/reactions"
      },
      "updated_at" : "2024-01-23T10:40:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905760878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I tried to find some existing code that could use the `std::vector<unsigned char>` variant. Didn't find it at first glance. It seems we almost always know what size to expect (per object).\r\n\r\nSo that might be a good reason to kill that variant and only support loading an std::string of unknown size for now.",
      "created_at" : "2024-01-23T11:01:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1905800964",
      "id" : 1905800964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xmDcE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905800964/reactions"
      },
      "updated_at" : "2024-01-23T11:05:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905800964",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1463138328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463138328"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    try {\r\n        AutoFile{fsbridge::fopen(filename, \"wb\")} << Span{data};\r\n```\r\n\r\nnit: Can be written shorter",
      "commit_id" : "f9b134e2b2534aac21a9df43cad0c6283dd78be9",
      "created_at" : "2024-01-23T11:33:54Z",
      "diff_hunk" : "@@ -5,46 +5,47 @@\n \n #include <util/readwritefile.h>\n \n+#include <streams.h>\n #include <util/fs.h>\n \n #include <algorithm>\n #include <cstdio>\n #include <limits>\n #include <string>\n #include <utility>\n+#include <vector>\n \n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize)\n+template <typename T>\n+std::optional<T> ReadBinaryFile(const fs::path& filename, size_t maxsize)\n {\n-    FILE *f = fsbridge::fopen(filename, \"rb\");\n-    if (f == nullptr)\n-        return std::make_pair(false,\"\");\n-    std::string retval;\n-    char buffer[128];\n-    do {\n-        const size_t n = fread(buffer, 1, std::min(sizeof(buffer), maxsize - retval.size()), f);\n-        // Check for reading errors so we don't return any data if we couldn't\n-        // read the entire file (or up to maxsize)\n-        if (ferror(f)) {\n-            fclose(f);\n-            return std::make_pair(false,\"\");\n-        }\n-        retval.append(buffer, buffer+n);\n-    } while (!feof(f) && retval.size() < maxsize);\n-    fclose(f);\n-    return std::make_pair(true,retval);\n+    std::FILE *f = fsbridge::fopen(filename, \"rb\");\n+    if (f == nullptr) return {};\n+    T output{};\n+    size_t file_size = fs::file_size(filename);\n+    output.resize(std::min(file_size, maxsize));\n+    try {\n+        AutoFile{f} >> Span{output};\n+    } catch (const std::ios_base::failure&) {\n+        return {};\n+    }\n+    return output;\n }\n \n-bool WriteBinaryFile(const fs::path &filename, const std::string &data)\n+template std::optional<std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize);\n+template std::optional<std::vector<unsigned char>> ReadBinaryFile(const fs::path &filename, size_t maxsize);\n+\n+template <typename T>\n+bool WriteBinaryFile(const fs::path& filename, const T& data)\n {\n-    FILE *f = fsbridge::fopen(filename, \"wb\");\n-    if (f == nullptr)\n-        return false;\n-    if (fwrite(data.data(), 1, data.size(), f) != data.size()) {\n-        fclose(f);\n-        return false;\n-    }\n-    if (fclose(f) != 0) {\n+    std::FILE *f = fsbridge::fopen(filename, \"wb\");\n+    if (f == nullptr) return false;\n+    try {\n+        AutoFile{f} << Span{data};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1463138328",
      "id" : 1463138328,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XNbgY",
      "original_commit_id" : "e4d0e3decd662aeded8c03bf9084ba8c0449036e",
      "original_line" : 43,
      "original_position" : 66,
      "original_start_line" : 40,
      "path" : "src/util/readwritefile.cpp",
      "position" : null,
      "pull_request_review_id" : 1838537092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463138328/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-23T11:33:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463138328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1463183042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463183042"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Took me a while to wrap my head around the various calls involved, but I guess the nullptr check is handled in `read()`, which is called by the various `ser_read...` functions in `seralize.h`, which is called by the `Unserialize` implementations, which is called by `<<`. (presumably the same for writing)",
      "commit_id" : "f9b134e2b2534aac21a9df43cad0c6283dd78be9",
      "created_at" : "2024-01-23T12:14:24Z",
      "diff_hunk" : "@@ -5,46 +5,47 @@\n \n #include <util/readwritefile.h>\n \n+#include <streams.h>\n #include <util/fs.h>\n \n #include <algorithm>\n #include <cstdio>\n #include <limits>\n #include <string>\n #include <utility>\n+#include <vector>\n \n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize)\n+template <typename T>\n+std::optional<T> ReadBinaryFile(const fs::path& filename, size_t maxsize)\n {\n-    FILE *f = fsbridge::fopen(filename, \"rb\");\n-    if (f == nullptr)\n-        return std::make_pair(false,\"\");\n-    std::string retval;\n-    char buffer[128];\n-    do {\n-        const size_t n = fread(buffer, 1, std::min(sizeof(buffer), maxsize - retval.size()), f);\n-        // Check for reading errors so we don't return any data if we couldn't\n-        // read the entire file (or up to maxsize)\n-        if (ferror(f)) {\n-            fclose(f);\n-            return std::make_pair(false,\"\");\n-        }\n-        retval.append(buffer, buffer+n);\n-    } while (!feof(f) && retval.size() < maxsize);\n-    fclose(f);\n-    return std::make_pair(true,retval);\n+    std::FILE *f = fsbridge::fopen(filename, \"rb\");\n+    if (f == nullptr) return {};\n+    T output{};\n+    size_t file_size = fs::file_size(filename);\n+    output.resize(std::min(file_size, maxsize));\n+    try {\n+        AutoFile{f} >> Span{output};\n+    } catch (const std::ios_base::failure&) {\n+        return {};\n+    }\n+    return output;\n }\n \n-bool WriteBinaryFile(const fs::path &filename, const std::string &data)\n+template std::optional<std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize);\n+template std::optional<std::vector<unsigned char>> ReadBinaryFile(const fs::path &filename, size_t maxsize);\n+\n+template <typename T>\n+bool WriteBinaryFile(const fs::path& filename, const T& data)\n {\n-    FILE *f = fsbridge::fopen(filename, \"wb\");\n-    if (f == nullptr)\n-        return false;\n-    if (fwrite(data.data(), 1, data.size(), f) != data.size()) {\n-        fclose(f);\n-        return false;\n-    }\n-    if (fclose(f) != 0) {\n+    std::FILE *f = fsbridge::fopen(filename, \"wb\");\n+    if (f == nullptr) return false;\n+    try {\n+        AutoFile{f} << Span{data};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1463183042",
      "id" : 1463183042,
      "in_reply_to_id" : 1463138328,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XNmbC",
      "original_commit_id" : "e4d0e3decd662aeded8c03bf9084ba8c0449036e",
      "original_line" : 43,
      "original_position" : 66,
      "original_start_line" : 40,
      "path" : "src/util/readwritefile.cpp",
      "position" : null,
      "pull_request_review_id" : 1838613089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463183042/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-23T12:15:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463183042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1463199231"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463199231"
         }
      },
      "author_association" : "MEMBER",
      "body" : "On the read side I'm keeping the explicit nullptr check for now, so I don't have to catch `fs::file_size` failure.",
      "commit_id" : "f9b134e2b2534aac21a9df43cad0c6283dd78be9",
      "created_at" : "2024-01-23T12:21:11Z",
      "diff_hunk" : "@@ -5,46 +5,47 @@\n \n #include <util/readwritefile.h>\n \n+#include <streams.h>\n #include <util/fs.h>\n \n #include <algorithm>\n #include <cstdio>\n #include <limits>\n #include <string>\n #include <utility>\n+#include <vector>\n \n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize)\n+template <typename T>\n+std::optional<T> ReadBinaryFile(const fs::path& filename, size_t maxsize)\n {\n-    FILE *f = fsbridge::fopen(filename, \"rb\");\n-    if (f == nullptr)\n-        return std::make_pair(false,\"\");\n-    std::string retval;\n-    char buffer[128];\n-    do {\n-        const size_t n = fread(buffer, 1, std::min(sizeof(buffer), maxsize - retval.size()), f);\n-        // Check for reading errors so we don't return any data if we couldn't\n-        // read the entire file (or up to maxsize)\n-        if (ferror(f)) {\n-            fclose(f);\n-            return std::make_pair(false,\"\");\n-        }\n-        retval.append(buffer, buffer+n);\n-    } while (!feof(f) && retval.size() < maxsize);\n-    fclose(f);\n-    return std::make_pair(true,retval);\n+    std::FILE *f = fsbridge::fopen(filename, \"rb\");\n+    if (f == nullptr) return {};\n+    T output{};\n+    size_t file_size = fs::file_size(filename);\n+    output.resize(std::min(file_size, maxsize));\n+    try {\n+        AutoFile{f} >> Span{output};\n+    } catch (const std::ios_base::failure&) {\n+        return {};\n+    }\n+    return output;\n }\n \n-bool WriteBinaryFile(const fs::path &filename, const std::string &data)\n+template std::optional<std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize);\n+template std::optional<std::vector<unsigned char>> ReadBinaryFile(const fs::path &filename, size_t maxsize);\n+\n+template <typename T>\n+bool WriteBinaryFile(const fs::path& filename, const T& data)\n {\n-    FILE *f = fsbridge::fopen(filename, \"wb\");\n-    if (f == nullptr)\n-        return false;\n-    if (fwrite(data.data(), 1, data.size(), f) != data.size()) {\n-        fclose(f);\n-        return false;\n-    }\n-    if (fclose(f) != 0) {\n+    std::FILE *f = fsbridge::fopen(filename, \"wb\");\n+    if (f == nullptr) return false;\n+    try {\n+        AutoFile{f} << Span{data};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1463199231",
      "id" : 1463199231,
      "in_reply_to_id" : 1463138328,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XNqX_",
      "original_commit_id" : "e4d0e3decd662aeded8c03bf9084ba8c0449036e",
      "original_line" : 43,
      "original_position" : 66,
      "original_start_line" : 40,
      "path" : "src/util/readwritefile.cpp",
      "position" : null,
      "pull_request_review_id" : 1838649435,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463199231/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-23T12:21:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463199231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1463205250"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463205250"
         }
      },
      "author_association" : "MEMBER",
      "body" : "At the point `WriteBinaryFile` is so small you might as well have the called do the try - catch. But might as well keep if around as long as `ReadBinaryFile` can't be made smaller.",
      "commit_id" : "f9b134e2b2534aac21a9df43cad0c6283dd78be9",
      "created_at" : "2024-01-23T12:23:18Z",
      "diff_hunk" : "@@ -5,46 +5,47 @@\n \n #include <util/readwritefile.h>\n \n+#include <streams.h>\n #include <util/fs.h>\n \n #include <algorithm>\n #include <cstdio>\n #include <limits>\n #include <string>\n #include <utility>\n+#include <vector>\n \n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize)\n+template <typename T>\n+std::optional<T> ReadBinaryFile(const fs::path& filename, size_t maxsize)\n {\n-    FILE *f = fsbridge::fopen(filename, \"rb\");\n-    if (f == nullptr)\n-        return std::make_pair(false,\"\");\n-    std::string retval;\n-    char buffer[128];\n-    do {\n-        const size_t n = fread(buffer, 1, std::min(sizeof(buffer), maxsize - retval.size()), f);\n-        // Check for reading errors so we don't return any data if we couldn't\n-        // read the entire file (or up to maxsize)\n-        if (ferror(f)) {\n-            fclose(f);\n-            return std::make_pair(false,\"\");\n-        }\n-        retval.append(buffer, buffer+n);\n-    } while (!feof(f) && retval.size() < maxsize);\n-    fclose(f);\n-    return std::make_pair(true,retval);\n+    std::FILE *f = fsbridge::fopen(filename, \"rb\");\n+    if (f == nullptr) return {};\n+    T output{};\n+    size_t file_size = fs::file_size(filename);\n+    output.resize(std::min(file_size, maxsize));\n+    try {\n+        AutoFile{f} >> Span{output};\n+    } catch (const std::ios_base::failure&) {\n+        return {};\n+    }\n+    return output;\n }\n \n-bool WriteBinaryFile(const fs::path &filename, const std::string &data)\n+template std::optional<std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize);\n+template std::optional<std::vector<unsigned char>> ReadBinaryFile(const fs::path &filename, size_t maxsize);\n+\n+template <typename T>\n+bool WriteBinaryFile(const fs::path& filename, const T& data)\n {\n-    FILE *f = fsbridge::fopen(filename, \"wb\");\n-    if (f == nullptr)\n-        return false;\n-    if (fwrite(data.data(), 1, data.size(), f) != data.size()) {\n-        fclose(f);\n-        return false;\n-    }\n-    if (fclose(f) != 0) {\n+    std::FILE *f = fsbridge::fopen(filename, \"wb\");\n+    if (f == nullptr) return false;\n+    try {\n+        AutoFile{f} << Span{data};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1463205250",
      "id" : 1463205250,
      "in_reply_to_id" : 1463138328,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XNr2C",
      "original_commit_id" : "e4d0e3decd662aeded8c03bf9084ba8c0449036e",
      "original_line" : 43,
      "original_position" : 66,
      "original_start_line" : 40,
      "path" : "src/util/readwritefile.cpp",
      "position" : null,
      "pull_request_review_id" : 1838663528,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463205250/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-23T12:23:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463205250",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I opened #29295 for `CKey`.\r\n\r\nI also refactored #28983 to use AutoFile directly, see https://github.com/Sjors/bitcoin/pull/32. So I no longer need this PR myself, but happy to continue it.",
      "created_at" : "2024-01-23T13:52:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1906105122",
      "id" : 1906105122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xnNsi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1906105122/reactions"
      },
      "updated_at" : "2024-01-23T13:53:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1906105122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]

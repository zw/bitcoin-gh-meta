[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29229).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29015](https://github.com/bitcoin/bitcoin/pull/29015) (kernel: Streamline util library by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-01-11T15:11:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1887384915",
      "id" : 1887384915,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wfzVT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887384915/reactions"
      },
      "updated_at" : "2024-01-13T00:41:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887384915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @vasild ",
      "created_at" : "2024-01-11T15:15:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1887392642",
      "id" : 1887392642,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wf1OC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887392642/reactions"
      },
      "updated_at" : "2024-01-11T15:15:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887392642",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449027121"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449027121"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If you change the return type, why not use `std::optional`? Otherwise, it seems better to keep it untouched?",
      "commit_id" : "9b7be63fd17bd506a7ec00d6d6a859a31f21d55d",
      "created_at" : "2024-01-11T15:26:16Z",
      "diff_hunk" : "@@ -11,18 +11,24 @@\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[out] output  Result\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return true if successful, false if an error occured.\n  */\n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize=std::numeric_limits<size_t>::max());\n+template <typename T>\n+bool ReadBinaryFile(const fs::path& filename, T& output, size_t maxsize=std::numeric_limits<size_t>::max());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449027121",
      "id" : 1449027121,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585WXmYx",
      "original_commit_id" : "634f29f2efa96263a2b108b9b5532d19a1d64e48",
      "original_line" : 26,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : 22,
      "pull_request_review_id" : 1815862283,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449027121/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T15:26:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449027121",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449031987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449031987"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I had to change it because AFAIK you can't differentiate functions only by their return type. It's also more readable imo, no more `->first` ... `->second`.\r\n\r\n`std::optional<T>` won't work, unless someone can explain how...",
      "commit_id" : "9b7be63fd17bd506a7ec00d6d6a859a31f21d55d",
      "created_at" : "2024-01-11T15:29:36Z",
      "diff_hunk" : "@@ -11,18 +11,24 @@\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[out] output  Result\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return true if successful, false if an error occured.\n  */\n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize=std::numeric_limits<size_t>::max());\n+template <typename T>\n+bool ReadBinaryFile(const fs::path& filename, T& output, size_t maxsize=std::numeric_limits<size_t>::max());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449031987",
      "id" : 1449031987,
      "in_reply_to_id" : 1449027121,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585WXnkz",
      "original_commit_id" : "634f29f2efa96263a2b108b9b5532d19a1d64e48",
      "original_line" : 26,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : 22,
      "pull_request_review_id" : 1815870327,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449031987/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T15:29:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449031987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449035810"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449035810"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> However, functions can not be overloaded if they differ only in the return type.\r\n\r\nhttps://www.geeksforgeeks.org/function-overloading-and-return-type-in-cpp/",
      "commit_id" : "9b7be63fd17bd506a7ec00d6d6a859a31f21d55d",
      "created_at" : "2024-01-11T15:32:09Z",
      "diff_hunk" : "@@ -11,18 +11,24 @@\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[out] output  Result\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return true if successful, false if an error occured.\n  */\n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize=std::numeric_limits<size_t>::max());\n+template <typename T>\n+bool ReadBinaryFile(const fs::path& filename, T& output, size_t maxsize=std::numeric_limits<size_t>::max());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449035810",
      "id" : 1449035810,
      "in_reply_to_id" : 1449027121,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585WXogi",
      "original_commit_id" : "634f29f2efa96263a2b108b9b5532d19a1d64e48",
      "original_line" : 26,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : 22,
      "pull_request_review_id" : 1815876640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449035810/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T15:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449035810",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449048489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449048489"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> `std::optional<T>` won't work, unless someone can explain how...\r\n\r\nWhat about this:\r\n\r\n```cpp\r\n#include <vector>\r\n#include <optional>\r\n#include <string>\r\n#include <cstdint>\r\n\r\ntemplate<class T>\r\nstd::optional<T> ReadBinaryFile()\r\n{\r\n    return {};\r\n}\r\n \r\nint main()\r\n{\r\n    auto a{ReadBinaryFile<std::string>()};\r\n    auto b{ReadBinaryFile<std::vector<uint8_t>>()};\r\n}",
      "commit_id" : "9b7be63fd17bd506a7ec00d6d6a859a31f21d55d",
      "created_at" : "2024-01-11T15:41:49Z",
      "diff_hunk" : "@@ -11,18 +11,24 @@\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[out] output  Result\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return true if successful, false if an error occured.\n  */\n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize=std::numeric_limits<size_t>::max());\n+template <typename T>\n+bool ReadBinaryFile(const fs::path& filename, T& output, size_t maxsize=std::numeric_limits<size_t>::max());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449048489",
      "id" : 1449048489,
      "in_reply_to_id" : 1449027121,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585WXrmp",
      "original_commit_id" : "634f29f2efa96263a2b108b9b5532d19a1d64e48",
      "original_line" : 26,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : 22,
      "pull_request_review_id" : 1815897161,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449048489/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T15:41:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449048489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added `extern template ...` to the header to prevent \"implicit instantiation of undefined template\" error on the \"no wallet, libbitcoinkernel\" CI (https://cirrus-ci.com/task/6254856449556480)\r\n\r\nThat error doesn't happen on my machine running macOS clang 15, nor on Ubuntu gcc 13.2 - maybe a specific configure warning flag?\r\n\r\nUpdate: that didn't work, still not sure how to reproduce.\r\n\r\n```\r\n util/readwritefile.cpp:23:84: error: implicit instantiation of undefined template 'std::vector<unsigned char>'\r\n        const size_t n = fread(buffer, 1, std::min(sizeof(buffer), maxsize - output.size()), f);\r\n```",
      "created_at" : "2024-01-11T15:51:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1887460716",
      "id" : 1887460716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wgF1s",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887460716/reactions"
      },
      "updated_at" : "2024-01-11T16:19:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887460716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20390186031</sub>",
      "created_at" : "2024-01-11T15:51:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1887460825",
      "id" : 1887460825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wgF3Z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887460825/reactions"
      },
      "updated_at" : "2024-01-11T15:51:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1887460825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449063112"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449063112"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll give that a try tomorrow.",
      "commit_id" : "9b7be63fd17bd506a7ec00d6d6a859a31f21d55d",
      "created_at" : "2024-01-11T15:52:44Z",
      "diff_hunk" : "@@ -11,18 +11,24 @@\n #include <string>\n #include <utility>\n \n-/** Read full contents of a file and return them in a std::string.\n- * Returns a pair <status, string>.\n- * If an error occurred, status will be false, otherwise status will be true and the data will be returned in string.\n+/**\n+ * Read full contents of a file and return one of the following formats:\n+ * 1. std::vector<unsigned char>\n+ * 2. std::string\n  *\n- * @param maxsize Puts a maximum size limit on the file that is read. If the file is larger than this, truncated data\n- *         (with len > maxsize) will be returned.\n+ * @param[in] filename Filename. Returns false it doesn't exist.\n+ * @param[out] output  Result\n+ * @param[in] maxsize  Puts a maximum size limit on the file that is read. If the file\n+ *                 is larger than this, truncated data (with len > maxsize) will be returned.\n+ * @return true if successful, false if an error occured.\n  */\n-std::pair<bool,std::string> ReadBinaryFile(const fs::path &filename, size_t maxsize=std::numeric_limits<size_t>::max());\n+template <typename T>\n+bool ReadBinaryFile(const fs::path& filename, T& output, size_t maxsize=std::numeric_limits<size_t>::max());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#discussion_r1449063112",
      "id" : 1449063112,
      "in_reply_to_id" : 1449027121,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585WXvLI",
      "original_commit_id" : "634f29f2efa96263a2b108b9b5532d19a1d64e48",
      "original_line" : 26,
      "original_position" : 22,
      "original_start_line" : null,
      "path" : "src/util/readwritefile.h",
      "position" : 22,
      "pull_request_review_id" : 1815920975,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29229",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449063112/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T15:52:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449063112",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I switched to using `std::optional` as the return type. It happily compiles on my end, we'll see what CI thinks...",
      "created_at" : "2024-01-12T08:26:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1888644663",
      "id" : 1888644663,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wkm43",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888644663/reactions"
      },
      "updated_at" : "2024-01-12T08:26:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888644663",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Had to `#include <vector>` to please clang13 (should have included it anyway since it's used).",
      "created_at" : "2024-01-12T08:47:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1888672189",
      "id" : 1888672189,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585wktm9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888672189/reactions"
      },
      "updated_at" : "2024-01-12T08:47:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888672189",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> However it made no sense to me to store a `CKey` as plain text\r\n\r\nI guess that by \"plain text\" here you mean `std::string`, right? `std::string` can store arbitrary non-ASCII characters, including `'\\0'`, so it is technically ok to use it for binary data.\r\n\r\nMore relevant in this case is that `CKey` stores sensitive data and takes care to wipe it from memory when freed. In https://github.com/bitcoin/bitcoin/pull/28983 `Read/WriteBinaryData()` is used in a way that defeats that - the sensitive data will be copied to a temporary variable (ordinary `std::vector`) for IO. Can we change `Read/WriteBinaryData()` to operate directly on `CKey` in such a way that data goes directly from `CKey` to the disk?",
      "created_at" : "2024-01-18T15:12:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1898668856",
      "id" : 1898668856,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xK2M4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1898668856/reactions"
      },
      "updated_at" : "2024-01-18T15:12:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1898668856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Can we change `Read/WriteBinaryData()` to operate directly on `CKey` in such a way that data goes directly from `CKey` to the disk?\r\n\r\nI haven't looked in detail, but writing bytes to a file can be achieved with one line of code:\r\n\r\n```cpp\r\nCAutoFile{...} << Span{data};",
      "created_at" : "2024-01-18T15:19:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1898681016",
      "id" : 1898681016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xK5K4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1898681016/reactions"
      },
      "updated_at" : "2024-01-18T15:19:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1898681016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I like the idea of operating on `CKey` directly. I'll try to add that, though not sure how to implement that securely.\r\n\r\nThe keys used in #28983 are not as important as wallet keys, but if we add a generic method to store a `CKey` on disk, then it should do so securely - so that future devs using that function don't shoot themselves in the foot. At least the current `std::vector<unsigned char>>` does not pretend to be secure.",
      "created_at" : "2024-01-22T09:11:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1903550684",
      "id" : 1903550684,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xdeDc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903550684/reactions"
      },
      "updated_at" : "2024-01-22T09:12:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903550684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I guess that by \"plain text\" here you mean `std::string`, right? `std::string` can store arbitrary non-ASCII characters, including `'\\0'`, so it is technically ok to use it for binary data.\r\n\r\nI think the way `WriteBinaryFile` was initially used with Tor was that we parse the JSON returned by the Tor daemon and store the `PrivateKey` key field (UTF8 encoced?) in a file.",
      "created_at" : "2024-01-22T09:15:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1903561636",
      "id" : 1903561636,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xdguk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903561636/reactions"
      },
      "updated_at" : "2024-01-22T09:15:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903561636",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I haven't looked in detail, but writing bytes to a file can be achieved with one line of code\r\n\r\nThat would be a nice simplification. Almost (?) to the point of not needing these helper functions.",
      "created_at" : "2024-01-22T09:20:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29229#issuecomment-1903570460",
      "id" : 1903570460,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29229",
      "node_id" : "IC_kwDOABII585xdi4c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903570460/reactions"
      },
      "updated_at" : "2024-01-22T09:20:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1903570460",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]

{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "### Current logic\r\n\r\nSince #3370, our logic for deciding which chain is active has been:\r\n1. Among chains for which all transactions have been received, and are not known to contain invalid blocks...\r\n2. Pick the one with the highest accumulated work\r\n3. If there are multiple such chaintips, pick the one for which the tip was received first (full block data, not just the header)\r\n\r\nThe reason for this last condition is protecting against block withholding. If an attacker manages to mine a block, quickly spread its header around the network but withhold the full block data, they can wait until a competing miner finds their block, at which point they broadcast the full block data. If rule (3) would use \"earliest received header\" as condition, they'd be able to retroactively make their block win.\r\n\r\n### Remaining issue\r\n\r\nIt appears to me however that strictly speaking, the tie-breaker (3) doesn't fully solve this. It is still possible to play the same withholding game, but with an extra block depth:\r\n\r\n```\r\n  /- B  - C\r\nA\r\n  \\- B' - C'\r\n```\r\n\r\nThe attacker mines blocks B and C in secret, broadcasts the header of B, and the full block data of C. Other miners cannot build on top of this (except empty blocks). As soon as the rest of the network catches up (by mining B' and C'), the attacker broadcasts B. With the current logic, the attacker's A-B-C chain will become the active chain.\r\n\r\nI consider this very hard to pull off, as it requires a full block advantage already, and headers do not propagate through the network on their own. Still, it deserves addressing.\r\n\r\n### Solution\r\n\r\nThis pull requests replaces the tie-breaker (3) \"earliest received tip\" with \"earliest activateable chain\", as in: among the acceptable chains according to (2), pick the one for which the *entire* chain was received first.\r\n\r\nAbstractly, the condition can be described as:\r\n* Assign with each block a \"timedata\", the incrementally-sorted list of all timestamps at which all the blocks' ancestors were received.\r\n* Among the (2) acceptable chaintips, pick the one which has the lowest timedata (comparing lexicographically after sorting).\r\n\r\nIn practice this is implemented by finding the maximum sequence value in each chain since the fork point between them, and then picking the one with the lowest maximum.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29284/comments",
   "created_at" : "2024-01-19T21:28:10Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29284/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/29284",
   "id" : 2091448262,
   "labels" : [
      {
         "color" : "cccccc",
         "default" : false,
         "description" : "",
         "id" : 5334691551,
         "name" : "CI failed",
         "node_id" : "LA_kwDOABII588AAAABPfju3w",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29284/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585kl9eM",
   "number" : 29284,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/29284.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29284",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/29284.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29284"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29284/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29284/timeline",
   "title" : "Choose earliest-activatable as tie breaker between equal-work chains",
   "updated_at" : "2024-01-19T21:35:42Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29284",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
      "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
      "followers_url" : "https://api.github.com/users/sipa/followers",
      "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/sipa",
      "id" : 548488,
      "login" : "sipa",
      "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
      "organizations_url" : "https://api.github.com/users/sipa/orgs",
      "received_events_url" : "https://api.github.com/users/sipa/received_events",
      "repos_url" : "https://api.github.com/users/sipa/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/sipa"
   }
}

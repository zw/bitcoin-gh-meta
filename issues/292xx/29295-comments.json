[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29295).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/29295#pullrequestreview-1861422503) |\n| Stale ACK | [shaavan](https://github.com/bitcoin/bitcoin/pull/29295#pullrequestreview-1845820349) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2024-01-23T13:50:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1906102676",
      "id" : 1906102676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585xnNGU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1906102676/reactions"
      },
      "updated_at" : "2024-02-04T13:01:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1906102676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Opened as draft because I suspect this can be done less verbosely.",
      "created_at" : "2024-01-23T13:51:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1906103142",
      "id" : 1906103142,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585xnNNm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1906103142/reactions"
      },
      "updated_at" : "2024-01-23T13:51:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1906103142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Added `Serialize` for completeness. This only saves me a `MakeUCharSpan(key)`.",
      "created_at" : "2024-01-23T14:17:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1906152265",
      "id" : 1906152265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585xnZNJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1906152265/reactions"
      },
      "updated_at" : "2024-01-23T14:17:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1906152265",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1463517690"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463517690"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Use `secure_allocator` for the vector because it also ensures the data is not swapped out to disk. Then you do not need the `memory_cleanse()` call at the end:\r\n\r\n```suggestion\r\n        std::vector<unsigned char, secure_allocator<unsigned char>> key_data(32);\r\n        s >> MakeWritableByteSpan(key_data);\r\n        this->Set(key_data.begin(), key_data.end(), true);\r\n```",
      "commit_id" : "98ab26477705d0221e74af9cdfc75a4024441ef6",
      "created_at" : "2024-01-23T16:01:16Z",
      "diff_hunk" : "@@ -203,6 +203,25 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    /** Assumes the public key is compressed */\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        std::vector<unsigned char> key_data;\n+        key_data.resize(32);\n+        s >> MakeWritableByteSpan(key_data);\n+        this->Set(key_data.begin(), key_data.end(), true);\n+        memory_cleanse(key_data.data(), key_data.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1463517690",
      "id" : 1463517690,
      "line" : 214,
      "node_id" : "PRRC_kwDOABII585XO4H6",
      "original_commit_id" : "98ab26477705d0221e74af9cdfc75a4024441ef6",
      "original_line" : 214,
      "original_position" : 12,
      "original_start_line" : 210,
      "path" : "src/key.h",
      "position" : 12,
      "pull_request_review_id" : 1839192623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463517690/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 210,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-23T16:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463517690",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1463523098"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463523098"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it not worth saving `CKey::fCompressed` to disk as well and fully support ser/unser of any `CKey`?",
      "commit_id" : "98ab26477705d0221e74af9cdfc75a4024441ef6",
      "created_at" : "2024-01-23T16:04:31Z",
      "diff_hunk" : "@@ -203,6 +203,25 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    /** Assumes the public key is compressed */\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        std::vector<unsigned char> key_data;\n+        key_data.resize(32);\n+        s >> MakeWritableByteSpan(key_data);\n+        this->Set(key_data.begin(), key_data.end(), true);\n+        memory_cleanse(key_data.data(), key_data.size());\n+    }\n+\n+    /** Can only be used for compressed keys, because Unserialize assumes that. */\n+    template<typename Stream>\n+    void Serialize(Stream &s) const {\n+        if (!fCompressed) {\n+            throw std::ios_base::failure(\"Uncompressed key\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1463523098",
      "id" : 1463523098,
      "line" : 221,
      "node_id" : "PRRC_kwDOABII585XO5ca",
      "original_commit_id" : "98ab26477705d0221e74af9cdfc75a4024441ef6",
      "original_line" : 221,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : 19,
      "pull_request_review_id" : 1839192623,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463523098/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-23T16:05:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463523098",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1463531442"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463531442"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Wait, I forgot that this is inside a `CKey` method and we have access to the private `keydata` member. Should be possible to write directly to it, without an intermediate vector. Something like:\r\n\r\n```cpp\r\nMakeKeyData();\r\ns >> MakeSpanFromCKeykeydataomgwhatisthis(keydata->begin(), keydata->end());\r\n```",
      "commit_id" : "98ab26477705d0221e74af9cdfc75a4024441ef6",
      "created_at" : "2024-01-23T16:09:49Z",
      "diff_hunk" : "@@ -203,6 +203,25 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    /** Assumes the public key is compressed */\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        std::vector<unsigned char> key_data;\n+        key_data.resize(32);\n+        s >> MakeWritableByteSpan(key_data);\n+        this->Set(key_data.begin(), key_data.end(), true);\n+        memory_cleanse(key_data.data(), key_data.size());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1463531442",
      "id" : 1463531442,
      "in_reply_to_id" : 1463517690,
      "line" : 214,
      "node_id" : "PRRC_kwDOABII585XO7ey",
      "original_commit_id" : "98ab26477705d0221e74af9cdfc75a4024441ef6",
      "original_line" : 214,
      "original_position" : 12,
      "original_start_line" : 210,
      "path" : "src/key.h",
      "position" : 12,
      "pull_request_review_id" : 1839214436,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463531442/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 210,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-23T16:09:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1463531442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1466165495"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1466165495"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Good point.",
      "commit_id" : "98ab26477705d0221e74af9cdfc75a4024441ef6",
      "created_at" : "2024-01-25T10:32:51Z",
      "diff_hunk" : "@@ -203,6 +203,25 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    /** Assumes the public key is compressed */\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        std::vector<unsigned char> key_data;\n+        key_data.resize(32);\n+        s >> MakeWritableByteSpan(key_data);\n+        this->Set(key_data.begin(), key_data.end(), true);\n+        memory_cleanse(key_data.data(), key_data.size());\n+    }\n+\n+    /** Can only be used for compressed keys, because Unserialize assumes that. */\n+    template<typename Stream>\n+    void Serialize(Stream &s) const {\n+        if (!fCompressed) {\n+            throw std::ios_base::failure(\"Uncompressed key\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1466165495",
      "id" : 1466165495,
      "in_reply_to_id" : 1463523098,
      "line" : 221,
      "node_id" : "PRRC_kwDOABII585XY-j3",
      "original_commit_id" : "98ab26477705d0221e74af9cdfc75a4024441ef6",
      "original_line" : 221,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : 19,
      "pull_request_review_id" : 1843364892,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1466165495/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-25T10:32:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1466165495",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Switched to the approach suggested by @vasild. Also supports uncompressed keys. Added test.\r\n\r\nKeeping this draft pending #29307.",
      "created_at" : "2024-01-25T14:14:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1910300031",
      "id" : 1910300031,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585x3N1_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1910300031/reactions"
      },
      "updated_at" : "2024-01-25T14:14:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1910300031",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Come to think of it, this PR only changes serialization, while #29307 deals with storage. So this is ready for review.",
      "created_at" : "2024-01-25T14:18:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1910305918",
      "id" : 1910305918,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585x3PR-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1910305918/reactions"
      },
      "updated_at" : "2024-01-25T14:18:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1910305918",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1467728211"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467728211"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: In C++, a `for` loop can be used to execute the same code block with different values.",
      "commit_id" : "8c067ef1c67a1053127a10b6312bcf71da446445",
      "created_at" : "2024-01-26T14:35:33Z",
      "diff_hunk" : "@@ -364,4 +364,27 @@ BOOST_AUTO_TEST_CASE(key_ellswift)\n     }\n }\n \n+\n+BOOST_AUTO_TEST_CASE(key_serialization)\n+{\n+    {\n+        CKey key{GenerateRandomKey()};\n+        DataStream s{};\n+        s << key;\n+        CKey key_copy;\n+        s >> key_copy;\n+        BOOST_CHECK(key == key_copy);\n+    }\n+\n+    {\n+        CKey key{GenerateRandomKey(/*compressed=*/false)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1467728211",
      "id" : 1467728211,
      "line" : 380,
      "node_id" : "PRRC_kwDOABII585Xe8FT",
      "original_commit_id" : "8c067ef1c67a1053127a10b6312bcf71da446445",
      "original_line" : 380,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/test/key_tests.cpp",
      "position" : 17,
      "pull_request_review_id" : 1845873682,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467728211/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-26T14:38:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467728211",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1467729703"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467729703"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure. IIUC the assumption is that keydata should not hold invalid keys. Can you explain why this assumption should be broken?",
      "commit_id" : "8c067ef1c67a1053127a10b6312bcf71da446445",
      "created_at" : "2024-01-26T14:36:59Z",
      "diff_hunk" : "@@ -203,6 +203,19 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        s >> fCompressed;\n+        MakeKeyData();\n+        s >> MakeWritableByteSpan(*keydata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1467729703",
      "id" : 1467729703,
      "line" : 211,
      "node_id" : "PRRC_kwDOABII585Xe8cn",
      "original_commit_id" : "8c067ef1c67a1053127a10b6312bcf71da446445",
      "original_line" : 211,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : 9,
      "pull_request_review_id" : 1845873682,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467729703/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-26T14:38:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467729703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1467912714"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467912714"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do `CKey::Check()` on `keydata[0]`?",
      "commit_id" : "8c067ef1c67a1053127a10b6312bcf71da446445",
      "created_at" : "2024-01-26T17:14:14Z",
      "diff_hunk" : "@@ -203,6 +203,19 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        s >> fCompressed;\n+        MakeKeyData();\n+        s >> MakeWritableByteSpan(*keydata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1467912714",
      "id" : 1467912714,
      "in_reply_to_id" : 1467729703,
      "line" : 211,
      "node_id" : "PRRC_kwDOABII585XfpIK",
      "original_commit_id" : "8c067ef1c67a1053127a10b6312bcf71da446445",
      "original_line" : 211,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : 9,
      "pull_request_review_id" : 1846165275,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467912714/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-26T17:14:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1467912714",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I need to read and write two private keys to/from disk\r\n\r\nNot familiar with the stratumv2 spec, but this seems odd to me and also not a good fit for `CKey`. FWIW, there is `CPrivKey` for producing a serialized OpenSSL private key",
      "created_at" : "2024-01-26T17:56:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1912459938",
      "id" : 1912459938,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585x_dKi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1912459938/reactions"
      },
      "updated_at" : "2024-01-26T17:56:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1912459938",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I added `Check()` when deserialising.\r\n\r\n> Not familiar with the stratumv2 spec, but this seems odd to me\r\n\r\nIn Stratum v2 a pool or Template Provider (implemented in #28983) may (optionally) have an identity. This is necessary to prevent stealing hash rate (at least for the pool). In order to protect that identity in the long run, you can keep its private key on a different machine, generate a static key for the server and sign a certificate for that static key.\r\n\r\n> not a good fit for CKey\r\n\r\nWhy would you not use a `CKey` to hold a private key?\r\n\r\n> FWIW, there is CPrivKey for producing a serialized OpenSSL private key\r\n\r\nTIL. There's two issues with `CPrivKey`:\r\n\r\n1. It's designed to always be used in conjunction with a public key. That makes sense for the wallet which has to deal with encrypted key, and where any data corruption is catastrophic.\r\n\r\nWith Stratum v2 you can just make a new static key if something goes wrong. It's more similar to how we handle Tor v3 and I2P private keys.\r\n\r\nIt's possible to use the confusingly named `GetPrivKey()` instead of `<<`, and it's possible to `Load()` with a dummy public key and `fSkipCheck = false`. But having straight-forward `<<` and `>>` seems cleaner.\r\n\r\n2. It uses the needlessly large OpenSSL encoding. At least in Stratum v2 there's never a need to import or export private keys. We just need to store them. The encoding is also incorrect (for Stratum v2): it just pretends to be a compressed key, but in reality public keys are encoded as x-only. There's no point in shoe-horning data into a standard we don't need and use incorrectly. On the other hand, there's no harm in it - the wallet does it too. \r\n\r\nI could switch to OpenSSL encoding. Either by moving the code from `GetPrivKey` to `Serialize()`, or vice versa, call `GetPrivKey()` from `Serialize`. `Load` would need a more involved refactor to separate out the dependency.\r\n\r\n@vasild wrote earlier:\r\n\r\n> Is it not worth saving `CKey::fCompressed` to disk as well and fully support ser/unser of any `CKey`?\r\n\r\nI added this before, but given the existence of `CPrivKey` I'm tempted to drop this. That makes it more clear that is only for keys that are intended to be used with Schnorr signatures, x-only ECDH, etc. I.e. keys for which there is no valid DER encoding.",
      "created_at" : "2024-01-29T10:41:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1914420467",
      "id" : 1914420467,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yG7zz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914420467/reactions"
      },
      "updated_at" : "2024-01-29T10:41:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914420467",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469402317"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469402317"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done",
      "commit_id" : "683f988f90bd625544529b2366984bb677dd6e31",
      "created_at" : "2024-01-29T10:41:59Z",
      "diff_hunk" : "@@ -203,6 +203,19 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {\n+        s >> fCompressed;\n+        MakeKeyData();\n+        s >> MakeWritableByteSpan(*keydata);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469402317",
      "id" : 1469402317,
      "in_reply_to_id" : 1467729703,
      "line" : 211,
      "node_id" : "PRRC_kwDOABII585XlUzN",
      "original_commit_id" : "8c067ef1c67a1053127a10b6312bcf71da446445",
      "original_line" : 211,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : 9,
      "pull_request_review_id" : 1848363773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469402317/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-29T10:41:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469402317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469402366"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469402366"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added",
      "commit_id" : "683f988f90bd625544529b2366984bb677dd6e31",
      "created_at" : "2024-01-29T10:42:01Z",
      "diff_hunk" : "@@ -364,4 +364,27 @@ BOOST_AUTO_TEST_CASE(key_ellswift)\n     }\n }\n \n+\n+BOOST_AUTO_TEST_CASE(key_serialization)\n+{\n+    {\n+        CKey key{GenerateRandomKey()};\n+        DataStream s{};\n+        s << key;\n+        CKey key_copy;\n+        s >> key_copy;\n+        BOOST_CHECK(key == key_copy);\n+    }\n+\n+    {\n+        CKey key{GenerateRandomKey(/*compressed=*/false)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469402366",
      "id" : 1469402366,
      "in_reply_to_id" : 1467728211,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XlUz-",
      "original_commit_id" : "8c067ef1c67a1053127a10b6312bcf71da446445",
      "original_line" : 380,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/test/key_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1848363858,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469402366/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-29T10:42:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469402366",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469415640"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469415640"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No need for the extra nesting `{`.",
      "commit_id" : "683f988f90bd625544529b2366984bb677dd6e31",
      "created_at" : "2024-01-29T10:52:44Z",
      "diff_hunk" : "@@ -364,4 +364,20 @@ BOOST_AUTO_TEST_CASE(key_ellswift)\n     }\n }\n \n+\n+BOOST_AUTO_TEST_CASE(key_serialization)\n+{\n+    {\n+        for (bool compressed : {true, false}) {\n+            CKey key{GenerateRandomKey(/*compressed=*/compressed)};\n+            DataStream s{};\n+            s << key;\n+            CKey key_copy;\n+            s >> key_copy;\n+            BOOST_CHECK(key == key_copy);\n+        }\n+\n+    }\n+}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469415640",
      "id" : 1469415640,
      "line" : 381,
      "node_id" : "PRRC_kwDOABII585XlYDY",
      "original_commit_id" : "683f988f90bd625544529b2366984bb677dd6e31",
      "original_line" : 381,
      "original_position" : 18,
      "original_start_line" : 369,
      "path" : "src/test/key_tests.cpp",
      "position" : 18,
      "pull_request_review_id" : 1848385247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469415640/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 369,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-29T10:52:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469415640",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I dropped support for uncompressed keys and added a comment to explain the difference with OpenSSL encoding. Also added test for invalid keys.",
      "created_at" : "2024-01-29T11:13:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1914474598",
      "id" : 1914474598,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yHJBm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914474598/reactions"
      },
      "updated_at" : "2024-01-29T11:13:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914474598",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469449395"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469449395"
         }
      },
      "author_association" : "MEMBER",
      "body" : "template implies `inline`, so it can be removed. Also, could run clang-format on new code?",
      "commit_id" : "8be237475ace9c9f6a6ef0d8475711e4ea4f0c1b",
      "created_at" : "2024-01-29T11:23:21Z",
      "diff_hunk" : "@@ -203,6 +203,32 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    /** Straight-forward serialization of key bytes. Use GetPrivKey() for an\n+     *  OpenSSL compatible format. Only for compressed keys.\n+     */\n+    template<typename Stream>\n+    void Serialize(Stream &s) const {\n+        if (!IsValid()) {\n+            throw std::ios_base::failure(\"invalid key\");\n+        }\n+        if (!fCompressed) {\n+            // Uncompressed keys should be OpenSSL serialized instead\n+            throw std::ios_base::failure(\"uncompressed key\");\n+        }\n+        ::Serialize(s, MakeUCharSpan(*this));\n+    }\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469449395",
      "id" : 1469449395,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XlgSz",
      "original_commit_id" : "0f5d0a660e8e567c645564e220b446ff7887e3af",
      "original_line" : 223,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1848439577,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469449395/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-29T11:26:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469449395",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469450644"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469450644"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to cast a byte span to a u-char span? I think you can replace all `Make*Span()` by just `Span{}`.\r\n\r\n\r\n```cpp\r\ns << Span{*this};",
      "commit_id" : "8be237475ace9c9f6a6ef0d8475711e4ea4f0c1b",
      "created_at" : "2024-01-29T11:24:31Z",
      "diff_hunk" : "@@ -203,6 +203,32 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    /** Straight-forward serialization of key bytes. Use GetPrivKey() for an\n+     *  OpenSSL compatible format. Only for compressed keys.\n+     */\n+    template<typename Stream>\n+    void Serialize(Stream &s) const {\n+        if (!IsValid()) {\n+            throw std::ios_base::failure(\"invalid key\");\n+        }\n+        if (!fCompressed) {\n+            // Uncompressed keys should be OpenSSL serialized instead\n+            throw std::ios_base::failure(\"uncompressed key\");\n+        }\n+        ::Serialize(s, MakeUCharSpan(*this));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469450644",
      "id" : 1469450644,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XlgmU",
      "original_commit_id" : "0f5d0a660e8e567c645564e220b446ff7887e3af",
      "original_line" : 219,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1848439577,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469450644/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-29T11:27:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469450644",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469469780"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469469780"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done. Would be nice to do this in a pre-commit hook or something, because it's unlikely I'm going to remember doing this every time.",
      "commit_id" : "8be237475ace9c9f6a6ef0d8475711e4ea4f0c1b",
      "created_at" : "2024-01-29T11:42:18Z",
      "diff_hunk" : "@@ -203,6 +203,32 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    /** Straight-forward serialization of key bytes. Use GetPrivKey() for an\n+     *  OpenSSL compatible format. Only for compressed keys.\n+     */\n+    template<typename Stream>\n+    void Serialize(Stream &s) const {\n+        if (!IsValid()) {\n+            throw std::ios_base::failure(\"invalid key\");\n+        }\n+        if (!fCompressed) {\n+            // Uncompressed keys should be OpenSSL serialized instead\n+            throw std::ios_base::failure(\"uncompressed key\");\n+        }\n+        ::Serialize(s, MakeUCharSpan(*this));\n+    }\n+\n+    template <typename Stream>\n+    inline void Unserialize(Stream& s) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469469780",
      "id" : 1469469780,
      "in_reply_to_id" : 1469449395,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XllRU",
      "original_commit_id" : "0f5d0a660e8e567c645564e220b446ff7887e3af",
      "original_line" : 223,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1848473905,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469469780/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-29T11:42:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469469780",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469469850"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469469850"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done in both places.",
      "commit_id" : "8be237475ace9c9f6a6ef0d8475711e4ea4f0c1b",
      "created_at" : "2024-01-29T11:42:22Z",
      "diff_hunk" : "@@ -203,6 +203,32 @@ class CKey\n     ECDHSecret ComputeBIP324ECDHSecret(const EllSwiftPubKey& their_ellswift,\n                                        const EllSwiftPubKey& our_ellswift,\n                                        bool initiating) const;\n+\n+    /** Straight-forward serialization of key bytes. Use GetPrivKey() for an\n+     *  OpenSSL compatible format. Only for compressed keys.\n+     */\n+    template<typename Stream>\n+    void Serialize(Stream &s) const {\n+        if (!IsValid()) {\n+            throw std::ios_base::failure(\"invalid key\");\n+        }\n+        if (!fCompressed) {\n+            // Uncompressed keys should be OpenSSL serialized instead\n+            throw std::ios_base::failure(\"uncompressed key\");\n+        }\n+        ::Serialize(s, MakeUCharSpan(*this));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#discussion_r1469469850",
      "id" : 1469469850,
      "in_reply_to_id" : 1469450644,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585XllSa",
      "original_commit_id" : "0f5d0a660e8e567c645564e220b446ff7887e3af",
      "original_line" : 219,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/key.h",
      "position" : null,
      "pull_request_review_id" : 1848474000,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29295",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469469850/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-29T11:42:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1469469850",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Why would you not use a `CKey` to hold a private key?\r\n\r\nMy point was not \"CKey shouldn't be used for private keys.\" My point is `CKey` (or at least my understanding of it) is meant for a *specific* kind(s) of \"private key\" i.e. a private key that represents a private/public key pair and is intended to be used in that context. It also seems we want to know where the key came from and ensure that it is valid, hence the only ways to load a secret key are the `DecodeSecret` method, which decodes a BIP32 ExtPrivKey string, and the `Load` method which takes an openssl key and verifies the corresponding public key (I suspect `fSkipCheck` is only there for performance reasons and not to indicate \"use `skipCheck` if you want to load generic secret data without a public key\").\r\n\r\nAgain, I don't fully understand your usecase, but adding generic methods to de-serialize bytes from *anywhere* into a `CKey` and methods to serialize a `CKey` into 32 bytes without any context about where the key came from or what the key represents seems like a bad idea for `CKey`.\r\n\r\n> It's more similar to how we handle Tor v3 and I2P private keys.\r\n\r\nI did a quick grep for `CKey` and `<key.h>` and didn't see anything related to Tor or I2P. Can you provide an example of what you mean here, because I'm not sure I fully understand your point.",
      "created_at" : "2024-01-29T11:42:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1914521350",
      "id" : 1914521350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yHUcG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914521350/reactions"
      },
      "updated_at" : "2024-01-29T11:42:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914521350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > It's more similar to how we handle Tor v3 and I2P private keys.\r\n> \r\n> I did a quick grep for `CKey` and `<key.h>` and didn't see anything related to Tor or I2P. Can you provide an example of what you mean here, because I'm not sure I fully understand your point.\r\n\r\nSee #29229: they don't use `CKey`, but instead are stored as plain text. They're similar in the sense that they're used as an identity key on the network and that we store them in the data dir. But we can't use `CKey` for them because afaik they're on a different curve.\r\n\r\n> without any context about where the key came from or what the key represents seems like a bad idea for CKey.\r\n\r\nI could make a subclass `CNotTerriblyImportKey` if that's a huge concern.\r\n",
      "created_at" : "2024-01-29T11:46:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1914527731",
      "id" : 1914527731,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yHV_z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914527731/reactions"
      },
      "updated_at" : "2024-01-29T11:48:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914527731",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> they don't use CKey, but instead are stored as plain text. They're similar in the sense that they're used as an identity key on the network and that we store them in the data dir.\r\n\r\nWhy can't we do the same for `StratumV2` identity?",
      "created_at" : "2024-01-29T11:59:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1914547962",
      "id" : 1914547962,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yHa76",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914547962/reactions"
      },
      "updated_at" : "2024-01-29T11:59:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914547962",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Why a convert a key to a plain text hex string if you can just store the bytes? `CKey` also takes care to not leave key material dangling in memory in temporary variables.",
      "created_at" : "2024-01-29T12:12:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1914568318",
      "id" : 1914568318,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yHf5-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914568318/reactions"
      },
      "updated_at" : "2024-01-29T12:12:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914568318",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "My question was why not handle StratumV2 keys the same way we are handling Tor and I2P identity keys and not use `CKey` at all. This avoids needing to add generic `Serialize/Deserialize` methods to `CKey` just for this specific use case, and also avoids needing to go write a specific SV2 key serialization format and corresponding `DecodeSV2Secret` method for `CKey`.",
      "created_at" : "2024-01-29T12:21:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1914583600",
      "id" : 1914583600,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yHjow",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914583600/reactions"
      },
      "updated_at" : "2024-01-29T12:21:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914583600",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The Tor and I2P keys are not generated by us. We get them via a JSON RPC and pass them back that way. We don't use them ourselves for decryption and encryption. The passing around as plain text is suboptimal, because we're not clearing the key data from memory.\r\n\r\nWith Stratum v2 we _do_ use the key. We need its pubkey, perform (Elligator-Swift) ECDH with it, etc. That's what a CKey is for.",
      "created_at" : "2024-01-29T14:08:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1914768513",
      "id" : 1914768513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yIQyB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914768513/reactions"
      },
      "updated_at" : "2024-01-29T14:08:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914768513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> With Stratum v2 we do use the key. We need its pubkey, perform (Elligator-Swift) ECDH with it, etc. That's what a CKey is for.\r\n\r\nYour 1st objection to using `CPrivKey` was that `CPrivKey` is always meant to be used in conjunction with a public key (implying that this SV2 key is not), but it sounds like we will also always be using a public key with the SV2 key, so I don't understand your 1st objection to using `CPrivKey` or why we would need a \"dummy public key.\"\r\n\r\nYour second point makes sense to me in that if this is meant to be an `XOnlyPubKey`, then passing it around in DER encoding is incorrect / confusing. But by the same argument, what you are doing now is also incorrect and confusing in that you are serializing and deserializing 32 bytes with no indication it is meant for an `XOnlyPublicKey`.\r\n\r\nAgain, I really think we should avoid adding generic `Serialize/Deserialize` methods on `CKey` and so far your objections to using existing methods doesn't seem convincing enough to warrant adding two new methods to `CKey`.\r\n\r\nIf your usecase is \"read 32 bytes and create a CKey,\" why not just read the 32 bytes and use the `CKey.Set` method? Your `Unserialize` code seems to duplicate what `Set` is already doing. For de-serializing, why not just get the byte data and write it out, and then destroy the key?\r\n",
      "created_at" : "2024-01-29T14:55:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1914863218",
      "id" : 1914863218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yIn5y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914863218/reactions"
      },
      "updated_at" : "2024-01-29T14:55:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914863218",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> it sounds like we will also always be using a public key with the SV2 key,\r\n\r\nYes, but we just derive the public key from the private key. There's no need to store it and check it. If it got corrupted, you just make a new one.\r\n\r\n> what you are doing now is also incorrect and confusing in that you are serializing and deserializing 32 bytes with no indication it is meant for an `XOnlyPublicKey`\r\n\r\nWe don't make that distinction for Taproot wallet keys either. Any compressed key can be added to a Taproot descriptor or to any ECDSA based descriptor. We could prevent that by adding `bool xonly` to CKey, but that would (probably) require a wallet refactor.\r\n\r\nAnother approach would be `XOnlyKey` subclass, similar to what I suggested above. The wallet could later make use of that too.\r\n\r\n> why not just get the byte data and write it out, and then destroy the key?\r\n\r\nI could, but then the next person implementing something similar forgets to destroy the key (or any of the other checks). It's safer to have the serialisation code take care of this.\r\n\r\n\r\n",
      "created_at" : "2024-01-29T15:41:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1914963270",
      "id" : 1914963270,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yJAVG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914963270/reactions"
      },
      "updated_at" : "2024-01-29T15:42:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914963270",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Yes, but we just derive the public key from the private key. There's no need to store it and check it. If it got corrupted, you just make a new one.\r\n\r\nIf bitcoin core is not generating this key, then it seems reasonable to have the pubkey along with it so that it can be verified. If bitcoin core *is* generating this key, I don't see why we are writing it to disk unencrypted. Seems like a bad idea. Also it seems like these keys can be ephemeral if we can just make a new one, so writing it to disk makes even less sense to me. There's probably some reason why its done this way in the StratumV2 spec and that's fine, but that doesn't seem like a compelling enough reason to add these general methods to `CKey` when you can write your StratumV2 code without needing these methods on `CKey`.\r\n\r\n> We don't make that distinction for Taproot wallet keys either. Any compressed key can be added to a Taproot descriptor or to any ECDSA based descriptor. We could prevent that by adding bool xonly to CKey, but that would (probably) require a wallet refactor.\r\n\r\nThe descriptor *is* the encoding information: you import a private key wrapped in a descriptor which tells you exactly what the key is meant for. It's expected you would back up that single key *with* the descriptor info.\r\n\r\n> I could, but then the next person implementing something similar forgets to destroy the key (or any of the other checks). It's safer to have the serialisation code take care of this.\r\n\r\nWhat you are doing here seems very usecase specific (hence why I think you should do it without adding new methods to `CKey`), and I certainly hope we don't have a lot of future use cases where we need to write out unencrypted private keys to disk.\r\n\r\nFWIW, `BIP324Cipher` is doing it in the way I suggested, i.e. use the key and then set `mykey = CKey()`",
      "created_at" : "2024-01-29T18:15:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1915302735",
      "id" : 1915302735,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yKTNP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915302735/reactions"
      },
      "updated_at" : "2024-01-29T18:15:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915302735",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> If bitcoin core is not generating this key, then it seems reasonable to have the pubkey along with it so that it can be verified. If bitcoin core is generating this key, I don't see why we are writing it to disk unencrypted.\r\n\r\nWe generate the key for Stratum v2. We don't generate the key for Tor and I2P. We also don't encrypt those.\r\n\r\nI don't see how encryption could work for a server application like a Template Provider. Putting the password in a config file adds complexity and no security unless the system admin really knows what they're doing. An even more complicated approach would have the user unlock the server key via an RPC call. This is why a certificate can be signed on a different machine, and users can simply rotate the server (static) key when it's compromised. We're trying to make it easy to run a Template Provider, while providing a way for advanced users to increase security (the certificate).\r\n\r\n> Also it seems like these keys can be ephemeral if we can just make a new one, so writing it to disk makes even less sense to me.\r\n\r\nIt would help if you read the Stratum v2 spec on this. I also wrote some context in #29346 (opened yesterday). There's three keys: ephemeral to start the handshake (like in BIP324), a static key and an authority key. That last key can be on a separate machine it's the one a pool might publish on their website. It signs the static key. We need to store that static key. It should be rotated if the server is compromised. Otherwise you'd have to make sign and copy a new certificate on every restart.\r\n\r\n> BIP324Cipher is doing it in the way I suggested\r\n\r\nYes, BIP324 _only_ uses ephemeral keys, there's no identity by design.\r\n\r\n> The descriptor is the encoding information: you import a private key wrapped in a descriptor which tells you exactly what the key is meant for. It's expected you would back up that single key with the descriptor info.\r\n\r\nThat makes sense for the wallet. But a file name like `sv2_static_key` is plenty of context.",
      "created_at" : "2024-01-30T10:16:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1916514936",
      "id" : 1916514936,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yO7J4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916514936/reactions"
      },
      "updated_at" : "2024-01-30T10:16:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916514936",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It would help if you read the Stratum v2 spec on this\r\n\r\nThis PR is adding generic `Serialize/Deserialize` commands to `CKey` which allows you to read and write 32 bytes without any context. I don't think this is a good change for Bitcoin Core.\r\n\r\nAfter talking through your specific usecase for SV2, I better understand *why* you want to read and write a key to disk and how you intend to provide context for the key, but I don't think it's a compelling enough reason to motivate a general change to `CKey`, especially when you can accomplish exactly what you want with the existing methods on `CKey`.\r\n\r\n\r\n",
      "created_at" : "2024-01-30T10:50:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1916576350",
      "id" : 1916576350,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yPKJe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916576350/reactions"
      },
      "updated_at" : "2024-01-30T10:50:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916576350",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I looked into the possibility of subclassing `CKey` or making a similar class from scratch, but that got too complicated too quickly.\r\n\r\nSo I'm keeping the approach as-is, and will work around it in some more verbose way if this PR doesn't make it.\r\n\r\nI did however bring back the `compressed` boolean. That way the serialisation maps 1-to-1 to `CKey`.\r\n\r\nI think that if the wallet was designed from scratch it would use 32 byte encoding for private keys. The DER encoding adds no value, we don't even use it for export and import and the conversion is expensive (according to the `GetPrivKey()`'s code comment). It's not worth overhauling the wallet, but it seems reasonable to discourage DER encoding use for any other application.",
      "created_at" : "2024-02-01T13:23:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1921316998",
      "id" : 1921316998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585yhPiG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1921316998/reactions"
      },
      "updated_at" : "2024-02-01T13:23:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1921316998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think the newly added generic ser/unser methods to CKey are harmless.\r\n\r\nIts adding a footgun to `CKey`. The class is making sure to keep the secret data secure in memory and to free it when the key is gone, so allowing the key to be created directly from (potentially insecure) data on disk and allowing the key to be written out unencrypted to disk without destroying the key seems like an anti-pattern. You could argue that the existing methods (e.g. `GetPrivKey`) are also footguns, but that is not a good argument for adding more footguns to the class. It also seems strange to me that all of this care is being taken to keep the secret data secure in memory when you are reading writing it unencrypted to and from disk.\r\n\r\nEven if harmless, this still seems unnecessary since your usecase can be accomplished without it. If your requirements for SV2 were to change and *not* need core to be generating this secret, or not need the secret written to disk, then we would want to remove these unused methods from `CKey`, hence better to continue without adding usecase specific methods to `CKey`.\r\n\r\n> in a way that is less efficient (more copying) and more prone to errors\r\n\r\nThis seems specific to the current implementation? I imagine there is a way to do it efficiently with the class as is. Maybe once the StratumV2 spec is finalized and the implementation finished, you can reopen this if it still makes sense as a refactor?",
      "created_at" : "2024-02-05T13:52:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1927058987",
      "id" : 1927058987,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585y3JYr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927058987/reactions"
      },
      "updated_at" : "2024-02-05T14:01:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927058987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It also seems strange to me that all of this care is being taken to keep the secret data secure in memory when you are reading writing it unencrypted to and from disk.\r\n\r\nThat's literally what the wallet does by default. `CKey` provides extra security for free, so it's better to use it. The optional wallet encryption feature makes use of this security feature, by ensuring that once a wallet is (re)locked the key data is erased from memory.\r\n\r\nIt would take _additional_ code for Sv2 to handle the key material insecurely. Namely merging #29229 and convering the `CKey` to and from `Span<std::byte>` before saving it.\r\n\r\n> You could argue that the existing methods (e.g. `GetPrivKey`) are also footguns, but that is not a good argument for adding more footguns to the class.\r\n\r\nThey're not footguns. They're merely needlessly complicated ways to serialize / unserialize key data.\r\n\r\nThere's no way for `CKey` to protect callers other than by cleaning up after itself. You also can't accidentally store a key on disk by somehow inadvertently calling the serialise function, it requires opening a file.\r\n\r\n> If your requirements for SV2 were to change and not need core to be generating this secret\r\n\r\nThat's an argument for holding off merging this PR until #28983 / #29346 have more concept ACK's. I'm not expecting the Sv2 protocol to be overhauled so that it's no longer necessary to generate and persist keys. It's conceivable that we don't implement support for it, specifically we could decide to only support plain text connections and require users to install a proxy (not my preference though).",
      "created_at" : "2024-02-05T14:43:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1927160569",
      "id" : 1927160569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585y3iL5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927160569/reactions"
      },
      "updated_at" : "2024-02-05T14:43:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927160569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > It also seems strange to me that all of this care is being taken to keep the secret data secure in memory when you are reading writing it unencrypted to and from disk.\r\n> \r\n> That's literally what the wallet does by default. `CKey` provides extra security for free, so it's better to use it. The optional wallet encryption feature makes use of this security feature, by ensuring that once a wallet is (re)locked the key data is erased from memory.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/master/doc/managing-wallets.md#12-encrypting-the-wallet documents why encryption is not on by default, and seems like a reasonable tradeoff given that loss of a passphrase means total loss of funds. In your case, loss of a passphrase would simply mean regenerating a new key.\r\n\r\n> > You could argue that the existing methods (e.g. `GetPrivKey`) are also footguns, but that is not a good argument for adding more footguns to the class.\r\n> \r\n> They're not footguns. They're merely needlessly complicated ways to serialize / unserialize key data.\r\n\r\nI'd be more inclined if this PR was proposing a general refactor that got rid of existing 'needlessly complicated ways' of serializing/unserializing, rather than just adding yet another method. That way, we end up with a well documented and standard way of doing things.\r\n\r\n> > If your requirements for SV2 were to change and not need core to be generating this secret\r\n> \r\n> That's an argument for holding off merging this PR until #28983 / #29346 have more concept ACK's. I'm not expecting the Sv2 protocol to be overhauled so that it's no longer necessary to generate and persist keys. It's conceivable that we don't implement support for it, specifically we could decide to only support plain text connections and require users to install a proxy (not my preference though).\r\n\r\nSo lets hold off? You're not blocked on this PR being merged, and it seems we wont need this change if the other PRs don't progress. I imagine there are also more possibilities, such as doing this optional identity management outside of Bitcoin Core and using the keys similar to how we do I2P/Tor, where the secret is read as `Bytes`.\r\n\r\n",
      "created_at" : "2024-02-05T15:49:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1927304095",
      "id" : 1927304095,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585y4FOf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927304095/reactions"
      },
      "updated_at" : "2024-02-05T15:49:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927304095",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7444140?v=4",
         "events_url" : "https://api.github.com/users/josibake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/josibake/followers",
         "following_url" : "https://api.github.com/users/josibake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/josibake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/josibake",
         "id" : 7444140,
         "login" : "josibake",
         "node_id" : "MDQ6VXNlcjc0NDQxNDA=",
         "organizations_url" : "https://api.github.com/users/josibake/orgs",
         "received_events_url" : "https://api.github.com/users/josibake/received_events",
         "repos_url" : "https://api.github.com/users/josibake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/josibake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/josibake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/josibake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> In your case, loss of a passphrase would simply mean regenerating a new key.\r\n\r\nThere is no passphrase for sv2 keys. It would make running a template provider much too complicated. It could be added as an advanced feature later of course. (I would just enable disk encryption at rest for a server if this was a concern)\r\n\r\n> 'd be more inclined if this PR was proposing a general refactor\r\n\r\nI just need to store a key a on disk, I'm not interested in a general refactor.\r\n\r\n> You're not blocked on this PR being merged, and it seems we wont need this change if the other PRs don't progress.\r\n\r\nCorrect. As I said above, I'm not in a rush to get this merged, but I'm also not going to make it (significantly) more complicated.\r\n\r\n> doing this optional identity management outside of Bitcoin Core and using the keys similar to how we do I2P/Tor\r\n\r\nThis implies running the template provider outside of Bitcoin Core. As long as RPC and ZMQ are the only way for external tools to interact with Bitcoin Core, that approach adds too much overhead and delay. We're trying to push new block templates out as quickly as possible, preferable as soon as a new transaction enters the mempool that increases the total block template fees by enough to justify the bandwidth. See earlier discussion about this: https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587485219",
      "created_at" : "2024-02-05T16:21:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1927368536",
      "id" : 1927368536,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585y4U9Y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927368536/reactions"
      },
      "updated_at" : "2024-02-05T16:23:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927368536",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@josibake, I see your point even though I see things a bit differently. I guess the important takeaway here is that this PR is not a blocker for other stuff but a convenience of doing ser/deser in the class instead of in the caller. Thanks!",
      "created_at" : "2024-02-08T07:38:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1933508976",
      "id" : 1933508976,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII585zPwFw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1933508976/reactions"
      },
      "updated_at" : "2024-02-08T07:39:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1933508976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "(reviewing af25cfcbabe96283625f3a32f493940658a5d1e5)\r\n\r\nIf I can summarize the disagreement here, it seems like there are currently three ways to serialize `CKey` data:\r\n\r\n1. Call `CKey::GetPrivKey()` to save in in an openssl format and use `CKey::Load()` to load it.\r\n2. Call `EncodeSecret()` and `DecodeSecret()` and to store and load it as base58 strings.\r\n3. Call `CKey::IsCompressed()` to get the `fCompressed` bit and call `CKey::data()` or treat it as a span to get the raw bytes. Then call `CKey::Set()` to load the compression bit and key bytes.\r\n\r\nThis PR is adding a adding a fourth way:\r\n\r\n4. Adding `CKey::Serialize()` and `CKey::Unserialize()` methods to serialize the compressed bit and key data into a stream object, and also calling `CKey::Check()` method during deserialization. The original implementation of this did not include the compressed bit. But then it was changed to [add it](https://github.com/bitcoin/bitcoin/pull/29295#event-11598047343), before [dropping it again](https://github.com/bitcoin/bitcoin/pull/29295#event-11626222915), and then [adding it again](https://github.com/bitcoin/bitcoin/pull/29295#event-11670037331).\r\n\r\nJosibake is arguing that new serialization method is redundant, and might make it easier to make mistakes like leaking keys by not zeroing after freeing, storing keys without encryption when encryption should be used, storing the raw bytes without format information when key format should be recorded, and forgetting to check assumptions such as whether uncompressed keys are allowed.\r\n\r\nOn the other hand though, a lot of these problems already exist currently and the new method is not markedly worse than existing ones, and in some cases it may be better. For example if serializing with DataStream, a secure allocator will be used unlike with `EncodeSecret` and `std::string`.\r\n\r\nOverall I think I agree with Josie that adding this new `CKey` serialization method seems to make a confusing situation a little worse and doesn't seem to offer major benefits over `CKey::Set`. But I don't think the amount of harm would be great.\r\n\r\nI'd also note that this change would allow dropping CKey serialization code from #10102:\r\n\r\n<details><summary>Details</summary>\r\n<p>\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/56ef459b573461087fbe4f39d9b0a7108936335f/src/ipc/capnp/wallet.capnp#L141-L144\r\nhttps://github.com/bitcoin/bitcoin/blob/56ef459b573461087fbe4f39d9b0a7108936335f/src/ipc/capnp/wallet.cpp#L130-L140\r\n\r\n</p>\r\n</details>\r\n\r\nBut I'm not sure if this is a good thing. It seems reasonable to me that there maybe should be a little extra friction around serializing private keys, so they don't get serialized automatically without thinking about the best way to do it, and whether it is necessary.\r\n\r\n",
      "created_at" : "2024-02-26T20:08:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29295#issuecomment-1965161521",
      "id" : 1965161521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29295",
      "node_id" : "IC_kwDOABII5851Ifwx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1965161521/reactions"
      },
      "updated_at" : "2024-02-26T20:11:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1965161521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]

[
   {
      "author_association" : "NONE",
      "body" : "> When disabling the \"test-only\" assumptions in CheckBlockIndex, the check fails. This is problematic, because test-only code should not affect the behavior of the program in production.\n> \n> \n> \n> Current diff:\n> \n> \n> \n> ```diff\n> \n> diff --git a/src/validation.cpp b/src/validation.cpp\n> \n> index 8c583c586c..00d7ee3736 100644\n> \n> --- a/src/validation.cpp\n> \n> +++ b/src/validation.cpp\n> \n> @@ -4866,9 +4866,9 @@ void ChainstateManager::CheckBlockIndex()\n> \n>          unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n> \n>          assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n> \n>                 // For testing, allow transaction counts to be completely unset.\n> \n> -               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n> \n> +               //|| (pindex->nChainTx == 0 && pindex->nTx == 0)\n> \n>                 // For testing, allow this nChainTx to be unset if previous is also unset.\n> \n> -               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n> \n> +               //|| (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n> \n>                 // Transaction counts prior to snapshot are unknown.\n> \n>                 || pindex->IsAssumedValid());\n> \n>  \n> \n> ```\n> \n> \n> \n> Steps to reproduce the crash:\n> \n> \n> \n> ```\n> \n> $ ./src/qt/bitcoin-qt -datadir=/tmp -regtest\n> \n> > generatetodescriptor 1 raw(ff)\n> \n> ```\n> \n> \n> \n> Related to https://github.com/bitcoin/bitcoin/pull/28791 and https://github.com/bitcoin/bitcoin/pull/28562#discussion_r1350470707\n\nTo address the issue of failing checks when disabling \"test-only\" assumptions in `CheckBlockIndex`, you might consider the following steps:\n\n1. **Review Test-Only Code:**\n   - Examine the specific test-only code in the `CheckBlockIndex` and ensure it doesn't introduce unintended dependencies or affect production behavior.\n\n2. **Conditional Compilation:**\n   - If possible, use conditional compilation or preprocessor directives to isolate test-only code. This way, it's excluded from the production build.\n\n3. **Separate Test Code:**\n   - Consider moving the test-only code to a separate file or section within the codebase. This helps in maintaining a clear separation between production and testing logic.\n\n4. **Dependency Injection:**\n   - If the test-only code is interacting with external dependencies, use dependency injection or mocks during testing to isolate the behavior without affecting production.\n\n5. **Unit Testing:**\n   - Ensure comprehensive unit tests for the production code, including the areas covered by the test-only assumptions. This helps catch issues early and ensures that changes to test-only code don't impact production.\n\n6. **Documentation:**\n   - Clearly document the purpose and scope of test-only code to inform developers about its intended use and limitations.\n\n7. **Code Review:**\n   - When making changes related to test-only code, conduct thorough code reviews to catch any potential issues and ensure adherence to coding standards.",
      "created_at" : "2024-01-19T08:48:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1899994384",
      "id" : 1899994384,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xP50Q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1899994384/reactions"
      },
      "updated_at" : "2024-01-19T08:48:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1899994384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/155118385?v=4",
         "events_url" : "https://api.github.com/users/Olayiwolaxiii/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Olayiwolaxiii/followers",
         "following_url" : "https://api.github.com/users/Olayiwolaxiii/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Olayiwolaxiii/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Olayiwolaxiii",
         "id" : 155118385,
         "login" : "Olayiwolaxiii",
         "node_id" : "U_kgDOCT7rMQ",
         "organizations_url" : "https://api.github.com/users/Olayiwolaxiii/orgs",
         "received_events_url" : "https://api.github.com/users/Olayiwolaxiii/received_events",
         "repos_url" : "https://api.github.com/users/Olayiwolaxiii/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Olayiwolaxiii/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Olayiwolaxiii/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Olayiwolaxiii"
      }
   }
]

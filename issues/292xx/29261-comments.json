[
   {
      "author_association" : "NONE",
      "body" : "> When disabling the \"test-only\" assumptions in CheckBlockIndex, the check fails. This is problematic, because test-only code should not affect the behavior of the program in production.\n> \n> \n> \n> Current diff:\n> \n> \n> \n> ```diff\n> \n> diff --git a/src/validation.cpp b/src/validation.cpp\n> \n> index 8c583c586c..00d7ee3736 100644\n> \n> --- a/src/validation.cpp\n> \n> +++ b/src/validation.cpp\n> \n> @@ -4866,9 +4866,9 @@ void ChainstateManager::CheckBlockIndex()\n> \n>          unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n> \n>          assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n> \n>                 // For testing, allow transaction counts to be completely unset.\n> \n> -               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n> \n> +               //|| (pindex->nChainTx == 0 && pindex->nTx == 0)\n> \n>                 // For testing, allow this nChainTx to be unset if previous is also unset.\n> \n> -               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n> \n> +               //|| (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n> \n>                 // Transaction counts prior to snapshot are unknown.\n> \n>                 || pindex->IsAssumedValid());\n> \n>  \n> \n> ```\n> \n> \n> \n> Steps to reproduce the crash:\n> \n> \n> \n> ```\n> \n> $ ./src/qt/bitcoin-qt -datadir=/tmp -regtest\n> \n> > generatetodescriptor 1 raw(ff)\n> \n> ```\n> \n> \n> \n> Related to https://github.com/bitcoin/bitcoin/pull/28791 and https://github.com/bitcoin/bitcoin/pull/28562#discussion_r1350470707\n\nTo address the issue of failing checks when disabling \"test-only\" assumptions in `CheckBlockIndex`, you might consider the following steps:\n\n1. **Review Test-Only Code:**\n   - Examine the specific test-only code in the `CheckBlockIndex` and ensure it doesn't introduce unintended dependencies or affect production behavior.\n\n2. **Conditional Compilation:**\n   - If possible, use conditional compilation or preprocessor directives to isolate test-only code. This way, it's excluded from the production build.\n\n3. **Separate Test Code:**\n   - Consider moving the test-only code to a separate file or section within the codebase. This helps in maintaining a clear separation between production and testing logic.\n\n4. **Dependency Injection:**\n   - If the test-only code is interacting with external dependencies, use dependency injection or mocks during testing to isolate the behavior without affecting production.\n\n5. **Unit Testing:**\n   - Ensure comprehensive unit tests for the production code, including the areas covered by the test-only assumptions. This helps catch issues early and ensures that changes to test-only code don't impact production.\n\n6. **Documentation:**\n   - Clearly document the purpose and scope of test-only code to inform developers about its intended use and limitations.\n\n7. **Code Review:**\n   - When making changes related to test-only code, conduct thorough code reviews to catch any potential issues and ensure adherence to coding standards.",
      "created_at" : "2024-01-19T08:48:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1899994384",
      "id" : 1899994384,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xP50Q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1899994384/reactions"
      },
      "updated_at" : "2024-01-19T08:48:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1899994384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/155118385?v=4",
         "events_url" : "https://api.github.com/users/Olayiwolaxiii/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Olayiwolaxiii/followers",
         "following_url" : "https://api.github.com/users/Olayiwolaxiii/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Olayiwolaxiii/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Olayiwolaxiii",
         "id" : 155118385,
         "login" : "Olayiwolaxiii",
         "node_id" : "U_kgDOCT7rMQ",
         "organizations_url" : "https://api.github.com/users/Olayiwolaxiii/orgs",
         "received_events_url" : "https://api.github.com/users/Olayiwolaxiii/received_events",
         "repos_url" : "https://api.github.com/users/Olayiwolaxiii/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Olayiwolaxiii/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Olayiwolaxiii/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Olayiwolaxiii"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> `$ ./src/qt/bitcoin-qt -datadir=/tmp -regtest`\r\n\r\nDo we not consider regtest \"testing\"?\r\n\r\nISTM that only \"test mode\" (regtest) will fail the assertion with the lines removed.",
      "created_at" : "2024-01-22T19:58:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1904709745",
      "id" : 1904709745,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xh5Bx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1904709745/reactions"
      },
      "updated_at" : "2024-01-22T19:58:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1904709745",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Do we not consider regtest \"testing\"?\r\n\r\nThe comment is vague, but it's really referring to unit tests.\r\n\r\nWhen I suggested adding the two conditions allowing `pindex->nChainTx == 0` \"for testing\" in https://github.com/bitcoin/bitcoin/pull/27596#discussion_r1323226418, the reason was to avoid crashes in unit tests, because some unit tests skipped calling `ReceivedBlockTransactions` and therefore skipped setting a `nChainTx` value:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/651fb034d85eb5db561bfd24b74f7271417defa5/src/validation.cpp#L3613\r\n\r\nBut outside unit tests the condition `pindex->nChainTx == pindex->nTx + prev_chain_tx` should be true and the assert should succeed.\r\n\r\nSo there is unexpected behavior here if bitcoin-qt is crashing without these conditions, and maybe there is a real bug. Also this code could probably be improved by updating unit tests to set nChainTx correctly, so the two special case conditions in the assert allowing `pindex->nChainTx == 0` could be dropped.",
      "created_at" : "2024-01-22T20:45:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1904776805",
      "id" : 1904776805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xiJZl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1904776805/reactions"
      },
      "updated_at" : "2024-01-22T20:45:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1904776805",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> So there is unexpected behavior here if bitcoin-qt is crashing without these conditions\r\n\r\nThis is not specific to `bitcoin-qt`, or assumeutxo. For example, It also happens with `bitcoin-cli -regtest -generate 1` (after creating an empty wallet) on an empty datadir.\r\n\r\nI think the comment `// For testing, allow transaction counts to be completely unset.` is wrong. `CheckBlockIndex` traverses the entire block index tree, no matter if we have the block on disk or not. If we don't have it, `ReceivedBlockTransactions`  hasn't been called, and both `nTx` and `nChainTx` are 0.\r\n\r\nTherefore, the check `assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)`  cannot be applied to headers for which we never processed the block data, and this has nothing to do with AssumeUtxo or Testing.\r\n\r\nI'll open a PR with a fix tomorrow unless someone disagrees.",
      "created_at" : "2024-01-23T00:17:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1905064561",
      "id" : 1905064561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xjPpx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905064561/reactions"
      },
      "updated_at" : "2024-01-23T00:40:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905064561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Oops, sorry I missed that context so my explanation doesn't really describe what the checks are doing (although it does describe what they were intending to do). If the PR is just going to change the comments and delete the words \"For testing,\" that sounds good.",
      "created_at" : "2024-01-23T00:41:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1905087355",
      "id" : 1905087355,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xjVN7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905087355/reactions"
      },
      "updated_at" : "2024-01-23T00:41:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905087355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Other notes on improving this assert:\r\n\r\n- The final pindex->IsAssumedValid() check added in [#28791](https://github.com/bitcoin/bitcoin/pull/28791) seems a little overbroad. I think the condition `(pindex->nChainTx == pindex->nTx + prev_chain_tx)` should actually be true for all assumed-valid blocks except the first one and the last one, so that check could be tightened up\r\n- It might possible to add a test covering the assert failure that pindex->IsAssumedValid() from [#28791](https://github.com/bitcoin/bitcoin/pull/28791) fixes, since [#28791](https://github.com/bitcoin/bitcoin/pull/28791) didn't seem to include a test",
      "created_at" : "2024-01-23T01:16:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1905118176",
      "id" : 1905118176,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xjcvg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905118176/reactions"
      },
      "updated_at" : "2024-01-23T01:16:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905118176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > `$ ./src/qt/bitcoin-qt -datadir=/tmp -regtest`\r\n> \r\n> Do we not consider regtest \"testing\"?\r\n\r\nRegtest should have the same properties as `main` for the purposes here. It should be possible to reproduce on main as well, if you want to do the POW.",
      "created_at" : "2024-01-23T08:04:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1905488484",
      "id" : 1905488484,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xk3Jk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905488484/reactions"
      },
      "updated_at" : "2024-01-23T08:04:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905488484",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah I see now, thanks. The repro steps threw me off there. I did now also verify that it is hit on (a custom) signet (with `-checkblocks` set).",
      "created_at" : "2024-01-23T09:28:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1905642808",
      "id" : 1905642808,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xlc04",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905642808/reactions"
      },
      "updated_at" : "2024-01-23T09:28:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1905642808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> * The final pindex->IsAssumedValid() check added in [#28791](https://github.com/bitcoin/bitcoin/pull/28791) seems a little overbroad. I think the condition `(pindex->nChainTx == pindex->nTx + prev_chain_tx)` should actually be true for all assumed-valid blocks except the first one and the last one, so that check could be tightened up\r\n\r\nAfter trying this out, I think that this is not the case. The `BLOCK_ASSUMED_VALID` status is only removed when the block is connected to the chain and raised to `BLOCK_VALID_SCRIPTS`. However, `nTx` and `nChainTx` are updated from their fake to their actual values in `AcceptBlock` / `ReceivedBlockTransactions`, which happens before that. So during the period where we receive blocks for the background chain in some, possibly random, order, there will be a mix of blocks with updated `nTx` and fake `nTx` ones, so that the condition could fail everywhere in the range of assumed-valid blocks.\r\n\r\n> * It might possible to add a test covering the assert failure that pindex->IsAssumedValid() from [#28791](https://github.com/bitcoin/bitcoin/pull/28791) fixes, since [#28791](https://github.com/bitcoin/bitcoin/pull/28791) didn't seem to include a test\r\n\r\nFor that, we'd need a chain where some blocks (at least the snapshot block, possibly also others) have additional transactions.\r\nIt seems not very clean to update the regtest chainparams everytime we want to test a snapshot with a slightly different chain.\r\nNot sure if this has been discussed before, but maybe it could make sense to add a RPC that allows us to register an entry to `m_assumeutxo_data` dynamically (just for regtest of course).\r\n\r\n",
      "created_at" : "2024-01-23T22:59:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1907059722",
      "id" : 1907059722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xq2wK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1907059722/reactions"
      },
      "updated_at" : "2024-01-23T22:59:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1907059722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "See #29299 for a fix (only changing the doc and moving the check into a proper section).",
      "created_at" : "2024-01-23T23:31:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1907088890",
      "id" : 1907088890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xq936",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1907088890/reactions"
      },
      "updated_at" : "2024-01-23T23:31:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1907088890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> So during the period where we receive blocks for the background chain in some, possibly random, order, there will be a mix of blocks with updated `nTx` and fake `nTx` ones, so that the condition could fail everywhere in the range of assumed-valid blocks.\r\n\r\nThanks for figuring this out and trying this. ~Trying to put this all together it seems like these are the cases:~\r\n\r\n~1. Case where `IsValid()` is true. Then `nChainTx` must be prev `nChainTx` + `nTx`.~\r\n~2. Case where `nTx` is 0. Then `nChainTx` must be 0 because the block doesn't have transactions yet.~\r\n~3. Case where prev `nChainTx` is 0. Then `nChainTx` must be 0 because some ancestor block doesn't have transactions yet.~\r\n~4. Case where `IsAssumedValid()` is true. Probably the only meaningful thing to check in this case is that `nChainTx` is greater than prev `nChainTx`. This should always be true except if prev `IsValid()` is true and this is not the snapshot block. In that case, there will be a discontinuity and `nChainTx` will decrease because it is a bogus value following a real value.~\r\n\r\nEDIT: There are a number of mistakes in the suggestion above. It would be good to check for increasing nChainTx values, but the breakdown above is not correct. The following checks do seem to work, though:\r\n\r\n```c++\r\nif (!pindex->pprev) {\r\n    // If there's no previous block, nChainTx should be set to the number\r\n    // of transactions in this block.\r\n    assert(pindex->nChainTx == pindex->nTx);\r\n} else if (pindex->IsAssumedValid()) {\r\n    // If block is assumed valid, nChainTx could be faked, but should at\r\n    // least be increasing between blocks. The only exception is\r\n    // assumed-valid blocks that are not the snapshot block and don't\r\n    // have transactions, directly following blocks that do have\r\n    // transactions. The faked nChainTx values in these will probably be\r\n    // less than the non-faked values in the previous blocks.\r\n    assert(pindex->nChainTx > pindex->pprev->nChainTx || (!pindex->IsValid() && pindex->pprev->IsValid() && pindex != GetSnapshotBaseBlock()));\r\n} else if (pindex->nTx == 0 || pindex->pprev->nChainTx == 0) {\r\n    // If block is missing transactions, or any parent block is,\r\n    // nChainTx should be unset.\r\n    assert(pindex->nChainTx == 0);\r\n} else {\r\n    // For normal blocks, nChainTx should be set to the sum of\r\n    // transactions in this and previous blocks.\r\n    assert(pindex->nChainTx == pindex->pprev->nChainTx + pindex->nTx);\r\n}\r\n```",
      "created_at" : "2024-01-24T16:42:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1908513362",
      "id" : 1908513362,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585xwZpS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908513362/reactions"
      },
      "updated_at" : "2024-01-24T22:05:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908513362",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> The following checks do seem to work, though:\r\n\r\nPull requests welcome",
      "created_at" : "2024-01-30T12:26:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1916736479",
      "id" : 1916736479,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585yPxPf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916736479/reactions"
      },
      "updated_at" : "2024-01-30T12:26:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916736479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Let me know if I should reopen this issue?",
      "created_at" : "2024-01-30T14:29:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1916993905",
      "id" : 1916993905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585yQwFx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916993905/reactions"
      },
      "updated_at" : "2024-01-30T14:29:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916993905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Let me know if I should reopen this issue?\r\n\r\nIt's good to close. Extending the assert with https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1908513362 would only be a marginal improvement. I think a better long term fix would be to get rid of fake `nTx` and `nChainTx` values as described in https://github.com/bitcoin/bitcoin/issues/29328#issuecomment-1914922108 \"In the long run...\".\r\n",
      "created_at" : "2024-01-30T17:22:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1917533420",
      "id" : 1917533420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585ySzzs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1917533420/reactions"
      },
      "updated_at" : "2024-01-30T17:22:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1917533420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> // If block is assumed valid, nChainTx could be faked, but should at least be increasing between blocks.\r\n\r\nI'm not  completely convinced this is always true - I might well be wrong (didn't test it), but imagine the following scenario during the background sync:\r\nIn the beginning, all relevant blocks are assumed valid and have fake values for `nTx` and `nChainTx`.\r\nThen we receive an out-of order block of height `h` (that doesn't connect yet) -> we set `nTx` and `nChainTx`.\r\n-> Everything is ok, even though nChainTx may decrease, the checks succeeds because the block of height `h+1` may have a small nChainTx, but `IsValid()` is false.\r\n\r\nBut next, imagine we receive the block at height `h-1` (that doesn't connect to the tip either) with a large tx count. We'd update `nChainTx` for that block, but I don't see how we would then also update the block at height `h` in `ReceivedBlockTransactions` (because it won't be in `m_blocks_unlinked` if it has data). As a result the assert fail because we now have a decreasing `nChainTx` between two valid blocks.",
      "created_at" : "2024-01-30T18:04:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1917606474",
      "id" : 1917606474,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585yTFpK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1917606474/reactions"
      },
      "updated_at" : "2024-01-30T18:08:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1917606474",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1917606474\r\n\r\n> Then we receive an out-of order block of height h (that doesn't connect yet) -> we set nTx and nChainTx.\r\n\r\nI was going to reply that in this case we should only set `nTx` not `nChainTx`, but this does not appear to be true. The code that is trying to check for this case:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/cad2df24b396be403f13f372ec48ea14a90d7f06/src/validation.cpp#L3604-L3605\r\n\r\njust assumes that if the previous block's nChainTx is nonzero then it is valid. So it seems you are right and in this case nChainTx will be assigned a nonsense value, and keep that value until the node is restarted and nChainTx is recomputed?\r\n\r\nSo it seems like there is a larger bug here, and the comment there equating the condition `pindexNew->pprev->HaveNumChainTxs()` with \"all parents are BLOCK_VALID_TRANSACTIONS\" is not correct in the presence of fake values.",
      "created_at" : "2024-01-30T18:24:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1917639308",
      "id" : 1917639308,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585yTNqM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1917639308/reactions"
      },
      "updated_at" : "2024-01-30T18:24:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1917639308",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> So it seems like there is a larger bug here\r\n\r\nYes, that could be the case. Since I don't see how this can correct without restarting after the blocks are connected to the chain and no longer assumed valid, I wonder if that could make the existing check https://github.com/bitcoin/bitcoin/blob/cad2df24b396be403f13f372ec48ea14a90d7f06/src/validation.cpp#L4949 fail.\r\nSince it is very slow to sync with `-checkblockindex=1` even on signet (though commit https://github.com/bitcoin/bitcoin/pull/28339/commits/87d6155b91797d795433c9c8bca5da20c74f810c from #28339 could help with that)  there is a good chance that no one has ever tried it.  Alternatively, a functional test could be written.",
      "created_at" : "2024-01-30T22:09:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1917980494",
      "id" : 1917980494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585yUg9O",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1917980494/reactions"
      },
      "updated_at" : "2024-01-30T22:10:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1917980494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> test\r\n\r\nGood idea.\r\n\r\nOn top of https://github.com/bitcoin/bitcoin/pull/29354 , the following diff should crash the node:\r\n\r\n```diff\r\ndiff --git a/test/functional/feature_assumeutxo.py b/test/functional/feature_assumeutxo.py\r\nindex 528680f2ca..e9d74ea132 100755\r\n--- a/test/functional/feature_assumeutxo.py\r\n+++ b/test/functional/feature_assumeutxo.py\r\n@@ -165,6 +165,14 @@ class AssumeutxoTest(BitcoinTestFramework):\r\n                 self.mini_wallet.send_self_transfer(from_node=n0)\r\n             self.generate(n0, nblocks=1, sync_fun=self.no_op)\r\n             newblock = n0.getblock(n0.getbestblockhash(), 0)\r\n+            if i == 4:\r\n+                # Create a stale block\r\n+                temp_invalid = n0.getbestblockhash()\r\n+                n0.invalidateblock(temp_invalid)\r\n+                stale_hash = self.generateblock(n0, output=\"raw(aaaa)\", transactions=[], sync_fun=self.no_op)[\"hash\"]\r\n+                n0.invalidateblock(stale_hash)\r\n+                n0.reconsiderblock(temp_invalid)\r\n+                stale_block = n0.getblock(stale_hash, 0)\r\n \r\n             # make n1 aware of the new header, but don't give it the block.\r\n             n1.submitheader(newblock)\r\n@@ -215,6 +223,12 @@ class AssumeutxoTest(BitcoinTestFramework):\r\n \r\n         assert_equal(n1.getblockchaininfo()[\"blocks\"], SNAPSHOT_BASE_HEIGHT)\r\n \r\n+        self.log.info(\"Sumbit a stale block\")\r\n+        n1.submitblock(stale_block)\r\n+        n1.getchaintips()\r\n+        n1.getblock(stale_hash)\r\n+        #assert False\r\n+\r\n         self.log.info(\"Submit a spending transaction for a snapshot chainstate coin to the mempool\")\r\n         # spend the coinbase output of the first block that is not available on node1\r\n         spend_coin_blockhash = n1.getblockhash(START_HEIGHT + 1)\r\n",
      "created_at" : "2024-01-31T11:46:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1918947945",
      "id" : 1918947945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585yYNJp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1918947945/reactions"
      },
      "updated_at" : "2024-01-31T11:46:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1918947945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1918947945\r\n\r\n> On top of #29354 , the following diff should crash the node:\r\n\r\nThis is a great test, thank you! I added it to #29370 and it uncovered a new bug that PR introduced to the CheckBlockIndex code (forgetting to reset pindexFirstNeverProcessed after moving upwards from the snapshot node).",
      "created_at" : "2024-02-07T19:16:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1932707335",
      "id" : 1932707335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585zMsYH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1932707335/reactions"
      },
      "updated_at" : "2024-02-07T19:16:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1932707335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1917639308\r\n\r\n> So it seems like there is a larger bug here\r\n\r\nLooking into this more, I think the bug where `pprev->HaveNumChainTxs` can return true on this line even when \"all parents are BLOCK_VALID_TRANSACTIONS\" is false would be pretty hard to trigger and the consequences would not be too bad.\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/cad2df24b396be403f13f372ec48ea14a90d7f06/src/validation.cpp#L3604-L3605\r\n\r\nThe main consequence would be blocks winding up with nonsense nChainTx values based on sums with previous blocks fake values, which could trigger the CheckBlockIndex failure in marco's test https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1918947945.\r\n\r\nBut other than that, it shouldn't matter because fork blocks before the snapshot block and ahead of the background chain tip will ignored by TryAddBlockIndexCandidate, so it is harmless if that is incorrectly called on them. And non-fork blocks before the snapshot block and ahead of the background chain tip will just get added to `setBlockIndexCandidates` instead of `m_blocks_unlinked`, which is fine because `FindMostWorkChain` should move them back to `m_blocks_unlinked`. As long as this happens the blocks should eventually be validated and the `nChainTx` values should get corrected.\r\n\r\nSo the \"or all parents are BLOCK_VALID_TRANSACTIONS\" comment is incorrect, but it shouldn't matter too much. #29370 should make this all more straightforward though.",
      "created_at" : "2024-02-07T20:29:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1932814360",
      "id" : 1932814360,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29261",
      "node_id" : "IC_kwDOABII585zNGgY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1932814360/reactions"
      },
      "updated_at" : "2024-02-07T20:30:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1932814360",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]

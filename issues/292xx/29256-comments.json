[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29256).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [ajtowns](https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1894630511) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29242](https://github.com/bitcoin/bitcoin/pull/29242) (Mempool util: Add RBF diagram checks for single chunks against clusters of size 2 by instagibbs)\n* [#29231](https://github.com/bitcoin/bitcoin/pull/29231) (logging: Update to new logging API by ajtowns)\n* [#29136](https://github.com/bitcoin/bitcoin/pull/29136) (wallet: `addhdkey` RPC to add just keys to wallets via new `void(KEY)` descriptor by achow101)\n* [#28984](https://github.com/bitcoin/bitcoin/pull/28984) (Cluster size 2 package rbf by instagibbs)\n* [#28983](https://github.com/bitcoin/bitcoin/pull/28983) (Stratum v2 Template Provider (take 2) by Sjors)\n* [#28960](https://github.com/bitcoin/bitcoin/pull/28960) (kernel: Remove dependency on CScheduler by TheCharlatan)\n* [#28834](https://github.com/bitcoin/bitcoin/pull/28834) (net: attempts to connect to all resolved addresses when connecting to a node by sr-gi)\n* [#28830](https://github.com/bitcoin/bitcoin/pull/28830) ([refactor] Check CTxMemPool options in ctor by TheCharlatan)\n* [#28333](https://github.com/bitcoin/bitcoin/pull/28333) (wallet: Construct ScriptPubKeyMans with all data rather than loaded progressively by achow101)\n* [#27826](https://github.com/bitcoin/bitcoin/pull/27826) (validation: log which peer sent us a header by Sjors)\n* [#27277](https://github.com/bitcoin/bitcoin/pull/27277) (Move log messages: tx enqueue to mempool, allocation to blockstorage by Sjors)\n* [#27039](https://github.com/bitcoin/bitcoin/pull/27039) (blockstorage: do not flush block to disk if it is already there by pinheadmz)\n* [#26008](https://github.com/bitcoin/bitcoin/pull/26008) (wallet: cache IsMine scriptPubKeys to improve performance of descriptor wallets by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-01-16T22:09:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1894600378",
      "id" : 1894600378,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29256",
      "node_id" : "IC_kwDOABII585w7U66",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894600378/reactions"
      },
      "updated_at" : "2024-01-18T15:41:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894600378",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept NACK from me, this seems much uglier and trickier to work with. I've already written [in depth](https://github.com/bitcoin/bitcoin/pull/28318#issuecomment-1702318968) about why the current approach makes sense, so I'll be brief here.\r\n\r\n> Make them always accept log categories to make it possible to only log messages from a particular component.\r\n\r\nBeing able to avoid logging critical messages is adding a bug, not a feature.\r\n\r\n> Make them less verbose by not requiring BCLog category constants to be specified in individual log prints\r\n\r\n\"+841 -626\" and adding a dummy parameter to most calls does not make things less verbose, and it's also much harder to search for net related logging when the individual log statements just say `m_log` rather than `BCLog::NET`.\r\n\r\n> Make them compatible with wallet logging, which includes the wallet name in log messages\r\n\r\nThe only thing needed here is renaming from `Printf` to `Info`...",
      "created_at" : "2024-01-16T22:34:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1894630511",
      "id" : 1894630511,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29256",
      "node_id" : "IC_kwDOABII585w7cRv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894630511/reactions"
      },
      "updated_at" : "2024-01-16T22:34:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894630511",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-01-16T23:59:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1894708150",
      "id" : 1894708150,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29256",
      "node_id" : "IC_kwDOABII585w7vO2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894708150/reactions"
      },
      "updated_at" : "2024-01-16T23:59:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894708150",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi AJ, this is a draft, and there will be some more changes which may address your concerns.\r\n\r\n> > Make them always accept log categories to make it possible to only log messages from a particular component.\r\n>\r\n> Being able to avoid logging critical messages is adding a bug, not a feature.\r\n\r\nAgree, but the idea here is not to discard log messages, the idea just is to attach meaningful metadata to log messages so they can be filtered by component.\r\n\r\n> > Make them less verbose by not requiring BCLog category constants to be specified in individual log prints\r\n>\r\n> \"+841 -626\" and adding a dummy parameter to most calls does not make things less verbose, and it's also much harder to search for net related logging when the individual log statements just say `m_log` rather than `BCLog::NET`.\r\n\r\nI can probably make the description clearer, but the idea here is that this will make the code less noisy:\r\n\r\n```diff\r\n-LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"getsockname failed\\n\");\r\n+LogWarning(log, \"getsockname failed\\n\");\r\n```\r\n\r\nIt is true this sacrifices ability to grep by category constants in the source code, and maybe in your judgement that is an unacceptable cost? But in my opinion, if we ever using same category constants in disparate parts of source code, or different category constants in the same part of the source code, it means source code is badly organized and we should fix that instead of resorting to a coping mechanism of searching for constants instead of searching by source path. In my experience, I've haven't used logging frameworks that have encouraged category constants to be scattered and mixed like this, and I don't think it is a good idea.\r\n\r\nThe \"+841 -626\" refactoring is definitely :hankey:-y and I plan to drop it from this PR. The change to the log macros is meant to facilitate that refactoring, not the other way around. I do think we should stop relying on the global logging instance for libbitcoinkernel code, but probably can keep using it elsewhere.\r\n\r\n> > Make them compatible with wallet logging, which includes the wallet name in log messages\r\n>\r\n> The only thing needed here is renaming from `Printf` to `Info`...\r\n\r\nProbably something is lost in communication here, but the idea is to let wallet code use same LogDebug(), LogTrace(), LogInfo(), LogWarning(), LogError() macros other code uses. It just adds a little formatting hook so the wallet name is automatically included when the log source is the wallet. This way full functionality of #29256 is available to the wallet and we can drop WalletLogPrintf and not have dedicated wallet logging functions.\r\n\r\n",
      "created_at" : "2024-01-17T04:41:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1894928988",
      "id" : 1894928988,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29256",
      "node_id" : "IC_kwDOABII585w8lJc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894928988/reactions"
      },
      "updated_at" : "2024-01-17T04:42:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1894928988",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20586125687</sub>",
      "created_at" : "2024-01-17T19:15:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1896474430",
      "id" : 1896474430,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29256",
      "node_id" : "IC_kwDOABII585xCec-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1896474430/reactions"
      },
      "updated_at" : "2024-01-17T19:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1896474430",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Agree, but the idea here is not to discard log messages, the idea just is to attach meaningful metadata to log messages so they can be filtered by component.\r\n\r\nFiltering is discarding.\r\n\r\nIf you just want to *find* log messages, that what's grep is for, and if you want to make it more fine-grained than \"hey this is an important log message/warning/error\", that's what `-logsourcelocations` is for.\r\n\r\nIf it's any help, I think it's better to think of the sections as not related to which section of the code they appear in so much (again, that's what `-logsourcelocations` is for), but as a subset of the \"debug\" part, in that they let you filter/discard various parts of the full debug log that you would get with `-debug=1`.\r\n \r\n> ```diff\r\n> -LogPrintLevel(BCLog::NET, BCLog::Level::Warning, \"getsockname failed\\n\");\r\n> +LogWarning(log, \"getsockname failed\\n\");\r\n> ```\r\n\r\nThe current code there is noisy because it uses `LogPrintLevel`. The change you're actually making is:\r\n\r\n```diff\r\n-LogWarning(\"getsockname failed\\n\");\r\n+LogWarning(log, \"getsockname failed\\n\");\r\n```\r\n\r\nwhich is adding characters, without adding any information to the reader.\r\n \r\n> It is true this sacrifices ability to grep by category constants in the source code, and maybe in your judgement that is an unacceptable cost?\r\n\r\nI think `LogDebug(BCLog::NET, \"oh no, it all went wrong\\n\")` is better than `LogDebug(m_log, \"oh no, it all went wrong)`. All the characters in the former are doing something useful; `m_log` in the latter isn't (if it weren't for macro magic, we'd write `m_log.Debug(\"...\")` instead, which would be okay at least). I don't think moving the category away from the line of code it's affecting is very useful; and if you want to group all the logs from an individual file together (the way putting `m_log{BCLog::NET}` at the top of the file/class does), then, again, that's what logsourcelocations is for...\r\n\r\n> But in my opinion, if we ever using same category constants in disparate parts of source code, or different category constants in the same part of the source code, it means source code is badly organized and we should fix that instead of resorting to a coping mechanism of searching for constants instead of searching by source path.\r\n\r\nThat's something that already happens: `BCLog::NET` is in timedata and headersync and banman and net and net_processing; `BCLog::VALIDATION` is in validation and validationinterface and flatfile (thought there was a pr to fix that one) and signet; `BCLog::MEMPOOL` is in txmempool, validation and net_processing. It doesn't mean the source code is badly organised, it means different parts of the source are generating related log messages.\r\n\r\n> In my experience, I've haven't used logging frameworks that have encouraged category constants to be scattered and mixed like this, and I don't think it is a good idea.\r\n\r\nI don't think there is anything here \"encouraging\" these categories to be scattered or mixed; most of them are specific to a small set of related files: TOR:torcontrol, HTTP:httpserver, ZMQ:zmq/*, WALLETDB:wallet/*, ESTIMATEFEE:policy/fees.cpp, SELECTCOINS:wallet/coinselection, REINDEX:validation, CMPCTBLOCK:blockencodings, RAND:random.cpp, etc.\r\n\r\nAnd you obviously have worked with code designed this way: that's how `LogPrint` has worked in this codebase since it was implemented in #3009.\r\n\r\n> Probably something is lost in communication here, but the idea is to let wallet code use same LogDebug(), LogTrace(), LogInfo(), LogWarning(), LogError() macros other code uses.\r\n\r\nUpdating `TraceSqlCallback` to call `LogTrace` rather than `LogPrintf` would be an improvement as those messages would get categorised properly; but otherwise this seems like massive overkill just to avoid writing `\"[%s] ...\", walletname, ...`.\r\n\r\n> It just adds a little formatting hook so the wallet name is automatically included when the log source is the wallet. This way full functionality of #29256 is available to the wallet and we can drop WalletLogPrintf and not have dedicated wallet logging functions.\r\n\r\nA +190 -109 diff because you don't like a one-line wrapper function seems crazy to me.\r\n\r\nDo you have some reason to think there's large amounts of additional wallet debug logs that would be introduced if it didn't involve writing `[%s], walletname` or are there a bunch of the current unconditional `WalletLogPrintf` calls that should be silenced and only available when debugging is enabled?",
      "created_at" : "2024-01-19T06:12:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29256#issuecomment-1899825975",
      "id" : 1899825975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29256",
      "node_id" : "IC_kwDOABII585xPQs3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1899825975/reactions"
      },
      "updated_at" : "2024-01-19T06:12:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1899825975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   }
]

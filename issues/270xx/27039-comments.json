[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/27039).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1306329978), [turkycat](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1386645395) |\n| Approach ACK | [stickies-v](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1289406384) |\n| Stale ACK | [LarryRuane](https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1499452625), [pablomartin4btc](https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1531882383), [mzumsande](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1698120546), [furszy](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1929732392) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29231](https://github.com/bitcoin/bitcoin/pull/29231) (logging: Update to new logging API by ajtowns)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-02-03T18:50:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1416266573",
      "id" : 1416266573,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585UaoNN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1416266573/reactions"
      },
      "updated_at" : "2024-03-12T14:10:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1416266573",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096159709"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096159709"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\r\n```",
      "commit_id" : "a8db898add1d1891b00a1e8503b93d15b24a69b9",
      "created_at" : "2023-02-03T18:54:30Z",
      "diff_hunk" : "@@ -68,12 +73,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat');",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096159709",
      "id" : 1096159709,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BVhHd",
      "original_commit_id" : "7a2e5cdc7ff6bd39f925f17b6582ad46f7e4475b",
      "original_line" : 89,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : null,
      "pull_request_review_id" : 1283552030,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096159709/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-03T18:54:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096159709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096165964"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096165964"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks! fixed.",
      "commit_id" : "a8db898add1d1891b00a1e8503b93d15b24a69b9",
      "created_at" : "2023-02-03T18:59:31Z",
      "diff_hunk" : "@@ -68,12 +73,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat');",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096165964",
      "id" : 1096165964,
      "in_reply_to_id" : 1096159709,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BVipM",
      "original_commit_id" : "7a2e5cdc7ff6bd39f925f17b6582ad46f7e4475b",
      "original_line" : 89,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : null,
      "pull_request_review_id" : 1283558671,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096165964/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-03T18:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096165964",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096269282"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096269282"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Instead of stopping the node and right after starting it again, you could use `self.restart_node`.",
      "commit_id" : "a8db898add1d1891b00a1e8503b93d15b24a69b9",
      "created_at" : "2023-02-03T20:45:47Z",
      "diff_hunk" : "@@ -19,22 +19,27 @@\n class ReindexTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 1\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\"]\n+        ]\n \n     def reindex(self, justchainstate=False):\n         self.generatetoaddress(self.nodes[0], 3, self.nodes[0].get_deterministic_priv_key().address)\n         blockcount = self.nodes[0].getblockcount()\n-        self.stop_nodes()\n-        extra_args = [[\"-reindex-chainstate\" if justchainstate else \"-reindex\"]]\n-        self.start_nodes(extra_args)\n+        self.stop_node(0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096269282",
      "id" : 1096269282,
      "line" : 31,
      "node_id" : "PRRC_kwDOABII585BV73i",
      "original_commit_id" : "a8db898add1d1891b00a1e8503b93d15b24a69b9",
      "original_line" : 31,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : 17,
      "pull_request_review_id" : 1283698111,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096269282/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-03T20:45:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096269282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096290459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096290459"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ah thanks, fixed. also added an explanation of the test to the comments at the top",
      "commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "created_at" : "2023-02-03T21:15:21Z",
      "diff_hunk" : "@@ -19,22 +19,27 @@\n class ReindexTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 1\n+        self.num_nodes = 2\n+        self.extra_args = [\n+            [],\n+            [\"-fastprune\"]\n+        ]\n \n     def reindex(self, justchainstate=False):\n         self.generatetoaddress(self.nodes[0], 3, self.nodes[0].get_deterministic_priv_key().address)\n         blockcount = self.nodes[0].getblockcount()\n-        self.stop_nodes()\n-        extra_args = [[\"-reindex-chainstate\" if justchainstate else \"-reindex\"]]\n-        self.start_nodes(extra_args)\n+        self.stop_node(0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096290459",
      "id" : 1096290459,
      "in_reply_to_id" : 1096269282,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BWBCb",
      "original_commit_id" : "a8db898add1d1891b00a1e8503b93d15b24a69b9",
      "original_line" : 31,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : null,
      "pull_request_review_id" : 1283729146,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096290459/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-03T21:15:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096290459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096394295"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096394295"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Verified:\r\n```\r\n$ ls -l /tmp/btest/node1/regtest/blocks/blk*.dat\r\n-rw------- 1 larry larry 65400 Feb  3 16:58 /tmp/btest/node1/regtest/blocks/blk00000.dat\r\n-rw------- 1 larry larry 16384 Feb  3 16:58 /tmp/btest/node1/regtest/blocks/blk00001.dat\r\n```",
      "commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "created_at" : "2023-02-04T00:03:24Z",
      "diff_hunk" : "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096394295",
      "id" : 1096394295,
      "line" : 84,
      "node_id" : "PRRC_kwDOABII585BWaY3",
      "original_commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "original_line" : 84,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : 54,
      "pull_request_review_id" : 1283917779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096394295/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-04T00:30:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096394295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096394699"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096394699"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Verified:\r\n```\r\n$ ls -l /tmp/btest/node1/regtest/blocks/blk*.dat\r\n-r--r--r-- 1 larry larry 65400 Feb  3 16:58 /tmp/btest/node1/regtest/blocks/blk00000.dat\r\n-rw------- 1 larry larry 16384 Feb  3 16:58 /tmp/btest/node1/regtest/blocks/blk00001.dat\r\n```",
      "commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "created_at" : "2023-02-04T00:04:17Z",
      "diff_hunk" : "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\n+        os.chmod(path, 0o444)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096394699",
      "id" : 1096394699,
      "line" : 89,
      "node_id" : "PRRC_kwDOABII585BWafL",
      "original_commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "original_line" : 89,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : 59,
      "pull_request_review_id" : 1283917779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096394699/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-04T00:30:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096394699",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096397334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096397334"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Verified that without the PR, the node doesn't start, and we see this in `debug.log`:\r\n```\r\n2023-02-04T00:05:32.219184Z [loadblk] [node/blockstorage.cpp:865] [ThreadImport] Reindexing block file blk00001.dat...\r\n2023-02-04T00:05:32.224307Z [loadblk] [flatfile.cpp:44] [Open] Unable to open file /tmp/btest/node1/regtest/blocks/blk00000.dat\r\n2023-02-04T00:05:32.224320Z [loadblk] [util/system.h:50] [error] ERROR: Flush: failed to open file 0\r\n2023-02-04T00:05:32.224334Z [loadblk] [shutdown.cpp:26] [AbortNode] *** Flushing block file to disk failed. This is likely the result of an I/O error.\r\n```\r\nNothing the PR needs to address, but just FYI, the first message may look confusing; it mentions `blk00001.dat` just before it attempts to write the previous file, `blk00001.dat`, which is where it runs into the write failure. Notice that this write is what the PR prevents because it's unnecessary. This is a nice way to test that the write happens without the PR, and doesn't happen with the PR.",
      "commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "created_at" : "2023-02-04T00:10:39Z",
      "diff_hunk" : "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\n+        os.chmod(path, 0o444)\n+\n+        # restart and reindex the node with the read-only block file\n+        self.start_node(1, [\"-reindex\", \"-fastprune\"])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096397334",
      "id" : 1096397334,
      "line" : 92,
      "node_id" : "PRRC_kwDOABII585BWbIW",
      "original_commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "original_line" : 92,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : 62,
      "pull_request_review_id" : 1283917779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096397334/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-04T00:30:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096397334",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096403631"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096403631"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "There are many `Flush` log lines for unrelated things (like the ChainState), so consider making that string more specific. Maybe:\r\n```\r\n2023-02-04T00:15:05.877123Z [shutoff] [logging/timer.h:57] [Log] [bench] FlushStateToDisk: write block and undo data to disk completed (6.62ms)\r\n```\r\nSimilarly, maybe \"Error\" is too general? It does work, but I'd be afraid that something unrelated might log \"Error\" in the future and break this test. Maybe look for one of the error strings in my comment above?",
      "commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "created_at" : "2023-02-04T00:24:01Z",
      "diff_hunk" : "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\n+        os.chmod(path, 0o444)\n+\n+        # restart and reindex the node with the read-only block file\n+        self.start_node(1, [\"-reindex\", \"-fastprune\"])\n+        assert_equal(self.nodes[1].getblockcount(), 312)\n+\n+        # shut down this node, triggering disk flushes, but not to the read-only file\n+        with self.nodes[1].assert_debug_log(expected_msgs=['Flush'], unexpected_msgs=['Error']):\n+            self.stop_node(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096403631",
      "id" : 1096403631,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII585BWcqv",
      "original_commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "original_line" : 97,
      "original_position" : 67,
      "original_start_line" : 96,
      "path" : "test/functional/feature_reindex.py",
      "position" : 67,
      "pull_request_review_id" : 1283917779,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096403631/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 96,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-04T00:30:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096403631",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096529154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096529154"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "good call, I was being too general, updated. thanks!",
      "commit_id" : "386faaf76ea0edb2150725c5bdb69d234a2f2607",
      "created_at" : "2023-02-04T12:14:47Z",
      "diff_hunk" : "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\n+        self.stop_node(1)\n+\n+        # make the first block file read-only\n+        path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\n+        os.chmod(path, 0o444)\n+\n+        # restart and reindex the node with the read-only block file\n+        self.start_node(1, [\"-reindex\", \"-fastprune\"])\n+        assert_equal(self.nodes[1].getblockcount(), 312)\n+\n+        # shut down this node, triggering disk flushes, but not to the read-only file\n+        with self.nodes[1].assert_debug_log(expected_msgs=['Flush'], unexpected_msgs=['Error']):\n+            self.stop_node(1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1096529154",
      "id" : 1096529154,
      "in_reply_to_id" : 1096403631,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BW7UC",
      "original_commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "original_line" : 97,
      "original_position" : 67,
      "original_start_line" : 96,
      "path" : "test/functional/feature_reindex.py",
      "position" : null,
      "pull_request_review_id" : 1284062599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096529154/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-04T12:14:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1096529154",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1099741914"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1099741914"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If you need to retouch, maybe expand this comment to explain why two nodes are needed.",
      "commit_id" : "386faaf76ea0edb2150725c5bdb69d234a2f2607",
      "created_at" : "2023-02-08T07:15:46Z",
      "diff_hunk" : "@@ -8,6 +8,7 @@\n - Stop the node and restart it with -reindex. Verify that the node has reindexed up to block 3.\n - Stop the node and restart it with -reindex-chainstate. Verify that the node has reindexed up to block 3.\n - Verify that out-of-order blocks are correctly processed, see LoadExternalBlockFile()\n+- Start a second node, generate blocks, then restart with -reindex after setting blk files to read-only",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1099741914",
      "id" : 1099741914,
      "line" : 11,
      "node_id" : "PRRC_kwDOABII585BjLra",
      "original_commit_id" : "386faaf76ea0edb2150725c5bdb69d234a2f2607",
      "original_line" : 11,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : 4,
      "pull_request_review_id" : 1288594338,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1099741914/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-08T07:16:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1099741914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100332583"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100332583"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think I added a second node to the test so I could start a clean chain using smaller `blk` files (`-fastprune`) without bugging the existing tests that switch a few options on and off throughout.",
      "commit_id" : "386faaf76ea0edb2150725c5bdb69d234a2f2607",
      "created_at" : "2023-02-08T15:46:40Z",
      "diff_hunk" : "@@ -8,6 +8,7 @@\n - Stop the node and restart it with -reindex. Verify that the node has reindexed up to block 3.\n - Stop the node and restart it with -reindex-chainstate. Verify that the node has reindexed up to block 3.\n - Verify that out-of-order blocks are correctly processed, see LoadExternalBlockFile()\n+- Start a second node, generate blocks, then restart with -reindex after setting blk files to read-only",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100332583",
      "id" : 1100332583,
      "in_reply_to_id" : 1099741914,
      "line" : 11,
      "node_id" : "PRRC_kwDOABII585Blb4n",
      "original_commit_id" : "386faaf76ea0edb2150725c5bdb69d234a2f2607",
      "original_line" : 11,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : 4,
      "pull_request_review_id" : 1289470489,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100332583/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-08T15:46:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100332583",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100517673"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100517673"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "To ensure it, I think you could check if both files exist:\r\n```diff\r\ndiff --git a/test/functional/feature_reindex.py b/test/functional/feature_reindex.py\r\nindex c68773e06..a3c9562f1 100755\r\n--- a/test/functional/feature_reindex.py\r\n+++ b/test/functional/feature_reindex.py\r\n@@ -84,6 +84,9 @@ class ReindexTest(BitcoinTestFramework):\r\n         self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\r\n         self.stop_node(1)\r\n \r\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00000.dat')\r\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00001.dat')\r\n+\r\n         # make the first block file read-only\r\n         path = os.path.join(self.nodes[1].chain_path, 'blocks', 'blk00000.dat')\r\n         os.chmod(path, 0o444)\r\n```",
      "commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "created_at" : "2023-02-08T18:18:07Z",
      "diff_hunk" : "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100517673",
      "id" : 1100517673,
      "in_reply_to_id" : 1096394295,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585BmJEp",
      "original_commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "original_line" : 84,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : null,
      "pull_request_review_id" : 1289745617,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100517673/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-08T18:18:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100517673",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100606119"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100606119"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "thanks, added.",
      "commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "created_at" : "2023-02-08T19:50:04Z",
      "diff_hunk" : "@@ -68,12 +72,32 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100606119",
      "id" : 1100606119,
      "in_reply_to_id" : 1096394295,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Bmeqn",
      "original_commit_id" : "a6b05f8db63bae7eefb5330048d8b1441f1a9e5e",
      "original_line" : 84,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : null,
      "pull_request_review_id" : 1289900751,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100606119/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-08T19:50:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100606119",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100606588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100606588"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "added comment to top of the test where second node is set up",
      "commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "created_at" : "2023-02-08T19:50:24Z",
      "diff_hunk" : "@@ -8,6 +8,7 @@\n - Stop the node and restart it with -reindex. Verify that the node has reindexed up to block 3.\n - Stop the node and restart it with -reindex-chainstate. Verify that the node has reindexed up to block 3.\n - Verify that out-of-order blocks are correctly processed, see LoadExternalBlockFile()\n+- Start a second node, generate blocks, then restart with -reindex after setting blk files to read-only",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1100606588",
      "id" : 1100606588,
      "in_reply_to_id" : 1099741914,
      "line" : 11,
      "node_id" : "PRRC_kwDOABII585Bmex8",
      "original_commit_id" : "386faaf76ea0edb2150725c5bdb69d234a2f2607",
      "original_line" : 11,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : 4,
      "pull_request_review_id" : 1289901618,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100606588/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-08T19:50:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1100606588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1112320245"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112320245"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The new test fails on master as expected, because the block file is read-only and can't be written to.\r\n\r\nIt may be reassuring to have coverage for the other side of this change, to be sure we're still flushing when expected.  If this new line is removed and no flushing is done, all the functional and unit tests still pass (I didn't run the extended functional tests).\r\n\r\n```diff\r\n@@ -618,7 +618,6 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\r\n     if ((int)nFile != m_last_blockfile) {\r\n         if (!fKnown) {\r\n             LogPrint(BCLog::BLOCKSTORE, \"Leaving block file %i: %s\\n\", m_last_blockfile, m_blockfile_info[m_last_blockfile].ToString());\r\n-            FlushBlockFile(/*fFinalize=*/true, finalize_undo);\r\n         }\r\n         m_last_blockfile = nFile;\r\n     }\r\n```\r\n",
      "commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "created_at" : "2023-02-20T21:09:38Z",
      "diff_hunk" : "@@ -618,8 +618,8 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n     if ((int)nFile != m_last_blockfile) {\n         if (!fKnown) {\n             LogPrint(BCLog::BLOCKSTORE, \"Leaving block file %i: %s\\n\", m_last_blockfile, m_blockfile_info[m_last_blockfile].ToString());\n+            FlushBlockFile(/*fFinalize=*/true, finalize_undo);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1112320245",
      "id" : 1112320245,
      "line" : 621,
      "node_id" : "PRRC_kwDOABII585CTKj1",
      "original_commit_id" : "ed57565e36bf514fc4d063972464c9152a08fb8e",
      "original_line" : 621,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.cpp",
      "position" : 22,
      "pull_request_review_id" : 1306329978,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112320245/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-20T21:32:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112320245",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1112320479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112320479"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit, fix clang-format since you touch this line\r\n```suggestion\r\n    const bool position_known{dbp != nullptr};\r\n```\r\n\r\nEdit, while touching up nits in the commit, maybe hit this one, too (feel free to ignore):\r\n\r\n```diff\r\n--- a/src/node/blockstorage.cpp\r\n+++ b/src/node/blockstorage.cpp\r\n@@ -566,7 +566,7 @@ void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune)\r\n \r\n static FlatFileSeq BlockFileSeq()\r\n {\r\n-    return FlatFileSeq(gArgs.GetBlocksDirPath(), \"blk\", gArgs.GetBoolArg(\"-fastprune\", false) ? 0x4000 /* 16kb */ : BLOCKFILE_CHUNK_SIZE);\r\n+    return FlatFileSeq(gArgs.GetBlocksDirPath(), \"blk\", gArgs.GetBoolArg(\"-fastprune\", false) ? 0x4000 /* 16KiB */ : BLOCKFILE_CHUNK_SIZE);\r\n }\r\n```\r\n",
      "commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "created_at" : "2023-02-20T21:10:13Z",
      "diff_hunk" : "@@ -803,7 +803,7 @@ FlatFilePos BlockManager::SaveBlockToDisk(const CBlock& block, int nHeight, CCha\n {\n     unsigned int nBlockSize = ::GetSerializeSize(block, CLIENT_VERSION);\n     FlatFilePos blockPos;\n-    const auto position_known {dbp != nullptr};\n+    const bool position_known {dbp != nullptr};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1112320479",
      "id" : 1112320479,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CTKnf",
      "original_commit_id" : "ed57565e36bf514fc4d063972464c9152a08fb8e",
      "original_line" : 806,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.cpp",
      "position" : null,
      "pull_request_review_id" : 1306329978,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112320479/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-20T22:00:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112320479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1112331348"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112331348"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Adding some logging shows that this `generate` call is the slowest part of the added test. Questions:\r\n\r\n- Why 300 blocks?  On my laptop the test passes reliably with 239 blocks and fails reliably with 238.  Fewer blocks = faster test runs.\r\n\r\n- Can you explain how the number of blocks used was arrived at, and document that calculation along with the other magic numbers?\r\n\r\n<details><summary>Ideas, feel free to pick and choose (maybe some of the suggested logging should be debug instead of info)</summary><p>\r\n\r\n```diff\r\n@@ -29,7 +29,7 @@ class ReindexTest(BitcoinTestFramework):\r\n     def reindex(self, justchainstate=False):\r\n         self.generatetoaddress(self.nodes[0], 3, self.nodes[0].get_deterministic_priv_key().address)\r\n         blockcount = self.nodes[0].getblockcount()\r\n-        self.restart_node(0, [\"-reindex-chainstate\" if justchainstate else \"-reindex\"])\r\n+        self.restart_node(0, extra_args=[\"-reindex-chainstate\" if justchainstate else \"-reindex\"])\r\n         self.connect_nodes(0, 1)\r\n         assert_equal(self.nodes[0].getblockcount(), blockcount)  # start_node is blocking on reindex\r\n         self.log.info(\"Success\")\r\n@@ -72,34 +72,36 @@ class ReindexTest(BitcoinTestFramework):\r\n             'LoadExternalBlockFile: Out of order block',\r\n             'LoadExternalBlockFile: Processing out of order child',\r\n         ]):\r\n-            self.start_node(0, [\"-reindex\"])\r\n+            self.start_node(0, extra_args=[\"-reindex\"])\r\n \r\n         # All blocks should be accepted and processed.\r\n         assert_equal(self.nodes[0].getblockcount(), 12)\r\n \r\n     def reindex_readonly(self):\r\n         self.connect_nodes(0, 1)\r\n-        # generate enough blocks to ensure that the -fastprune node fills up the\r\n-        # first blk00000.dat file and starts another block file\r\n-        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)\r\n+        block_count = self.nodes[1].getblockcount()\r\n+\r\n+        num_blocks_to_add = 239  # document how this is calculated...\r\n+        self.log.info(f\"Generate {num_blocks_to_add} blocks to ensure the -fastprune node fills up the first blk00000.dat file and starts another block file\")\r\n+        self.generatetoaddress(self.nodes[1], num_blocks_to_add, self.nodes[1].get_deterministic_priv_key().address)\r\n         self.stop_node(1)\r\n \r\n         assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00000.dat')\r\n         assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00001.dat')\r\n \r\n-        # make the first block file read-only\r\n-        path = self.nodes[1].chain_path / 'blocks' / 'blk00000.dat'\r\n-        os.chmod(path, 0o444)\r\n+        self.log.info(\"Make the first block file read-only\")\r\n+        filename = self.nodes[1].chain_path / 'blocks' / 'blk00000.dat'\r\n+        os.chmod(filename, 0o444)\r\n \r\n-        # restart and reindex the node with the read-only block file\r\n+        self.log.info(\"Restart the node and reindex with the read-only block file\")\r\n         self.start_node(1, [\"-reindex\", \"-fastprune\"])\r\n-        assert_equal(self.nodes[1].getblockcount(), 312)\r\n+        assert_equal(self.nodes[1].getblockcount(), block_count + num_blocks_to_add)\r\n \r\n-        # shut down this node, triggering disk flushes, but not to the read-only file\r\n+        self.log.info(\"Shut down this node, triggering disk flushes, but not to the read-only file\")\r\n         with self.nodes[1].assert_debug_log(expected_msgs=['FlushStateToDisk'], unexpected_msgs=['failed to open file']):\r\n             self.stop_node(1)\r\n \r\n-        self.log.info(\"Reindex read-only Success\")\r\n+        self.log.info(\"Success of reindex read-only test\")\r\n \r\n     def run_test(self):\r\n         self.reindex(False)\r\n```\r\n</p></details>\r\n\r\n",
      "commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "created_at" : "2023-02-20T21:26:03Z",
      "diff_hunk" : "@@ -68,12 +72,35 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1112331348",
      "id" : 1112331348,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CTNRU",
      "original_commit_id" : "ed57565e36bf514fc4d063972464c9152a08fb8e",
      "original_line" : 84,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : null,
      "pull_request_review_id" : 1306329978,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112331348/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-22T17:49:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1112331348",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1114563559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114563559"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks Jon I believe I addressed all the style nits and reduced the number of generated blocks as requested in e7a0339b8c. Adding test coverage for flush to disk is next...",
      "commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "created_at" : "2023-02-22T16:06:20Z",
      "diff_hunk" : "@@ -68,12 +72,35 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, [\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+        self.generatetoaddress(self.nodes[1], 300, self.nodes[1].get_deterministic_priv_key().address)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1114563559",
      "id" : 1114563559,
      "in_reply_to_id" : 1112331348,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585CbuPn",
      "original_commit_id" : "ed57565e36bf514fc4d063972464c9152a08fb8e",
      "original_line" : 84,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : null,
      "pull_request_review_id" : 1309595387,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114563559/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-22T16:08:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1114563559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1115055900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115055900"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Some assertions are not checking that the PR's changes are working correctly, they're ensuring that the test is setting things up as expected, and sometimes that's not obvious to readers. Sorry I didn't think to mention this earlier, but if you retouch, consider adding a comment before these two lines to make it clear that all we're doing here is verifying the test setup.",
      "commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "created_at" : "2023-02-22T22:44:16Z",
      "diff_hunk" : "@@ -68,12 +72,49 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, extra_args=[\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        addr = self.nodes[1].get_deterministic_priv_key().address\n+\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+\n+        # How big are empty regtest blocks?\n+        block_hash = self.generatetoaddress(self.nodes[1], 1, addr)[0]\n+        block_size = self.nodes[1].getblock(block_hash)[\"size\"]\n+        block_size += 8 # BLOCK_SERIALIZATION_HEADER_SIZE\n+\n+        # How many blocks do we need to roll over a new .blk file?\n+        block_count = self.nodes[1].getblockcount()\n+        fastprune_blockfile_size = 0x10000\n+        size_needed = fastprune_blockfile_size - (block_size * block_count)\n+        blocks_needed = size_needed // block_size\n+\n+        self.generatetoaddress(self.nodes[1], blocks_needed, addr)\n+        self.stop_node(1)\n+\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00000.dat')\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00001.dat')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1115055900",
      "id" : 1115055900,
      "line" : 102,
      "node_id" : "PRRC_kwDOABII585Cdmcc",
      "original_commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "original_line" : 102,
      "original_position" : 72,
      "original_start_line" : 101,
      "path" : "test/functional/feature_reindex.py",
      "position" : 72,
      "pull_request_review_id" : 1310390172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115055900/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 101,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-22T22:54:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115055900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1115061429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115061429"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I like the way you're calculating the number of blocks needed rather than hard-coding the number; I verified that this value (when I run the test) is 240, which matches, with a tiny bit of rounding, what @jonatack suggested.",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-02-22T22:50:17Z",
      "diff_hunk" : "@@ -68,12 +72,49 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, extra_args=[\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        addr = self.nodes[1].get_deterministic_priv_key().address\n+\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+\n+        # How big are empty regtest blocks?\n+        block_hash = self.generatetoaddress(self.nodes[1], 1, addr)[0]\n+        block_size = self.nodes[1].getblock(block_hash)[\"size\"]\n+        block_size += 8 # BLOCK_SERIALIZATION_HEADER_SIZE\n+\n+        # How many blocks do we need to roll over a new .blk file?\n+        block_count = self.nodes[1].getblockcount()\n+        fastprune_blockfile_size = 0x10000\n+        size_needed = fastprune_blockfile_size - (block_size * block_count)\n+        blocks_needed = size_needed // block_size",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1115061429",
      "id" : 1115061429,
      "line" : 96,
      "node_id" : "PRRC_kwDOABII585Cdny1",
      "original_commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "original_line" : 96,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "test/functional/feature_reindex.py",
      "position" : 66,
      "pull_request_review_id" : 1310390172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115061429/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-02-28T15:53:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115061429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1115871611"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115871611"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok good feedback. Yeah these asserts are more like sanity checks. Testing the test! Although they also fail early on certain code regressions for example if the `-fastprune` size is changed in the future.",
      "commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "created_at" : "2023-02-23T15:37:45Z",
      "diff_hunk" : "@@ -68,12 +72,49 @@ def find_block(b, start):\n             'LoadExternalBlockFile: Out of order block',\n             'LoadExternalBlockFile: Processing out of order child',\n         ]):\n-            extra_args = [[\"-reindex\"]]\n-            self.start_nodes(extra_args)\n+            self.start_node(0, extra_args=[\"-reindex\"])\n \n         # All blocks should be accepted and processed.\n         assert_equal(self.nodes[0].getblockcount(), 12)\n \n+    def reindex_readonly(self):\n+        self.connect_nodes(0, 1)\n+        addr = self.nodes[1].get_deterministic_priv_key().address\n+\n+        # generate enough blocks to ensure that the -fastprune node fills up the\n+        # first blk00000.dat file and starts another block file\n+\n+        # How big are empty regtest blocks?\n+        block_hash = self.generatetoaddress(self.nodes[1], 1, addr)[0]\n+        block_size = self.nodes[1].getblock(block_hash)[\"size\"]\n+        block_size += 8 # BLOCK_SERIALIZATION_HEADER_SIZE\n+\n+        # How many blocks do we need to roll over a new .blk file?\n+        block_count = self.nodes[1].getblockcount()\n+        fastprune_blockfile_size = 0x10000\n+        size_needed = fastprune_blockfile_size - (block_size * block_count)\n+        blocks_needed = size_needed // block_size\n+\n+        self.generatetoaddress(self.nodes[1], blocks_needed, addr)\n+        self.stop_node(1)\n+\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00000.dat')\n+        assert os.path.exists(self.nodes[1].chain_path / 'blocks' / 'blk00001.dat')",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1115871611",
      "id" : 1115871611,
      "in_reply_to_id" : 1115055900,
      "line" : 102,
      "node_id" : "PRRC_kwDOABII585Cgtl7",
      "original_commit_id" : "e7a0339b8cb612088ca212c568c0499c0f02398b",
      "original_line" : 102,
      "original_position" : 72,
      "original_start_line" : 101,
      "path" : "test/functional/feature_reindex.py",
      "position" : 72,
      "pull_request_review_id" : 1311575753,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115871611/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 101,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-23T15:37:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1115871611",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased on master and prepended an extra commit with a unit test for BlockManager. The test passes on master and the branch without modification, hopefully illustrating that at least some behaviors are not affected.\r\n\r\nIt's hard to test precisely for the branch's change in a unit test because file-flushing is not something we can really predict or test for (sometimes it happens as soon as we `fwrite()`). \r\n\r\nThe actual error in issue #2039 comes from an attempt to OPEN a file with `rw` when the file is read-only:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/82793f1984911774b111117f2e81d5f3b0bbec68/src/flatfile.cpp#L81-L86\r\n\r\n...and this PR avoids the call to `Flush()` altogether when we know it is not necessary\r\n\r\n@jonatack lemme know if the new test is reassuring enough, or if you have advice for better coverage?",
      "created_at" : "2023-02-27T15:20:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1446525945",
      "id" : 1446525945,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585WODv5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1446525945/reactions"
      },
      "updated_at" : "2023-02-27T15:20:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1446525945",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-02-28T15:41:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1448404807",
      "id" : 1448404807,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585WVOdH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448404807/reactions"
      },
      "updated_at" : "2023-02-28T15:41:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448404807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK, although now rebase is needed",
      "created_at" : "2023-02-28T15:58:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1448432672",
      "id" : 1448432672,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585WVVQg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448432672/reactions"
      },
      "updated_at" : "2023-02-28T15:58:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1448432672",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "force-push to e600eb442802ca7b23189c8ceee448730e22e75a:\r\n- rebased on master and fixed conflict\r\n- added 2-second sleep before calls to `SaveBlockToDisk()`. This is to ensure that if the file is modified, its modification timestamp will definitely be updated. This test was intermittent on Windows I think because FAT has a 2-second resolution for `mtime` values. ð¤·ââï¸  ",
      "created_at" : "2023-03-01T16:19:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1450428114",
      "id" : 1450428114,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585Wc8bS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450428114/reactions"
      },
      "updated_at" : "2023-03-01T16:19:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450428114",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122020763"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122020763"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "if this is only necessary for windows, would it be possible to hide it behind `#ifdef WIN32` so that the unit tests don't run 3*2=6 seconds longer for everyone else (which is quite a lot)?",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-01T16:34:36Z",
      "diff_hunk" : "@@ -82,4 +83,105 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+    : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params {CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman {};\n+    CChain chain {};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122020763",
      "id" : 1122020763,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585C4K2b",
      "original_commit_id" : "dc1c1a1ce8f56b9e35b1fecf64a7dad4f4622feb",
      "original_line" : 134,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1320217718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122020763/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-01T19:48:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122020763",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@pinheadmz Thanks for working on unit test coverage -- will circle back soon.",
      "created_at" : "2023-03-01T17:55:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1450599651",
      "id" : 1450599651,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585WdmTj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450599651/reactions"
      },
      "updated_at" : "2023-03-01T17:55:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1450599651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122285875"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122285875"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, I guarded the sleep for WIN32, cleaned up the lint and mentioned the undo data in OP.",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-01T20:51:19Z",
      "diff_hunk" : "@@ -82,4 +83,105 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+    : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params {CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman {};\n+    CChain chain {};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122285875",
      "id" : 1122285875,
      "in_reply_to_id" : 1122020763,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585C5Lkz",
      "original_commit_id" : "dc1c1a1ce8f56b9e35b1fecf64a7dad4f4622feb",
      "original_line" : 134,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1320604068,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122285875/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-01T20:51:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122285875",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122332686"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122332686"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    constexpr int TEST_BLOCK_SIZE{81};\r\n```",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-01T21:48:25Z",
      "diff_hunk" : "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122332686",
      "id" : 1122332686,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585C5XAO",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 106,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1320666918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122332686/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-01T23:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122332686",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122337219"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122337219"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    // Write the first block; dbp=nullptr means this block doesn't already have a disk\r\n    // location, so allocate a free location and write it there.\r\n    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\r\n```\r\nand similar below",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-01T21:54:12Z",
      "diff_hunk" : "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122337219",
      "id" : 1122337219,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585C5YHD",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 112,
      "original_position" : 38,
      "original_start_line" : 111,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1320666918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122337219/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "updated_at" : "2023-03-01T23:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122337219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122338428"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122338428"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    // Attempt, but fail, to save block 3 to original position of block 2\r\n```",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-01T21:55:43Z",
      "diff_hunk" : "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122338428",
      "id" : 1122338428,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585C5YZ8",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 137,
      "original_position" : 63,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1320666918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122338428/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-01T23:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122338428",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122400769"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122400769"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Well, on non-windows, it _may_ have been modified, but within the same second. This is kind of a minor point (probably don't need to change anything), but if in the future there's a bug such that `blk00000.dat` was modified, this test might not catch it. I verified this by hacking the test such that the file _is_ modified, and about once in 10 or 20 runs, the timestamp didn't change. (This is on Ubuntu.)\r\n\r\nBut I guess that's okay, because if there is such a bug, it will likely be caught quickly. It's just that I wish this test could be 100 percent solid. The only way I could think of to do that is to read and checksum the file, and compare the checksums instead of the timestamps. (Then you wouldn't need that sleep for WIN32.) It wouldn't be a performance problem, because block files are very small in this test.\r\n\r\nJust something to consider, it may not be worth the trouble.",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-01T23:06:10Z",
      "diff_hunk" : "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122400769",
      "id" : 1122400769,
      "line" : 157,
      "node_id" : "PRRC_kwDOABII585C5noB",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 157,
      "original_position" : 76,
      "original_start_line" : 148,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 83,
      "pull_request_review_id" : 1320666918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122400769/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 155,
      "start_side" : "RIGHT",
      "updated_at" : "2023-03-01T23:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122400769",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122413793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122413793"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This seems more problematic than what I mentioned above because this can cause false-positive. Is the resolution one second? Could all that happened since `time2` was sampled be in the same second? But I ran the test many times and did not see the problem.",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-01T23:19:59Z",
      "diff_hunk" : "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);\n+\n+    // Chain requires a tip to continue (for undo data handling in FindBlockPos())\n+    CBlockIndex tip;\n+    tip.nHeight = 1;\n+    chain.SetTip(tip);\n+\n+#ifdef WIN32\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Now fill up the first file to fastprune limit and start new block file\n+    CBlock dummy_block;\n+    FlatFilePos last_block;\n+    while (last_block.nFile < 1) {\n+        last_block = blockman.SaveBlockToDisk(dummy_block, 0, chain, *params, nullptr);\n+    }\n+\n+    // Record last modified time of blk00000.dat now that it is full and finished\n+    const fs::file_time_type time3 = fs::last_write_time(file_path);\n+\n+    // Sanity check: blk00000.dat should have been modified writing the dummy blocks.\n+    BOOST_CHECK(time2 != time3);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122413793",
      "id" : 1122413793,
      "line" : 177,
      "node_id" : "PRRC_kwDOABII585C5qzh",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 177,
      "original_position" : 98,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 103,
      "pull_request_review_id" : 1320666918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122413793/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-01T23:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122413793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122420915"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122420915"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "as long as you're touching this line\r\n```suggestion\r\n        const unsigned int max_size{gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64 KiB */ : MAX_BLOCKFILE_SIZE};\r\n        while (m_blockfile_info[nFile].nSize + nAddSize >= max_size) {\r\n```",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-01T23:31:00Z",
      "diff_hunk" : "@@ -621,7 +621,7 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n \n     bool finalize_undo = false;\n     if (!fKnown) {\n-        while (m_blockfile_info[nFile].nSize + nAddSize >= (gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64kb */ : MAX_BLOCKFILE_SIZE)) {\n+        while (m_blockfile_info[nFile].nSize + nAddSize >= (gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64 KiB */ : MAX_BLOCKFILE_SIZE)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1122420915",
      "id" : 1122420915,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585C5siz",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 624,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.cpp",
      "position" : null,
      "pull_request_review_id" : 1320666918,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122420915/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-01T23:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1122420915",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1123341750"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123341750"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What I learned is that windows/FAT systems have 2-second resolution but Linux/EXT4 etc have ms or ns resolution. I had a hard time determining the best method for testing when a file is flushed but I think you're right, using timestamps is just asking for intermittency. I think I wanted to avoid hashing files because it means opening the file while blockmanager might already have it open... but I think that's going to be the best way to test.",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-02T16:04:09Z",
      "diff_hunk" : "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);\n+\n+    // Chain requires a tip to continue (for undo data handling in FindBlockPos())\n+    CBlockIndex tip;\n+    tip.nHeight = 1;\n+    chain.SetTip(tip);\n+\n+#ifdef WIN32\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Now fill up the first file to fastprune limit and start new block file\n+    CBlock dummy_block;\n+    FlatFilePos last_block;\n+    while (last_block.nFile < 1) {\n+        last_block = blockman.SaveBlockToDisk(dummy_block, 0, chain, *params, nullptr);\n+    }\n+\n+    // Record last modified time of blk00000.dat now that it is full and finished\n+    const fs::file_time_type time3 = fs::last_write_time(file_path);\n+\n+    // Sanity check: blk00000.dat should have been modified writing the dummy blocks.\n+    BOOST_CHECK(time2 != time3);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1123341750",
      "id" : 1123341750,
      "in_reply_to_id" : 1122413793,
      "line" : 177,
      "node_id" : "PRRC_kwDOABII585C9NW2",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 177,
      "original_position" : 98,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 103,
      "pull_request_review_id" : 1322130805,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123341750/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T16:04:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123341750",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1123380652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123380652"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ok trying another approach where we ALWAYS pause, to ensure incremental timestamps. But on windows we have to pause for 2 seconds. All other filesystems we only need to wait for 1 ms.",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-02T16:26:50Z",
      "diff_hunk" : "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);\n+\n+    // Chain requires a tip to continue (for undo data handling in FindBlockPos())\n+    CBlockIndex tip;\n+    tip.nHeight = 1;\n+    chain.SetTip(tip);\n+\n+#ifdef WIN32\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Now fill up the first file to fastprune limit and start new block file\n+    CBlock dummy_block;\n+    FlatFilePos last_block;\n+    while (last_block.nFile < 1) {\n+        last_block = blockman.SaveBlockToDisk(dummy_block, 0, chain, *params, nullptr);\n+    }\n+\n+    // Record last modified time of blk00000.dat now that it is full and finished\n+    const fs::file_time_type time3 = fs::last_write_time(file_path);\n+\n+    // Sanity check: blk00000.dat should have been modified writing the dummy blocks.\n+    BOOST_CHECK(time2 != time3);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1123380652",
      "id" : 1123380652,
      "in_reply_to_id" : 1122413793,
      "line" : 177,
      "node_id" : "PRRC_kwDOABII585C9W2s",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 177,
      "original_position" : 98,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 103,
      "pull_request_review_id" : 1322182153,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123380652/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-02T16:26:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1123380652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "force-push to b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4:\r\n\r\n- addressed all nits and review comments by @LarryRuane \r\n- added 1ms delay in blockmanager test for all non-windows systems (cc: @mzumsande )",
      "created_at" : "2023-03-02T16:36:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1452172358",
      "id" : 1452172358,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585WjmRG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1452172358/reactions"
      },
      "updated_at" : "2023-03-02T16:36:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1452172358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> consider the suggestion for the unit test commit comment here: [#27039 (review)](https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1320666918) (I think you may have just missed it), but it's not important.\r\n\r\nah doh! I added a sentence to the PR description but if I rebase again I'll add to the actual commit",
      "created_at" : "2023-03-02T16:49:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1452190011",
      "id" : 1452190011,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585Wjqk7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1452190011/reactions"
      },
      "updated_at" : "2023-03-02T16:49:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1452190011",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1132925968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132925968"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't understand what this part of the test is testing - calling `SaveBlockToDisk` for a block at a specified but incorrect position is something that should never be possible in an actual, non-corrupted node unless I'm missing something. \r\nBut if it somehow happened anyway, even if the existing block isn't overwritten, I'd imagine that it would still cause some havoc, like changing block file statistics [here](https://github.com/bitcoin/bitcoin/blob/c7f1d95f52883d7087b74f45f5e4ce1100d51149/src/node/blockstorage.cpp#L646-L648) for the added size of a block that is never actually written to disk, which would probably be bad.",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-10T22:00:57Z",
      "diff_hunk" : "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1132925968",
      "id" : 1132925968,
      "line" : 145,
      "node_id" : "PRRC_kwDOABII585DhxQQ",
      "original_commit_id" : "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "original_line" : 145,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 71,
      "pull_request_review_id" : 1335683963,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132925968/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-10T22:06:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1132925968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1133072579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133072579"
         }
      },
      "author_association" : "MEMBER",
      "body" : "1. What I'm asserting here is that if a position is passed in, the function called \"save block to disk\" does not save a block to disk. By using incorrect data I can easily prove that it is not actually written to disk.\r\n2. The call to `AddBlock` you highlight here confuses and concerns me a bit - since we know a `known` block won't be written, why are we updating the metadata at all?",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-11T11:36:10Z",
      "diff_hunk" : "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1133072579",
      "id" : 1133072579,
      "in_reply_to_id" : 1132925968,
      "line" : 145,
      "node_id" : "PRRC_kwDOABII585DiVDD",
      "original_commit_id" : "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "original_line" : 145,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 71,
      "pull_request_review_id" : 1335855256,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133072579/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-11T11:36:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133072579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1133090332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133090332"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "\r\n> 2\\. The call to `AddBlock` you highlight here confuses and concerns me a bit - since we know a `known` block won't be written, why are we updating the metadata at all?\r\n\r\nBecause the block index LevelDB database (saved in `blocks/index`) is being wiped at the beginning of a reindex and needs to be rebuilt from scratch as we look at each block. Part of this database is meta info about each blockfile ([see bitcoin wiki](https://en.bitcoin.it/wiki/Bitcoin_Core_0.11_(ch_2):_Data_Storage#Block_index_.28leveldb.29)). I think that's the main reason why we have to call `SaveBlockToDisk` for each block during a reindex at all.\r\n\r\n\r\n",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-11T14:20:18Z",
      "diff_hunk" : "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1133090332",
      "id" : 1133090332,
      "in_reply_to_id" : 1132925968,
      "line" : 145,
      "node_id" : "PRRC_kwDOABII585DiZYc",
      "original_commit_id" : "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "original_line" : 145,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 71,
      "pull_request_review_id" : 1335870522,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133090332/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-11T14:20:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133090332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1133091606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133091606"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ok make sense thanks. do you think my first point justifies the method of the test or is that just confusing then and I should remove it?",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-11T14:31:36Z",
      "diff_hunk" : "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1133091606",
      "id" : 1133091606,
      "in_reply_to_id" : 1132925968,
      "line" : 145,
      "node_id" : "PRRC_kwDOABII585DiZsW",
      "original_commit_id" : "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "original_line" : 145,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 71,
      "pull_request_review_id" : 1335872593,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133091606/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-11T14:31:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1133091606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1135648966"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135648966"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that both removing it and adding an explanatory comment would be ok. Maybe the test could also check that the block statistics (`CBlockFileInfo`) is not the same after the call (`nBlocks` should have increased)?",
      "commit_id" : "b4ce309ef5f2bed5ed1f861305317a0dca3dc5f4",
      "created_at" : "2023-03-14T14:32:43Z",
      "diff_hunk" : "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1135648966",
      "id" : 1135648966,
      "in_reply_to_id" : 1132925968,
      "line" : 145,
      "node_id" : "PRRC_kwDOABII585DsKDG",
      "original_commit_id" : "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "original_line" : 145,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 71,
      "pull_request_review_id" : 1339446081,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135648966/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2023-03-14T14:32:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135648966",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1135993681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135993681"
         }
      },
      "author_association" : "MEMBER",
      "body" : "added in force-push to 5e579c6435145d84e43fb79224f2cb09b40ea047 and rebased on master",
      "commit_id" : "764c12493a9a8c7b78a9852979f74a37c9036c25",
      "created_at" : "2023-03-14T18:00:28Z",
      "diff_hunk" : "@@ -82,4 +83,116 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Attempt, but fail, to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1135993681",
      "id" : 1135993681,
      "in_reply_to_id" : 1132925968,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585DteNR",
      "original_commit_id" : "1658bc2f6f84aa0fee43d0e96e8c654aa4177670",
      "original_line" : 145,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1339971916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135993681/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-14T18:00:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1135993681",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "force push to: 93c70287a6434c6c665a211dc4dfbbd9c3db4083\r\n- rebase on master\r\n- fix failing unit test",
      "created_at" : "2023-03-20T17:00:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1476608456",
      "id" : 1476608456,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585YA0HI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476608456/reactions"
      },
      "updated_at" : "2023-03-20T17:00:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1476608456",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "created_at" : "2023-04-06T18:22:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1499452625",
      "id" : 1499452625,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585ZX9TR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1499452625/reactions"
      },
      "updated_at" : "2023-04-06T18:22:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1499452625",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8321330?v=4",
         "events_url" : "https://api.github.com/users/LarryRuane/events{/privacy}",
         "followers_url" : "https://api.github.com/users/LarryRuane/followers",
         "following_url" : "https://api.github.com/users/LarryRuane/following{/other_user}",
         "gists_url" : "https://api.github.com/users/LarryRuane/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/LarryRuane",
         "id" : 8321330,
         "login" : "LarryRuane",
         "node_id" : "MDQ6VXNlcjgzMjEzMzA=",
         "organizations_url" : "https://api.github.com/users/LarryRuane/orgs",
         "received_events_url" : "https://api.github.com/users/LarryRuane/received_events",
         "repos_url" : "https://api.github.com/users/LarryRuane/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/LarryRuane/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/LarryRuane/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/LarryRuane"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1162797652"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162797652"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: some inconsistent usage of `BOOST_CHECK` and `BOOST_CHECK_EQUAL`, I think using `BOOST_CHECK_EQUAL` here and in a few other places makes sense",
      "commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "created_at" : "2023-04-11T13:12:03Z",
      "diff_hunk" : "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // When FlatFilePos* dbp is given, SaveBlockToDisk() will not write or\n+    // overwrite anything to the flat file block storage. It will, however,\n+    // update the blockfile metadata. This is to facilitate reindexing\n+    // when the user has the blocks on disk but the metadata is being rebuilt.\n+    CBlockFileInfo* block_data = blockman.GetBlockFileInfo(0);\n+    BOOST_CHECK(block_data->nBlocks == 2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1162797652",
      "id" : 1162797652,
      "line" : 149,
      "node_id" : "PRRC_kwDOABII585FTuJU",
      "original_commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "original_line" : 149,
      "original_position" : 75,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 75,
      "pull_request_review_id" : 1289406384,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162797652/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-20T15:30:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162797652",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1164077010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164077010"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this a reliable way to check for a FAT filesystem? WIN32 could also use other filesystems I think (e.g. NTFS), and likewise - FAT could still be used without WIN32, I think?\r\n\r\nI think I agree with [LarryRuane](https://github.com/bitcoin/bitcoin/pull/27039/files#r1122400769) that comparing files is probably more robust and portable, which I think is reasonable with these small file sizes? But perhaps you've found this is too much of a performance hit?\r\n\r\nYou could also check the filesystem directly with `statfs` - or`GetVolumeInformationA` on Windows.",
      "commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "created_at" : "2023-04-12T12:40:33Z",
      "diff_hunk" : "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1164077010",
      "id" : 1164077010,
      "line" : 100,
      "node_id" : "PRRC_kwDOABII585FYmfS",
      "original_commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "original_line" : 100,
      "original_position" : 26,
      "original_start_line" : 99,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 26,
      "pull_request_review_id" : 1289406384,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164077010/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 99,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-20T15:30:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1164077010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1167679089"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167679089"
         }
      },
      "author_association" : "NONE",
      "body" : "nit: use of assignment operator on line 126 while using initializer syntax for the same type on 123.\r\n\r\n```suggestion\r\n    FlatFilePos pos2{blockman.SaveBlockToDisk(block2, /*nHeight=*2, chain, *params, /*dbp=*/nullptr)};\r\n```",
      "commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "created_at" : "2023-04-16T02:00:11Z",
      "diff_hunk" : "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1167679089",
      "id" : 1167679089,
      "line" : 126,
      "node_id" : "PRRC_kwDOABII585FmV5x",
      "original_commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "original_line" : 126,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 52,
      "pull_request_review_id" : 1386645395,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167679089/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-16T02:47:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167679089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5198897?v=4",
         "events_url" : "https://api.github.com/users/turkycat/events{/privacy}",
         "followers_url" : "https://api.github.com/users/turkycat/followers",
         "following_url" : "https://api.github.com/users/turkycat/following{/other_user}",
         "gists_url" : "https://api.github.com/users/turkycat/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/turkycat",
         "id" : 5198897,
         "login" : "turkycat",
         "node_id" : "MDQ6VXNlcjUxOTg4OTc=",
         "organizations_url" : "https://api.github.com/users/turkycat/orgs",
         "received_events_url" : "https://api.github.com/users/turkycat/received_events",
         "repos_url" : "https://api.github.com/users/turkycat/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/turkycat/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/turkycat/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/turkycat"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1167681916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167681916"
         }
      },
      "author_association" : "NONE",
      "body" : "can you explain why you're sleeping _after_ reading `last_write_time`? If I understand correctly, based on the other comments in this thread, the sleep is necessary because the file modified time may not be updated immediately after the contents are written. This test does pass on my linux machine (which has a significantly shorter resolution time), yet I feel that we should be sleeping immediately after the potential file write does/does not occur before checking the file time and verifying it? This comment applies to the other uses of `sleep_for` in this test.",
      "commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "created_at" : "2023-04-16T02:37:22Z",
      "diff_hunk" : "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1167681916",
      "id" : 1167681916,
      "line" : 142,
      "node_id" : "PRRC_kwDOABII585FmWl8",
      "original_commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "original_line" : 142,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 68,
      "pull_request_review_id" : 1386645395,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167681916/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-16T02:47:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167681916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5198897?v=4",
         "events_url" : "https://api.github.com/users/turkycat/events{/privacy}",
         "followers_url" : "https://api.github.com/users/turkycat/followers",
         "following_url" : "https://api.github.com/users/turkycat/following{/other_user}",
         "gists_url" : "https://api.github.com/users/turkycat/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/turkycat",
         "id" : 5198897,
         "login" : "turkycat",
         "node_id" : "MDQ6VXNlcjUxOTg4OTc=",
         "organizations_url" : "https://api.github.com/users/turkycat/orgs",
         "received_events_url" : "https://api.github.com/users/turkycat/received_events",
         "repos_url" : "https://api.github.com/users/turkycat/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/turkycat/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/turkycat/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/turkycat"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1168814404"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1168814404"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks good eye. If I retouch I'll fix this.",
      "commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "created_at" : "2023-04-17T14:35:03Z",
      "diff_hunk" : "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1168814404",
      "id" : 1168814404,
      "in_reply_to_id" : 1167679089,
      "line" : 126,
      "node_id" : "PRRC_kwDOABII585FqrFE",
      "original_commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "original_line" : 126,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 52,
      "pull_request_review_id" : 1388259983,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1168814404/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-17T14:35:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1168814404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1168822308"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1168822308"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This pause is intended to guarantee that `time1` (L140) and `time2` (L162) will be different if any file modification happens between the two readings. On windows for example with its 2 second resolution, all kinds of stuff could be happening to that file during those 22 lines and the timestamp would still not change (if no delay were present).",
      "commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "created_at" : "2023-04-17T14:40:28Z",
      "diff_hunk" : "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1168822308",
      "id" : 1168822308,
      "in_reply_to_id" : 1167681916,
      "line" : 142,
      "node_id" : "PRRC_kwDOABII585FqtAk",
      "original_commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "original_line" : 142,
      "original_position" : 68,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 68,
      "pull_request_review_id" : 1388272272,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1168822308/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-17T14:40:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1168822308",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1171578190"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171578190"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: unintuitive name, it's not a block\r\n\r\n```suggestion\r\n    FlatFilePos last_block_pos;\r\n```",
      "commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "created_at" : "2023-04-19T16:20:57Z",
      "diff_hunk" : "@@ -82,4 +83,122 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{{}};\n+    CChain chain{};\n+\n+    // Ensure (by delaying execution of certain steps)\n+    // that if a file is modified its timestamp will be updated.\n+#ifdef WIN32\n+    // FAT filesystem has write time resolution of 2 seconds\n+    constexpr std::chrono::milliseconds pause(2000);\n+#else\n+    // EXT3 and EXT4 have nanosecond resolution\n+    constexpr std::chrono::milliseconds pause(1);\n+#endif\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    constexpr int TEST_BLOCK_SIZE{81};\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write the first block; dbp=nullptr means this block doesn't already have a disk\n+    // location, so allocate a free location and write it there.\n+    FlatFilePos pos1{blockman.SaveBlockToDisk(block1, /*nHeight=*/1, chain, *params, /*dbp=*/nullptr)};\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // When FlatFilePos* dbp is given, SaveBlockToDisk() will not write or\n+    // overwrite anything to the flat file block storage. It will, however,\n+    // update the blockfile metadata. This is to facilitate reindexing\n+    // when the user has the blocks on disk but the metadata is being rebuilt.\n+    CBlockFileInfo* block_data = blockman.GetBlockFileInfo(0);\n+    BOOST_CHECK(block_data->nBlocks == 2);\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, /*dbp=*/&pos2);\n+    BOOST_CHECK(block_data->nBlocks == 3);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);\n+\n+    // Chain requires a tip to continue (for undo data handling in FindBlockPos())\n+    CBlockIndex tip;\n+    tip.nHeight = 1;\n+    chain.SetTip(tip);\n+\n+    std::this_thread::sleep_for(pause);\n+\n+    // Now fill up the first file to fastprune limit and start new block file\n+    CBlock dummy_block;\n+    FlatFilePos last_block;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1171578190",
      "id" : 1171578190,
      "line" : 174,
      "node_id" : "PRRC_kwDOABII585F1N1O",
      "original_commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "original_line" : 174,
      "original_position" : 100,
      "original_start_line" : null,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 100,
      "pull_request_review_id" : 1289406384,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171578190/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-20T15:47:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1171578190",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1174134793"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174134793"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> The only way I could think of to do that is to read and checksum the file, and compare the checksums instead of the timestamps. \r\n\r\nIsn't the point that the file contents aren't changing? So checksum wouldn't work because the files will be the same whether it's rewritten or not. The only things that can be different are the filesystem's metadata on the modification time, and these are not covered by a checksum.",
      "commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "created_at" : "2023-04-21T20:21:55Z",
      "diff_hunk" : "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1174134793",
      "id" : 1174134793,
      "in_reply_to_id" : 1122400769,
      "line" : 163,
      "node_id" : "PRRC_kwDOABII585F--AJ",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 163,
      "original_position" : 76,
      "original_start_line" : 148,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 89,
      "pull_request_review_id" : 1396354816,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174134793/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 161,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-21T20:22:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174134793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1174158220"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174158220"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> The only things that can be different are the filesystem's metadata on the modification time, and these are not covered by a checksum.\r\n\r\nIt might be the same usefulness actually, I seem to remember that if file contents aren't changed, when you call `fwrite()` or `fflush()`, the modification timestamp won't be updated. I researched different ways to detect a `fflush()` and this unit test was the closest. Most systems flush when `fwrite()` is called, and then a subsequent `fflush()` doesn't do anything at all. The best I could do with this unit test was cover current behavior to ensure that the PR didn't break it.\r\n\r\nSo actually it might be reasonable to just ditch the timestamp stuff altogether and just ensure that file contents aren't modified.\r\n\r\nThe better test coverage is in the functional test which will throw on master when bitcoin tries to **open** the read-only file.",
      "commit_id" : "93c70287a6434c6c665a211dc4dfbbd9c3db4083",
      "created_at" : "2023-04-21T20:57:48Z",
      "diff_hunk" : "@@ -82,4 +83,113 @@ BOOST_FIXTURE_TEST_CASE(blockmanager_scan_unlink_already_pruned_files, TestChain\n     BOOST_CHECK(!AutoFile(OpenBlockFile(new_pos, true)).IsNull());\n }\n \n+struct FastPruneTestingSetup : public BasicTestingSetup {\n+    FastPruneTestingSetup()\n+        : BasicTestingSetup{CBaseChainParams::MAIN, /*extra_args=*/{\"-fastprune=1\"}} {}\n+};\n+\n+BOOST_FIXTURE_TEST_CASE(blockmanager_flush_block_file, FastPruneTestingSetup)\n+{\n+    const auto params{CreateChainParams(ArgsManager{}, CBaseChainParams::MAIN)};\n+    BlockManager blockman{};\n+    CChain chain{};\n+\n+    // Test blocks with no transactions, not even a coinbase\n+    CBlock block1;\n+    block1.nVersion = 1;\n+    CBlock block2;\n+    block2.nVersion = 2;\n+    CBlock block3;\n+    block3.nVersion = 3;\n+\n+    // They are 80 bytes header + 1 byte 0x00 for vtx length\n+    int TEST_BLOCK_SIZE = 81;\n+\n+    // Blockstore is empty\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), 0);\n+\n+    // Write first block\n+    FlatFilePos pos1 = blockman.SaveBlockToDisk(block1, 1, chain, *params, nullptr);\n+\n+    // Write second block\n+    FlatFilePos pos2 = blockman.SaveBlockToDisk(block2, 2, chain, *params, nullptr);\n+\n+    // Two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // First two blocks are written as expected\n+    CBlock read_block;\n+    node::ReadBlockFromDisk(read_block, pos1, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 1);\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // Record last modified time of blk00000.dat\n+    const fs::path file_path = node::GetBlockPosFilename(pos2);\n+    const fs::file_time_type time1 = fs::last_write_time(file_path);\n+\n+#ifdef WIN32\n+    // Ensure that if the file is modified its timestamp is updated,\n+    // even on Windows (FAT has 2 second resolution)\n+    std::this_thread::sleep_for(std::chrono::milliseconds(2000));\n+#endif\n+\n+    // Attempt to save block 3 to original position of block 2\n+    blockman.SaveBlockToDisk(block3, 3, chain, *params, &pos2);\n+\n+    // Still only two blocks in the file\n+    BOOST_CHECK_EQUAL(blockman.CalculateCurrentUsage(), (TEST_BLOCK_SIZE + BLOCK_SERIALIZATION_HEADER_SIZE) * 2);\n+\n+    // Block 2 was not overwritten:\n+    //   SaveBlockToDisk() did not call WriteBlockToDisk() because `FlatFilePos* dbp` was non-null\n+    node::ReadBlockFromDisk(read_block, pos2, params->GetConsensus());\n+    BOOST_CHECK_EQUAL(read_block.nVersion, 2);\n+\n+    // blk00000.dat was not modified\n+    const fs::file_time_type time2 = fs::last_write_time(file_path);\n+    BOOST_CHECK(time1 == time2);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1174158220",
      "id" : 1174158220,
      "in_reply_to_id" : 1122400769,
      "line" : 163,
      "node_id" : "PRRC_kwDOABII585F_DuM",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 163,
      "original_position" : 76,
      "original_start_line" : 148,
      "path" : "src/test/blockmanager_tests.cpp",
      "position" : 89,
      "pull_request_review_id" : 1396390894,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174158220/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 161,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-04-21T20:57:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174158220",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1177996808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1177996808"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm going to revert this so it can be fixed in https://github.com/bitcoin/bitcoin/pull/27191",
      "commit_id" : "4dd854944c80c64bcc7455fad59d7a060836537b",
      "created_at" : "2023-04-26T14:49:31Z",
      "diff_hunk" : "@@ -621,7 +621,7 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n \n     bool finalize_undo = false;\n     if (!fKnown) {\n-        while (m_blockfile_info[nFile].nSize + nAddSize >= (gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64kb */ : MAX_BLOCKFILE_SIZE)) {\n+        while (m_blockfile_info[nFile].nSize + nAddSize >= (gArgs.GetBoolArg(\"-fastprune\", false) ? 0x10000 /* 64 KiB */ : MAX_BLOCKFILE_SIZE)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1177996808",
      "id" : 1177996808,
      "in_reply_to_id" : 1122420915,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585GNs4I",
      "original_commit_id" : "a3c25a4c8fab0be8a5ed3e680adcc8e85e793373",
      "original_line" : 624,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.cpp",
      "position" : null,
      "pull_request_review_id" : 1402175750,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1177996808/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-26T14:49:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1177996808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ok I updated the unit test: removed the time modified checks because all we need to check is if the content of the file has been changed, which it is NOT if `dbp != nullptr`. The read-only check in the functional test covers the rest.",
      "created_at" : "2023-04-26T15:11:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1523589827",
      "id" : 1523589827,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585a0CLD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1523589827/reactions"
      },
      "updated_at" : "2023-04-26T15:11:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1523589827",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Maybe rebase to make CI less sad?",
      "created_at" : "2023-04-27T08:04:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1525052314",
      "id" : 1525052314,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585a5nOa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525052314/reactions"
      },
      "updated_at" : "2023-04-27T08:04:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525052314",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Maybe rebase to make CI less sad?\r\n\r\nrebased. cheer up little guy!",
      "created_at" : "2023-04-27T08:49:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1525160464",
      "id" : 1525160464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585a6BoQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525160464/reactions"
      },
      "updated_at" : "2023-04-27T08:49:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1525160464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-02T09:32:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1531166660",
      "id" : 1531166660,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585bQ7_E",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531166660/reactions"
      },
      "updated_at" : "2023-05-02T09:32:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531166660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> ð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\r\n\r\ndone â ",
      "created_at" : "2023-05-02T14:56:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1531627646",
      "id" : 1531627646,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585bSsh-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531627646/reactions"
      },
      "updated_at" : "2023-05-02T14:56:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531627646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re-ACK 46cca252e30f54b06df011d268ef1b8a48b076e7.",
      "created_at" : "2023-05-02T17:39:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1531882383",
      "id" : 1531882383,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585bTquP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531882383/reactions"
      },
      "updated_at" : "2023-05-02T17:39:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531882383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/110166421?v=4",
         "events_url" : "https://api.github.com/users/pablomartin4btc/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pablomartin4btc/followers",
         "following_url" : "https://api.github.com/users/pablomartin4btc/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pablomartin4btc/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pablomartin4btc",
         "id" : 110166421,
         "login" : "pablomartin4btc",
         "node_id" : "U_kgDOBpEBlQ",
         "organizations_url" : "https://api.github.com/users/pablomartin4btc/orgs",
         "received_events_url" : "https://api.github.com/users/pablomartin4btc/received_events",
         "repos_url" : "https://api.github.com/users/pablomartin4btc/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pablomartin4btc/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pablomartin4btc/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pablomartin4btc"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> done \r\n\r\nWe are likely going to defer mergeing this for the moment, as it conflicts with the next two kernel PRs, and assumeutxo. Up to you, if you'd like to keep it rebased after each merge, in the interim.",
      "created_at" : "2023-05-09T14:59:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1540310529",
      "id" : 1540310529,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585bz0YB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540310529/reactions"
      },
      "updated_at" : "2023-05-09T14:59:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540310529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-09T16:29:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1540500594",
      "id" : 1540500594,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585b0ixy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540500594/reactions"
      },
      "updated_at" : "2023-05-09T16:29:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1540500594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> We are likely going to defer mergeing this for the moment, as it conflicts with the next two kernel PRs, and assumeutxo. Up to you, if you'd like to keep it rebased after each merge, in the interim.\r\n\r\nI agree it probably makes sense to delay the core part of this change moving the `FlushBlockFile` call. But I think the rest of the PR makes adds meaningful test coverage to parts of the code that are lacking it, and could help reassure correctness about the other PRs.\r\n\r\nRelatedly, I think the final commit here \"blockstorage: do not flush block to disk if it is already there\" (46cca252e30f54b06df011d268ef1b8a48b076e7) is doing too many things and should be broken up just to be understandable. I would suggest breaking that commit into 3 parts:\r\n\r\n1. An initial commit that only adds the python test with \"failed to open file\" in `expected_msgs`. \r\n2. A simple feature commit that moves the `FlushBlockFile` call and moves `failed to open file` from `expected_msgs` to `unexpected_msgs`\r\n3. A cleanup commit that does the little `16 KiB`, `auto` -> `bool` cleanups.\r\n\r\nIf this is done I think we could merge everything except the last two commits in a separate PR, and start having better test coverage in master right away. This PR would also become smaller and safer to rebase while it is blocked.",
      "created_at" : "2023-06-09T17:26:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1584915782",
      "id" : 1584915782,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585ed-VG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1584915782/reactions"
      },
      "updated_at" : "2023-06-09T17:26:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1584915782",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "\r\n> If this is done I think we could merge everything except the last two commits in a separate PR, and start having better test coverage in master right away. \r\n\r\nGreat plan, good idea thanks. Unit and functional tests opened in separate PR: https://github.com/bitcoin/bitcoin/pull/27850 I'll return to this after the tests and other conflicting PRs are merged or closed.",
      "created_at" : "2023-06-10T13:15:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1585663521",
      "id" : 1585663521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585eg04h",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1585663521/reactions"
      },
      "updated_at" : "2023-06-10T13:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1585663521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1247267535"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247267535"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Won't this result in the undo files not getting flushed when expected?\r\n\r\n",
      "commit_id" : "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "created_at" : "2023-06-29T23:56:35Z",
      "diff_hunk" : "@@ -648,8 +648,8 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n     if ((int)nFile != m_last_blockfile) {\n         if (!fKnown) {\n             LogPrint(BCLog::BLOCKSTORE, \"Leaving block file %i: %s\\n\", m_last_blockfile, m_blockfile_info[m_last_blockfile].ToString());\n+            FlushBlockFile(/*fFinalize=*/true, finalize_undo);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1247267535",
      "id" : 1247267535,
      "line" : 651,
      "node_id" : "PRRC_kwDOABII585KV8rP",
      "original_commit_id" : "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_line" : 651,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.cpp",
      "position" : 13,
      "pull_request_review_id" : 1506265226,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247267535/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-29T23:56:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247267535",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1247276703"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247276703"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See https://github.com/bitcoin/bitcoin/pull/27039#pullrequestreview-1320217718 for my thoughts on this,  a similar explanation was added to the OP.",
      "commit_id" : "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "created_at" : "2023-06-30T00:20:18Z",
      "diff_hunk" : "@@ -648,8 +648,8 @@ bool BlockManager::FindBlockPos(FlatFilePos& pos, unsigned int nAddSize, unsigne\n     if ((int)nFile != m_last_blockfile) {\n         if (!fKnown) {\n             LogPrint(BCLog::BLOCKSTORE, \"Leaving block file %i: %s\\n\", m_last_blockfile, m_blockfile_info[m_last_blockfile].ToString());\n+            FlushBlockFile(/*fFinalize=*/true, finalize_undo);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#discussion_r1247276703",
      "id" : 1247276703,
      "in_reply_to_id" : 1247267535,
      "line" : 651,
      "node_id" : "PRRC_kwDOABII585KV-6f",
      "original_commit_id" : "46cca252e30f54b06df011d268ef1b8a48b076e7",
      "original_line" : 651,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.cpp",
      "position" : 13,
      "pull_request_review_id" : 1506277661,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27039",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247276703/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-30T00:20:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1247276703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky separate tests PR is ready for review: https://github.com/bitcoin/bitcoin/pull/27850",
      "created_at" : "2023-07-10T13:48:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1629006969",
      "id" : 1629006969,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585hGKx5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1629006969/reactions"
      },
      "updated_at" : "2023-07-10T13:48:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1629006969",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think the milestone (https://github.com/bitcoin/bitcoin/pull/27039#event-9025998026) can be removed, given that this still needs rebase and is not a regression, or is it?",
      "created_at" : "2023-09-05T11:26:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1706438361",
      "id" : 1706438361,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585lti7Z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706438361/reactions"
      },
      "updated_at" : "2023-09-05T11:26:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1706438361",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Removed milestone. Let me know if it should be re-added.",
      "created_at" : "2023-09-12T11:10:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1715522120",
      "id" : 1715522120,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585mQMpI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715522120/reactions"
      },
      "updated_at" : "2023-09-12T11:10:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1715522120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on master now that #27850 is merged. This PR becomes very slim, one line of code changed and switching the test from expected fail to expected pass.",
      "created_at" : "2023-09-15T19:12:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1721727057",
      "id" : 1721727057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585mn3hR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721727057/reactions"
      },
      "updated_at" : "2023-09-15T19:12:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1721727057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Should squash the two commits so that there isn't a commit for which the CI fails.",
      "created_at" : "2023-09-15T23:56:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1722064811",
      "id" : 1722064811,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585mpJ-r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1722064811/reactions"
      },
      "updated_at" : "2023-09-15T23:56:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1722064811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Should squash the two commits so that there isn't a commit for which the CI fails.\r\n\r\ndone thanks",
      "created_at" : "2023-09-16T14:08:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1722238142",
      "id" : 1722238142,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585mp0S-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1722238142/reactions"
      },
      "updated_at" : "2023-09-16T14:08:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1722238142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I would prefer to split up `FindBlockPos()` prior to introducing any specific performance improvement.\r\n\r\nI have an old branch for that (linked in the OP), was originally planning to PR it once this gets merged.",
      "created_at" : "2023-09-16T14:36:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1722243515",
      "id" : 1722243515,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585mp1m7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1722243515/reactions"
      },
      "updated_at" : "2023-09-16T14:36:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1722243515",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased on master to fix conflicts and address test changes in the followup https://github.com/bitcoin/bitcoin/pull/28660\r\n\r\nMight be good to get review from @TheCharlatan because this PR touches code just updated in https://github.com/bitcoin/bitcoin/pull/27866",
      "created_at" : "2023-10-24T18:18:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1777784355",
      "id" : 1777784355,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII585p9tYj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1777784355/reactions"
      },
      "updated_at" : "2023-10-24T18:18:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1777784355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for the reviews, @mzumsande @furszy @pablomartin4btc @LarryRuane I just rebased on master to clean up CI",
      "created_at" : "2024-03-12T16:46:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27039#issuecomment-1992110502",
      "id" : 1992110502,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27039",
      "node_id" : "IC_kwDOABII5852vTGm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992110502/reactions"
      },
      "updated_at" : "2024-03-12T16:46:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1992110502",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2084648?v=4",
         "events_url" : "https://api.github.com/users/pinheadmz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pinheadmz/followers",
         "following_url" : "https://api.github.com/users/pinheadmz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pinheadmz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pinheadmz",
         "id" : 2084648,
         "login" : "pinheadmz",
         "node_id" : "MDQ6VXNlcjIwODQ2NDg=",
         "organizations_url" : "https://api.github.com/users/pinheadmz/orgs",
         "received_events_url" : "https://api.github.com/users/pinheadmz/received_events",
         "repos_url" : "https://api.github.com/users/pinheadmz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pinheadmz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pinheadmz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pinheadmz"
      }
   }
]

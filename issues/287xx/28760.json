{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "I've [discovered a paper](https://cybersecurity.springeropen.com/articles/10.1186/s42400-023-00182-9) published earlier this month. I haven't found any discussion in the repo, so I will summarize the relevant parts here and share my thoughts.\r\n\r\nLet's say we have a node that operates both over ipv4 and TOR. We don't want an observer to link these two addresses to the same node. For example, ADDR caching (#18991) was implemented for this reason.\r\n\r\nThe paper suggests the following attack:\r\n1. Fill all (115?) victim's inbound slots in `networkA.`\r\n2. Make sure these connections are candidates for eviction (higher latency, etc.).\r\n3. Make connection to the presumably-victim's node in `networkB`\r\n4. Observe whether `networkA` connections from (1) are dropped as you add connections in networkB.\r\n\r\nI haven't verified the experiments, but even understanding the attack assures me the problem exists. Authors claim to reach high precision at a very low cost (optimized by inspecting`VERSION` data and block relay data).\r\n\r\nThey suggest the following countermeasures:\r\n1. Have separate connection pools (for the sake of eviction) for each network (say TOR and ipv4).\r\n2. Make eviction unpredictable (e.g. after a random delay)",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28760/comments",
   "created_at" : "2023-10-31T12:45:51Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28760/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/28760",
   "id" : 1970392266,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28760/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII5851cczK",
   "number" : 28760,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28760/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28760/timeline",
   "title" : "Evicting and filling attack for linking multiple network addresses",
   "updated_at" : "2023-10-31T12:48:28Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28760",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
      "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
      "followers_url" : "https://api.github.com/users/naumenkogs/followers",
      "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
      "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/naumenkogs",
      "id" : 7975071,
      "login" : "naumenkogs",
      "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
      "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
      "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
      "repos_url" : "https://api.github.com/users/naumenkogs/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/naumenkogs"
   }
}

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28736).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-10-26T12:46:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28736#issuecomment-1781054025",
      "id" : 1781054025,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28736",
      "node_id" : "IC_kwDOABII585qKLpJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1781054025/reactions"
      },
      "updated_at" : "2023-10-26T12:46:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1781054025",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28736#discussion_r1373135374"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28736"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1373135374"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure about 20 lines of bash code that are impossible to read, likely no one will review, and which are hard to maintain or change in the future.\r\n\r\nOn a second though, I wonder how often this feature will be needed, or if there is a simpler hack that achieves something similar.",
      "commit_id" : "fd4ba89575959873eaf0a141d9a28a086fff6bb6",
      "created_at" : "2023-10-26T13:02:56Z",
      "diff_hunk" : "@@ -167,7 +167,29 @@ if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n fi\n \n if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n-  bash -c \"${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=${DEPENDS_DIR}/${HOST}/lib ${BASE_OUTDIR}/bin/test_bitcoin --catch_system_errors=no -l test_suite\"\n+  # The output of test_bitcoin with DEBUG_LOG_OUT is about 80MB. Thus redirect\n+  # it to a file and only if errors occur, then extract the relevant snippets\n+  # from it - between \"Entering test case\" and \"Leaving test case\".\n+  LOG=\"${BASE_BUILD_DIR}/test_bitcoin.log\"\n+  bash -c \"\n+    ${TEST_RUNNER_ENV}\n+    DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA}\n+    LD_LIBRARY_PATH=${DEPENDS_DIR}/${HOST}/lib\n+    if ! ${BASE_OUTDIR}/bin/test_bitcoin --catch_system_errors=no -l test_suite -- DEBUG_LOG_OUT > ${LOG} 2>&1 ; then\n+      # find all lines that match 'error: in test_suite/test_case' and extract the test suite and case\n+      for t in \\$(sed -E -n 's/.*error: in \\\"(.+\\\\/.+)\\\":.*/\\\\1/p' < ${LOG}) ; do\n+        # t is now something like net_tests/v2transport_test\n+        test_suite=\\${t%/*} # e.g. net_tests\n+        test_case=\\${t#*/} # e.g. v2transport_test\n+        ed -s ${LOG} <<EDCOMMANDS\n+          /Entering test suite \\\"\\${test_suite}\\\"/\n+          /Entering test case \\\"\\${test_case}\\\"/,/Leaving test case \\\"\\${test_case}\\\"/p\n+          q\n+EDCOMMANDS\n+      done\n+      exit 1\n+    fi\n+  \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28736#discussion_r1373135374",
      "id" : 1373135374,
      "line" : 192,
      "node_id" : "PRRC_kwDOABII585R2GIO",
      "original_commit_id" : "fd4ba89575959873eaf0a141d9a28a086fff6bb6",
      "original_line" : 192,
      "original_position" : 27,
      "original_start_line" : 170,
      "path" : "ci/test/06_script_b.sh",
      "position" : 27,
      "pull_request_review_id" : 1699576826,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28736",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1373135374/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 170,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-26T13:02:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1373135374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28736#discussion_r1374182811"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28736"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374182811"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Some of this was already there before. The new code is:\r\n\r\n```bash\r\n      # find all lines that match 'error: in test_suite/test_case' and extract the test suite and case\r\n      for t in \\$(sed -E -n 's/.*error: in \\\"(.+\\\\/.+)\\\":.*/\\\\1/p' < ${LOG}) ; do\r\n        test_suite=\\${t%/*} # e.g. net_tests\r\n        test_case=\\${t#*/} # e.g. v2transport_test\r\n        ed -s ${LOG} <<EDCOMMANDS\r\n          /Entering test suite \\\"\\${test_suite}\\\"/\r\n          /Entering test case \\\"\\${test_case}\\\"/,/Leaving test case \\\"\\${test_case}\\\"/p\r\n          q\r\nEDCOMMANDS\r\n```\r\n\r\nI do not think that is too different in terms of complexity from what we already have:\r\n```make\r\n%.cpp.test: %.cpp\r\n        @echo Running tests: $$(\\\r\n          cat $< | \\\r\n          grep -E \"(BOOST_FIXTURE_TEST_SUITE\\\\(|BOOST_AUTO_TEST_SUITE\\\\()\" | \\\r\n          cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1\\\r\n        ) from $<\r\n        $(AM_V_at)export TEST_LOGFILE=$(abs_builddir)/$$(\\\r\n          echo $< | grep -E -o \"(wallet/test/.*\\.cpp|test/.*\\.cpp)\" | $(SED) -e s/\\.cpp/.log/ \\\r\n        ) && \\\r\n        $(TEST_BINARY) --catch_system_errors=no -l test_suite -t \"$$(\\\r\n          cat $< | \\\r\n          grep -E \"(BOOST_FIXTURE_TEST_SUITE\\\\(|BOOST_AUTO_TEST_SUITE\\\\()\" | \\\r\n          cut -d '(' -f 2 | cut -d ',' -f 1 | cut -d ')' -f 1\\\r\n        )\" -- DEBUG_LOG_OUT > \"$$TEST_LOGFILE\" 2>&1 || (cat \"$$TEST_LOGFILE\" && false)\r\n```\r\n\r\nIf you find `ed` hard to read then I could change it to another language (python?) but I suspect it is going to be more lines of code. I any case, I don't think that's prohibitively complex task: \"find 'Entering test suite', after that print the lines between 'Entering test case' and 'Leaving test case'\".\r\n\r\nSome extra escaping is needed because this is inside `bash -c \"here;\"`. What is the point of doing that, given that this is already a bash script? I guess doing just `here;` should have the same effect.\r\n\r\n> I wonder how often this feature will be needed\r\n\r\nThis I do not know, but I know that when a test fails on CI that depends on a particular seed, having that seed is a game changer for fixing the bug.\r\n\r\nAnother option would be to print the seed unconditionally, even if `DEBUG_LOG_OUT` is not defined. But having the debug log in case of failure is useful beyond the rng seed.",
      "commit_id" : "fd4ba89575959873eaf0a141d9a28a086fff6bb6",
      "created_at" : "2023-10-27T07:35:22Z",
      "diff_hunk" : "@@ -167,7 +167,29 @@ if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n fi\n \n if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n-  bash -c \"${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=${DEPENDS_DIR}/${HOST}/lib ${BASE_OUTDIR}/bin/test_bitcoin --catch_system_errors=no -l test_suite\"\n+  # The output of test_bitcoin with DEBUG_LOG_OUT is about 80MB. Thus redirect\n+  # it to a file and only if errors occur, then extract the relevant snippets\n+  # from it - between \"Entering test case\" and \"Leaving test case\".\n+  LOG=\"${BASE_BUILD_DIR}/test_bitcoin.log\"\n+  bash -c \"\n+    ${TEST_RUNNER_ENV}\n+    DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA}\n+    LD_LIBRARY_PATH=${DEPENDS_DIR}/${HOST}/lib\n+    if ! ${BASE_OUTDIR}/bin/test_bitcoin --catch_system_errors=no -l test_suite -- DEBUG_LOG_OUT > ${LOG} 2>&1 ; then\n+      # find all lines that match 'error: in test_suite/test_case' and extract the test suite and case\n+      for t in \\$(sed -E -n 's/.*error: in \\\"(.+\\\\/.+)\\\":.*/\\\\1/p' < ${LOG}) ; do\n+        # t is now something like net_tests/v2transport_test\n+        test_suite=\\${t%/*} # e.g. net_tests\n+        test_case=\\${t#*/} # e.g. v2transport_test\n+        ed -s ${LOG} <<EDCOMMANDS\n+          /Entering test suite \\\"\\${test_suite}\\\"/\n+          /Entering test case \\\"\\${test_case}\\\"/,/Leaving test case \\\"\\${test_case}\\\"/p\n+          q\n+EDCOMMANDS\n+      done\n+      exit 1\n+    fi\n+  \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28736#discussion_r1374182811",
      "id" : 1374182811,
      "in_reply_to_id" : 1373135374,
      "line" : 192,
      "node_id" : "PRRC_kwDOABII585R6F2b",
      "original_commit_id" : "fd4ba89575959873eaf0a141d9a28a086fff6bb6",
      "original_line" : 192,
      "original_position" : 27,
      "original_start_line" : 170,
      "path" : "ci/test/06_script_b.sh",
      "position" : 27,
      "pull_request_review_id" : 1701165333,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28736",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374182811/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 170,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-27T07:35:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374182811",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28736#discussion_r1374205864"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28736"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374205864"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Another option would be to print the seed unconditionally\r\n\r\nSure, why not?\r\n\r\nTo extend my previous feedback, on why this bash code isn't ideal:\r\n* It assumes a specific unit test output format, so if boost is removed or if the format or wording changes, the code will silently stop to work\r\n* Putting the bash code into a string and then executing the string makes it impossible to check with shellcheck. And also manual review is hard, because everything is escaped.\r\n* How does it interact with `set -ex` in the script? Is the error code properly propagated in all cases? We've had tests in the past that silently passed regardless of the result, so it would be good to not accidentally re-introduce that. Doing output parsing in bash makes it easy to discard the error code, for example when adding a pipe but no pipefail.\r\n\r\n> I do not think that is too different in terms of complexity from what we already have:\r\n\r\nPretty sure this will go away with cmake, no?\r\n",
      "commit_id" : "fd4ba89575959873eaf0a141d9a28a086fff6bb6",
      "created_at" : "2023-10-27T07:56:25Z",
      "diff_hunk" : "@@ -167,7 +167,29 @@ if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n fi\n \n if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n-  bash -c \"${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=${DEPENDS_DIR}/${HOST}/lib ${BASE_OUTDIR}/bin/test_bitcoin --catch_system_errors=no -l test_suite\"\n+  # The output of test_bitcoin with DEBUG_LOG_OUT is about 80MB. Thus redirect\n+  # it to a file and only if errors occur, then extract the relevant snippets\n+  # from it - between \"Entering test case\" and \"Leaving test case\".\n+  LOG=\"${BASE_BUILD_DIR}/test_bitcoin.log\"\n+  bash -c \"\n+    ${TEST_RUNNER_ENV}\n+    DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA}\n+    LD_LIBRARY_PATH=${DEPENDS_DIR}/${HOST}/lib\n+    if ! ${BASE_OUTDIR}/bin/test_bitcoin --catch_system_errors=no -l test_suite -- DEBUG_LOG_OUT > ${LOG} 2>&1 ; then\n+      # find all lines that match 'error: in test_suite/test_case' and extract the test suite and case\n+      for t in \\$(sed -E -n 's/.*error: in \\\"(.+\\\\/.+)\\\":.*/\\\\1/p' < ${LOG}) ; do\n+        # t is now something like net_tests/v2transport_test\n+        test_suite=\\${t%/*} # e.g. net_tests\n+        test_case=\\${t#*/} # e.g. v2transport_test\n+        ed -s ${LOG} <<EDCOMMANDS\n+          /Entering test suite \\\"\\${test_suite}\\\"/\n+          /Entering test case \\\"\\${test_case}\\\"/,/Leaving test case \\\"\\${test_case}\\\"/p\n+          q\n+EDCOMMANDS\n+      done\n+      exit 1\n+    fi\n+  \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28736#discussion_r1374205864",
      "id" : 1374205864,
      "in_reply_to_id" : 1373135374,
      "line" : 192,
      "node_id" : "PRRC_kwDOABII585R6Leo",
      "original_commit_id" : "fd4ba89575959873eaf0a141d9a28a086fff6bb6",
      "original_line" : 192,
      "original_position" : 27,
      "original_start_line" : 170,
      "path" : "ci/test/06_script_b.sh",
      "position" : 27,
      "pull_request_review_id" : 1701201032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28736",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374205864/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 170,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-27T07:56:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374205864",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`fd4ba89575...67f3a76a0a`: improve readability",
      "created_at" : "2023-10-27T15:49:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28736#issuecomment-1783141874",
      "id" : 1783141874,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28736",
      "node_id" : "IC_kwDOABII585qSJXy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1783141874/reactions"
      },
      "updated_at" : "2023-10-27T15:49:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1783141874",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28736#discussion_r1374785916"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28736"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374785916"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Another option would be to print the seed unconditionally\r\n> \r\n> Sure, why not?\r\n\r\nYeah, this will solve the original issue with the seed. But I think this PR has a wider benefit of seeing the debug log for any type of failure, like in the `RUN_UNIT_TESTS` case.\r\n \r\n> To extend my previous feedback, on why this bash code isn't ideal:\r\n\r\nThanks, that makes it easier to understand and address.\r\n \r\n> * It assumes a specific unit test output format, so if boost is removed or if the format or wording changes, the code will silently stop to work\r\n\r\nTrue, but that will not remain unnoticed (as long as somebody cares to look at the log after a failure) and should be easy to adjust. This can use `test_bitcoin --log_format=XML or JUNIT`. Even with that the point is still valid - if the format is changed then this would have to be adjusted. I think the benefit of seeing the debug log outweights the need to possibly have to adjust this in the future.\r\n \r\n> * Putting the bash code into a string and then executing the string makes it impossible to check with shellcheck. And also manual review is hard, because everything is escaped.\r\n\r\nI agree, removed the `bash -c \"...\"` surrounding. Why is that used all over the place in `06_script_b.sh`?\r\n \r\n> * How does it interact with `set -ex` in the script? Is the error code properly propagated in all cases? We've had tests in the past that silently passed regardless of the result, so it would be good to not accidentally re-introduce that. Doing output parsing in bash makes it easy to discard the error code, for example when adding a pipe but no pipefail.\r\n\r\nIt works correctly - `if ! command that fails ; then foo ; exit 1; fi` the failing command will not trigger the exit due to `set -e` and will execute all commands inside the `if` body. I put `exit 1` at the end to terminate the script because being inside the `if` means the command failed.\r\n\r\n> > I do not think that is too different in terms of complexity from what we already have:\r\n> \r\n> Pretty sure this will go away with cmake, no?\r\n\r\nGood point. And actually my argument was flawed - already having some \"bad\" code is not enough justification, alone, to add more of the same.",
      "commit_id" : "1bc0914143bf3841406d2441314af0e240bc4d42",
      "created_at" : "2023-10-27T16:11:30Z",
      "diff_hunk" : "@@ -167,7 +167,29 @@ if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n fi\n \n if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n-  bash -c \"${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=${DEPENDS_DIR}/${HOST}/lib ${BASE_OUTDIR}/bin/test_bitcoin --catch_system_errors=no -l test_suite\"\n+  # The output of test_bitcoin with DEBUG_LOG_OUT is about 80MB. Thus redirect\n+  # it to a file and only if errors occur, then extract the relevant snippets\n+  # from it - between \"Entering test case\" and \"Leaving test case\".\n+  LOG=\"${BASE_BUILD_DIR}/test_bitcoin.log\"\n+  bash -c \"\n+    ${TEST_RUNNER_ENV}\n+    DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA}\n+    LD_LIBRARY_PATH=${DEPENDS_DIR}/${HOST}/lib\n+    if ! ${BASE_OUTDIR}/bin/test_bitcoin --catch_system_errors=no -l test_suite -- DEBUG_LOG_OUT > ${LOG} 2>&1 ; then\n+      # find all lines that match 'error: in test_suite/test_case' and extract the test suite and case\n+      for t in \\$(sed -E -n 's/.*error: in \\\"(.+\\\\/.+)\\\":.*/\\\\1/p' < ${LOG}) ; do\n+        # t is now something like net_tests/v2transport_test\n+        test_suite=\\${t%/*} # e.g. net_tests\n+        test_case=\\${t#*/} # e.g. v2transport_test\n+        ed -s ${LOG} <<EDCOMMANDS\n+          /Entering test suite \\\"\\${test_suite}\\\"/\n+          /Entering test case \\\"\\${test_case}\\\"/,/Leaving test case \\\"\\${test_case}\\\"/p\n+          q\n+EDCOMMANDS\n+      done\n+      exit 1\n+    fi\n+  \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28736#discussion_r1374785916",
      "id" : 1374785916,
      "in_reply_to_id" : 1373135374,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585R8ZF8",
      "original_commit_id" : "fd4ba89575959873eaf0a141d9a28a086fff6bb6",
      "original_line" : 192,
      "original_position" : 27,
      "original_start_line" : 170,
      "path" : "ci/test/06_script_b.sh",
      "position" : null,
      "pull_request_review_id" : 1702125662,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28736",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374785916/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-27T16:11:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374785916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "`67f3a76a0a...1bc0914143`: add quotes around `${variables}` to pet the linter",
      "created_at" : "2023-10-27T16:20:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28736#issuecomment-1783182282",
      "id" : 1783182282,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28736",
      "node_id" : "IC_kwDOABII585qSTPK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1783182282/reactions"
      },
      "updated_at" : "2023-10-27T16:20:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1783182282",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28736#discussion_r1374812948"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28736"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374812948"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I agree, removed the `bash -c \"...\"` surrounding. Why is that used all over the place in `06_script_b.sh`?\r\n\r\nIt is a leftover from the travis integration that started to use Docker initially, I think.\r\n\r\nEdit: Yes, see 59e9688eda4c4b01ee1713625632cd766c1a7ca9\r\n\r\n\r\nI was thinking about getting rid of it. Maybe even completely rewrite the whole script in a sane language, instead of \"rewriting\" half of it from bash to bash.",
      "commit_id" : "1bc0914143bf3841406d2441314af0e240bc4d42",
      "created_at" : "2023-10-27T16:40:37Z",
      "diff_hunk" : "@@ -167,7 +167,29 @@ if [ \"$RUN_UNIT_TESTS\" = \"true\" ]; then\n fi\n \n if [ \"$RUN_UNIT_TESTS_SEQUENTIAL\" = \"true\" ]; then\n-  bash -c \"${TEST_RUNNER_ENV} DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA} LD_LIBRARY_PATH=${DEPENDS_DIR}/${HOST}/lib ${BASE_OUTDIR}/bin/test_bitcoin --catch_system_errors=no -l test_suite\"\n+  # The output of test_bitcoin with DEBUG_LOG_OUT is about 80MB. Thus redirect\n+  # it to a file and only if errors occur, then extract the relevant snippets\n+  # from it - between \"Entering test case\" and \"Leaving test case\".\n+  LOG=\"${BASE_BUILD_DIR}/test_bitcoin.log\"\n+  bash -c \"\n+    ${TEST_RUNNER_ENV}\n+    DIR_UNIT_TEST_DATA=${DIR_UNIT_TEST_DATA}\n+    LD_LIBRARY_PATH=${DEPENDS_DIR}/${HOST}/lib\n+    if ! ${BASE_OUTDIR}/bin/test_bitcoin --catch_system_errors=no -l test_suite -- DEBUG_LOG_OUT > ${LOG} 2>&1 ; then\n+      # find all lines that match 'error: in test_suite/test_case' and extract the test suite and case\n+      for t in \\$(sed -E -n 's/.*error: in \\\"(.+\\\\/.+)\\\":.*/\\\\1/p' < ${LOG}) ; do\n+        # t is now something like net_tests/v2transport_test\n+        test_suite=\\${t%/*} # e.g. net_tests\n+        test_case=\\${t#*/} # e.g. v2transport_test\n+        ed -s ${LOG} <<EDCOMMANDS\n+          /Entering test suite \\\"\\${test_suite}\\\"/\n+          /Entering test case \\\"\\${test_case}\\\"/,/Leaving test case \\\"\\${test_case}\\\"/p\n+          q\n+EDCOMMANDS\n+      done\n+      exit 1\n+    fi\n+  \"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28736#discussion_r1374812948",
      "id" : 1374812948,
      "in_reply_to_id" : 1373135374,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585R8fsU",
      "original_commit_id" : "fd4ba89575959873eaf0a141d9a28a086fff6bb6",
      "original_line" : 192,
      "original_position" : 27,
      "original_start_line" : 170,
      "path" : "ci/test/06_script_b.sh",
      "position" : null,
      "pull_request_review_id" : 1702167755,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28736",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374812948/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-27T16:43:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374812948",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   }
]

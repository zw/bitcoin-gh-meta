{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "NONE",
   "body" : "### Please describe the feature you'd like to see added.\n\nAs a miner operating within a sanctions regime,\r\nI need to be able to reject transactions and maybe even blocks that contain sanctioned hashes.\r\n\r\nPowerful sanctions regimes provide lists of sanctioned hashes for all major blockchains, including Bitcoin. These hashes end up being incorporated into output script templates that reside on the Bitcoin blockchain, and when these hashes are included, transactions need to be rejected.\n\n### Is your feature related to a problem, if so please describe it.\n\nYes, the problem to be fixed is described in Issue #29137\n\n### Describe the solution you'd like\n\n### Sanctions File\r\nSanctions regimes list their sanctioned hashes in standard address formats.\r\n\r\nThese hashes can be extracted from official sanctions files into a simple text file of one address per line. (To avoid semantical arguments, this file SHOULD NOT be seen as containing a list of sanctioned addresses; rather, it contains a list of sanctioned hashes that may later on be incorporated into standard output script templates.)\r\n\r\nAn example sanctions file extracted from OFAC's `sdn_advanced.xml` file is available in @0xB10C's `ofac-sanctioned-digital-currency-addresses` repository: https://github.com/0xB10C/ofac-sanctioned-digital-currency-addresses/blob/lists/sanctioned_addresses_XBT.txt\r\n\r\n### Command Line Arguments / Configuration File Options\r\nProposed command line options:\r\n* `-checksanctions=filename` : Enforce sanctions during transaction validation by loading the sanctions search tree from a specified text file (Default filename: sanctions.txt)\r\n* `-sanctionblocks` : Enforce sanctions by rejecting new blocks that contain sanctioned transactions\r\n\r\n### Runtime Operation\r\nIf I am subject to a sanctions regime, I need to be able to optionally turn on sanctions enforcement. Sanctions need to be enforced when transactions are validated, such as during mempool acceptance, package relay, and possibly block validation (but not initial block download).\r\n\r\n#### Load sanctions file & populate search tree\r\nOn startup, the sanctions text file is read and the encoded script template hashes are decoded into their byte arrays in accordance with `addresstype.{h,cpp}` and/or `script/solver.{h,cpp}`.\r\n\r\nAs each sanctioned hash is decoded into its `std::vector<unsigned char>`, it is added to a trie data structure for efficient matching during transaction validation.\r\n\r\nA ternary search tree that can take `std::basic_string`s backed by `std::vector<unsigned char>` is available to the Bitcoin source code via its dependency on Boost: https://www.boost.org/doc/libs/1_84_0/libs/spirit/doc/html/spirit/qi/reference/string/symbols.html\r\n\r\n#### Reject transactions containing sanctioned hashes\r\nAny time a sanctions-enforcing node takes in a new transaction or a new inventory of transactions, that node needs to check txin output scripts and txout output scripts for sanctioned hashes.\r\n\r\n#### Optionally reject sanctioned blocks\r\nIf a particular sanctions regime encompasses enough hash power, then sanctions-enforcing miners can safely orphan blocks containing sanctioned transactions.\n\n### Describe any alternatives you've considered\n\nThe exact trie data structure to use for acceptable performance could be evaluated further.\n\n### Please leave any additional context\n\nSeveral miners have implemented their own sanctions enforcement mechanisms, with private or unpublished patches going back to as early as 2014. These implementations are neither efficient not economical to maintain. A standard implementation that can be optionally relied upon by miners in sanctions regimes is becoming a necessity.",
   "closed_at" : "2024-02-09T18:05:47Z",
   "closed_by" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
      "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
      "followers_url" : "https://api.github.com/users/achow101/followers",
      "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/achow101",
      "id" : 3782274,
      "login" : "achow101",
      "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
      "organizations_url" : "https://api.github.com/users/achow101/orgs",
      "received_events_url" : "https://api.github.com/users/achow101/received_events",
      "repos_url" : "https://api.github.com/users/achow101/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/achow101"
   },
   "comments" : 2,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29416/comments",
   "created_at" : "2024-02-09T15:57:16Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29416/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/29416",
   "id" : 2127419397,
   "labels" : [
      {
         "color" : "7cf575",
         "default" : false,
         "description" : null,
         "id" : 64583,
         "name" : "Feature",
         "node_id" : "MDU6TGFiZWw2NDU4Mw==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Feature"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29416/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585-zdgF",
   "number" : 29416,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 2,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 1,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 3,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29416/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "closed",
   "state_reason" : "not_planned",
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29416/timeline",
   "title" : "Enable sanctions enforcement in Spam Filter Code",
   "updated_at" : "2024-02-09T18:05:47Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29416",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/379469?v=4",
      "events_url" : "https://api.github.com/users/derekm/events{/privacy}",
      "followers_url" : "https://api.github.com/users/derekm/followers",
      "following_url" : "https://api.github.com/users/derekm/following{/other_user}",
      "gists_url" : "https://api.github.com/users/derekm/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/derekm",
      "id" : 379469,
      "login" : "derekm",
      "node_id" : "MDQ6VXNlcjM3OTQ2OQ==",
      "organizations_url" : "https://api.github.com/users/derekm/orgs",
      "received_events_url" : "https://api.github.com/users/derekm/received_events",
      "repos_url" : "https://api.github.com/users/derekm/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/derekm/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/derekm/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/derekm"
   }
}

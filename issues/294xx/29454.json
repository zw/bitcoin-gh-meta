{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "This issue opens a brainstorm about introducing transaction issuer-selected policy limits.\r\n\r\nCurrently, all the policy limits are either static (e.g `DUST_RELAY_TX_FEE` or `MIN_STANDARD_TX_NONWITNESS_SIZE`)\r\nor it can be set dynamically on the command-line by the node operator (e.g ancestors / descendants / incremental\r\ntx-relay fee). New policy mechanism like v3 are introducing specific limit such as the 1000 vb limit on the single\r\nchild.\r\n\r\nThis approach is limited for some use-cases, as there is an interdependency between the policy limits and efficiency\r\nor loss of funds risks. E.g for LN, higher the v3 child limit, higher is the pinning risk exposure, i.e the amount of\r\nsatoshis one can steal by slipping a pinning package under the child limit. Applying limit on child only can additionally\r\nmiss to protect package propagation, as in LN context at least parent can be inflated according channel parameters.\r\n\r\nI did a small proof-of-concept with #29448. After writing it, I realize this might be too much policy flexibility for now,\r\nespecially if transaction issuers-selected policy limits can introduce economic-induced performance asymmetries in the\r\nlow performance host, i.e what if tx-relay traffic starts to be materially segregated and this breaks BIP152 compact blocks\r\npropagation (it might be fixed by being more aggrressive on `prefilledtxn`, however this assume \"predictive\" discrepancies\r\nalgorithms). \r\n\r\nIn terms of transaction or protocol fields where such opt-in transaction-issuer policy limits could be inserted among others:\r\n- nSequence field - bip68 semantics to deal with\r\n- nVersion field lower bits\r\n- taproot annex\r\n- p2p extensions e.g `ancpkginfo` or a new `issuer_wtxid`, committing to a policy profile\r\n\r\nI think it can be an interesting to experiment with a transaction-issuer selected limit for at least the 1000 vb limit.\r\nMaking it a dynamic limit in the limit of `MAX_STANDARD_TX_WEIGHT` applied on the whole v3 package. This would at least\r\naddress my strong concern that current v3 approach is realistically weak to address substantially pinning risks for LN.\r\n\r\nSuch transaction issuer-selected policy limits could be useful for a wide array of other use-cases. E.g iterative batching\r\nwhere you would like to have child of reasonable size to fanout payouts and fee-bump at the same-time.\r\n\r\nLooking forward to thoughts.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 0,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29454/comments",
   "created_at" : "2024-02-19T19:08:49Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29454/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/29454",
   "id" : 2142993833,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29454/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII585_u32p",
   "number" : 29454,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29454/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29454/timeline",
   "title" : "Brainstorm: Transaction issuer-selected policy limits",
   "updated_at" : "2024-02-19T19:08:49Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29454",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
      "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
      "followers_url" : "https://api.github.com/users/ariard/followers",
      "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/ariard",
      "id" : 23310655,
      "login" : "ariard",
      "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
      "organizations_url" : "https://api.github.com/users/ariard/orgs",
      "received_events_url" : "https://api.github.com/users/ariard/received_events",
      "repos_url" : "https://api.github.com/users/ariard/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/ariard"
   }
}

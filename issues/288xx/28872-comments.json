[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28872).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [hebasto](https://github.com/bitcoin/bitcoin/pull/28872#pullrequestreview-1744270748) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-11-14T15:51:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28872#issuecomment-1810500261",
      "id" : 1810500261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28872",
      "node_id" : "IC_kwDOABII585r6gql",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1810500261/reactions"
      },
      "updated_at" : "2023-11-22T12:30:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1810500261",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> there is currently nothing further marked for backport to 26.x\r\n\r\nWould suggest backporting #28155 as mentioned in https://github.com/bitcoin/bitcoin/pull/28155#issuecomment-1785999512.\r\n\r\nAm rebasing and updating #28248 today, which fixes a number of bugs including the regression reported in https://github.com/bitcoin/bitcoin/pull/27213/files#r1291926369 and described in https://github.com/bitcoin/bitcoin/pull/28248#issuecomment-1789704725.  If that isn't fixed in v26.0, it may be a good idea to add a warning to the notable changes section of the release notes where the changed behavior is described, as the way nodes have until now been able to ensure connections to various networks, via addnode, is the behavior that is impacted.",
      "created_at" : "2023-11-14T17:00:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28872#issuecomment-1810696940",
      "id" : 1810696940,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28872",
      "node_id" : "IC_kwDOABII585r7Qrs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1810696940/reactions"
      },
      "updated_at" : "2023-11-14T17:07:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1810696940",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Would suggest backporting\r\n\r\nNo strong opinion, but I think that backports at this stage should either fix a regression or be clear bugfixes. Other behavior changes are better left for the next release, because they could themselves change behavior in a buggy way, see also the previous comment https://github.com/bitcoin/bitcoin/pull/28248#issuecomment-1789702441",
      "created_at" : "2023-11-14T20:35:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28872#issuecomment-1811216180",
      "id" : 1811216180,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28872",
      "node_id" : "IC_kwDOABII585r9Pc0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1811216180/reactions"
      },
      "updated_at" : "2023-11-14T20:35:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1811216180",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, the first suggested one in https://github.com/bitcoin/bitcoin/pull/28155#issuecomment-1785999512, i.e. https://github.com/bitcoin/bitcoin/commit/94e8882d820969ddc83f24f4cbe1515a886da4ea, is a bug fix.\r\n\r\nAm updating https://github.com/bitcoin/bitcoin/pull/28248 to punt for later on two of the seven, in favor of the clearest ones and the regression.",
      "created_at" : "2023-11-14T20:46:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28872#issuecomment-1811250489",
      "id" : 1811250489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28872",
      "node_id" : "IC_kwDOABII585r9X05",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1811250489/reactions"
      },
      "updated_at" : "2023-11-14T20:46:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1811250489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I see the release notes have been added since my feedback above.\r\n\r\nIf the regression in v26.0 is left unfixed, it would be a good idea to add a warning to the \"Notable Changes\" section of the release notes where the changed behavior is described, as the way nodes have until now been able to ensure connections to various networks and particularly the ones with fewer peers, via addnode, is the behavior that is impacted.  The regression was first reported in August in https://github.com/bitcoin/bitcoin/pull/27213/files#r1291926369.\r\n\r\n----\r\n\r\nEdit: I extracted #28895 from #28248 for the regression. Its first commit can be backported and it has 4 ACKs at this time of writing.",
      "created_at" : "2023-11-16T15:32:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28872#issuecomment-1814691849",
      "id" : 1814691849,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28872",
      "node_id" : "IC_kwDOABII585sKgAJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1814691849/reactions"
      },
      "updated_at" : "2023-11-20T17:35:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1814691849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28872#discussion_r1399162674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28872"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399162674"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm sorry for that late comment. Mind adding the following stuff:\r\n```\r\n- The transaction list in the GUI to no longer provide a special category for \"payment to yourself\". Now transactions that have both inputs and outputs that affect the wallet are displayed on separate lines for spending and receiving. (gui#119)\r\n\r\n- A new menu option allows migrating a legacy wallet based on keys and implied output script types stored in BerkeleyDB (BDB) to a modern wallet that uses descriptors stored in SQLite. (gui#738)\r\n\r\n- The PSBT operations dialog marks outputs paying your own wallet with \"own address\". (gui#740)\r\n\r\n- The ability to create legacy wallets is being removed. (gui#764)\r\n```\r\n?",
      "commit_id" : "ec90cd706fcba05addf94f243f10b30e5a96fa75",
      "created_at" : "2023-11-20T12:55:13Z",
      "diff_hunk" : "@@ -1 +1,327 @@\n-See https://github.com/bitcoin-core/bitcoin-devwiki/wiki/26.0%E2%80%90Release%E2%80%90Notes%E2%80%90Draft.\n\\ No newline at end of file\n+26.0 Release Notes\n+==================\n+\n+Bitcoin Core version 26.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-26.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 11.0+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- Experimental support for the v2 transport protocol defined in\n+  [BIP324](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki) was added.\n+  It is off by default, but when enabled using `-v2transport` it will be negotiated\n+  on a per-connection basis with other peers that support it too. The existing\n+  v1 transport protocol remains fully supported.\n+\n+- Nodes with multiple reachable networks will actively try to have at least one\n+  outbound connection to each network. This improves individual resistance to\n+  eclipse attacks and network level resistance to partition attacks. Users no\n+  longer need to perform active measures to ensure being connected to multiple\n+  enabled networks. (#27213)\n+\n+Pruning\n+-------\n+\n+- When using assumeutxo with `-prune`, the prune budget may be exceeded if it is set\n+  lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally\n+  split evenly across each chainstate, unless the resulting prune budget per chainstate\n+  is beneath `MIN_DISK_SPACE_FOR_BLOCK_FILES` in which case that value will be used. (#27596)\n+\n+Updated RPCs\n+------------\n+\n+- Setting `-rpcserialversion=0` is deprecated and will be removed in\n+  a future release. It can currently still be used by also adding\n+  the `-deprecatedrpc=serialversion` option. (#28448)\n+\n+- The `hash_serialized_2` value has been removed from `gettxoutsetinfo` since the value it\n+  calculated contained a bug and did not take all data into account. It is superseded by\n+  `hash_serialized_3` which provides the same functionality but serves the correctly calculated hash. (#28685)\n+\n+- New fields `transport_protocol_type` and `session_id` were added to the `getpeerinfo` RPC to indicate\n+  whether the v2 transport protocol is in use, and if so, what the session id is.\n+\n+- A new argument `v2transport` was added to the `addnode` RPC to indicate whether a v2 transaction connection\n+  is to be attempted with the peer.\n+\n+- [Miniscript](https://bitcoin.sipa.be/miniscript/) expressions can now be used in Taproot descriptors for all RPCs working with descriptors. (#27255)\n+\n+- `finalizepsbt` is now able to finalize a PSBT with inputs spending [Miniscript](https://bitcoin.sipa.be/miniscript/)-compatible Taproot leaves. (#27255)\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- `loadtxoutset` has been added, which allows loading a UTXO snapshot of the format\n+  generated by `dumptxoutset`. Once this snapshot is loaded, its contents will be\n+  deserialized into a second chainstate data structure, which is then used to sync to\n+  the network's tip.\n+\n+  Meanwhile, the original chainstate will complete the initial block download process in\n+  the background, eventually validating up to the block that the snapshot is based upon.\n+\n+  The result is a usable bitcoind instance that is current with the network tip in a\n+  matter of minutes rather than hours. UTXO snapshot are typically obtained via\n+  third-party sources (HTTP, torrent, etc.) which is reasonable since their contents\n+  are always checked by hash.\n+\n+  You can find more information on this process in the `assumeutxo` design\n+  document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\n+\n+  `getchainstates` has been added to aid in monitoring the assumeutxo sync process.\n+\n+- A new `getprioritisedtransactions` RPC has been added. It returns a map of all fee deltas created by the\n+  user with prioritisetransaction, indexed by txid. The map also indicates whether each transaction is\n+  present in the mempool. (#27501)\n+\n+- A new RPC, `submitpackage`, has been added. It can be used to submit a list of raw hex\n+transactions to the mempool to be evaluated as a package using consensus and mempool policy rules.\n+These policies include package CPFP, allowing a child with high fees to bump a parent below the\n+mempool minimum feerate (but not minimum relay feerate). (#27609)\n+\n+  - Warning: successful submission does not mean the transactions will propagate throughout the\n+    network, as package relay is not supported.\n+\n+  - Not all features are available. The package is limited to a child with all of its\n+    unconfirmed parents, and no parent may spend the output of another parent.  Also, package\n+    RBF is not supported. Refer to doc/policy/packages.md for more details on package policies\n+    and limitations.\n+\n+  - This RPC is experimental. Its interface may change.\n+\n+- A new RPC `getaddrmaninfo` has been added to view the distribution of addresses in the new and tried table of the\n+  node's address manager across different networks(ipv4, ipv6, onion, i2p, cjdns). The RPC returns count of addresses\n+  in new and tried table as well as their sum for all networks. (#27511)\n+\n+- A new `importmempool` RPC has been added. It loads a valid `mempool.dat` file and attempts to\n+  add its contents to the mempool. This can be useful to import mempool data from another node\n+  without having to modify the datadir contents and without having to restart the node. (#27460)\n+    - Warning: Importing untrusted files is dangerous, especially if metadata from the file is taken over.\n+    - If you want to apply fee deltas, it is recommended to use the `getprioritisedtransactions` and\n+      `prioritisetransaction` RPCs instead of the `apply_fee_delta_priority` option to avoid\n+      double-prioritising any already-prioritised transactions in the mempool.\n+\n+Updated settings\n+----------------\n+\n+- `bitcoind` and `bitcoin-qt` will now raise an error on startup\n+ if a datadir that is being used contains a bitcoin.conf file that\n+ will be ignored, which can happen when a datadir= line is used in\n+ a bitcoin.conf file. The error message is just a diagnostic intended\n+ to prevent accidental misconfiguration, and it can be disabled to\n+ restore the previous behavior of using the datadir while ignoring\n+ the bitcoin.conf contained in it. (#27302)\n+\n+- Passing an invalid `-debug`, `-debugexclude`, or `-loglevel` logging configuration\n+  option now raises an error, rather than logging an easily missed warning. (#27632)\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+New settings\n+------------\n+\n+Tools and Utilities\n+-------------------\n+\n+- A new `bitcoinconsensus_verify_script_with_spent_outputs` function is available in libconsensus which optionally accepts the spent outputs of the transaction being verified.\n+- A new `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT` flag is available in libconsensus that will verify scripts with the Taproot spending rules.\n+\n+Wallet\n+------\n+\n+- Wallet loading has changed in this release. Wallets with some corrupted records that could be\n+  previously loaded (with warnings) may no longer load. For example, wallets with corrupted\n+  address book entries may no longer load. If this happens, it is recommended\n+  load the wallet in a previous version of Bitcoin Core and import the data into a new wallet.\n+  Please also report an issue to help improve the software and make wallet loading more robust\n+  in these cases. (#24914)\n+\n+- The `gettransaction`, `listtransactions`, `listsinceblock` RPCs now return\n+  the `abandoned` field for all transactions. Previously, the \"abandoned\" field\n+  was only returned for sent transactions. (#25158)\n+\n+- The `listdescriptors`, `decodepsbt` and similar RPC methods now show `h` rather than apostrophe (`'`) to indicate\n+  hardened derivation. This does not apply when using the `private` parameter, which\n+  matches the marker used when descriptor was generated or imported. Newly created\n+  wallets use `h`. This change makes it easier to handle descriptor strings manually.\n+  E.g. the `importdescriptors` RPC call is easiest to use `h` as the marker: `'[\"desc\": \".../0h/...\"]'`.\n+  With this change `listdescriptors` will use `h`, so you can copy-paste the result,\n+  without having to add escape characters or switch `'` to 'h' manually.\n+  Note that this changes the descriptor checksum.\n+  For legacy wallets the `hdkeypath` field in `getaddressinfo` is unchanged,\n+  nor is the serialization format of wallet dumps. (#26076)\n+\n+- The `getbalances` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the balances were calculated. This result shouldn't be cached because importing new keys could invalidate it. (#26094)\n+\n+- The `gettransaction` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the transaction information was generated. (#26094)\n+\n+- The `getwalletinfo` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the wallet information was generated. (#26094)\n+\n+- Coin selection and transaction building now accounts for unconfirmed low-feerate ancestor transactions. When it is necessary to spend unconfirmed outputs, the wallet will add fees to ensure that the new transaction with its ancestors will achieve a mining score equal to the feerate requested by the user. (#26152)\n+\n+- For RPC methods which accept `options` parameters ((`importmulti`, `listunspent`,\n+  `fundrawtransaction`, `bumpfee`, `send`, `sendall`, `walletcreatefundedpsbt`,\n+  `simulaterawtransaction`), it is now possible to pass the options as named\n+  parameters without the need for a nested object. (#26485)\n+\n+This means it is possible make calls like:\n+\n+```sh\n+src/bitcoin-cli -named bumpfee txid fee_rate=100\n+```\n+\n+instead of\n+\n+```sh\n+src/bitcoin-cli -named bumpfee txid options='{\"fee_rate\": 100}'\n+```\n+\n+- The `deprecatedrpc=walletwarningfield` configuration option has been removed.\n+  The `createwallet`, `loadwallet`, `restorewallet` and `unloadwallet` RPCs no\n+  longer return the \"warning\" string field. The same information is provided\n+  through the \"warnings\" field added in v25.0, which returns a JSON array of\n+  strings. The \"warning\" string field was deprecated also in v25.0. (#27757)\n+\n+- The `signrawtransactionwithkey`, `signrawtransactionwithwallet`,\n+  `walletprocesspsbt` and `descriptorprocesspsbt` calls now return the more\n+  specific RPC_INVALID_PARAMETER error instead of RPC_MISC_ERROR if their\n+  sighashtype argument is malformed. (#28113)\n+\n+- RPC `walletprocesspsbt`, and `descriptorprocesspsbt` return\n+  object now includes field `hex` (if the transaction\n+  is complete) containing the serialized transaction\n+  suitable for RPC `sendrawtransaction`. (#28414)\n+\n+- It's now possible to use [Miniscript](https://bitcoin.sipa.be/miniscript/) inside Taproot leaves for descriptor wallets. (#27255)\n+\n+GUI changes\n+-----------",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28872#discussion_r1399162674",
      "id" : 1399162674,
      "line" : 238,
      "node_id" : "PRRC_kwDOABII585TZYcy",
      "original_commit_id" : "ec90cd706fcba05addf94f243f10b30e5a96fa75",
      "original_line" : 238,
      "original_position" : 240,
      "original_start_line" : 237,
      "path" : "doc/release-notes.md",
      "position" : 240,
      "pull_request_review_id" : 1739744054,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28872",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399162674/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 237,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-20T12:55:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1399162674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28872#discussion_r1401916649"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28872"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401916649"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure. Added to the next push.",
      "commit_id" : "740a85ce5f25f2282e32f148d61f92301bef7179",
      "created_at" : "2023-11-22T11:37:49Z",
      "diff_hunk" : "@@ -1 +1,327 @@\n-See https://github.com/bitcoin-core/bitcoin-devwiki/wiki/26.0%E2%80%90Release%E2%80%90Notes%E2%80%90Draft.\n\\ No newline at end of file\n+26.0 Release Notes\n+==================\n+\n+Bitcoin Core version 26.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-26.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 11.0+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- Experimental support for the v2 transport protocol defined in\n+  [BIP324](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki) was added.\n+  It is off by default, but when enabled using `-v2transport` it will be negotiated\n+  on a per-connection basis with other peers that support it too. The existing\n+  v1 transport protocol remains fully supported.\n+\n+- Nodes with multiple reachable networks will actively try to have at least one\n+  outbound connection to each network. This improves individual resistance to\n+  eclipse attacks and network level resistance to partition attacks. Users no\n+  longer need to perform active measures to ensure being connected to multiple\n+  enabled networks. (#27213)\n+\n+Pruning\n+-------\n+\n+- When using assumeutxo with `-prune`, the prune budget may be exceeded if it is set\n+  lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally\n+  split evenly across each chainstate, unless the resulting prune budget per chainstate\n+  is beneath `MIN_DISK_SPACE_FOR_BLOCK_FILES` in which case that value will be used. (#27596)\n+\n+Updated RPCs\n+------------\n+\n+- Setting `-rpcserialversion=0` is deprecated and will be removed in\n+  a future release. It can currently still be used by also adding\n+  the `-deprecatedrpc=serialversion` option. (#28448)\n+\n+- The `hash_serialized_2` value has been removed from `gettxoutsetinfo` since the value it\n+  calculated contained a bug and did not take all data into account. It is superseded by\n+  `hash_serialized_3` which provides the same functionality but serves the correctly calculated hash. (#28685)\n+\n+- New fields `transport_protocol_type` and `session_id` were added to the `getpeerinfo` RPC to indicate\n+  whether the v2 transport protocol is in use, and if so, what the session id is.\n+\n+- A new argument `v2transport` was added to the `addnode` RPC to indicate whether a v2 transaction connection\n+  is to be attempted with the peer.\n+\n+- [Miniscript](https://bitcoin.sipa.be/miniscript/) expressions can now be used in Taproot descriptors for all RPCs working with descriptors. (#27255)\n+\n+- `finalizepsbt` is now able to finalize a PSBT with inputs spending [Miniscript](https://bitcoin.sipa.be/miniscript/)-compatible Taproot leaves. (#27255)\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- `loadtxoutset` has been added, which allows loading a UTXO snapshot of the format\n+  generated by `dumptxoutset`. Once this snapshot is loaded, its contents will be\n+  deserialized into a second chainstate data structure, which is then used to sync to\n+  the network's tip.\n+\n+  Meanwhile, the original chainstate will complete the initial block download process in\n+  the background, eventually validating up to the block that the snapshot is based upon.\n+\n+  The result is a usable bitcoind instance that is current with the network tip in a\n+  matter of minutes rather than hours. UTXO snapshot are typically obtained via\n+  third-party sources (HTTP, torrent, etc.) which is reasonable since their contents\n+  are always checked by hash.\n+\n+  You can find more information on this process in the `assumeutxo` design\n+  document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\n+\n+  `getchainstates` has been added to aid in monitoring the assumeutxo sync process.\n+\n+- A new `getprioritisedtransactions` RPC has been added. It returns a map of all fee deltas created by the\n+  user with prioritisetransaction, indexed by txid. The map also indicates whether each transaction is\n+  present in the mempool. (#27501)\n+\n+- A new RPC, `submitpackage`, has been added. It can be used to submit a list of raw hex\n+transactions to the mempool to be evaluated as a package using consensus and mempool policy rules.\n+These policies include package CPFP, allowing a child with high fees to bump a parent below the\n+mempool minimum feerate (but not minimum relay feerate). (#27609)\n+\n+  - Warning: successful submission does not mean the transactions will propagate throughout the\n+    network, as package relay is not supported.\n+\n+  - Not all features are available. The package is limited to a child with all of its\n+    unconfirmed parents, and no parent may spend the output of another parent.  Also, package\n+    RBF is not supported. Refer to doc/policy/packages.md for more details on package policies\n+    and limitations.\n+\n+  - This RPC is experimental. Its interface may change.\n+\n+- A new RPC `getaddrmaninfo` has been added to view the distribution of addresses in the new and tried table of the\n+  node's address manager across different networks(ipv4, ipv6, onion, i2p, cjdns). The RPC returns count of addresses\n+  in new and tried table as well as their sum for all networks. (#27511)\n+\n+- A new `importmempool` RPC has been added. It loads a valid `mempool.dat` file and attempts to\n+  add its contents to the mempool. This can be useful to import mempool data from another node\n+  without having to modify the datadir contents and without having to restart the node. (#27460)\n+    - Warning: Importing untrusted files is dangerous, especially if metadata from the file is taken over.\n+    - If you want to apply fee deltas, it is recommended to use the `getprioritisedtransactions` and\n+      `prioritisetransaction` RPCs instead of the `apply_fee_delta_priority` option to avoid\n+      double-prioritising any already-prioritised transactions in the mempool.\n+\n+Updated settings\n+----------------\n+\n+- `bitcoind` and `bitcoin-qt` will now raise an error on startup\n+ if a datadir that is being used contains a bitcoin.conf file that\n+ will be ignored, which can happen when a datadir= line is used in\n+ a bitcoin.conf file. The error message is just a diagnostic intended\n+ to prevent accidental misconfiguration, and it can be disabled to\n+ restore the previous behavior of using the datadir while ignoring\n+ the bitcoin.conf contained in it. (#27302)\n+\n+- Passing an invalid `-debug`, `-debugexclude`, or `-loglevel` logging configuration\n+  option now raises an error, rather than logging an easily missed warning. (#27632)\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+New settings\n+------------\n+\n+Tools and Utilities\n+-------------------\n+\n+- A new `bitcoinconsensus_verify_script_with_spent_outputs` function is available in libconsensus which optionally accepts the spent outputs of the transaction being verified.\n+- A new `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT` flag is available in libconsensus that will verify scripts with the Taproot spending rules.\n+\n+Wallet\n+------\n+\n+- Wallet loading has changed in this release. Wallets with some corrupted records that could be\n+  previously loaded (with warnings) may no longer load. For example, wallets with corrupted\n+  address book entries may no longer load. If this happens, it is recommended\n+  load the wallet in a previous version of Bitcoin Core and import the data into a new wallet.\n+  Please also report an issue to help improve the software and make wallet loading more robust\n+  in these cases. (#24914)\n+\n+- The `gettransaction`, `listtransactions`, `listsinceblock` RPCs now return\n+  the `abandoned` field for all transactions. Previously, the \"abandoned\" field\n+  was only returned for sent transactions. (#25158)\n+\n+- The `listdescriptors`, `decodepsbt` and similar RPC methods now show `h` rather than apostrophe (`'`) to indicate\n+  hardened derivation. This does not apply when using the `private` parameter, which\n+  matches the marker used when descriptor was generated or imported. Newly created\n+  wallets use `h`. This change makes it easier to handle descriptor strings manually.\n+  E.g. the `importdescriptors` RPC call is easiest to use `h` as the marker: `'[\"desc\": \".../0h/...\"]'`.\n+  With this change `listdescriptors` will use `h`, so you can copy-paste the result,\n+  without having to add escape characters or switch `'` to 'h' manually.\n+  Note that this changes the descriptor checksum.\n+  For legacy wallets the `hdkeypath` field in `getaddressinfo` is unchanged,\n+  nor is the serialization format of wallet dumps. (#26076)\n+\n+- The `getbalances` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the balances were calculated. This result shouldn't be cached because importing new keys could invalidate it. (#26094)\n+\n+- The `gettransaction` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the transaction information was generated. (#26094)\n+\n+- The `getwalletinfo` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the wallet information was generated. (#26094)\n+\n+- Coin selection and transaction building now accounts for unconfirmed low-feerate ancestor transactions. When it is necessary to spend unconfirmed outputs, the wallet will add fees to ensure that the new transaction with its ancestors will achieve a mining score equal to the feerate requested by the user. (#26152)\n+\n+- For RPC methods which accept `options` parameters ((`importmulti`, `listunspent`,\n+  `fundrawtransaction`, `bumpfee`, `send`, `sendall`, `walletcreatefundedpsbt`,\n+  `simulaterawtransaction`), it is now possible to pass the options as named\n+  parameters without the need for a nested object. (#26485)\n+\n+This means it is possible make calls like:\n+\n+```sh\n+src/bitcoin-cli -named bumpfee txid fee_rate=100\n+```\n+\n+instead of\n+\n+```sh\n+src/bitcoin-cli -named bumpfee txid options='{\"fee_rate\": 100}'\n+```\n+\n+- The `deprecatedrpc=walletwarningfield` configuration option has been removed.\n+  The `createwallet`, `loadwallet`, `restorewallet` and `unloadwallet` RPCs no\n+  longer return the \"warning\" string field. The same information is provided\n+  through the \"warnings\" field added in v25.0, which returns a JSON array of\n+  strings. The \"warning\" string field was deprecated also in v25.0. (#27757)\n+\n+- The `signrawtransactionwithkey`, `signrawtransactionwithwallet`,\n+  `walletprocesspsbt` and `descriptorprocesspsbt` calls now return the more\n+  specific RPC_INVALID_PARAMETER error instead of RPC_MISC_ERROR if their\n+  sighashtype argument is malformed. (#28113)\n+\n+- RPC `walletprocesspsbt`, and `descriptorprocesspsbt` return\n+  object now includes field `hex` (if the transaction\n+  is complete) containing the serialized transaction\n+  suitable for RPC `sendrawtransaction`. (#28414)\n+\n+- It's now possible to use [Miniscript](https://bitcoin.sipa.be/miniscript/) inside Taproot leaves for descriptor wallets. (#27255)\n+\n+GUI changes\n+-----------",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28872#discussion_r1401916649",
      "id" : 1401916649,
      "in_reply_to_id" : 1399162674,
      "line" : 238,
      "node_id" : "PRRC_kwDOABII585Tj4zp",
      "original_commit_id" : "ec90cd706fcba05addf94f243f10b30e5a96fa75",
      "original_line" : 238,
      "original_position" : 240,
      "original_start_line" : 237,
      "path" : "doc/release-notes.md",
      "position" : 240,
      "pull_request_review_id" : 1744181758,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28872",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401916649/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 237,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-22T11:37:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401916649",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Suggesting to backport https://github.com/bitcoin/bitcoin/pull/28905 as well to ensure CI pass.",
      "created_at" : "2023-11-22T11:45:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28872#issuecomment-1822617995",
      "id" : 1822617995,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28872",
      "node_id" : "IC_kwDOABII585sovGL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1822617995/reactions"
      },
      "updated_at" : "2023-11-22T11:45:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1822617995",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28872#discussion_r1401975084"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28872"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401975084"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: \r\n```suggestion\r\n- The transaction list in the GUI no longer provides a special category for \"payment to yourself\". Now transactions that have both inputs and outputs that affect the wallet are displayed on separate lines for spending and receiving. (gui#119)\r\n```\r\n\r\nI apologize for the wrong Grammar in my initial suggestion.",
      "commit_id" : "740a85ce5f25f2282e32f148d61f92301bef7179",
      "created_at" : "2023-11-22T12:30:12Z",
      "diff_hunk" : "@@ -1 +1,335 @@\n-See https://github.com/bitcoin-core/bitcoin-devwiki/wiki/26.0%E2%80%90Release%E2%80%90Notes%E2%80%90Draft.\n\\ No newline at end of file\n+26.0 rc3 Release Notes\n+======================\n+\n+Bitcoin Core version 26.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-26.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 11.0+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- Experimental support for the v2 transport protocol defined in\n+  [BIP324](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki) was added.\n+  It is off by default, but when enabled using `-v2transport` it will be negotiated\n+  on a per-connection basis with other peers that support it too. The existing\n+  v1 transport protocol remains fully supported.\n+\n+- Nodes with multiple reachable networks will actively try to have at least one\n+  outbound connection to each network. This improves individual resistance to\n+  eclipse attacks and network level resistance to partition attacks. Users no\n+  longer need to perform active measures to ensure being connected to multiple\n+  enabled networks. (#27213)\n+\n+Pruning\n+-------\n+\n+- When using assumeutxo with `-prune`, the prune budget may be exceeded if it is set\n+  lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally\n+  split evenly across each chainstate, unless the resulting prune budget per chainstate\n+  is beneath `MIN_DISK_SPACE_FOR_BLOCK_FILES` in which case that value will be used. (#27596)\n+\n+Updated RPCs\n+------------\n+\n+- Setting `-rpcserialversion=0` is deprecated and will be removed in\n+  a future release. It can currently still be used by also adding\n+  the `-deprecatedrpc=serialversion` option. (#28448)\n+\n+- The `hash_serialized_2` value has been removed from `gettxoutsetinfo` since the value it\n+  calculated contained a bug and did not take all data into account. It is superseded by\n+  `hash_serialized_3` which provides the same functionality but serves the correctly calculated hash. (#28685)\n+\n+- New fields `transport_protocol_type` and `session_id` were added to the `getpeerinfo` RPC to indicate\n+  whether the v2 transport protocol is in use, and if so, what the session id is.\n+\n+- A new argument `v2transport` was added to the `addnode` RPC to indicate whether a v2 transaction connection\n+  is to be attempted with the peer.\n+\n+- [Miniscript](https://bitcoin.sipa.be/miniscript/) expressions can now be used in Taproot descriptors for all RPCs working with descriptors. (#27255)\n+\n+- `finalizepsbt` is now able to finalize a PSBT with inputs spending [Miniscript](https://bitcoin.sipa.be/miniscript/)-compatible Taproot leaves. (#27255)\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- `loadtxoutset` has been added, which allows loading a UTXO snapshot of the format\n+  generated by `dumptxoutset`. Once this snapshot is loaded, its contents will be\n+  deserialized into a second chainstate data structure, which is then used to sync to\n+  the network's tip.\n+\n+  Meanwhile, the original chainstate will complete the initial block download process in\n+  the background, eventually validating up to the block that the snapshot is based upon.\n+\n+  The result is a usable bitcoind instance that is current with the network tip in a\n+  matter of minutes rather than hours. UTXO snapshot are typically obtained via\n+  third-party sources (HTTP, torrent, etc.) which is reasonable since their contents\n+  are always checked by hash.\n+\n+  You can find more information on this process in the `assumeutxo` design\n+  document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\n+\n+  `getchainstates` has been added to aid in monitoring the assumeutxo sync process.\n+\n+- A new `getprioritisedtransactions` RPC has been added. It returns a map of all fee deltas created by the\n+  user with prioritisetransaction, indexed by txid. The map also indicates whether each transaction is\n+  present in the mempool. (#27501)\n+\n+- A new RPC, `submitpackage`, has been added. It can be used to submit a list of raw hex\n+transactions to the mempool to be evaluated as a package using consensus and mempool policy rules.\n+These policies include package CPFP, allowing a child with high fees to bump a parent below the\n+mempool minimum feerate (but not minimum relay feerate). (#27609)\n+\n+  - Warning: successful submission does not mean the transactions will propagate throughout the\n+    network, as package relay is not supported.\n+\n+  - Not all features are available. The package is limited to a child with all of its\n+    unconfirmed parents, and no parent may spend the output of another parent.  Also, package\n+    RBF is not supported. Refer to doc/policy/packages.md for more details on package policies\n+    and limitations.\n+\n+  - This RPC is experimental. Its interface may change.\n+\n+- A new RPC `getaddrmaninfo` has been added to view the distribution of addresses in the new and tried table of the\n+  node's address manager across different networks(ipv4, ipv6, onion, i2p, cjdns). The RPC returns count of addresses\n+  in new and tried table as well as their sum for all networks. (#27511)\n+\n+- A new `importmempool` RPC has been added. It loads a valid `mempool.dat` file and attempts to\n+  add its contents to the mempool. This can be useful to import mempool data from another node\n+  without having to modify the datadir contents and without having to restart the node. (#27460)\n+    - Warning: Importing untrusted files is dangerous, especially if metadata from the file is taken over.\n+    - If you want to apply fee deltas, it is recommended to use the `getprioritisedtransactions` and\n+      `prioritisetransaction` RPCs instead of the `apply_fee_delta_priority` option to avoid\n+      double-prioritising any already-prioritised transactions in the mempool.\n+\n+Updated settings\n+----------------\n+\n+- `bitcoind` and `bitcoin-qt` will now raise an error on startup\n+ if a datadir that is being used contains a bitcoin.conf file that\n+ will be ignored, which can happen when a datadir= line is used in\n+ a bitcoin.conf file. The error message is just a diagnostic intended\n+ to prevent accidental misconfiguration, and it can be disabled to\n+ restore the previous behavior of using the datadir while ignoring\n+ the bitcoin.conf contained in it. (#27302)\n+\n+- Passing an invalid `-debug`, `-debugexclude`, or `-loglevel` logging configuration\n+  option now raises an error, rather than logging an easily missed warning. (#27632)\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+New settings\n+------------\n+\n+Tools and Utilities\n+-------------------\n+\n+- A new `bitcoinconsensus_verify_script_with_spent_outputs` function is available in libconsensus which optionally accepts the spent outputs of the transaction being verified.\n+- A new `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT` flag is available in libconsensus that will verify scripts with the Taproot spending rules.\n+\n+Wallet\n+------\n+\n+- Wallet loading has changed in this release. Wallets with some corrupted records that could be\n+  previously loaded (with warnings) may no longer load. For example, wallets with corrupted\n+  address book entries may no longer load. If this happens, it is recommended\n+  load the wallet in a previous version of Bitcoin Core and import the data into a new wallet.\n+  Please also report an issue to help improve the software and make wallet loading more robust\n+  in these cases. (#24914)\n+\n+- The `gettransaction`, `listtransactions`, `listsinceblock` RPCs now return\n+  the `abandoned` field for all transactions. Previously, the \"abandoned\" field\n+  was only returned for sent transactions. (#25158)\n+\n+- The `listdescriptors`, `decodepsbt` and similar RPC methods now show `h` rather than apostrophe (`'`) to indicate\n+  hardened derivation. This does not apply when using the `private` parameter, which\n+  matches the marker used when descriptor was generated or imported. Newly created\n+  wallets use `h`. This change makes it easier to handle descriptor strings manually.\n+  E.g. the `importdescriptors` RPC call is easiest to use `h` as the marker: `'[\"desc\": \".../0h/...\"]'`.\n+  With this change `listdescriptors` will use `h`, so you can copy-paste the result,\n+  without having to add escape characters or switch `'` to 'h' manually.\n+  Note that this changes the descriptor checksum.\n+  For legacy wallets the `hdkeypath` field in `getaddressinfo` is unchanged,\n+  nor is the serialization format of wallet dumps. (#26076)\n+\n+- The `getbalances` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the balances were calculated. This result shouldn't be cached because importing new keys could invalidate it. (#26094)\n+\n+- The `gettransaction` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the transaction information was generated. (#26094)\n+\n+- The `getwalletinfo` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the wallet information was generated. (#26094)\n+\n+- Coin selection and transaction building now accounts for unconfirmed low-feerate ancestor transactions. When it is necessary to spend unconfirmed outputs, the wallet will add fees to ensure that the new transaction with its ancestors will achieve a mining score equal to the feerate requested by the user. (#26152)\n+\n+- For RPC methods which accept `options` parameters ((`importmulti`, `listunspent`,\n+  `fundrawtransaction`, `bumpfee`, `send`, `sendall`, `walletcreatefundedpsbt`,\n+  `simulaterawtransaction`), it is now possible to pass the options as named\n+  parameters without the need for a nested object. (#26485)\n+\n+This means it is possible make calls like:\n+\n+```sh\n+src/bitcoin-cli -named bumpfee txid fee_rate=100\n+```\n+\n+instead of\n+\n+```sh\n+src/bitcoin-cli -named bumpfee txid options='{\"fee_rate\": 100}'\n+```\n+\n+- The `deprecatedrpc=walletwarningfield` configuration option has been removed.\n+  The `createwallet`, `loadwallet`, `restorewallet` and `unloadwallet` RPCs no\n+  longer return the \"warning\" string field. The same information is provided\n+  through the \"warnings\" field added in v25.0, which returns a JSON array of\n+  strings. The \"warning\" string field was deprecated also in v25.0. (#27757)\n+\n+- The `signrawtransactionwithkey`, `signrawtransactionwithwallet`,\n+  `walletprocesspsbt` and `descriptorprocesspsbt` calls now return the more\n+  specific RPC_INVALID_PARAMETER error instead of RPC_MISC_ERROR if their\n+  sighashtype argument is malformed. (#28113)\n+\n+- RPC `walletprocesspsbt`, and `descriptorprocesspsbt` return\n+  object now includes field `hex` (if the transaction\n+  is complete) containing the serialized transaction\n+  suitable for RPC `sendrawtransaction`. (#28414)\n+\n+- It's now possible to use [Miniscript](https://bitcoin.sipa.be/miniscript/) inside Taproot leaves for descriptor wallets. (#27255)\n+\n+GUI changes\n+-----------\n+\n+- The transaction list in the GUI to no longer provide a special category for \"payment to yourself\". Now transactions that have both inputs and outputs that affect the wallet are displayed on separate lines for spending and receiving. (gui#119)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28872#discussion_r1401975084",
      "id" : 1401975084,
      "line" : 240,
      "node_id" : "PRRC_kwDOABII585TkHEs",
      "original_commit_id" : "740a85ce5f25f2282e32f148d61f92301bef7179",
      "original_line" : 240,
      "original_position" : 242,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : 242,
      "pull_request_review_id" : 1744270748,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28872",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401975084/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-22T12:30:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1401975084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28872#discussion_r1402376062"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28872"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402376062"
         }
      },
      "author_association" : "MEMBER",
      "body" : "No worries, fixed up.",
      "commit_id" : "f868852d3d7321aa522d6b168f33bef1e5eba2dc",
      "created_at" : "2023-11-22T16:30:01Z",
      "diff_hunk" : "@@ -1 +1,335 @@\n-See https://github.com/bitcoin-core/bitcoin-devwiki/wiki/26.0%E2%80%90Release%E2%80%90Notes%E2%80%90Draft.\n\\ No newline at end of file\n+26.0 rc3 Release Notes\n+======================\n+\n+Bitcoin Core version 26.0 is now available from:\n+\n+  <https://bitcoincore.org/bin/bitcoin-core-26.0/>\n+\n+This release includes new features, various bug fixes and performance\n+improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at GitHub:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+How to Upgrade\n+==============\n+\n+If you are running an older version, shut it down. Wait until it has completely\n+shut down (which might take a few minutes in some cases), then run the\n+installer (on Windows) or just copy over `/Applications/Bitcoin-Qt` (on macOS)\n+or `bitcoind`/`bitcoin-qt` (on Linux).\n+\n+Upgrading directly from a version of Bitcoin Core that has reached its EOL is\n+possible, but it might take some time if the data directory needs to be migrated. Old\n+wallet versions of Bitcoin Core are generally supported.\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is supported and extensively tested on operating systems\n+using the Linux kernel, macOS 11.0+, and Windows 7 and newer.  Bitcoin\n+Core should also work on most other Unix-like systems but is not as\n+frequently tested on them.  It is not recommended to use Bitcoin Core on\n+unsupported systems.\n+\n+Notable changes\n+===============\n+\n+P2P and network changes\n+-----------------------\n+\n+- Experimental support for the v2 transport protocol defined in\n+  [BIP324](https://github.com/bitcoin/bips/blob/master/bip-0324.mediawiki) was added.\n+  It is off by default, but when enabled using `-v2transport` it will be negotiated\n+  on a per-connection basis with other peers that support it too. The existing\n+  v1 transport protocol remains fully supported.\n+\n+- Nodes with multiple reachable networks will actively try to have at least one\n+  outbound connection to each network. This improves individual resistance to\n+  eclipse attacks and network level resistance to partition attacks. Users no\n+  longer need to perform active measures to ensure being connected to multiple\n+  enabled networks. (#27213)\n+\n+Pruning\n+-------\n+\n+- When using assumeutxo with `-prune`, the prune budget may be exceeded if it is set\n+  lower than 1100MB (i.e. `MIN_DISK_SPACE_FOR_BLOCK_FILES * 2`). Prune budget is normally\n+  split evenly across each chainstate, unless the resulting prune budget per chainstate\n+  is beneath `MIN_DISK_SPACE_FOR_BLOCK_FILES` in which case that value will be used. (#27596)\n+\n+Updated RPCs\n+------------\n+\n+- Setting `-rpcserialversion=0` is deprecated and will be removed in\n+  a future release. It can currently still be used by also adding\n+  the `-deprecatedrpc=serialversion` option. (#28448)\n+\n+- The `hash_serialized_2` value has been removed from `gettxoutsetinfo` since the value it\n+  calculated contained a bug and did not take all data into account. It is superseded by\n+  `hash_serialized_3` which provides the same functionality but serves the correctly calculated hash. (#28685)\n+\n+- New fields `transport_protocol_type` and `session_id` were added to the `getpeerinfo` RPC to indicate\n+  whether the v2 transport protocol is in use, and if so, what the session id is.\n+\n+- A new argument `v2transport` was added to the `addnode` RPC to indicate whether a v2 transaction connection\n+  is to be attempted with the peer.\n+\n+- [Miniscript](https://bitcoin.sipa.be/miniscript/) expressions can now be used in Taproot descriptors for all RPCs working with descriptors. (#27255)\n+\n+- `finalizepsbt` is now able to finalize a PSBT with inputs spending [Miniscript](https://bitcoin.sipa.be/miniscript/)-compatible Taproot leaves. (#27255)\n+\n+Changes to wallet related RPCs can be found in the Wallet section below.\n+\n+New RPCs\n+--------\n+\n+- `loadtxoutset` has been added, which allows loading a UTXO snapshot of the format\n+  generated by `dumptxoutset`. Once this snapshot is loaded, its contents will be\n+  deserialized into a second chainstate data structure, which is then used to sync to\n+  the network's tip.\n+\n+  Meanwhile, the original chainstate will complete the initial block download process in\n+  the background, eventually validating up to the block that the snapshot is based upon.\n+\n+  The result is a usable bitcoind instance that is current with the network tip in a\n+  matter of minutes rather than hours. UTXO snapshot are typically obtained via\n+  third-party sources (HTTP, torrent, etc.) which is reasonable since their contents\n+  are always checked by hash.\n+\n+  You can find more information on this process in the `assumeutxo` design\n+  document (<https://github.com/bitcoin/bitcoin/blob/master/doc/design/assumeutxo.md>).\n+\n+  `getchainstates` has been added to aid in monitoring the assumeutxo sync process.\n+\n+- A new `getprioritisedtransactions` RPC has been added. It returns a map of all fee deltas created by the\n+  user with prioritisetransaction, indexed by txid. The map also indicates whether each transaction is\n+  present in the mempool. (#27501)\n+\n+- A new RPC, `submitpackage`, has been added. It can be used to submit a list of raw hex\n+transactions to the mempool to be evaluated as a package using consensus and mempool policy rules.\n+These policies include package CPFP, allowing a child with high fees to bump a parent below the\n+mempool minimum feerate (but not minimum relay feerate). (#27609)\n+\n+  - Warning: successful submission does not mean the transactions will propagate throughout the\n+    network, as package relay is not supported.\n+\n+  - Not all features are available. The package is limited to a child with all of its\n+    unconfirmed parents, and no parent may spend the output of another parent.  Also, package\n+    RBF is not supported. Refer to doc/policy/packages.md for more details on package policies\n+    and limitations.\n+\n+  - This RPC is experimental. Its interface may change.\n+\n+- A new RPC `getaddrmaninfo` has been added to view the distribution of addresses in the new and tried table of the\n+  node's address manager across different networks(ipv4, ipv6, onion, i2p, cjdns). The RPC returns count of addresses\n+  in new and tried table as well as their sum for all networks. (#27511)\n+\n+- A new `importmempool` RPC has been added. It loads a valid `mempool.dat` file and attempts to\n+  add its contents to the mempool. This can be useful to import mempool data from another node\n+  without having to modify the datadir contents and without having to restart the node. (#27460)\n+    - Warning: Importing untrusted files is dangerous, especially if metadata from the file is taken over.\n+    - If you want to apply fee deltas, it is recommended to use the `getprioritisedtransactions` and\n+      `prioritisetransaction` RPCs instead of the `apply_fee_delta_priority` option to avoid\n+      double-prioritising any already-prioritised transactions in the mempool.\n+\n+Updated settings\n+----------------\n+\n+- `bitcoind` and `bitcoin-qt` will now raise an error on startup\n+ if a datadir that is being used contains a bitcoin.conf file that\n+ will be ignored, which can happen when a datadir= line is used in\n+ a bitcoin.conf file. The error message is just a diagnostic intended\n+ to prevent accidental misconfiguration, and it can be disabled to\n+ restore the previous behavior of using the datadir while ignoring\n+ the bitcoin.conf contained in it. (#27302)\n+\n+- Passing an invalid `-debug`, `-debugexclude`, or `-loglevel` logging configuration\n+  option now raises an error, rather than logging an easily missed warning. (#27632)\n+\n+Changes to GUI or wallet related settings can be found in the GUI or Wallet section below.\n+\n+New settings\n+------------\n+\n+Tools and Utilities\n+-------------------\n+\n+- A new `bitcoinconsensus_verify_script_with_spent_outputs` function is available in libconsensus which optionally accepts the spent outputs of the transaction being verified.\n+- A new `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT` flag is available in libconsensus that will verify scripts with the Taproot spending rules.\n+\n+Wallet\n+------\n+\n+- Wallet loading has changed in this release. Wallets with some corrupted records that could be\n+  previously loaded (with warnings) may no longer load. For example, wallets with corrupted\n+  address book entries may no longer load. If this happens, it is recommended\n+  load the wallet in a previous version of Bitcoin Core and import the data into a new wallet.\n+  Please also report an issue to help improve the software and make wallet loading more robust\n+  in these cases. (#24914)\n+\n+- The `gettransaction`, `listtransactions`, `listsinceblock` RPCs now return\n+  the `abandoned` field for all transactions. Previously, the \"abandoned\" field\n+  was only returned for sent transactions. (#25158)\n+\n+- The `listdescriptors`, `decodepsbt` and similar RPC methods now show `h` rather than apostrophe (`'`) to indicate\n+  hardened derivation. This does not apply when using the `private` parameter, which\n+  matches the marker used when descriptor was generated or imported. Newly created\n+  wallets use `h`. This change makes it easier to handle descriptor strings manually.\n+  E.g. the `importdescriptors` RPC call is easiest to use `h` as the marker: `'[\"desc\": \".../0h/...\"]'`.\n+  With this change `listdescriptors` will use `h`, so you can copy-paste the result,\n+  without having to add escape characters or switch `'` to 'h' manually.\n+  Note that this changes the descriptor checksum.\n+  For legacy wallets the `hdkeypath` field in `getaddressinfo` is unchanged,\n+  nor is the serialization format of wallet dumps. (#26076)\n+\n+- The `getbalances` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the balances were calculated. This result shouldn't be cached because importing new keys could invalidate it. (#26094)\n+\n+- The `gettransaction` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the transaction information was generated. (#26094)\n+\n+- The `getwalletinfo` RPC now returns a `lastprocessedblock` JSON object which contains the wallet's last processed block\n+  hash and height at the time the wallet information was generated. (#26094)\n+\n+- Coin selection and transaction building now accounts for unconfirmed low-feerate ancestor transactions. When it is necessary to spend unconfirmed outputs, the wallet will add fees to ensure that the new transaction with its ancestors will achieve a mining score equal to the feerate requested by the user. (#26152)\n+\n+- For RPC methods which accept `options` parameters ((`importmulti`, `listunspent`,\n+  `fundrawtransaction`, `bumpfee`, `send`, `sendall`, `walletcreatefundedpsbt`,\n+  `simulaterawtransaction`), it is now possible to pass the options as named\n+  parameters without the need for a nested object. (#26485)\n+\n+This means it is possible make calls like:\n+\n+```sh\n+src/bitcoin-cli -named bumpfee txid fee_rate=100\n+```\n+\n+instead of\n+\n+```sh\n+src/bitcoin-cli -named bumpfee txid options='{\"fee_rate\": 100}'\n+```\n+\n+- The `deprecatedrpc=walletwarningfield` configuration option has been removed.\n+  The `createwallet`, `loadwallet`, `restorewallet` and `unloadwallet` RPCs no\n+  longer return the \"warning\" string field. The same information is provided\n+  through the \"warnings\" field added in v25.0, which returns a JSON array of\n+  strings. The \"warning\" string field was deprecated also in v25.0. (#27757)\n+\n+- The `signrawtransactionwithkey`, `signrawtransactionwithwallet`,\n+  `walletprocesspsbt` and `descriptorprocesspsbt` calls now return the more\n+  specific RPC_INVALID_PARAMETER error instead of RPC_MISC_ERROR if their\n+  sighashtype argument is malformed. (#28113)\n+\n+- RPC `walletprocesspsbt`, and `descriptorprocesspsbt` return\n+  object now includes field `hex` (if the transaction\n+  is complete) containing the serialized transaction\n+  suitable for RPC `sendrawtransaction`. (#28414)\n+\n+- It's now possible to use [Miniscript](https://bitcoin.sipa.be/miniscript/) inside Taproot leaves for descriptor wallets. (#27255)\n+\n+GUI changes\n+-----------\n+\n+- The transaction list in the GUI to no longer provide a special category for \"payment to yourself\". Now transactions that have both inputs and outputs that affect the wallet are displayed on separate lines for spending and receiving. (gui#119)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28872#discussion_r1402376062",
      "id" : 1402376062,
      "in_reply_to_id" : 1401975084,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Tlo9-",
      "original_commit_id" : "740a85ce5f25f2282e32f148d61f92301bef7179",
      "original_line" : 240,
      "original_position" : 242,
      "original_start_line" : null,
      "path" : "doc/release-notes.md",
      "position" : null,
      "pull_request_review_id" : 1744879801,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28872",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402376062/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-22T16:30:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402376062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   }
]

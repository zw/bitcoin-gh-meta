[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28868).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [furszy](https://github.com/bitcoin/bitcoin/pull/28868#pullrequestreview-1802295539), [ryanofsky](https://github.com/bitcoin/bitcoin/pull/28868#pullrequestreview-1854957206) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28976](https://github.com/bitcoin/bitcoin/pull/28976) (wallet: Fix migration of blank wallets by achow101)\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n* [#27286](https://github.com/bitcoin/bitcoin/pull/27286) (wallet: Keep track of the wallet's own transaction outputs in memory by achow101)\n* [#26596](https://github.com/bitcoin/bitcoin/pull/26596) (wallet: Migrate legacy wallets to descriptor wallets without requiring BDB by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-11-13T21:32:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#issuecomment-1809161000",
      "id" : 1809161000,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28868",
      "node_id" : "IC_kwDOABII585r1Zso",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809161000/reactions"
      },
      "updated_at" : "2024-01-31T22:41:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809161000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "It seems like there's a random failure happening where something in BDB is `free()`ing an invalid pointer which causes bitcoind to abort. This appears to only be happening with the change the reloads the wallet for the early exits. I don't really understand why that is even happening, and it doesn't happen consistently enough to reliably debug.",
      "created_at" : "2023-11-14T00:29:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#issuecomment-1809348998",
      "id" : 1809348998,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28868",
      "node_id" : "IC_kwDOABII585r2HmG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809348998/reactions"
      },
      "updated_at" : "2023-11-14T00:29:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809348998",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I also get a test failure at 65b2da99fe18768d1bd4cd67522f7031f16a3420 about half the time. With the first commit a47f220933f202dd1f972d30f6cb31b09ca0a225 this test doesn't fail (at least not the first ten times I tried).\r\n\r\n```\r\n228/283 - wallet_migration.py failed, Duration: 2 s\r\n\r\nstdout:\r\n2023-11-14T06:24:21.154000Z TestFramework (INFO): PRNG seed is: 2952483070848634871\r\n...\r\n2023-11-14T06:24:22.297000Z TestFramework (INFO): Test migration of an encrypted wallet\r\n2023-11-14T06:24:22.892000Z TestFramework (ERROR): Assertion failed\r\nTraceback (most recent call last):\r\n...\r\n  File \"/home/sjors/dev/bitcoin/test/functional/wallet_migration.py\", line 452, in test_encrypted\r\n    assert_raises_rpc_error(-4, \"The passphrase contains a null character\", wallet.migratewallet, None, \"pass\\0with\\0null\")\r\n  File \"/home/sjors/dev/bitcoin/test/functional/test_framework/util.py\", line 130, in assert_raises_rpc_error\r\n    assert try_rpc(code, message, fun, *args, **kwds), \"No exception raised\"\r\n  File \"/home/sjors/dev/bitcoin/test/functional/test_framework/util.py\", line 150, in try_rpc\r\n    raise AssertionError(\"Unexpected exception raised: \" + type(e).__name__)\r\nAssertionError: Unexpected exception raised: RemoteDisconnected\r\n2023-11-14T06:24:22.944000Z TestFramework (INFO): Stopping nodes\r\n[node 0] Cleaning up leftover process\r\n```",
      "created_at" : "2023-11-14T06:29:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#issuecomment-1809618420",
      "id" : 1809618420,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28868",
      "node_id" : "IC_kwDOABII585r3JX0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809618420/reactions"
      },
      "updated_at" : "2023-11-14T06:31:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809618420",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "While trying to test the first commit, I ran into something odd. It seems that an _empty_ watch-only wallet legacy is treated as a descriptor wallet by `migratewallet`.\r\n\r\n1. Checkout master at 5800c558eb5efb4839ed00d6967e43306d68e1c3, compile with BDB\r\n2. `src/bitcoind -deprecatedrpc=create_bdb`\r\n3. `src/bitcoin-cli createwallet TestMigrate true true \"\" false false` (this warns that legacy wallets are deprecated)\r\n4. Restart the node (not sure if necessary) and load the wallet again, double check with `getwalletinfo` that it's a legacy wallet\r\n5. `src/bitcoin-cli -rpcwallet=TestMigrate migratewallet`\r\n\r\nThat results in:\r\n\r\n```\r\nerror code: -4\r\nerror message:\r\nError: This wallet is already a descriptor wallet\r\n```\r\n\r\nOnce I import an address it does migrate.",
      "created_at" : "2023-11-14T06:57:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#issuecomment-1809641110",
      "id" : 1809641110,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28868",
      "node_id" : "IC_kwDOABII585r3O6W",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809641110/reactions"
      },
      "updated_at" : "2023-11-14T06:57:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809641110",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Other than that a47f220933f202dd1f972d30f6cb31b09ca0a225 works. Without it, when migrating a watch-only wallet it rescans from the wallet birth height. With it, it does not rescan. The test in f06b5c02e9a1f1e5a26662fc8bbea5ed11388a03 also catches it if you revert the commit.\r\n\r\nRegarding 65b2da99fe18768d1bd4cd67522f7031f16a3420 this gets a bit unwieldy because there are many places the migration can fail. Maybe just let the caller `MigrateLegacyToDescriptor` attempt a reload if migration failed.\r\n\r\nThe test in 412c34b161ca901be4bf4de18f5a6afd9b987c57 also catches the issue if you revert 4dab813a9e69e4bb15cc1c4195358d127691cc89, so that's good.",
      "created_at" : "2023-11-14T07:24:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#issuecomment-1809666676",
      "id" : 1809666676,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28868",
      "node_id" : "IC_kwDOABII585r3VJ0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809666676/reactions"
      },
      "updated_at" : "2023-11-14T07:45:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1809666676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is (some part of) this meant for backport to 26.x?",
      "created_at" : "2023-11-14T15:51:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#issuecomment-1810500867",
      "id" : 1810500867,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28868",
      "node_id" : "IC_kwDOABII585r6g0D",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1810500867/reactions"
      },
      "updated_at" : "2023-11-14T15:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1810500867",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Is (some part of) this meant for backport to 26.x?\r\n\r\nWith the current test failure that is hard to debug, no.",
      "created_at" : "2023-11-14T16:54:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#issuecomment-1810687500",
      "id" : 1810687500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28868",
      "node_id" : "IC_kwDOABII585r7OYM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1810687500/reactions"
      },
      "updated_at" : "2023-11-14T16:54:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1810687500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> While trying to test the first commit, I ran into something odd. It seems that an _empty_ watch-only wallet legacy is treated as a descriptor wallet by `migratewallet`.\r\n\r\nThis is a separate issue in master. I've opened #28976 to address it.",
      "created_at" : "2023-11-30T21:03:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#issuecomment-1834556361",
      "id" : 1834556361,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28868",
      "node_id" : "IC_kwDOABII585tWRvJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1834556361/reactions"
      },
      "updated_at" : "2023-11-30T21:03:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1834556361",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Figured out the random failure, should be all working now.",
      "created_at" : "2023-11-30T22:13:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#issuecomment-1834644837",
      "id" : 1834644837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28868",
      "node_id" : "IC_kwDOABII585tWnVl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1834644837/reactions"
      },
      "updated_at" : "2023-11-30T22:13:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1834644837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1412796530"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1412796530"
         }
      },
      "author_association" : "MEMBER",
      "body" : "tiny nit:\r\nCould save the \"is mine\" result at the top and use it in both if/else paths.\r\n```diff\r\ndiff --git a/src/wallet/wallet.cpp b/src/wallet/wallet.cpp\r\n--- a/src/wallet/wallet.cpp\t(revision ee14243fa526cfaa0ba538286588bb27e13d8c3c)\r\n+++ b/src/wallet/wallet.cpp\t(revision e13fcf39a74a45696d1536017b13e5dd393a8ae3)\r\n@@ -3922,31 +3922,32 @@\r\n         }\r\n     }\r\n     for (const auto& [_pos, wtx] : wtxOrdered) {\r\n-        if (!IsMine(*wtx->tx) && !IsFromMe(*wtx->tx)) {\r\n-            // Check it is the watchonly wallet's\r\n-            // solvable_wallet doesn't need to be checked because transactions for those scripts weren't being watched for\r\n-            if (data.watchonly_wallet) {\r\n-                LOCK(data.watchonly_wallet->cs_wallet);\r\n-                if (data.watchonly_wallet->IsMine(*wtx->tx) || data.watchonly_wallet->IsFromMe(*wtx->tx)) {\r\n-                    // Add to watchonly wallet\r\n-                    const uint256& hash = wtx->GetHash();\r\n-                    const CWalletTx& to_copy_wtx = *wtx;\r\n-                    if (!data.watchonly_wallet->LoadToWallet(hash, [&](CWalletTx& ins_wtx, bool new_tx) EXCLUSIVE_LOCKS_REQUIRED(data.watchonly_wallet->cs_wallet) {\r\n-                        if (!new_tx) return false;\r\n-                        ins_wtx.SetTx(to_copy_wtx.tx);\r\n-                        ins_wtx.CopyFrom(to_copy_wtx);\r\n-                        return true;\r\n-                    })) {\r\n-                        error = strprintf(_(\"Error: Could not add watchonly tx %s to watchonly wallet\"), wtx->GetHash().GetHex());\r\n-                        return false;\r\n-                    }\r\n-                    watchonly_batch->WriteTx(data.watchonly_wallet->mapWallet.at(hash));\r\n-                    // Mark as to remove from this wallet\r\n-                    txids_to_delete.push_back(hash);\r\n-                    continue;\r\n-                }\r\n-            }\r\n-            // Both not ours and not in the watchonly wallet\r\n+        bool is_mine = IsMine(*wtx->tx) || IsFromMe(*wtx->tx);\r\n+        // Check it is the watchonly wallet's\r\n+        // solvable_wallet doesn't need to be checked because transactions for those scripts weren't being watched for\r\n+        if (data.watchonly_wallet) {\r\n+            LOCK(data.watchonly_wallet->cs_wallet);\r\n+            if (data.watchonly_wallet->IsMine(*wtx->tx) || data.watchonly_wallet->IsFromMe(*wtx->tx)) {\r\n+                // Add to watchonly wallet\r\n+                const uint256& hash = wtx->GetHash();\r\n+                const CWalletTx& to_copy_wtx = *wtx;\r\n+                if (!data.watchonly_wallet->LoadToWallet(hash, [&](CWalletTx& ins_wtx, bool new_tx) EXCLUSIVE_LOCKS_REQUIRED(data.watchonly_wallet->cs_wallet) {\r\n+                    if (!new_tx) return false;\r\n+                    ins_wtx.SetTx(to_copy_wtx.tx);\r\n+                    ins_wtx.CopyFrom(to_copy_wtx);\r\n+                    return true;\r\n+                })) {\r\n+                    error = strprintf(_(\"Error: Could not add watchonly tx %s to watchonly wallet\"), wtx->GetHash().GetHex());\r\n+                    return false;\r\n+                }\r\n+                watchonly_batch->WriteTx(data.watchonly_wallet->mapWallet.at(hash));\r\n+                // Mark as to remove from this wallet\r\n+                if (!is_mine) txids_to_delete.push_back(hash);\r\n+                continue;\r\n+            }\r\n+        }\r\n+        // Both not ours and not in the watchonly wallet\r\n+        if (!is_mine) {\r\n             error = strprintf(_(\"Error: Transaction %s in wallet cannot be identified to belong to migrated wallets\"), wtx->GetHash().GetHex());\r\n             return false;\r\n         }\r\n```",
      "commit_id" : "b093e5ea29efa44626db8aeff05ad2ee3296e707",
      "created_at" : "2023-12-02T12:58:08Z",
      "diff_hunk" : "@@ -3922,30 +3922,32 @@ bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error)\n         }\n     }\n     for (const auto& [_pos, wtx] : wtxOrdered) {\n-        if (!IsMine(*wtx->tx) && !IsFromMe(*wtx->tx)) {\n-            // Check it is the watchonly wallet's\n-            // solvable_wallet doesn't need to be checked because transactions for those scripts weren't being watched for\n-            if (data.watchonly_wallet) {\n-                LOCK(data.watchonly_wallet->cs_wallet);\n-                if (data.watchonly_wallet->IsMine(*wtx->tx) || data.watchonly_wallet->IsFromMe(*wtx->tx)) {\n-                    // Add to watchonly wallet\n-                    const uint256& hash = wtx->GetHash();\n-                    const CWalletTx& to_copy_wtx = *wtx;\n-                    if (!data.watchonly_wallet->LoadToWallet(hash, [&](CWalletTx& ins_wtx, bool new_tx) EXCLUSIVE_LOCKS_REQUIRED(data.watchonly_wallet->cs_wallet) {\n-                        if (!new_tx) return false;\n-                        ins_wtx.SetTx(to_copy_wtx.tx);\n-                        ins_wtx.CopyFrom(to_copy_wtx);\n-                        return true;\n-                    })) {\n-                        error = strprintf(_(\"Error: Could not add watchonly tx %s to watchonly wallet\"), wtx->GetHash().GetHex());\n-                        return false;\n-                    }\n-                    watchonly_batch->WriteTx(data.watchonly_wallet->mapWallet.at(hash));\n-                    // Mark as to remove from this wallet\n+        // Check it is the watchonly wallet's\n+        // solvable_wallet doesn't need to be checked because transactions for those scripts weren't being watched for\n+        if (data.watchonly_wallet) {\n+            LOCK(data.watchonly_wallet->cs_wallet);\n+            if (data.watchonly_wallet->IsMine(*wtx->tx) || data.watchonly_wallet->IsFromMe(*wtx->tx)) {\n+                // Add to watchonly wallet\n+                const uint256& hash = wtx->GetHash();\n+                const CWalletTx& to_copy_wtx = *wtx;\n+                if (!data.watchonly_wallet->LoadToWallet(hash, [&](CWalletTx& ins_wtx, bool new_tx) EXCLUSIVE_LOCKS_REQUIRED(data.watchonly_wallet->cs_wallet) {\n+                    if (!new_tx) return false;\n+                    ins_wtx.SetTx(to_copy_wtx.tx);\n+                    ins_wtx.CopyFrom(to_copy_wtx);\n+                    return true;\n+                })) {\n+                    error = strprintf(_(\"Error: Could not add watchonly tx %s to watchonly wallet\"), wtx->GetHash().GetHex());\n+                    return false;\n+                }\n+                watchonly_batch->WriteTx(data.watchonly_wallet->mapWallet.at(hash));\n+                // Mark as to remove from the migrated wallet only if it does not also belong to it\n+                if (!IsMine(*wtx->tx) && !IsFromMe(*wtx->tx)) {\n                     txids_to_delete.push_back(hash);\n-                    continue;\n                 }\n+                continue;\n             }\n+        }\n+        if (!IsMine(*wtx->tx) && !IsFromMe(*wtx->tx)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1412796530",
      "id" : 1412796530,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UNZBy",
      "original_commit_id" : "3807f195b0aa29d25f778f3ac6da506e8ebf5c9c",
      "original_line" : 3950,
      "original_position" : 50,
      "original_start_line" : 3925,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1760869833,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1412796530/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-02T12:59:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1412796530",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1439890323"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439890323"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done as suggested",
      "commit_id" : "b093e5ea29efa44626db8aeff05ad2ee3296e707",
      "created_at" : "2024-01-02T21:41:56Z",
      "diff_hunk" : "@@ -3922,30 +3922,32 @@ bool CWallet::ApplyMigrationData(MigrationData& data, bilingual_str& error)\n         }\n     }\n     for (const auto& [_pos, wtx] : wtxOrdered) {\n-        if (!IsMine(*wtx->tx) && !IsFromMe(*wtx->tx)) {\n-            // Check it is the watchonly wallet's\n-            // solvable_wallet doesn't need to be checked because transactions for those scripts weren't being watched for\n-            if (data.watchonly_wallet) {\n-                LOCK(data.watchonly_wallet->cs_wallet);\n-                if (data.watchonly_wallet->IsMine(*wtx->tx) || data.watchonly_wallet->IsFromMe(*wtx->tx)) {\n-                    // Add to watchonly wallet\n-                    const uint256& hash = wtx->GetHash();\n-                    const CWalletTx& to_copy_wtx = *wtx;\n-                    if (!data.watchonly_wallet->LoadToWallet(hash, [&](CWalletTx& ins_wtx, bool new_tx) EXCLUSIVE_LOCKS_REQUIRED(data.watchonly_wallet->cs_wallet) {\n-                        if (!new_tx) return false;\n-                        ins_wtx.SetTx(to_copy_wtx.tx);\n-                        ins_wtx.CopyFrom(to_copy_wtx);\n-                        return true;\n-                    })) {\n-                        error = strprintf(_(\"Error: Could not add watchonly tx %s to watchonly wallet\"), wtx->GetHash().GetHex());\n-                        return false;\n-                    }\n-                    watchonly_batch->WriteTx(data.watchonly_wallet->mapWallet.at(hash));\n-                    // Mark as to remove from this wallet\n+        // Check it is the watchonly wallet's\n+        // solvable_wallet doesn't need to be checked because transactions for those scripts weren't being watched for\n+        if (data.watchonly_wallet) {\n+            LOCK(data.watchonly_wallet->cs_wallet);\n+            if (data.watchonly_wallet->IsMine(*wtx->tx) || data.watchonly_wallet->IsFromMe(*wtx->tx)) {\n+                // Add to watchonly wallet\n+                const uint256& hash = wtx->GetHash();\n+                const CWalletTx& to_copy_wtx = *wtx;\n+                if (!data.watchonly_wallet->LoadToWallet(hash, [&](CWalletTx& ins_wtx, bool new_tx) EXCLUSIVE_LOCKS_REQUIRED(data.watchonly_wallet->cs_wallet) {\n+                    if (!new_tx) return false;\n+                    ins_wtx.SetTx(to_copy_wtx.tx);\n+                    ins_wtx.CopyFrom(to_copy_wtx);\n+                    return true;\n+                })) {\n+                    error = strprintf(_(\"Error: Could not add watchonly tx %s to watchonly wallet\"), wtx->GetHash().GetHex());\n+                    return false;\n+                }\n+                watchonly_batch->WriteTx(data.watchonly_wallet->mapWallet.at(hash));\n+                // Mark as to remove from the migrated wallet only if it does not also belong to it\n+                if (!IsMine(*wtx->tx) && !IsFromMe(*wtx->tx)) {\n                     txids_to_delete.push_back(hash);\n-                    continue;\n                 }\n+                continue;\n             }\n+        }\n+        if (!IsMine(*wtx->tx) && !IsFromMe(*wtx->tx)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1439890323",
      "id" : 1439890323,
      "in_reply_to_id" : 1412796530,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585V0vuT",
      "original_commit_id" : "3807f195b0aa29d25f778f3ac6da506e8ebf5c9c",
      "original_line" : 3950,
      "original_position" : 50,
      "original_start_line" : 3925,
      "path" : "src/wallet/wallet.cpp",
      "position" : null,
      "pull_request_review_id" : 1801129681,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439890323/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-02T21:41:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439890323",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1473532556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1473532556"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet: Reload the wallet if migration exited early\" (d8002ed333e13e54726bcd922303cb1e42544b44)\r\n\r\nI don't think it is good to move `reload_wallet` here before `BackupWallet` is called. It seems like it would make it easy to add an innocent call to `reload_wallet(local_wallet)` that looks like it is just reloading the wallet, but doesn't return right away, so the wallet get added to `wallet_dirs` before it is backed up and possibly deleted as part of the `fs::remove_all` loop.\r\n\r\nMost of the code in `reload_wallet` is also unnecessary for handling early returns, in addition to being potentially unsafe. I think the simplest way to handle early returns would just be to add a new simpler lambda, or maybe even inline the LoadWallet call like\r\n\r\n```c++\r\nif (was_loaded) {\r\n    local_wallet = LoadWallet(context, local_wallet->GetName(), /*load_on_start=*/std::nullopt, options, status, error, warnings);\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "commit_id" : "b093e5ea29efa44626db8aeff05ad2ee3296e707",
      "created_at" : "2024-01-31T22:14:49Z",
      "diff_hunk" : "@@ -4210,6 +4212,21 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n         return util::Error{Untranslated(\"Wallet file verification failed.\") + Untranslated(\" \") + error};\n     }\n \n+    // In case of reloading failure after migration completes, we need to remember the wallet dirs to remove\n+    // Set is used as it may be populated with the same wallet directory paths multiple times,\n+    // both before and after reloading. This ensures the set is complete even if one of the wallets\n+    // fails to reload.\n+    std::set<fs::path> wallet_dirs;\n+    // Helper to reload as normal for some of our exit scenarios",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1473532556",
      "id" : 1473532556,
      "line" : 4223,
      "node_id" : "PRRC_kwDOABII585X1FKM",
      "original_commit_id" : "d8002ed333e13e54726bcd922303cb1e42544b44",
      "original_line" : 4220,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 106,
      "pull_request_review_id" : 1854957206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1473532556/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-31T22:40:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1473532556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-01-31T22:26:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#issuecomment-1920088108",
      "id" : 1920088108,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28868",
      "node_id" : "IC_kwDOABII585ycjgs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1920088108/reactions"
      },
      "updated_at" : "2024-01-31T22:26:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1920088108",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1473555525"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1473555525"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"wallet: Reload the wallet if migration exited early\" (d8002ed333e13e54726bcd922303cb1e42544b44)\r\n\r\nI was confused by \"As these checks do not change anything in the wallet, such unloaded wallets should be reloaded prior to exiting\" in the commit description, since the wallets would need to be reloaded whether or not checks changed anything.\r\n\r\nI think the commit message can just say \"Such unloaded wallets should be reloaded prior to exiting\" without the \"As these checks\" part",
      "commit_id" : "b093e5ea29efa44626db8aeff05ad2ee3296e707",
      "created_at" : "2024-01-31T22:33:06Z",
      "diff_hunk" : "@@ -4191,11 +4191,13 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     std::vector<bilingual_str> warnings;\n \n     // If the wallet is still loaded, unload it so that nothing else tries to use it while we're changing it\n+    bool was_loaded = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1473555525",
      "id" : 1473555525,
      "line" : 4197,
      "node_id" : "PRRC_kwDOABII585X1KxF",
      "original_commit_id" : "d8002ed333e13e54726bcd922303cb1e42544b44",
      "original_line" : 4194,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 1854957206,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1473555525/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-31T22:40:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1473555525",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1475005524"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475005524"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've removed the `wallet_dirs.insert` from `reload_wallet` and moved that to above the three `reload_wallet` calls that actually need it. The lambda is still useful since we have to unload `local_wallet` every time.",
      "commit_id" : "4da76ca24725eb9ba8122317e04a6e1ee14ac846",
      "created_at" : "2024-02-01T19:16:33Z",
      "diff_hunk" : "@@ -4210,6 +4212,21 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n         return util::Error{Untranslated(\"Wallet file verification failed.\") + Untranslated(\" \") + error};\n     }\n \n+    // In case of reloading failure after migration completes, we need to remember the wallet dirs to remove\n+    // Set is used as it may be populated with the same wallet directory paths multiple times,\n+    // both before and after reloading. This ensures the set is complete even if one of the wallets\n+    // fails to reload.\n+    std::set<fs::path> wallet_dirs;\n+    // Helper to reload as normal for some of our exit scenarios",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1475005524",
      "id" : 1475005524,
      "in_reply_to_id" : 1473532556,
      "line" : 4246,
      "node_id" : "PRRC_kwDOABII585X6sxU",
      "original_commit_id" : "d8002ed333e13e54726bcd922303cb1e42544b44",
      "original_line" : 4246,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 101,
      "pull_request_review_id" : 1857382788,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475005524/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T19:16:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475005524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1475006072"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475006072"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Updated the commit message.",
      "commit_id" : "4da76ca24725eb9ba8122317e04a6e1ee14ac846",
      "created_at" : "2024-02-01T19:16:42Z",
      "diff_hunk" : "@@ -4191,11 +4191,13 @@ util::Result<MigrationResult> MigrateLegacyToDescriptor(const std::string& walle\n     std::vector<bilingual_str> warnings;\n \n     // If the wallet is still loaded, unload it so that nothing else tries to use it while we're changing it\n+    bool was_loaded = false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28868#discussion_r1475006072",
      "id" : 1475006072,
      "in_reply_to_id" : 1473555525,
      "line" : 4219,
      "node_id" : "PRRC_kwDOABII585X6s54",
      "original_commit_id" : "d8002ed333e13e54726bcd922303cb1e42544b44",
      "original_line" : 4219,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 87,
      "pull_request_review_id" : 1857383533,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28868",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475006072/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T19:16:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475006072",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]

[
   {
      "author_association" : "MEMBER",
      "body" : "@maflcko what do you think?",
      "created_at" : "2023-11-29T16:44:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28971#issuecomment-1832312934",
      "id" : 1832312934,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28971",
      "node_id" : "IC_kwDOABII585tNuBm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832312934/reactions"
      },
      "updated_at" : "2023-11-29T16:44:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832312934",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "We used to do that :sweat_smile:, and it was a huge pain because the linking time for each of the binaries...\r\n\r\n",
      "created_at" : "2023-11-29T16:46:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28971#issuecomment-1832316625",
      "id" : 1832316625,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28971",
      "node_id" : "IC_kwDOABII585tNu7R",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832316625/reactions"
      },
      "updated_at" : "2023-11-29T16:46:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832316625",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> In environments where individual binaries are required/desired (e.g. oss-fuzz [1]), this has the benefit that each binary is as small as possible, resulting in less disk usage (nice for container images).\r\n\r\nI don't think this works, because the other fuzz targets presumably only consume a minimal amount of binary space. Most of the space is consumed by all the core libraries (libtest_util, libutil, libkernel, libcommon, ...)?\r\n\r\n> Enable afl++ to create a token dictionary at compile time, which only contains tokens that are found in code paths reachable by each individual harness.\r\n\r\nI don't think this works, due to the runtime registration indirection via the function pointer in a std::map. I think this is also a blocker for fuzz-introspector, etc.\r\n\r\n> Change the build system to have an option to compile individual binaries\r\n\r\nThe option already exists and OSS-Fuzz is using the option.\r\n\r\nObviously, pull requests with improvements are welcome to remove the `std::map`, but I don't think reducing the size will be possible, unless you completely rework the internal library design of Bitcoin Core?",
      "created_at" : "2023-11-29T16:53:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28971#issuecomment-1832328037",
      "id" : 1832328037,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28971",
      "node_id" : "IC_kwDOABII585tNxtl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832328037/reactions"
      },
      "updated_at" : "2023-11-29T16:57:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832328037",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I don't think this works, because the other fuzz targets only consume a minimal amount of binary space. Most of the space is consumed by all the core libraries (libtest_util, libutil, libkernel, libcommon, ...)\r\n\r\nI tested this in a hacky way by commenting out all files except `bitdeque.cpp` from `test_fuzz_fuzz_SOURCES` in `Makefile.test.include` and then compiling with `afl-clang-lto`. The resulting binary is significantly smaller.\r\n* binary size: 23.5MB vs 112.6MB\r\n* auto dict size: 66 vs. 448 tokens\r\n* afl++ coverage map size: 13321 vs 264945 bytes\r\n\r\n> I don't think this works, due to the runtime registration indirection via the function pointer in a std::map. I think this is also a blocker for fuzz-introspector, etc.\r\n\r\nI suggested in the issue description to get rid of the map: `Change the fuzzing framework to (optionally) have FUZZ_TARGET include the actual fuzz entry point directly (e.g. LLVMFuzzerTestOneInput) instead of accumulating all harness functions into a global map `\r\n\r\n> The option already exists and OSS-Fuzz is using the option.\r\n\r\nWhat option? We very obviously hack around not having such a option in oss-fuzz:\r\nhttps://github.com/google/oss-fuzz/blob/3bcef37498cc10279e14a639b03170a49929fc3c/projects/bitcoin-core/build.sh#L69-L82\r\n\r\n> unless you completely rework the internal library design of Bitcoin Core?\r\n\r\nDoes LTO not strip unused library components from the resulting binary?",
      "created_at" : "2023-11-29T17:15:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28971#issuecomment-1832367703",
      "id" : 1832367703,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28971",
      "node_id" : "IC_kwDOABII585tN7ZX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832367703/reactions"
      },
      "updated_at" : "2023-11-29T17:15:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832367703",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> We used to do that ð, and it was a huge pain because the linking time for each of the binaries...\r\n\r\nI have read through the past PRs (https://github.com/bitcoin/bitcoin/pull/20560, https://github.com/bitcoin/bitcoin/pull/15043) and I think if the link time is still an issue we can just make this optional and leave building one big binary the default. ",
      "created_at" : "2023-11-29T17:19:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28971#issuecomment-1832374225",
      "id" : 1832374225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28971",
      "node_id" : "IC_kwDOABII585tN8_R",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832374225/reactions"
      },
      "updated_at" : "2023-11-29T17:19:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832374225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I tested this in a hacky way by commenting out all files except `bitdeque.cpp` from `test_fuzz_fuzz_SOURCES` in `Makefile.test.include` and then compiling with `afl-clang-lto`. The resulting binary is significantly smaller.\r\n\r\nNice. Thanks for testing. I wonder if you can get the same small binary size if you still compile the other fuzz targets. If LTO can strip them, that seems preferable and should make it easier to use this option.\r\n\r\n> What option? We very obviously hack around not having such a option in oss-fuzz\r\n\r\nYeah, that is using a binary hack, but previously it was using a patch on top of the source code, including a full re-compilation, which I think is similar to what you are asking for here? I guess you want the patch to be maintained inside this repo and not outside?",
      "created_at" : "2023-11-29T17:25:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28971#issuecomment-1832383627",
      "id" : 1832383627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28971",
      "node_id" : "IC_kwDOABII585tN_SL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832383627/reactions"
      },
      "updated_at" : "2023-11-29T17:25:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832383627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> including a full re-compilation, which I think is similar to what you are asking for here? I guess you want the patch to be maintained inside this repo and not outside?\r\n\r\nYes but the patch I'm proposing is quite different, as it completely removes the map because I don't think simply search and replacing `std::getenv(\"FUZZ\")` let's LTO prune the other harnesses' code.\r\n\r\nI'll code up a PR for this so it's more clear what I have in mind.",
      "created_at" : "2023-12-04T16:44:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28971#issuecomment-1839044094",
      "id" : 1839044094,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28971",
      "node_id" : "IC_kwDOABII585tnZX-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1839044094/reactions"
      },
      "updated_at" : "2023-12-04T16:45:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1839044094",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   }
]

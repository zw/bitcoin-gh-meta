{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "Based on on @Fi3's https://github.com/bitcoin/bitcoin/compare/master...Fi3:bitcoin:PatchTemplates which is based on @ccdle12's #27854. I rebased it and re-wrote the commit history. See the original branch for the evolution of the spec.\r\n\r\nThe Stratum v2 [spec](https://github.com/stratum-mining/sv2-spec) describes various roles, but for Bitcoin Core the role of the [Template Provider](https://github.com/stratum-mining/sv2-spec/blob/main/07-Template-Distribution-Protocol.md) is the most interesting. It generates block templates and _pushes_ those out (to a [Job Declarator client](https://github.com/stratum-mining/stratum/tree/dev/roles/jd-client), which declares it to a Job Declarator server, which either accepts or rejects it - nothing the node needs worry about).\r\n\r\nAdditionally, as a Template Provider we need to attempt broadcasting new blocks when they're found, as announced to us by the Job Declarator client to use via a `SubmitSolution` message.\r\n\r\n## Testing guide\r\n\r\nTo get help with the stratum side of things, this Discord may be useful: https://discord.gg/fsEW23wFYs\r\nOr file a Github issue at [stratum-mining/stratum](https://github.com/stratum-mining/stratum) (most action is in the dev branch)\r\nThe dev branch code crashes sometimes, as does the tesnet pool server.\r\n\r\n### Method 1: Bring your own ASIC, external (testnet) pool\r\n\r\nFirst start the node:\r\n\r\n```\r\nsrc/bitcoind -testnet -stratumv2 -debug=sv2\r\n```\r\n\r\nThen build and run a Job Declator client: [stratum-mining/stratum/tree/dev/roles/jd-client](https://github.com/stratum-mining/stratum/tree/dev/roles/jd-client)\r\n\r\nThis client connects to your node to receive new block templates and then \"declares\" them to a Job Declarator server. Additionally it connects to the pool itself. Try this config (see documentation for more):\r\n\r\n```toml\r\n[[upstreams]]\r\nauthority_pubkey = \"3VANfft6ei6jQq1At7d8nmiZzVhBFS4CiQujdgim1ign\"\r\npool_address = \"89.116.25.191:34254\"\r\njd_address = \"89.116.25.191:34264\"\r\n```\r\n\r\nFinally you most likely need to use the v1 to v2 translator: [stratum-mining/stratum/tree/dev/roles/translator](https://github.com/stratum-mining/stratum/tree/dev/roles/translator), even when you have a stratum v2 capable miner. At least until Braiins and others release new firmware that supports the latest updates to the spec. Hopefully this is temporary, because the translator adds extra complexity.\r\n\r\nYou need to point the translator to your job declator client, which in turn already connects to the pool.\r\n\r\nAs soon as you turn on the translator, the Bitcoin Core log should show a `SetupConnection` [message](https://github.com/stratum-mining/sv2-spec/blob/main/08-Message-Types.md). \r\n\r\nNow point your ASIC to the translator. At this point you should be seeing `NewTemplate`, `SetNewPrevHash` and `SetNewPrevHash` messages. \r\n\r\n- [ ] TODO: figure out how to recognize your own blocks\r\n- [ ] figure out how much hash power is enough to at least occasionally produce a block on testnet, i.e. what the minimum required hardware for testing is\r\n\r\n### Method 2: CPU mine, run your own pool (regtest)\r\n\r\n- [ ] TODO: figure out and explain\r\n\r\nLast time I tried this there was no Stratum v2 capable CPU miner. You'd have to use the translator. This wouldn't work with a normal pool, because the CPU miner can't provide shares without difficulty. So you'd have to run a pool locally, which is more complicated than method 1.\r\n\r\n### Method 3: Mainnet\r\n\r\nSame as method 1, find a pool with stratum v2 support and good debug logging.\r\n\r\nTesting on mainnet, although reckless, may be very useful to find performance bottlenecks.\r\n\r\n## Implementation notes\r\n\r\nOnce the spec is mature enough (???) and this PR is improved (???) I plan to make separate pull request. Probably starting with ECDH and the noise protocol.\r\n\r\nSilent Payments also needs the ECDH module, so I cherry-picked the commit from #28122. It uses ECDH is a slightly different way, but perhaps there's more overlap to be had.\r\n\r\n# Spec notes\r\n\r\n- Why does it use noise instead of BIP324? I need to read up on this, but my preliminary thought is that unlike p2p, for mining identity does matter, so there's different trade-offs. Perhaps there's still be some overlap to be gained in the implementation?\r\n\r\n- [ ] TODO (for me): study the most recent spec and compare to the code\r\n\r\n### Do more, do less?\r\n\r\nBecause stratum v2 is push based, having an external tool poll the `getblocktemplate` RPC would add unnecessary delay.\r\n\r\nHowever there's still discussion to be had about how much of Stratum v2 needs to be implemented here, vs what can be done by an external tool and e.g. pushing templates via ZMQ. Some discussion in the original PR https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1586988190\r\n\r\nNote that any miner still has to run their own Job Declarator client. In the reference implementation this software decides which pool to use, and which Bitcoin address to use for solo-mining fallback, so it's clearly trusted. If it's also running on the same machine, like in Setup 1, then the noise protocol and message overhead seems unnecessary.\r\n\r\nOn the other hand, if the goal is to have other software than Bitcoin Core also generate templates, then relying on ZMQ as a communication standard may not be ideal, especially when the rest of the mining ecosystem relies on the noise protocol and sv2 message types.\r\n\r\n## Outstanding issues\r\n\r\nThis is an incomplete list. I still need to study much of this code myself.\r\n\r\n- [ ] push more often / smartly: we currently push a template after a new block is found and then every 30 seconds\r\n- [ ] obey may chunk size: https://github.com/stratum-mining/stratum/issues/687 (this may block mainnet, which needs bigger messages)\r\n- [ ] fix various TODO's in the new code\r\n- [ ] limit on the number of downstream connections, if needed\r\n- [ ] see \"full merkle path\" in original PR description\r\n- [ ] go through code review comments on the original PR\r\n- [ ] way more tests",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/comments",
   "created_at" : "2023-12-01T11:39:27Z",
   "draft" : true,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/28983",
   "id" : 2020711772,
   "labels" : [
      {
         "color" : "cccccc",
         "default" : false,
         "description" : "",
         "id" : 5334691551,
         "name" : "CI failed",
         "node_id" : "LA_kwDOABII588AAAABPfju3w",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/CI%20failed"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585g48_Q",
   "number" : 28983,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/28983.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28983",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/28983.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28983"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28983/timeline",
   "title" : "Stratum v2 Template Provider (take 2)",
   "updated_at" : "2023-12-01T11:50:11Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28983",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
      "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
      "followers_url" : "https://api.github.com/users/Sjors/followers",
      "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/Sjors",
      "id" : 10217,
      "login" : "Sjors",
      "node_id" : "MDQ6VXNlcjEwMjE3",
      "organizations_url" : "https://api.github.com/users/Sjors/orgs",
      "received_events_url" : "https://api.github.com/users/Sjors/received_events",
      "repos_url" : "https://api.github.com/users/Sjors/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/Sjors"
   }
}

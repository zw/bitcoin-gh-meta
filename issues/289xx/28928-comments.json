[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28928).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [furszy](https://github.com/bitcoin/bitcoin/pull/28928#pullrequestreview-1926541083), [davidgumberg](https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1987249169) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-11-22T17:30:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1823198016",
      "id" : 1823198016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28928",
      "node_id" : "IC_kwDOABII585sq8tA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823198016/reactions"
      },
      "updated_at" : "2024-03-10T14:20:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823198016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> we should probably rewrite this test using only one node, and multiple wallets, instead of five different nodes.\r\n\r\nsgtm, perhaps 2 nodes? why only one? Also, I have no problem in addressing it here, but perhaps we could leave it for a follow-up/other PR?",
      "created_at" : "2023-11-22T23:49:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1823652748",
      "id" : 1823652748,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28928",
      "node_id" : "IC_kwDOABII585ssruM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823652748/reactions"
      },
      "updated_at" : "2023-11-22T23:49:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823652748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">  This can be tested by loading and unloading wallets instead of restarting nodes (this was a restriction from the past, prev to introducing multi-wallets support). No extra nodes nor restart is needed.\r\n\r\nJust addressed it here",
      "created_at" : "2023-11-30T12:57:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1833739551",
      "id" : 1833739551,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28928",
      "node_id" : "IC_kwDOABII585tTKUf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1833739551/reactions"
      },
      "updated_at" : "2023-11-30T12:57:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1833739551",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Good idea, @furszy.\r\n\r\nmaster: 1.78s user 0.57s system 28% cpu 8.157 total\r\n\r\nthis PR: 0.76s user 0.20s system 35% cpu 2.668 total",
      "created_at" : "2023-12-02T21:37:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1837259374",
      "id" : 1837259374,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28928",
      "node_id" : "IC_kwDOABII585tglpu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1837259374/reactions"
      },
      "updated_at" : "2023-12-02T21:37:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1837259374",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased",
      "created_at" : "2024-01-22T16:55:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1904416959",
      "id" : 1904416959,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28928",
      "node_id" : "IC_kwDOABII585xgxi_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1904416959/reactions"
      },
      "updated_at" : "2024-01-22T16:55:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1904416959",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1517181164"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517181164"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Nit: Why did  this change to `COINBASE_MATURITY + 10`",
      "commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "created_at" : "2024-03-08T05:26:24Z",
      "diff_hunk" : "@@ -25,70 +17,67 @@ def add_options(self, parser):\n \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 4\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n+        node = self.nodes[0]\n+        self.generate(node, COINBASE_MATURITY + 10)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1517181164",
      "id" : 1517181164,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII585abljs",
      "original_commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "original_line" : 28,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : 34,
      "pull_request_review_id" : 1924053371,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517181164/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-08T05:26:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1517181164",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2257631?v=4",
         "events_url" : "https://api.github.com/users/davidgumberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/davidgumberg/followers",
         "following_url" : "https://api.github.com/users/davidgumberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/davidgumberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/davidgumberg",
         "id" : 2257631,
         "login" : "davidgumberg",
         "node_id" : "MDQ6VXNlcjIyNTc2MzE=",
         "organizations_url" : "https://api.github.com/users/davidgumberg/orgs",
         "received_events_url" : "https://api.github.com/users/davidgumberg/received_events",
         "repos_url" : "https://api.github.com/users/davidgumberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/davidgumberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/davidgumberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/davidgumberg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518567175"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518567175"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could place this line out of the loop.",
      "commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "created_at" : "2024-03-09T12:38:13Z",
      "diff_hunk" : "@@ -25,75 +17,67 @@ def add_options(self, parser):\n \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 5\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n+        node = self.nodes[0]\n+        self.generate(node, COINBASE_MATURITY + 10)\n \n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        for i in range(4):\n-            self.connect_nodes(0, i + 1)\n-\n-        addresses = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n+        output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n         if self.options.descriptors:\n-            addresses.append(\"bech32m\")\n+            output_types.append(\"bech32m\")\n \n-        for i, output_type in enumerate(addresses):\n+        for output_type in output_types:\n+            wallet_name = str(output_type)\n+            node.createwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)\n             self.log.info(\"Generate keys for wallet with address type: {}\".format(output_type))\n-            idx = i+1\n             for _ in range(90):\n-                addr_oldpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_oldpool = wallet.getnewaddress(address_type=output_type)\n             for _ in range(20):\n-                addr_extpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_extpool = wallet.getnewaddress(address_type=output_type)\n \n             # Make sure we're creating the outputs we expect\n-            address_details = self.nodes[idx].validateaddress(addr_extpool)\n-            if i == 0:\n+            address_details = wallet.validateaddress(addr_extpool)\n+            if output_type == \"legacy\":\n                 assert not address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 1:\n+            elif output_type == \"p2sh-segwit\":\n                 assert address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 2:\n+            elif output_type == \"bech32\":\n                 assert not address_details[\"isscript\"] and address_details[\"iswitness\"]\n             else:\n                 assert address_details[\"isscript\"] and address_details[\"iswitness\"]\n \n             self.log.info(\"Send funds to wallet\")\n-            self.nodes[0].sendtoaddress(addr_oldpool, 10)\n-            self.generate(self.nodes[0], 1)\n-            self.nodes[0].sendtoaddress(addr_extpool, 5)\n-            self.generate(self.nodes[0], 1)\n+            default_wallet = node.get_wallet_rpc(self.default_wallet_name)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518567175",
      "id" : 1518567175,
      "line" : 56,
      "node_id" : "PRRC_kwDOABII585ag38H",
      "original_commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "original_line" : 56,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : 83,
      "pull_request_review_id" : 1926189758,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518567175/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-09T12:44:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518567175",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518567404"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518567404"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Could unify this two lines. `default_wallet.send(outputs=[{addr_oldpool:10}, {addr_extpool:5}])`",
      "commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "created_at" : "2024-03-09T12:39:42Z",
      "diff_hunk" : "@@ -25,75 +17,67 @@ def add_options(self, parser):\n \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 5\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n+        node = self.nodes[0]\n+        self.generate(node, COINBASE_MATURITY + 10)\n \n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        for i in range(4):\n-            self.connect_nodes(0, i + 1)\n-\n-        addresses = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n+        output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n         if self.options.descriptors:\n-            addresses.append(\"bech32m\")\n+            output_types.append(\"bech32m\")\n \n-        for i, output_type in enumerate(addresses):\n+        for output_type in output_types:\n+            wallet_name = str(output_type)\n+            node.createwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)\n             self.log.info(\"Generate keys for wallet with address type: {}\".format(output_type))\n-            idx = i+1\n             for _ in range(90):\n-                addr_oldpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_oldpool = wallet.getnewaddress(address_type=output_type)\n             for _ in range(20):\n-                addr_extpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_extpool = wallet.getnewaddress(address_type=output_type)\n \n             # Make sure we're creating the outputs we expect\n-            address_details = self.nodes[idx].validateaddress(addr_extpool)\n-            if i == 0:\n+            address_details = wallet.validateaddress(addr_extpool)\n+            if output_type == \"legacy\":\n                 assert not address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 1:\n+            elif output_type == \"p2sh-segwit\":\n                 assert address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 2:\n+            elif output_type == \"bech32\":\n                 assert not address_details[\"isscript\"] and address_details[\"iswitness\"]\n             else:\n                 assert address_details[\"isscript\"] and address_details[\"iswitness\"]\n \n             self.log.info(\"Send funds to wallet\")\n-            self.nodes[0].sendtoaddress(addr_oldpool, 10)\n-            self.generate(self.nodes[0], 1)\n-            self.nodes[0].sendtoaddress(addr_extpool, 5)\n-            self.generate(self.nodes[0], 1)\n+            default_wallet = node.get_wallet_rpc(self.default_wallet_name)\n+            default_wallet.sendtoaddress(addr_oldpool, 10)\n+            default_wallet.sendtoaddress(addr_extpool, 5)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518567404",
      "id" : 1518567404,
      "line" : 58,
      "node_id" : "PRRC_kwDOABII585ag3_s",
      "original_commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "original_line" : 58,
      "original_position" : 85,
      "original_start_line" : 57,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : 85,
      "pull_request_review_id" : 1926189758,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518567404/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-09T12:44:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518567404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518567594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518567594"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Could replace `str(output_type)` for `wallet_name`",
      "commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "created_at" : "2024-03-09T12:40:40Z",
      "diff_hunk" : "@@ -25,75 +17,67 @@ def add_options(self, parser):\n \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 5\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n+        node = self.nodes[0]\n+        self.generate(node, COINBASE_MATURITY + 10)\n \n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        for i in range(4):\n-            self.connect_nodes(0, i + 1)\n-\n-        addresses = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n+        output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n         if self.options.descriptors:\n-            addresses.append(\"bech32m\")\n+            output_types.append(\"bech32m\")\n \n-        for i, output_type in enumerate(addresses):\n+        for output_type in output_types:\n+            wallet_name = str(output_type)\n+            node.createwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)\n             self.log.info(\"Generate keys for wallet with address type: {}\".format(output_type))\n-            idx = i+1\n             for _ in range(90):\n-                addr_oldpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_oldpool = wallet.getnewaddress(address_type=output_type)\n             for _ in range(20):\n-                addr_extpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_extpool = wallet.getnewaddress(address_type=output_type)\n \n             # Make sure we're creating the outputs we expect\n-            address_details = self.nodes[idx].validateaddress(addr_extpool)\n-            if i == 0:\n+            address_details = wallet.validateaddress(addr_extpool)\n+            if output_type == \"legacy\":\n                 assert not address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 1:\n+            elif output_type == \"p2sh-segwit\":\n                 assert address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 2:\n+            elif output_type == \"bech32\":\n                 assert not address_details[\"isscript\"] and address_details[\"iswitness\"]\n             else:\n                 assert address_details[\"isscript\"] and address_details[\"iswitness\"]\n \n             self.log.info(\"Send funds to wallet\")\n-            self.nodes[0].sendtoaddress(addr_oldpool, 10)\n-            self.generate(self.nodes[0], 1)\n-            self.nodes[0].sendtoaddress(addr_extpool, 5)\n-            self.generate(self.nodes[0], 1)\n+            default_wallet = node.get_wallet_rpc(self.default_wallet_name)\n+            default_wallet.sendtoaddress(addr_oldpool, 10)\n+            default_wallet.sendtoaddress(addr_extpool, 5)\n+            self.generate(node, 1)\n \n-            self.log.info(\"Restart node with wallet backup\")\n-            self.stop_node(idx)\n-            shutil.copyfile(wallet_backup_path, wallet_path)\n-            self.start_node(idx, self.extra_args[idx])\n-            self.connect_nodes(0, idx)\n-            self.sync_all()\n+            node.unloadwallet(wallet_name)\n+            node.loadwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(str(output_type))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518567594",
      "id" : 1518567594,
      "line" : 63,
      "node_id" : "PRRC_kwDOABII585ag4Cq",
      "original_commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "original_line" : 63,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : 96,
      "pull_request_review_id" : 1926189758,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518567594/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-09T12:44:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518567594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518634648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634648"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "6755e60fffd7748e7cbc16c9b18d84e62f26c697",
      "created_at" : "2024-03-09T17:58:31Z",
      "diff_hunk" : "@@ -25,75 +17,67 @@ def add_options(self, parser):\n \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 5\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n+        node = self.nodes[0]\n+        self.generate(node, COINBASE_MATURITY + 10)\n \n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        for i in range(4):\n-            self.connect_nodes(0, i + 1)\n-\n-        addresses = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n+        output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n         if self.options.descriptors:\n-            addresses.append(\"bech32m\")\n+            output_types.append(\"bech32m\")\n \n-        for i, output_type in enumerate(addresses):\n+        for output_type in output_types:\n+            wallet_name = str(output_type)\n+            node.createwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)\n             self.log.info(\"Generate keys for wallet with address type: {}\".format(output_type))\n-            idx = i+1\n             for _ in range(90):\n-                addr_oldpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_oldpool = wallet.getnewaddress(address_type=output_type)\n             for _ in range(20):\n-                addr_extpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_extpool = wallet.getnewaddress(address_type=output_type)\n \n             # Make sure we're creating the outputs we expect\n-            address_details = self.nodes[idx].validateaddress(addr_extpool)\n-            if i == 0:\n+            address_details = wallet.validateaddress(addr_extpool)\n+            if output_type == \"legacy\":\n                 assert not address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 1:\n+            elif output_type == \"p2sh-segwit\":\n                 assert address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 2:\n+            elif output_type == \"bech32\":\n                 assert not address_details[\"isscript\"] and address_details[\"iswitness\"]\n             else:\n                 assert address_details[\"isscript\"] and address_details[\"iswitness\"]\n \n             self.log.info(\"Send funds to wallet\")\n-            self.nodes[0].sendtoaddress(addr_oldpool, 10)\n-            self.generate(self.nodes[0], 1)\n-            self.nodes[0].sendtoaddress(addr_extpool, 5)\n-            self.generate(self.nodes[0], 1)\n+            default_wallet = node.get_wallet_rpc(self.default_wallet_name)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518634648",
      "id" : 1518634648,
      "in_reply_to_id" : 1518567175,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ahIaY",
      "original_commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "original_line" : 56,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : null,
      "pull_request_review_id" : 1926276737,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634648/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-09T17:58:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518634656"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634656"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "6755e60fffd7748e7cbc16c9b18d84e62f26c697",
      "created_at" : "2024-03-09T17:58:36Z",
      "diff_hunk" : "@@ -25,75 +17,67 @@ def add_options(self, parser):\n \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 5\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n+        node = self.nodes[0]\n+        self.generate(node, COINBASE_MATURITY + 10)\n \n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        for i in range(4):\n-            self.connect_nodes(0, i + 1)\n-\n-        addresses = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n+        output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n         if self.options.descriptors:\n-            addresses.append(\"bech32m\")\n+            output_types.append(\"bech32m\")\n \n-        for i, output_type in enumerate(addresses):\n+        for output_type in output_types:\n+            wallet_name = str(output_type)\n+            node.createwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)\n             self.log.info(\"Generate keys for wallet with address type: {}\".format(output_type))\n-            idx = i+1\n             for _ in range(90):\n-                addr_oldpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_oldpool = wallet.getnewaddress(address_type=output_type)\n             for _ in range(20):\n-                addr_extpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_extpool = wallet.getnewaddress(address_type=output_type)\n \n             # Make sure we're creating the outputs we expect\n-            address_details = self.nodes[idx].validateaddress(addr_extpool)\n-            if i == 0:\n+            address_details = wallet.validateaddress(addr_extpool)\n+            if output_type == \"legacy\":\n                 assert not address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 1:\n+            elif output_type == \"p2sh-segwit\":\n                 assert address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 2:\n+            elif output_type == \"bech32\":\n                 assert not address_details[\"isscript\"] and address_details[\"iswitness\"]\n             else:\n                 assert address_details[\"isscript\"] and address_details[\"iswitness\"]\n \n             self.log.info(\"Send funds to wallet\")\n-            self.nodes[0].sendtoaddress(addr_oldpool, 10)\n-            self.generate(self.nodes[0], 1)\n-            self.nodes[0].sendtoaddress(addr_extpool, 5)\n-            self.generate(self.nodes[0], 1)\n+            default_wallet = node.get_wallet_rpc(self.default_wallet_name)\n+            default_wallet.sendtoaddress(addr_oldpool, 10)\n+            default_wallet.sendtoaddress(addr_extpool, 5)\n+            self.generate(node, 1)\n \n-            self.log.info(\"Restart node with wallet backup\")\n-            self.stop_node(idx)\n-            shutil.copyfile(wallet_backup_path, wallet_path)\n-            self.start_node(idx, self.extra_args[idx])\n-            self.connect_nodes(0, idx)\n-            self.sync_all()\n+            node.unloadwallet(wallet_name)\n+            node.loadwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(str(output_type))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518634656",
      "id" : 1518634656,
      "in_reply_to_id" : 1518567594,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ahIag",
      "original_commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "original_line" : 63,
      "original_position" : 96,
      "original_start_line" : null,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : null,
      "pull_request_review_id" : 1926276745,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634656/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-09T17:58:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634656",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518634666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634666"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "6755e60fffd7748e7cbc16c9b18d84e62f26c697",
      "created_at" : "2024-03-09T17:58:43Z",
      "diff_hunk" : "@@ -25,75 +17,67 @@ def add_options(self, parser):\n \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 5\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n+        node = self.nodes[0]\n+        self.generate(node, COINBASE_MATURITY + 10)\n \n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        for i in range(4):\n-            self.connect_nodes(0, i + 1)\n-\n-        addresses = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n+        output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n         if self.options.descriptors:\n-            addresses.append(\"bech32m\")\n+            output_types.append(\"bech32m\")\n \n-        for i, output_type in enumerate(addresses):\n+        for output_type in output_types:\n+            wallet_name = str(output_type)\n+            node.createwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)\n             self.log.info(\"Generate keys for wallet with address type: {}\".format(output_type))\n-            idx = i+1\n             for _ in range(90):\n-                addr_oldpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_oldpool = wallet.getnewaddress(address_type=output_type)\n             for _ in range(20):\n-                addr_extpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_extpool = wallet.getnewaddress(address_type=output_type)\n \n             # Make sure we're creating the outputs we expect\n-            address_details = self.nodes[idx].validateaddress(addr_extpool)\n-            if i == 0:\n+            address_details = wallet.validateaddress(addr_extpool)\n+            if output_type == \"legacy\":\n                 assert not address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 1:\n+            elif output_type == \"p2sh-segwit\":\n                 assert address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 2:\n+            elif output_type == \"bech32\":\n                 assert not address_details[\"isscript\"] and address_details[\"iswitness\"]\n             else:\n                 assert address_details[\"isscript\"] and address_details[\"iswitness\"]\n \n             self.log.info(\"Send funds to wallet\")\n-            self.nodes[0].sendtoaddress(addr_oldpool, 10)\n-            self.generate(self.nodes[0], 1)\n-            self.nodes[0].sendtoaddress(addr_extpool, 5)\n-            self.generate(self.nodes[0], 1)\n+            default_wallet = node.get_wallet_rpc(self.default_wallet_name)\n+            default_wallet.sendtoaddress(addr_oldpool, 10)\n+            default_wallet.sendtoaddress(addr_extpool, 5)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518634666",
      "id" : 1518634666,
      "in_reply_to_id" : 1518567404,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ahIaq",
      "original_commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "original_line" : 58,
      "original_position" : 85,
      "original_start_line" : 57,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : null,
      "pull_request_review_id" : 1926276758,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634666/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-03-09T17:58:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518634819"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634819"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good point. Probably unnecessary, it's a leftover from prev changes.",
      "commit_id" : "6755e60fffd7748e7cbc16c9b18d84e62f26c697",
      "created_at" : "2024-03-09T17:59:38Z",
      "diff_hunk" : "@@ -25,70 +17,67 @@ def add_options(self, parser):\n \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 4\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n+        node = self.nodes[0]\n+        self.generate(node, COINBASE_MATURITY + 10)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518634819",
      "id" : 1518634819,
      "in_reply_to_id" : 1517181164,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ahIdD",
      "original_commit_id" : "656dddb47e5ed5e7240d548a9db135d012f61653",
      "original_line" : 28,
      "original_position" : 34,
      "original_start_line" : null,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : null,
      "pull_request_review_id" : 1926276838,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634819/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-09T17:59:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518634819",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed addressing:\r\nhttps://github.com/bitcoin/bitcoin/pull/28928#discussion_r1517181164\r\nhttps://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518567175\r\nhttps://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518567404\r\nhttps://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518567594",
      "created_at" : "2024-03-09T18:11:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1986937616",
      "id" : 1986937616,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28928",
      "node_id" : "IC_kwDOABII5852bkMQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986937616/reactions"
      },
      "updated_at" : "2024-03-09T18:11:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986937616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518662935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518662935"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can remove this line by dropping the `setup_clean_chain` set line:\r\n```diff\r\ndiff --git a/test/functional/wallet_keypool_topup.py b/test/functional/wallet_keypool_topup.py\r\n--- a/test/functional/wallet_keypool_topup.py\t(revision 6755e60fffd7748e7cbc16c9b18d84e62f26c697)\r\n+++ b/test/functional/wallet_keypool_topup.py\t(date 1710017695860)\r\n@@ -16,7 +16,6 @@\r\n         self.add_wallet_options(parser)\r\n \r\n     def set_test_params(self):\r\n-        self.setup_clean_chain = True\r\n         self.num_nodes = 1\r\n         self.extra_args = [['-keypool=100']]\r\n \r\n@@ -25,7 +24,6 @@\r\n \r\n     def run_test(self):\r\n         node = self.nodes[0]\r\n-        self.generate(node, COINBASE_MATURITY + 1)\r\n \r\n         output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\r\n         if self.options.descriptors:\r\n```",
      "commit_id" : "69dfc35495e80971fbc7384ca6d6d9b4550840f4",
      "created_at" : "2024-03-09T21:01:30Z",
      "diff_hunk" : "@@ -25,70 +17,66 @@ def add_options(self, parser):\n \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 4\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        self.connect_nodes(0, 1)\n-        self.connect_nodes(0, 2)\n-        self.connect_nodes(0, 3)\n-\n-        for i, output_type in enumerate([\"legacy\", \"p2sh-segwit\", \"bech32\"]):\n-\n+        node = self.nodes[0]\n+        self.generate(node, COINBASE_MATURITY + 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518662935",
      "id" : 1518662935,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ahPUX",
      "original_commit_id" : "6755e60fffd7748e7cbc16c9b18d84e62f26c697",
      "original_line" : 28,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : null,
      "pull_request_review_id" : 1926313192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518662935/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-09T21:04:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518662935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518672060"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518672060"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "69dfc35495e80971fbc7384ca6d6d9b4550840f4",
      "created_at" : "2024-03-09T22:07:07Z",
      "diff_hunk" : "@@ -25,70 +17,66 @@ def add_options(self, parser):\n \n     def set_test_params(self):\n         self.setup_clean_chain = True\n-        self.num_nodes = 4\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        self.connect_nodes(0, 1)\n-        self.connect_nodes(0, 2)\n-        self.connect_nodes(0, 3)\n-\n-        for i, output_type in enumerate([\"legacy\", \"p2sh-segwit\", \"bech32\"]):\n-\n+        node = self.nodes[0]\n+        self.generate(node, COINBASE_MATURITY + 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1518672060",
      "id" : 1518672060,
      "in_reply_to_id" : 1518662935,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ahRi8",
      "original_commit_id" : "6755e60fffd7748e7cbc16c9b18d84e62f26c697",
      "original_line" : 28,
      "original_position" : 45,
      "original_start_line" : null,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : null,
      "pull_request_review_id" : 1926323282,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518672060/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-09T22:07:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1518672060",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed addressing https://github.com/bitcoin/bitcoin/pull/28928/files#r1518662935 and changed the order of the commits to simplify the changes. Thanks, @furszy.",
      "created_at" : "2024-03-09T22:07:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1986993224",
      "id" : 1986993224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28928",
      "node_id" : "IC_kwDOABII5852bxxI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986993224/reactions"
      },
      "updated_at" : "2024-03-09T22:07:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986993224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/22473234262</sub>",
      "created_at" : "2024-03-09T23:13:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1987006116",
      "id" : 1987006116,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28928",
      "node_id" : "IC_kwDOABII5852b06k",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1987006116/reactions"
      },
      "updated_at" : "2024-03-09T23:13:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1987006116",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "CI failure is unrelated.",
      "created_at" : "2024-03-10T09:36:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1987160746",
      "id" : 1987160746,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28928",
      "node_id" : "IC_kwDOABII5852caqq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1987160746/reactions"
      },
      "updated_at" : "2024-03-10T09:36:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1987160746",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK https://github.com/bitcoin/bitcoin/pull/28928/commits/5a2ca3672c3965fc4f70dc31e042feb044ab2bdf",
      "created_at" : "2024-03-10T14:20:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#issuecomment-1987249169",
      "id" : 1987249169,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28928",
      "node_id" : "IC_kwDOABII5852cwQR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1987249169/reactions"
      },
      "updated_at" : "2024-03-10T14:20:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1987249169",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2257631?v=4",
         "events_url" : "https://api.github.com/users/davidgumberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/davidgumberg/followers",
         "following_url" : "https://api.github.com/users/davidgumberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/davidgumberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/davidgumberg",
         "id" : 2257631,
         "login" : "davidgumberg",
         "node_id" : "MDQ6VXNlcjIyNTc2MzE=",
         "organizations_url" : "https://api.github.com/users/davidgumberg/orgs",
         "received_events_url" : "https://api.github.com/users/davidgumberg/received_events",
         "repos_url" : "https://api.github.com/users/davidgumberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/davidgumberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/davidgumberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/davidgumberg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1521530033"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521530033"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In bb54a7ad0cf22686e3f6735213bac1dd4453cb15 \"test: use multiple wallets instead of nodes in `wallet_keypool_topup`\"\r\n\r\nThis is incorrect and removing the thing that the test is actually testing for.\r\n\r\nThe purpose of the test is to ensure that receiving to something in the keypool will cause everything up to that address being removed from the keypool, that the keypool is subsequently topped up, and that an address from past the end of the initial keypool will also be detected after the first topup, and trigger it's own topup. That's why this has a whole thing with creating and restoring a backup - so that there is a wallet with an untouched keypool to do the test on.\r\n\r\nSimply unloading and reloading the wallet does not test that the keypool gets topped up correctly when it discovers stuff in the keypool.",
      "commit_id" : "5a2ca3672c3965fc4f70dc31e042feb044ab2bdf",
      "created_at" : "2024-03-12T14:04:40Z",
      "diff_hunk" : "@@ -24,71 +15,58 @@ def add_options(self, parser):\n         self.add_wallet_options(parser)\n \n     def set_test_params(self):\n-        self.setup_clean_chain = True\n-        self.num_nodes = 4\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        self.connect_nodes(0, 1)\n-        self.connect_nodes(0, 2)\n-        self.connect_nodes(0, 3)\n-\n-        for i, output_type in enumerate([\"legacy\", \"p2sh-segwit\", \"bech32\"]):\n-\n+        node = self.nodes[0]\n+\n+        output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n+        default_wallet = node.get_wallet_rpc(self.default_wallet_name)\n+        for output_type in output_types:\n+            wallet_name = str(output_type)\n+            node.createwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)\n             self.log.info(\"Generate keys for wallet with address type: {}\".format(output_type))\n-            idx = i+1\n             for _ in range(90):\n-                addr_oldpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_oldpool = wallet.getnewaddress(address_type=output_type)\n             for _ in range(20):\n-                addr_extpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_extpool = wallet.getnewaddress(address_type=output_type)\n \n             # Make sure we're creating the outputs we expect\n-            address_details = self.nodes[idx].validateaddress(addr_extpool)\n-            if i == 0:\n+            address_details = wallet.validateaddress(addr_extpool)\n+            if output_type == \"legacy\":\n                 assert not address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 1:\n+            elif output_type == \"p2sh-segwit\":\n                 assert address_details[\"isscript\"] and not address_details[\"iswitness\"]\n             else:\n                 assert not address_details[\"isscript\"] and address_details[\"iswitness\"]\n \n-\n             self.log.info(\"Send funds to wallet\")\n-            self.nodes[0].sendtoaddress(addr_oldpool, 10)\n-            self.generate(self.nodes[0], 1)\n-            self.nodes[0].sendtoaddress(addr_extpool, 5)\n-            self.generate(self.nodes[0], 1)\n+            default_wallet.send(outputs=[{addr_oldpool:10}, {addr_extpool:5}])\n+            self.generate(node, 1)\n \n-            self.log.info(\"Restart node with wallet backup\")\n-            self.stop_node(idx)\n-            shutil.copyfile(wallet_backup_path, wallet_path)\n-            self.start_node(idx, self.extra_args[idx])\n-            self.connect_nodes(0, idx)\n-            self.sync_all()\n+            node.unloadwallet(wallet_name)\n+            node.loadwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1521530033",
      "id" : 1521530033,
      "line" : 59,
      "node_id" : "PRRC_kwDOABII585asLSx",
      "original_commit_id" : "bb54a7ad0cf22686e3f6735213bac1dd4453cb15",
      "original_line" : 54,
      "original_position" : 93,
      "original_start_line" : 72,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : 97,
      "pull_request_review_id" : 1931168444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521530033/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 72,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:08:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521530033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1521535388"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521535388"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In bb54a7ad0cf22686e3f6735213bac1dd4453cb15 \"test: use multiple wallets instead of nodes in `wallet_keypool_topup`\"\r\n\r\nThe original method with separate transactions in separate blocks was the intended and correct behavior for this test. It needs to be that way so that the address with the lower index is found first to trigger the topup that will result in the second address being found. Since `send` shuffles the output order, we may get the second address before the first address which would result in an intermittent failure. Furthermore, even just separate transactions is not enough since the transactions could be in the incorrect order. Hence it needs to be separate transactions in separate blocks.",
      "commit_id" : "5a2ca3672c3965fc4f70dc31e042feb044ab2bdf",
      "created_at" : "2024-03-12T14:07:23Z",
      "diff_hunk" : "@@ -24,71 +15,58 @@ def add_options(self, parser):\n         self.add_wallet_options(parser)\n \n     def set_test_params(self):\n-        self.setup_clean_chain = True\n-        self.num_nodes = 4\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        self.connect_nodes(0, 1)\n-        self.connect_nodes(0, 2)\n-        self.connect_nodes(0, 3)\n-\n-        for i, output_type in enumerate([\"legacy\", \"p2sh-segwit\", \"bech32\"]):\n-\n+        node = self.nodes[0]\n+\n+        output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n+        default_wallet = node.get_wallet_rpc(self.default_wallet_name)\n+        for output_type in output_types:\n+            wallet_name = str(output_type)\n+            node.createwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)\n             self.log.info(\"Generate keys for wallet with address type: {}\".format(output_type))\n-            idx = i+1\n             for _ in range(90):\n-                addr_oldpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_oldpool = wallet.getnewaddress(address_type=output_type)\n             for _ in range(20):\n-                addr_extpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_extpool = wallet.getnewaddress(address_type=output_type)\n \n             # Make sure we're creating the outputs we expect\n-            address_details = self.nodes[idx].validateaddress(addr_extpool)\n-            if i == 0:\n+            address_details = wallet.validateaddress(addr_extpool)\n+            if output_type == \"legacy\":\n                 assert not address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 1:\n+            elif output_type == \"p2sh-segwit\":\n                 assert address_details[\"isscript\"] and not address_details[\"iswitness\"]\n             else:\n                 assert not address_details[\"isscript\"] and address_details[\"iswitness\"]\n \n-\n             self.log.info(\"Send funds to wallet\")\n-            self.nodes[0].sendtoaddress(addr_oldpool, 10)\n-            self.generate(self.nodes[0], 1)\n-            self.nodes[0].sendtoaddress(addr_extpool, 5)\n-            self.generate(self.nodes[0], 1)\n+            default_wallet.send(outputs=[{addr_oldpool:10}, {addr_extpool:5}])\n+            self.generate(node, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1521535388",
      "id" : 1521535388,
      "line" : 55,
      "node_id" : "PRRC_kwDOABII585asMmc",
      "original_commit_id" : "bb54a7ad0cf22686e3f6735213bac1dd4453cb15",
      "original_line" : 50,
      "original_position" : 83,
      "original_start_line" : 67,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : 87,
      "pull_request_review_id" : 1931168444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521535388/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 67,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-03-12T14:08:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1521535388",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1527717365"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527717365"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It needs some more love but I just re-wrote the first commit correcting achow's points: https://github.com/furszy/bitcoin-core/commit/738860039d1f2e2038e64b7d8d0cd23f3e6b88a5.\r\n\r\nGot a similar speedup for the descriptors wallet:\r\n\r\n```\r\nBefore:\r\n./wallet_keypool_topup.py 5.63s user 0.57s system 56% cpu 10.945 total\r\n\r\nAfter:\r\n./wallet_keypool_topup.py 1.69s user 0.19s system 72% cpu 2.605 total\r\n```\r\n\r\nBut got a slowdown for the legacy wallet:\r\n```\r\nBefore:\r\n./wallet_keypool_topup.py --legacy-wallet  9.52s user 2.07s system 32% cpu 35.514 total\r\n\r\nAfter:\r\n./wallet_keypool_topup.py --legacy-wallet  5.03s user 2.15s system 16% cpu 44.458 total\r\n```\r\n\r\n@brunoerg, if you like it, cherry-pick it and see if you can clean it further. I did not spend much time on it.",
      "commit_id" : "5a2ca3672c3965fc4f70dc31e042feb044ab2bdf",
      "created_at" : "2024-03-18T02:49:06Z",
      "diff_hunk" : "@@ -24,71 +15,58 @@ def add_options(self, parser):\n         self.add_wallet_options(parser)\n \n     def set_test_params(self):\n-        self.setup_clean_chain = True\n-        self.num_nodes = 4\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        self.connect_nodes(0, 1)\n-        self.connect_nodes(0, 2)\n-        self.connect_nodes(0, 3)\n-\n-        for i, output_type in enumerate([\"legacy\", \"p2sh-segwit\", \"bech32\"]):\n-\n+        node = self.nodes[0]\n+\n+        output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n+        default_wallet = node.get_wallet_rpc(self.default_wallet_name)\n+        for output_type in output_types:\n+            wallet_name = str(output_type)\n+            node.createwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)\n             self.log.info(\"Generate keys for wallet with address type: {}\".format(output_type))\n-            idx = i+1\n             for _ in range(90):\n-                addr_oldpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_oldpool = wallet.getnewaddress(address_type=output_type)\n             for _ in range(20):\n-                addr_extpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_extpool = wallet.getnewaddress(address_type=output_type)\n \n             # Make sure we're creating the outputs we expect\n-            address_details = self.nodes[idx].validateaddress(addr_extpool)\n-            if i == 0:\n+            address_details = wallet.validateaddress(addr_extpool)\n+            if output_type == \"legacy\":\n                 assert not address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 1:\n+            elif output_type == \"p2sh-segwit\":\n                 assert address_details[\"isscript\"] and not address_details[\"iswitness\"]\n             else:\n                 assert not address_details[\"isscript\"] and address_details[\"iswitness\"]\n \n-\n             self.log.info(\"Send funds to wallet\")\n-            self.nodes[0].sendtoaddress(addr_oldpool, 10)\n-            self.generate(self.nodes[0], 1)\n-            self.nodes[0].sendtoaddress(addr_extpool, 5)\n-            self.generate(self.nodes[0], 1)\n+            default_wallet.send(outputs=[{addr_oldpool:10}, {addr_extpool:5}])\n+            self.generate(node, 1)\n \n-            self.log.info(\"Restart node with wallet backup\")\n-            self.stop_node(idx)\n-            shutil.copyfile(wallet_backup_path, wallet_path)\n-            self.start_node(idx, self.extra_args[idx])\n-            self.connect_nodes(0, idx)\n-            self.sync_all()\n+            node.unloadwallet(wallet_name)\n+            node.loadwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1527717365",
      "id" : 1527717365,
      "in_reply_to_id" : 1521530033,
      "line" : 59,
      "node_id" : "PRRC_kwDOABII585bDx31",
      "original_commit_id" : "bb54a7ad0cf22686e3f6735213bac1dd4453cb15",
      "original_line" : 54,
      "original_position" : 93,
      "original_start_line" : 72,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : 97,
      "pull_request_review_id" : 1941890620,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527717365/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 72,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-03-18T02:49:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527717365",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1527721799"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527721799"
         }
      },
      "author_association" : "MEMBER",
      "body" : "That needs to be mentioned in the test case.",
      "commit_id" : "5a2ca3672c3965fc4f70dc31e042feb044ab2bdf",
      "created_at" : "2024-03-18T02:54:11Z",
      "diff_hunk" : "@@ -24,71 +15,58 @@ def add_options(self, parser):\n         self.add_wallet_options(parser)\n \n     def set_test_params(self):\n-        self.setup_clean_chain = True\n-        self.num_nodes = 4\n-        self.extra_args = [[], ['-keypool=100'], ['-keypool=100'], ['-keypool=100']]\n+        self.num_nodes = 1\n+        self.extra_args = [['-keypool=100']]\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n     def run_test(self):\n-        wallet_path = self.nodes[1].wallets_path / self.default_wallet_name / self.wallet_data_filename\n-        wallet_backup_path = self.nodes[1].datadir_path / \"wallet.bak\"\n-        self.generate(self.nodes[0], COINBASE_MATURITY + 1)\n-\n-        self.log.info(\"Make backup of wallet\")\n-        self.stop_node(1)\n-        shutil.copyfile(wallet_path, wallet_backup_path)\n-        self.start_node(1, self.extra_args[1])\n-        self.connect_nodes(0, 1)\n-        self.connect_nodes(0, 2)\n-        self.connect_nodes(0, 3)\n-\n-        for i, output_type in enumerate([\"legacy\", \"p2sh-segwit\", \"bech32\"]):\n-\n+        node = self.nodes[0]\n+\n+        output_types = [\"legacy\", \"p2sh-segwit\", \"bech32\"]\n+        default_wallet = node.get_wallet_rpc(self.default_wallet_name)\n+        for output_type in output_types:\n+            wallet_name = str(output_type)\n+            node.createwallet(wallet_name)\n+            wallet = node.get_wallet_rpc(wallet_name)\n             self.log.info(\"Generate keys for wallet with address type: {}\".format(output_type))\n-            idx = i+1\n             for _ in range(90):\n-                addr_oldpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_oldpool = wallet.getnewaddress(address_type=output_type)\n             for _ in range(20):\n-                addr_extpool = self.nodes[idx].getnewaddress(address_type=output_type)\n+                addr_extpool = wallet.getnewaddress(address_type=output_type)\n \n             # Make sure we're creating the outputs we expect\n-            address_details = self.nodes[idx].validateaddress(addr_extpool)\n-            if i == 0:\n+            address_details = wallet.validateaddress(addr_extpool)\n+            if output_type == \"legacy\":\n                 assert not address_details[\"isscript\"] and not address_details[\"iswitness\"]\n-            elif i == 1:\n+            elif output_type == \"p2sh-segwit\":\n                 assert address_details[\"isscript\"] and not address_details[\"iswitness\"]\n             else:\n                 assert not address_details[\"isscript\"] and address_details[\"iswitness\"]\n \n-\n             self.log.info(\"Send funds to wallet\")\n-            self.nodes[0].sendtoaddress(addr_oldpool, 10)\n-            self.generate(self.nodes[0], 1)\n-            self.nodes[0].sendtoaddress(addr_extpool, 5)\n-            self.generate(self.nodes[0], 1)\n+            default_wallet.send(outputs=[{addr_oldpool:10}, {addr_extpool:5}])\n+            self.generate(node, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28928#discussion_r1527721799",
      "id" : 1527721799,
      "in_reply_to_id" : 1521535388,
      "line" : 55,
      "node_id" : "PRRC_kwDOABII585bDy9H",
      "original_commit_id" : "bb54a7ad0cf22686e3f6735213bac1dd4453cb15",
      "original_line" : 50,
      "original_position" : 83,
      "original_start_line" : 67,
      "path" : "test/functional/wallet_keypool_topup.py",
      "position" : 87,
      "pull_request_review_id" : 1941895619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28928",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527721799/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 67,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-03-18T02:54:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1527721799",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   }
]

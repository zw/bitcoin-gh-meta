[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28926).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [brunoerg](https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1823155627), [amitiuttarwar](https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1823616924), [Sjors](https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1824139761), [vasild](https://github.com/bitcoin/bitcoin/pull/28926#pullrequestreview-1765066743), [mzumsande](https://github.com/bitcoin/bitcoin/pull/28926#pullrequestreview-1807023183), [kristapsk](https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1879765838) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29421](https://github.com/bitcoin/bitcoin/pull/29421) (net: make the list of known message types a compile time constant by vasild)\n* [#29418](https://github.com/bitcoin/bitcoin/pull/29418) (rpc: provide per message stats for global traffic via new RPC 'getnetmsgstats' by vasild)\n* [#27770](https://github.com/bitcoin/bitcoin/pull/27770) (Introduce 'getblockfileinfo' RPC command by furszy)\n* [#27114](https://github.com/bitcoin/bitcoin/pull/27114) (p2p: Allow whitelisting manual connections by brunoerg)\n* [#19463](https://github.com/bitcoin/bitcoin/pull/19463) (Prune locks by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-11-22T12:37:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1822694513",
      "id" : 1822694513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585spBxx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1822694513/reactions"
      },
      "updated_at" : "2024-02-12T01:25:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1822694513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402168125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402168125"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "All these plus the `NUM_NET_MESSAGE_TYPES` constant can be avoided if the list of all message types is turned into a `std::array`. Consider this:\r\n\r\n<details>\r\n<summary>[patch] make the list of known message types a compile time constant</summary>\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex a2f80cbcf7..133abae117 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -3670,13 +3670,13 @@ CNode::CNode(NodeId idIn,\r\n       nLocalHostNonce{nLocalHostNonceIn},\r\n       m_recv_flood_size{node_opts.recv_flood_size},\r\n       m_i2p_sam_session{std::move(node_opts.i2p_sam_session)}\r\n {\r\n     if (inbound_onion) assert(conn_type_in == ConnectionType::INBOUND);\r\n \r\n-    for (const std::string &msg : getAllNetMessageTypes())\r\n+    for (const auto& msg : g_all_net_message_types)\r\n         mapRecvBytesPerMsgType[msg] = 0;\r\n     mapRecvBytesPerMsgType[NET_MESSAGE_TYPE_OTHER] = 0;\r\n \r\n     if (fLogIPs) {\r\n         LogPrint(BCLog::NET, \"Added connection to %s peer=%d\\n\", m_addr_name, id);\r\n     } else {\r\ndiff --git a/src/protocol.cpp b/src/protocol.cpp\r\nindex 27a0a2ffc1..0b22cc47aa 100644\r\n--- a/src/protocol.cpp\r\n+++ b/src/protocol.cpp\r\n@@ -46,53 +46,12 @@ const char* CFHEADERS = \"cfheaders\";\r\n const char* GETCFCHECKPT = \"getcfcheckpt\";\r\n const char* CFCHECKPT = \"cfcheckpt\";\r\n const char* WTXIDRELAY = \"wtxidrelay\";\r\n const char* SENDTXRCNCL = \"sendtxrcncl\";\r\n } // namespace NetMsgType\r\n \r\n-/** All known message types. Keep this in the same order as the list of\r\n- * messages above and in protocol.h.\r\n- */\r\n-const static std::vector<std::string> g_all_net_message_types{\r\n-    NetMsgType::VERSION,\r\n-    NetMsgType::VERACK,\r\n-    NetMsgType::ADDR,\r\n-    NetMsgType::ADDRV2,\r\n-    NetMsgType::SENDADDRV2,\r\n-    NetMsgType::INV,\r\n-    NetMsgType::GETDATA,\r\n-    NetMsgType::MERKLEBLOCK,\r\n-    NetMsgType::GETBLOCKS,\r\n-    NetMsgType::GETHEADERS,\r\n-    NetMsgType::TX,\r\n-    NetMsgType::HEADERS,\r\n-    NetMsgType::BLOCK,\r\n-    NetMsgType::GETADDR,\r\n-    NetMsgType::MEMPOOL,\r\n-    NetMsgType::PING,\r\n-    NetMsgType::PONG,\r\n-    NetMsgType::NOTFOUND,\r\n-    NetMsgType::FILTERLOAD,\r\n-    NetMsgType::FILTERADD,\r\n-    NetMsgType::FILTERCLEAR,\r\n-    NetMsgType::SENDHEADERS,\r\n-    NetMsgType::FEEFILTER,\r\n-    NetMsgType::SENDCMPCT,\r\n-    NetMsgType::CMPCTBLOCK,\r\n-    NetMsgType::GETBLOCKTXN,\r\n-    NetMsgType::BLOCKTXN,\r\n-    NetMsgType::GETCFILTERS,\r\n-    NetMsgType::CFILTER,\r\n-    NetMsgType::GETCFHEADERS,\r\n-    NetMsgType::CFHEADERS,\r\n-    NetMsgType::GETCFCHECKPT,\r\n-    NetMsgType::CFCHECKPT,\r\n-    NetMsgType::WTXIDRELAY,\r\n-    NetMsgType::SENDTXRCNCL,\r\n-};\r\n-\r\n CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn, const char* pszCommand, unsigned int nMessageSizeIn)\r\n     : pchMessageStart{pchMessageStartIn}\r\n {\r\n     // Copy the command name\r\n     size_t i = 0;\r\n     for (; i < COMMAND_SIZE && pszCommand[i] != 0; ++i) pchCommand[i] = pszCommand[i];\r\n@@ -175,17 +134,12 @@ std::string CInv::ToString() const\r\n         return strprintf(\"%s %s\", GetCommand(), hash.ToString());\r\n     } catch(const std::out_of_range &) {\r\n         return strprintf(\"0x%08x %s\", type, hash.ToString());\r\n     }\r\n }\r\n \r\n-const std::vector<std::string> &getAllNetMessageTypes()\r\n-{\r\n-    return g_all_net_message_types;\r\n-}\r\n-\r\n /**\r\n  * Convert a service flag (NODE_*) to a human readable string.\r\n  * It supports unknown service flags which will be returned as \"UNKNOWN[...]\".\r\n  * @param[in] bit the service flag is calculated as (1 << bit)\r\n  */\r\n static std::string serviceFlagToStr(size_t bit)\r\ndiff --git a/src/protocol.h b/src/protocol.h\r\nindex e405253632..2a6b85dea5 100644\r\n--- a/src/protocol.h\r\n+++ b/src/protocol.h\r\n@@ -264,14 +264,50 @@ extern const char* WTXIDRELAY;\r\n  * The salt is used to compute short txids needed for efficient\r\n  * txreconciliation, as described by BIP 330.\r\n  */\r\n extern const char* SENDTXRCNCL;\r\n }; // namespace NetMsgType\r\n \r\n-/* Get a vector of all valid message types (see above) */\r\n-const std::vector<std::string>& getAllNetMessageTypes();\r\n+/** All known message types (see above). Keep this in the same order as the list of messages above. */\r\n+static const std::array g_all_net_message_types{\r\n+    NetMsgType::VERSION,\r\n+    NetMsgType::VERACK,\r\n+    NetMsgType::ADDR,\r\n+    NetMsgType::ADDRV2,\r\n+    NetMsgType::SENDADDRV2,\r\n+    NetMsgType::INV,\r\n+    NetMsgType::GETDATA,\r\n+    NetMsgType::MERKLEBLOCK,\r\n+    NetMsgType::GETBLOCKS,\r\n+    NetMsgType::GETHEADERS,\r\n+    NetMsgType::TX,\r\n+    NetMsgType::HEADERS,\r\n+    NetMsgType::BLOCK,\r\n+    NetMsgType::GETADDR,\r\n+    NetMsgType::MEMPOOL,\r\n+    NetMsgType::PING,\r\n+    NetMsgType::PONG,\r\n+    NetMsgType::NOTFOUND,\r\n+    NetMsgType::FILTERLOAD,\r\n+    NetMsgType::FILTERADD,\r\n+    NetMsgType::FILTERCLEAR,\r\n+    NetMsgType::SENDHEADERS,\r\n+    NetMsgType::FEEFILTER,\r\n+    NetMsgType::SENDCMPCT,\r\n+    NetMsgType::CMPCTBLOCK,\r\n+    NetMsgType::GETBLOCKTXN,\r\n+    NetMsgType::BLOCKTXN,\r\n+    NetMsgType::GETCFILTERS,\r\n+    NetMsgType::CFILTER,\r\n+    NetMsgType::GETCFHEADERS,\r\n+    NetMsgType::CFHEADERS,\r\n+    NetMsgType::GETCFCHECKPT,\r\n+    NetMsgType::CFCHECKPT,\r\n+    NetMsgType::WTXIDRELAY,\r\n+    NetMsgType::SENDTXRCNCL,\r\n+};\r\n \r\n /** nServices flags */\r\n enum ServiceFlags : uint64_t {\r\n     // NOTE: When adding here, be sure to update serviceFlagToStr too\r\n     // Nothing\r\n     NODE_NONE = 0,\r\ndiff --git a/src/test/fuzz/p2p_transport_serialization.cpp b/src/test/fuzz/p2p_transport_serialization.cpp\r\nindex 21d8dab536..853661b4d4 100644\r\n--- a/src/test/fuzz/p2p_transport_serialization.cpp\r\n+++ b/src/test/fuzz/p2p_transport_serialization.cpp\r\n@@ -18,19 +18,18 @@\r\n #include <limits>\r\n #include <optional>\r\n #include <vector>\r\n \r\n namespace {\r\n \r\n-std::vector<std::string> g_all_messages;\r\n+auto g_all_messages = g_all_net_message_types;\r\n \r\n void initialize_p2p_transport_serialization()\r\n {\r\n     ECC_Start();\r\n     SelectParams(ChainType::REGTEST);\r\n-    g_all_messages = getAllNetMessageTypes();\r\n     std::sort(g_all_messages.begin(), g_all_messages.end());\r\n }\r\n \r\n } // namespace\r\n \r\n FUZZ_TARGET(p2p_transport_serialization, .init = initialize_p2p_transport_serialization)\r\n@@ -147,13 +146,13 @@ void SimulationTest(Transport& initiator, Transport& responder, R& rng, FuzzedDa\r\n                 if (c < ' ' || c > 0x7E) break;\r\n                 ret += c;\r\n             }\r\n             return ret;\r\n         } else {\r\n             // Otherwise, use it as index into the list of known messages.\r\n-            return g_all_messages[v % g_all_messages.size()];\r\n+            return std::string{g_all_messages[v % g_all_messages.size()]};\r\n         }\r\n     };\r\n \r\n     // Function to construct a CSerializedNetMsg to send.\r\n     auto make_msg_fn = [&](bool first) {\r\n         CSerializedNetMsg msg;\r\ndiff --git a/src/test/fuzz/process_message.cpp b/src/test/fuzz/process_message.cpp\r\nindex d38d1bb40e..24c711f421 100644\r\n--- a/src/test/fuzz/process_message.cpp\r\n+++ b/src/test/fuzz/process_message.cpp\r\n@@ -42,13 +42,13 @@ std::string_view LIMIT_TO_MESSAGE_TYPE{};\r\n } // namespace\r\n \r\n void initialize_process_message()\r\n {\r\n     if (const auto val{std::getenv(\"LIMIT_TO_MESSAGE_TYPE\")}) {\r\n         LIMIT_TO_MESSAGE_TYPE = val;\r\n-        Assert(std::count(getAllNetMessageTypes().begin(), getAllNetMessageTypes().end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\r\n+        Assert(std::count(g_all_net_message_types.begin(), g_all_net_message_types.end(), LIMIT_TO_MESSAGE_TYPE)); // Unknown message type passed\r\n     }\r\n \r\n     static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(\r\n             /*chain_type=*/ChainType::REGTEST,\r\n             /*extra_args=*/{\"-txreconciliation\"});\r\n     g_setup = testing_setup.get();\r\n```\r\n</details>",
      "commit_id" : "0341129ed1023576f04786d863a74682b187fc06",
      "created_at" : "2023-11-22T14:40:22Z",
      "diff_hunk" : "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402168125",
      "id" : 1402168125,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII585Tk2M9",
      "original_commit_id" : "0341129ed1023576f04786d863a74682b187fc06",
      "original_line" : 97,
      "original_position" : 20,
      "original_start_line" : 95,
      "path" : "src/protocol.cpp",
      "position" : 20,
      "pull_request_review_id" : 1744577141,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402168125/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 95,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-22T14:45:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402168125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```bash\r\nclang-tidy-17 -p=/ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu -quiet -load=/tidy-build/libbitcoin-tidy.so /ci_container_base/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/src/rpc/net.cpp\r\nrpc/net.cpp:726:30: error: use emplace_back instead of push_back [modernize-use-emplace,-warnings-as-errors]\r\n  726 |                         path.push_back(\"totals\");\r\n      |                              ^~~~~~~~~~\r\n      |                              emplace_back(\r\n```",
      "created_at" : "2023-11-22T16:26:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1823090489",
      "id" : 1823090489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585sqic5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823090489/reactions"
      },
      "updated_at" : "2023-11-22T16:26:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823090489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-11-22T17:02:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1823155627",
      "id" : 1823155627,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585sqyWr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823155627/reactions"
      },
      "updated_at" : "2023-11-22T17:02:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823155627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402731108"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402731108"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the idea Vasil.\r\n\r\nI implemented it in this [tag](https://github.com/bitcoin/bitcoin/compare/master...willcl-ark:bitcoin:netmsgstats-vd-array) to see what it would look like.\r\n\r\nOverall, I prefer the design, but in writing the commit message for the change I began to feel unsure that it _actually_ results in `g_all_net_message_types` being a compile-time constant.  IIUC the array will reference a `const char*`. The pointer addresses can only be allocated at runtime and in turn `g_all_net_message_types` will be static at runtime but not at compile time?\r\n\r\nI'm not sure I see an easy way to have this be a compile time constant, if my understanding above is correct.",
      "commit_id" : "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "created_at" : "2023-11-22T21:30:30Z",
      "diff_hunk" : "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402731108",
      "id" : 1402731108,
      "in_reply_to_id" : 1402168125,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII585Tm_pk",
      "original_commit_id" : "0341129ed1023576f04786d863a74682b187fc06",
      "original_line" : 97,
      "original_position" : 20,
      "original_start_line" : 95,
      "path" : "src/protocol.cpp",
      "position" : 20,
      "pull_request_review_id" : 1745412247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402731108/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 95,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-22T21:30:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402731108",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402733334"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402733334"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Make it `constexpr` instead of `const`. That'll force the compiler to evaluate the array at compile-time (or give an error if that's not possible).",
      "commit_id" : "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "created_at" : "2023-11-22T21:33:44Z",
      "diff_hunk" : "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402733334",
      "id" : 1402733334,
      "in_reply_to_id" : 1402168125,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII585TnAMW",
      "original_commit_id" : "0341129ed1023576f04786d863a74682b187fc06",
      "original_line" : 97,
      "original_position" : 20,
      "original_start_line" : 95,
      "path" : "src/protocol.cpp",
      "position" : 20,
      "pull_request_review_id" : 1745415800,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402733334/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 95,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-22T21:33:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402733334",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402735834"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402735834"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I forgot to mention I had tried that. It results in something like this:\r\n\r\n```log\r\n$ bear -- make\r\nMaking all in src\r\nmake[1]: Entering directory '/home/will/src/bitcoin/src'\r\nmake[2]: Entering directory '/home/will/src/bitcoin/src'\r\nmake[3]: Entering directory '/home/will/src/bitcoin'\r\nmake[3]: Leaving directory '/home/will/src/bitcoin'\r\n  CXX      bitcoind-bitcoind.o\r\nIn file included from ./netstats.h:10,\r\n                 from ./net.h:22,\r\n                 from ./interfaces/node.h:10,\r\n                 from ./interfaces/init.h:10,\r\n                 from bitcoind.cpp:19:\r\n./protocol.h:276:65: error: the type âconst std::array<std::__cxx11::basic_string<char>, 35>â of âconstexprâ variable âg_all_net_message_typesâ is not literal\r\n  276 | static constexpr std::array<std::string, NUM_NET_MESSAGE_TYPES> g_all_net_message_types{\r\n      |                                                                 ^~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from ./uint256.h:13,\r\n                 from ./consensus/params.h:9,\r\n                 from ./kernel/chainparams.h:9,\r\n                 from ./chainparams.h:9,\r\n                 from bitcoind.cpp:10:\r\n/usr/include/c++/12/array:99:12: note: âstd::array<std::__cxx11::basic_string<char>, 35>â is not literal because:\r\n   99 |     struct array\r\n      |            ^~~~~\r\n/usr/include/c++/12/array:99:12: note:   âstd::array<std::__cxx11::basic_string<char>, 35>â has a non-trivial destructor\r\nmake[2]: *** [Makefile:16350: bitcoind-bitcoind.o] Error 1\r\nmake[2]: Leaving directory '/home/will/src/bitcoin/src'\r\nmake[1]: *** [Makefile:20245: all-recursive] Error 1\r\nmake[1]: Leaving directory '/home/will/src/bitcoin/src'\r\nmake: *** [Makefile:813: all-recursive] Error 1\r\n```",
      "commit_id" : "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "created_at" : "2023-11-22T21:37:36Z",
      "diff_hunk" : "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402735834",
      "id" : 1402735834,
      "in_reply_to_id" : 1402168125,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII585TnAza",
      "original_commit_id" : "0341129ed1023576f04786d863a74682b187fc06",
      "original_line" : 97,
      "original_position" : 20,
      "original_start_line" : 95,
      "path" : "src/protocol.cpp",
      "position" : 20,
      "pull_request_review_id" : 1745419345,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402735834/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 95,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-22T21:37:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402735834",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402736925"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402736925"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Oh, yes, you cannot have `constexpr` std::string until C++20.",
      "commit_id" : "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "created_at" : "2023-11-22T21:39:21Z",
      "diff_hunk" : "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1402736925",
      "id" : 1402736925,
      "in_reply_to_id" : 1402168125,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII585TnBEd",
      "original_commit_id" : "0341129ed1023576f04786d863a74682b187fc06",
      "original_line" : 97,
      "original_position" : 20,
      "original_start_line" : 95,
      "path" : "src/protocol.cpp",
      "position" : 20,
      "pull_request_review_id" : 1745420825,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402736925/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 95,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-22T21:39:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402736925",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "yay!! thanks for picking this up. approach ACK ",
      "created_at" : "2023-11-22T23:16:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1823616924",
      "id" : 1823616924,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585ssi-c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823616924/reactions"
      },
      "updated_at" : "2023-11-22T23:16:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823616924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nThe RPC help is a bit abstract at the moment, e.g. \"Results may optionally be grouped so only certain dimensions are shown.\"\r\n\r\nIt might be enough to only show 1 `Result:` section in the help, e.g. just with two dimensions.\r\n\r\nIn the example section (and in the PR description), you could add a description, e.g.:\r\n\r\n* Get the total number of messages and bytes sent/received:  `bitcoin-cli getnetmsgstats`\r\n* Show number of messages and bytes per message type: `bitcoin-cli getnetmsgstats '[\"message_type\"]'`\r\n* Group statistics first by message type, then by connection type: `bitcoin-cli getnetmsgstats '[\"message_type\", \"connection_type\"]'`\r\n\r\nIt might be better to add a `totals` field to all groups, in every dimension. In that case I would also have the default `getnetmsgstats` return something a bit more interesting, e.g. the equivalent of `getnetmsgstats '[\"message_type\"]`.\r\n",
      "created_at" : "2023-11-23T10:26:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1824139761",
      "id" : 1824139761,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585suinx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1824139761/reactions"
      },
      "updated_at" : "2023-11-23T10:26:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1824139761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1404355662"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404355662"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`const std::array a{x, y, z};` - at compile time the compiler knows the size of the array. `a.size()` can be used to define the size of other arrays, e.g. `std::array<int, a.size()> anoher;`. This is what matters. Whether the contents of the array is a compile time constant (the pointers), I am not sure.",
      "commit_id" : "33b44f2693cd8beefdb424dd73cc47250d8b4852",
      "created_at" : "2023-11-24T13:28:35Z",
      "diff_hunk" : "@@ -90,6 +92,10 @@ const static std::vector<std::string> g_all_net_message_types{\n     NetMsgType::SENDTXRCNCL,\n };\n \n+static_assert(NUM_NET_MESSAGE_TYPES == sizeof(allNetMessageTypes) / sizeof(allNetMessageTypes[0]), \"Please update NUM_NET_MESSAGE_TYPES\");\n+\n+const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1404355662",
      "id" : 1404355662,
      "in_reply_to_id" : 1402168125,
      "line" : 97,
      "node_id" : "PRRC_kwDOABII585TtMRO",
      "original_commit_id" : "0341129ed1023576f04786d863a74682b187fc06",
      "original_line" : 97,
      "original_position" : 20,
      "original_start_line" : 95,
      "path" : "src/protocol.cpp",
      "position" : 20,
      "pull_request_review_id" : 1747954108,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28926",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404355662/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 95,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-24T13:28:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1404355662",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> It might be better to add a `totals` field to all groups, in every dimension. In that case I would also have the default `getnetmsgstats` return something a bit more interesting, e.g. the equivalent of `getnetmsgstats '[\"message_type\"]`.\r\n\r\nThat would be interesting. However it would further complicate this PR. The grouping/aggregating part I think is already a bit convoluted. Maybe it would make sense to drop it and print the full output without any grouping in this PR and do the grouping in another PR.",
      "created_at" : "2023-11-24T13:43:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1825696764",
      "id" : 1825696764,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585s0ev8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825696764/reactions"
      },
      "updated_at" : "2023-11-24T13:43:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825696764",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> drop it\r\n\r\nDo you mean dropping the default `total` field that this PR already has? That sounds good to me.",
      "created_at" : "2023-11-28T13:51:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1829888361",
      "id" : 1829888361,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585tEeFp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1829888361/reactions"
      },
      "updated_at" : "2023-11-28T13:51:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1829888361",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "No, I meant to drop the possibility to aggregate or nest the result, i.e. remove the arguments of the RPC and always return the full JSON. I did not see (yet) that `total` field. I guess it would be cleaner without it.",
      "created_at" : "2023-11-29T14:24:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1831994509",
      "id" : 1831994509,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585tMgSN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1831994509/reactions"
      },
      "updated_at" : "2023-11-29T14:24:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1831994509",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> No, I meant to drop the possibility to aggregate or nest the result, i.e. remove the arguments of the RPC and always return the full JSON. I did not see (yet) that `total` field. I guess it would be cleaner without it.\r\n\r\nI think dropping the totals would probably make sense, as these can be totaled up using `jq` or similar tools pretty easily.\r\n\r\nThe only issue I see with not performing (optional) aggregation on the CLI, is that a node active on all networks could return a json object with a maximum of 2*4*6*35 = 1680 fields, making further processing a hard requirement for human consuption. Arguably this approach fits the unix philosophy better.\r\n\r\nI personally think it's a nice for human to be able to aggregate on the RPC in case tools like `jq` or `fx` aren't available or something, but as mentioned removing this ability would simplify one of the commits here.",
      "created_at" : "2023-11-29T16:50:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1832324046",
      "id" : 1832324046,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585tNwvO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832324046/reactions"
      },
      "updated_at" : "2023-11-29T16:50:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832324046",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I personally think it's a nice for human to be able to aggregate on the RPC in case tools like jq or fx aren't available\r\n\r\nI agree. Would be nice to have that finally eventually. I meant that if it is too complex for review or causes controversy then to get the simpler one first merged (without aggregation) and then in another PR do the aggregation. Maybe that would not be necessary. I am updating the WIP from https://github.com/bitcoin/bitcoin/compare/master...vasild:bitcoin:getnetmsgstats and will compare with this...",
      "created_at" : "2023-11-29T17:42:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1832409258",
      "id" : 1832409258,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585tOFiq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832409258/reactions"
      },
      "updated_at" : "2023-11-29T17:42:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1832409258",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I have applied the suggestions below in [`vasild/getnetmsgstats`](https://github.com/vasild/bitcoin/commits/getnetmsgstats) plus some other simplifications. Feel free to pick them.\r\n\r\nShould I PR the above branch?",
      "created_at" : "2024-01-06T16:07:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1879740549",
      "id" : 1879740549,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585wCpCF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879740549/reactions"
      },
      "updated_at" : "2024-01-06T16:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879740549",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2024-01-06T17:45:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1879765838",
      "id" : 1879765838,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585wCvNO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879765838/reactions"
      },
      "updated_at" : "2024-01-06T17:45:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879765838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > I have applied the suggestions below in [`vasild/getnetmsgstats`](https://github.com/vasild/bitcoin/commits/getnetmsgstats) plus some other simplifications. Feel free to pick them.\r\n> \r\n> Should I PR the above branch?\r\n\r\nHey Vasil, I think this makes most sense, especially seeing as you've co-authored/written most of the changes here, and your improvements on the new branch! \r\n\r\nI've been testing your branch out today and am a fan of the simplicity vs this changeset. I did kind of prefer the \"aggregation\" RPC behaviour in this branch, even though it doesn't really aggregate, more accurately it \"groups by\".\r\n\r\nIn any case, your new branch does actually aggregate results, and the same effect can be easily achieved. e.g. to produce output like:\r\n\r\n```\r\n{\r\n  \"wtxidrelay\": {\r\n    \"bytes\": 1146,\r\n    \"count\": 47\r\n  },\r\n  \"headers\": {\r\n    \"bytes\": 10846,\r\n    \"count\": 55\r\n  },\r\n  \"tx\": {\r\n    \"bytes\": 511341,\r\n    \"count\": 801\r\n  },\r\n  \"ping\": {\r\n    \"bytes\": 1786,\r\n    \"count\": 56\r\n  }\r\n}\r\n```\r\n\r\nIn this branch we would do: `.src/bitcoin-cli getnetmsgstats '[\"message_type\"]'`, whereas on your new fork (with actual aggregation) this requires the \"inverse\": `./src/bitcoin-cli getnetmsgstats '[\"direction\", \"network\", \"connection_type\"]'`.\r\n\r\nYour comments [here](https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1415682660) did get me thinking whether we could use `mapRecvBytesPerMsgType` to return the netmsgstats, or conversely use data from `net_stats` to return stats to the `getpeerinfo` RPC and avoid counting the same message twice everywhere. But I'm not convinced that the changes that would be needed to do that would be worth it.",
      "created_at" : "2024-01-24T16:08:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1908444454",
      "id" : 1908444454,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585xwI0m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908444454/reactions"
      },
      "updated_at" : "2024-01-24T16:08:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908444454",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > Should I PR the above branch?\r\n\r\n> Hey Vasil, I think this makes most sense ...\r\n\r\nI am on it!\r\n\r\n> Your comments https://github.com/bitcoin/bitcoin/pull/28926#discussion_r1415682660 did get me thinking whether we could use mapRecvBytesPerMsgType to return the netmsgstats, or conversely use data from net_stats to return stats to the getpeerinfo RPC and avoid counting the same message twice everywhere. But I'm not convinced that the changes that would be needed to do that would be worth it.\r\n\r\nHmm,\r\n* If we use `CNode::mapRecvBytesPerMsgType` to create the global netmsgstats report, then we still need to store the data somewhere when the `CNode` disconnects. So we need another storage anyway.\r\n* If we use the new global `net_stats` to create the per-peer report, then we have to add another dimension to it - \"peer id\". Then query only for a given peer for `getpeerinfo` and always aggregate by \"peer id\" (hide it) from the new totals report from `getnetmsgstats`. That seems like it may be a good idea? But what when a peer disconnects? We don't want to bloat `net_stats` with individual info for disconnected peers. So then we would have to have one dummy \"peer id\", e.g. -1 and sum disconnected peers' stats into that one. That way `net_stats` cannot be an array anymore because the size of the \"peer id\" dimension is not known at compile time. What do others think about this?",
      "created_at" : "2024-02-10T15:27:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937043749",
      "id" : 1937043749,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585zdPEl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937043749/reactions"
      },
      "updated_at" : "2024-02-10T15:27:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937043749",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> ... this requires the \"inverse\" ...\r\n\r\nHa, I did not realize this before! I am fine either way. Also I am not sure what would be the best name of the RPC parameter, e.g. `bitcoin-cli -named getnetmsgstats whatname='[...]'`. Lets do a poll below (use :+1:).",
      "created_at" : "2024-02-10T15:35:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937045521",
      "id" : 1937045521,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585zdPgR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937045521/reactions"
      },
      "updated_at" : "2024-02-10T15:35:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937045521",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "To produce the output in https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1908444454 it is better to use `bitcoin-cli getnetmsgstats '[\"message_type\"]'`. How to name the RPC parameter?\r\n",
      "created_at" : "2024-02-10T15:36:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937045585",
      "id" : 1937045585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585zdPhR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937045585/reactions"
      },
      "updated_at" : "2024-02-10T15:36:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937045585",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "To produce the output in https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1908444454 it is better to use `bitcoin-cli getnetmsgstats '[\"direction\", \"network\", \"connection_type\"]'`. How to name the RPC parameter?\r\n",
      "created_at" : "2024-02-10T15:36:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937045606",
      "id" : 1937045606,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585zdPhm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937045606/reactions"
      },
      "updated_at" : "2024-02-10T15:36:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937045606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Should I PR the above branch?\r\n\r\nOpened https://github.com/bitcoin/bitcoin/pull/29418",
      "created_at" : "2024-02-11T09:35:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937492567",
      "id" : 1937492567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585ze8pX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937492567/reactions"
      },
      "updated_at" : "2024-02-11T09:35:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937492567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "RE:\r\n\r\n>>  ... this requires the \"inverse\" ...\r\n> \r\n> Ha, I did not realize this before! I am fine either way. \r\n\r\nI voted for `bitcoin-cli getnetmsgstats '[\"message_type\"]'` because as a node operator it's simpler to remember the dimensions I want (i.e. message) instead of knowing the RPC well enough to list every dimension I don't want (i.e. direction, network, connection type). But of course anyone using an RPC should read the docs :smile: ",
      "created_at" : "2024-02-11T19:22:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1937844734",
      "id" : 1937844734,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585zgSn-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937844734/reactions"
      },
      "updated_at" : "2024-02-11T19:22:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937844734",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1823216?v=4",
         "events_url" : "https://api.github.com/users/satsie/events{/privacy}",
         "followers_url" : "https://api.github.com/users/satsie/followers",
         "following_url" : "https://api.github.com/users/satsie/following{/other_user}",
         "gists_url" : "https://api.github.com/users/satsie/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/satsie",
         "id" : 1823216,
         "login" : "satsie",
         "node_id" : "MDQ6VXNlcjE4MjMyMTY=",
         "organizations_url" : "https://api.github.com/users/satsie/orgs",
         "received_events_url" : "https://api.github.com/users/satsie/received_events",
         "repos_url" : "https://api.github.com/users/satsie/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/satsie/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/satsie/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/satsie"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> * But what when a peer disconnects? We don't want to bloat `net_stats` with individual info for disconnected peers.\r\n\r\nYes, and in fact if a peer repeatedly connected and disconnected we would end up with unbounded growth of net_stats size, which would not be good... Let's shelve this thought for now.\r\n\r\n> To produce the output in https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1908444454 it is better to use bitcoin-cli getnetmsgstats '[\"message_type\"]'. How to name the RPC parameter?\r\n\r\nIn a previous revision, I had renamed the RPC parameter `group_by` to address this, as I felt it made sense.\r\n\r\nClosed in favour of #29418 ",
      "created_at" : "2024-02-12T08:30:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28926#issuecomment-1938228531",
      "id" : 1938228531,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28926",
      "node_id" : "IC_kwDOABII585zhwUz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1938228531/reactions"
      },
      "updated_at" : "2024-02-12T08:30:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1938228531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   }
]

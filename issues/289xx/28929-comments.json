[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28929).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [ajtowns](https://github.com/bitcoin/bitcoin/pull/28929#pullrequestreview-1745623209), [dergoegge](https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1825460284) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2023-11-23T01:31:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1823723265",
      "id" : 1823723265,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28929",
      "node_id" : "IC_kwDOABII585ss88B",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823723265/reactions"
      },
      "updated_at" : "2024-01-12T06:36:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1823723265",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1402847278"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402847278"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is more generalising, than dropping...",
      "commit_id" : "334f75acfdfd8c8737f0fc5da41d25ec8e6ab588",
      "created_at" : "2023-11-23T01:40:33Z",
      "diff_hunk" : "@@ -332,7 +332,7 @@ class CTransaction\n     template <typename Stream>\n     CTransaction(deserialize_type, const TransactionSerParams& params, Stream& s) : CTransaction(CMutableTransaction(deserialize, params, s)) {}\n     template <typename Stream>\n-    CTransaction(deserialize_type, ParamsStream<TransactionSerParams,Stream>& s) : CTransaction(CMutableTransaction(deserialize, s)) {}\n+    CTransaction(deserialize_type, Stream& s) : CTransaction(CMutableTransaction(deserialize, s)) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1402847278",
      "id" : 1402847278,
      "line" : 335,
      "node_id" : "PRRC_kwDOABII585TncAu",
      "original_commit_id" : "554a0dd18c0a277ab1d45c1643c16ed851eee14c",
      "original_line" : 335,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/primitives/transaction.h",
      "position" : 14,
      "pull_request_review_id" : 1745596465,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402847278/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-23T01:40:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402847278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1402864403"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402864403"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Dropping `SERIALIZE_METHODS_PARAMS` doesn't seem like an improvement?\r\n\r\nI would have expected something more like:\r\n\r\n```c++\r\n// this pr: #define SER_PARAMS(type) (s.template GetParams<type>())\r\n// instead:\r\ntemplate<typename T, typename Stream>\r\nconst auto& GetSerParams(const Stream& s)\r\n{\r\n    return s.template GetParams<T>();\r\n}\r\n\r\n// FORMATTER_METHODS_PARAMS has the same signature, but now uses the new GetSerParams<>()\r\n#define FORMATTER_METHODS_PARAMS(cls, obj, paramcls, paramobj) \\\r\n    template<typename Stream> \\\r\n    static void Ser(Stream& s, const cls& obj) { SerializationOps(obj, s, GetSerParams<paramcls>(s), ActionSerialize{}); } \\\r\n    template<typename Stream> \\\r\n    static void Unser(Stream& s, cls& obj) { SerializationOps(obj, s, GetSerParams<paramcls>(s), ActionUnserialize{}); } \\\r\n    template<typename Stream, typename Type, typename Operation> \\\r\n    static void SerializationOps(Type& obj, Stream& s, const paramcls& paramobj, Operation ser_action)\r\n\r\n// protocol.h\r\n// this pr:\r\n//  SERIALIZE_METHODS(CAddress, obj) {\r\n//      auto& params = SER_PARAMS(SerParams);\r\n// instead:\r\n    SERIALIZE_METHODS_PARAMS(CAddress, obj, SerParams, params) {\r\n\r\n\r\n// netaddress.h:\r\n// original:\r\n//      if (s.GetParams().enc == Encoding::V2) {\r\n// this pr:\r\n//      if (s.template GetParams<SerParams>().enc == Encoding::V2) {\r\n// instead:\r\n        if (GetSerParams<SerParams>(s).enc == Encoding::V2) { ... }\r\n```",
      "commit_id" : "334f75acfdfd8c8737f0fc5da41d25ec8e6ab588",
      "created_at" : "2023-11-23T02:30:13Z",
      "diff_hunk" : "@@ -406,9 +406,10 @@ class CAddress : public CService\n     static constexpr SerParams V1_DISK{{CNetAddr::Encoding::V1}, Format::Disk};\n     static constexpr SerParams V2_DISK{{CNetAddr::Encoding::V2}, Format::Disk};\n \n-    SERIALIZE_METHODS_PARAMS(CAddress, obj, SerParams, params)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n         bool use_v2;\n+        auto& params = SER_PARAMS(SerParams);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1402864403",
      "id" : 1402864403,
      "line" : 412,
      "node_id" : "PRRC_kwDOABII585TngMT",
      "original_commit_id" : "334f75acfdfd8c8737f0fc5da41d25ec8e6ab588",
      "original_line" : 412,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 8,
      "pull_request_review_id" : 1745623209,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402864403/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-23T02:31:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1402864403",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1403153558"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403153558"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1402864403\r\n\r\n> Dropping `SERIALIZE_METHODS_PARAMS` doesn't seem like an improvement?\r\n\r\nI think `SER_PARAMS` is an improvement over `SERIALIZE_METHODS_PARAMS` and `FORMATTER_METHODS_PARAMS` because:\r\n\r\n- It allows retrieving an arbitrary number of parameters, not just one.\r\n- It makes unified `SERIALIZE_METHODS` and separated `Serialize`/`Unserialize` method definitions more similar to each other. In a unified method you use `READWRITE(field)`, and in separated methods you write `stream << field`  and `stream >> field`. In a unified method, you use `SER_PARAMS(type)` and in separated methods you write `stream.template GetParams<type>()`. This way there is a 1:1 correspondence between code in unified and separate methods without unnecessary differences.\r\n- It deduplicates code and eliminates confusing macros. `FORMATTER_METHODS_PARAMS` was a copy of `FORMATTER_METHODS` and `SERIALIZE_METHODS_PARAMS` was a copy of `SERIALIZE_METHODS`. Having duplicate code makes the library confusing to navigate and can become a maintenance burden when the definitions get out of sync or fixing a bug or adding a feature requires updating both sets of the definitions. Our own example code was previously broken on line 208, because it was confusing `FORMATTER_METHODS` for `FORMATTER_METHODS_PARAMS`. Having fewer duplicated and similarly named macros is better for users and maintainers of the serialization library.\r\n\r\nI think #25284 made a (small) mistake by adding new duplicate variants of macros instead of just extending the existing macros, and this commit cleans that up. I could probably split this commit up into two parts, first deleting the duplicate macros, then adding multiple parameter support. As I was implementing this change, it just seemed easier to delete the duplicate code than to update it, so I did both things at once.",
      "commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "created_at" : "2023-11-23T09:58:14Z",
      "diff_hunk" : "@@ -406,9 +406,10 @@ class CAddress : public CService\n     static constexpr SerParams V1_DISK{{CNetAddr::Encoding::V1}, Format::Disk};\n     static constexpr SerParams V2_DISK{{CNetAddr::Encoding::V2}, Format::Disk};\n \n-    SERIALIZE_METHODS_PARAMS(CAddress, obj, SerParams, params)\n+    SERIALIZE_METHODS(CAddress, obj)\n     {\n         bool use_v2;\n+        auto& params = SER_PARAMS(SerParams);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1403153558",
      "id" : 1403153558,
      "in_reply_to_id" : 1402864403,
      "line" : 412,
      "node_id" : "PRRC_kwDOABII585TomyW",
      "original_commit_id" : "334f75acfdfd8c8737f0fc5da41d25ec8e6ab588",
      "original_line" : 412,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/protocol.h",
      "position" : 8,
      "pull_request_review_id" : 1746085184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403153558/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-28T21:40:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403153558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1403212531"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403212531"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1402847278\r\n\r\n> This is more generalising, than dropping...\r\n\r\nI think describing this as generalizing would incorrectly imply that some functionality is being added, when then function definitions aren't even changing, just the declarations. Motivation for this change is not really to generalize, just to drop an unnecessary reference to the ParamsStream class to simplify the next commit, and to pass streams the same way here as they are passed other places.",
      "commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "created_at" : "2023-11-23T10:50:45Z",
      "diff_hunk" : "@@ -332,7 +332,7 @@ class CTransaction\n     template <typename Stream>\n     CTransaction(deserialize_type, const TransactionSerParams& params, Stream& s) : CTransaction(CMutableTransaction(deserialize, params, s)) {}\n     template <typename Stream>\n-    CTransaction(deserialize_type, ParamsStream<TransactionSerParams,Stream>& s) : CTransaction(CMutableTransaction(deserialize, s)) {}\n+    CTransaction(deserialize_type, Stream& s) : CTransaction(CMutableTransaction(deserialize, s)) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1403212531",
      "id" : 1403212531,
      "in_reply_to_id" : 1402847278,
      "line" : 337,
      "node_id" : "PRRC_kwDOABII585To1Lz",
      "original_commit_id" : "554a0dd18c0a277ab1d45c1643c16ed851eee14c",
      "original_line" : 337,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/primitives/transaction.h",
      "position" : 14,
      "pull_request_review_id" : 1746085184,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403212531/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-28T21:40:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403212531",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2023-11-24T10:29:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1825460284",
      "id" : 1825460284,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28929",
      "node_id" : "IC_kwDOABII585szlA8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825460284/reactions"
      },
      "updated_at" : "2023-11-24T10:29:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825460284",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-11-30T17:42:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1834260364",
      "id" : 1834260364,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28929",
      "node_id" : "IC_kwDOABII585tVJeM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1834260364/reactions"
      },
      "updated_at" : "2023-11-30T17:42:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1834260364",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 97338eec9e35401f42c376062ea161a22143d628 -> ffc1e9fd8cf53cfcf4d7926ca2963958eacf73d7 ([`pr/iparams.2`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.2) -> [`pr/iparams.3`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/iparams.2-rebase..pr/iparams.3)) due to minor conflict with #28451",
      "created_at" : "2024-01-11T23:19:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1888120269",
      "id" : 1888120269,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28929",
      "node_id" : "IC_kwDOABII585wim3N",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888120269/reactions"
      },
      "updated_at" : "2024-01-11T23:19:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888120269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```\r\ntest/serialize_tests.cpp:394:11: error: unused variable 'oi2' [-Werror,-Wunused-variable]\r\n  394 |     Other oi2;\r\n      |           ^~~",
      "created_at" : "2024-01-12T07:19:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1888552974",
      "id" : 1888552974,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28929",
      "node_id" : "IC_kwDOABII585wkQgO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888552974/reactions"
      },
      "updated_at" : "2024-01-12T07:19:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888552974",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated ffc1e9fd8cf53cfcf4d7926ca2963958eacf73d7 -> 3c311734d2fc6a4ca410f254ba3c8e923d58be70 ([`pr/iparams.3`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.3) -> [`pr/iparams.4`](https://github.com/ryanofsky/bitcoin/commits/pr/iparams.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/iparams.3..pr/iparams.4)) to fix unused variable in test https://cirrus-ci.com/task/4527517751574528?logs=ci#L2260\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1888552974\r\n\r\n> ```\r\n> test/serialize_tests.cpp:394:11: error: unused variable 'oi2' [-Werror,-Wunused-variable]\r\n> ```\r\n\r\nFixed, thanks. Also renamed variables in the test to make it more readable\r\n\r\n",
      "created_at" : "2024-01-12T12:42:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#issuecomment-1889089160",
      "id" : 1889089160,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28929",
      "node_id" : "IC_kwDOABII585wmTaI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889089160/reactions"
      },
      "updated_at" : "2024-01-12T12:42:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889089160",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484199895"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484199895"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70:\r\n\r\nI don't understand this. For example, if `SubStream` is a `DataStream` that holds data, this will now create a copy of this data, when previously it didn't?\r\n\r\nIt seems odd that the stream has to be passed down the whole \"type-stack\" anyway. Maybe it is simpler to just create a stack of params only to hold the types?",
      "commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "created_at" : "2024-02-09T11:34:24Z",
      "diff_hunk" : "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484199895",
      "id" : 1484199895,
      "line" : 1114,
      "node_id" : "PRRC_kwDOABII585YdxfX",
      "original_commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "original_line" : 1114,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 9,
      "pull_request_review_id" : 1872178867,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484199895/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T11:38:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484199895",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484226391"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484226391"
         }
      },
      "author_association" : "MEMBER",
      "body" : "One could consider to completely disallow wrapping streams into each other, see also https://www.github.com/bitcoin/bitcoin/pull/25284/commits/faec591d64e40ba7ec7656cbfdda1a05953bde13#r1315927911",
      "commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "created_at" : "2024-02-09T11:56:00Z",
      "diff_hunk" : "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484226391",
      "id" : 1484226391,
      "in_reply_to_id" : 1484199895,
      "line" : 1114,
      "node_id" : "PRRC_kwDOABII585Yd39X",
      "original_commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "original_line" : 1114,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 9,
      "pull_request_review_id" : 1872221594,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484226391/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T11:56:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484226391",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484292817"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484292817"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484199895\r\n\r\n> [3c31173](https://github.com/bitcoin/bitcoin/commit/3c311734d2fc6a4ca410f254ba3c8e923d58be70):\r\n> \r\n> I don't understand this. For example, if `SubStream` is a `DataStream` that holds data, this will now create a copy of this data, when previously it didn't?\r\n\r\nI will add a comment here, but this does not happen due to the \"Template deduction guide for a single params argument that's slightly different from the default generated deduction guide because it stores a reference to the substream inside `ParamsStream` instead of a copy\" on line 1147 below.\r\n\r\nWith this change, a caller constructing the `ParamsStream` is in control and can decide whether  `ParamsStream` should hold a value or a reference by specifying `DataStream` if they want a value, or `DataSteam&` if they want a reference.\r\n\r\nThe default behavior for a single parameter is unchanged, and will use a reference. But if there are multiple parameters, the inner `ParamsStream` instances are stored by value so we have a single tuple-like object containing all the parameters, not multiple `ParamsStream` objects with unpredictable lifetimes referencing each other.\r\n \r\n> It seems odd that the stream has to be passed down the whole \"type-stack\" anyway. Maybe it is simpler to just create a stack of params only to hold the types?\r\n\r\nI don't think it's odd. Ultimately the `ParamsStream` wrapper methods (`read`, `write`, `size`, etc) need to call the corresponding methods on the wrapped streams, so types of all the streams need to be known.\r\n\r\n> One could consider to completely disallow wrapping streams into each other, see also https://www.github.com/bitcoin/bitcoin/pull/25284/commits/faec591d64e40ba7ec7656cbfdda1a05953bde13#r1315927911\r\n\r\nThat would be a problem because \"wrapping a `ParamsStream` in a `ParamsStream`\" is a useful thing to do, and shouldn't be forbidden. It's the most straightforward way to support multiple parameters because each `ParamStream` can hold one parameter, and `ParamsStream::GetParams` can return its own parameter if requested, or call the wrapped `GetParams` method otherwise.",
      "commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "created_at" : "2024-02-09T13:04:16Z",
      "diff_hunk" : "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484292817",
      "id" : 1484292817,
      "in_reply_to_id" : 1484199895,
      "line" : 1114,
      "node_id" : "PRRC_kwDOABII585YeILR",
      "original_commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "original_line" : 1114,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 9,
      "pull_request_review_id" : 1872329508,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484292817/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T13:05:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484292817",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484322490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484322490"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In any case `m_substream{substream}` still creates a copy when it shouldn't, due to a missing `std::forward`, no?",
      "commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "created_at" : "2024-02-09T13:32:50Z",
      "diff_hunk" : "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484322490",
      "id" : 1484322490,
      "in_reply_to_id" : 1484199895,
      "line" : 1114,
      "node_id" : "PRRC_kwDOABII585YePa6",
      "original_commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "original_line" : 1114,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 9,
      "pull_request_review_id" : 1872411619,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484322490/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T13:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484322490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484425597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484425597"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484322490\r\n\r\n> In any case `m_substream{substream}` still creates a copy when it shouldn't, due to a missing `std::forward`, no?\r\n\r\nOh that's interesting. I wouldn't think to use `std::forward` because normally it's just used for && rvalue reference function template parameters, not class template parameters, and doesn't do anything useful if && is not used and special template deduction rules for it are not applied.\r\n\r\nWe are actually ok with copies not moves here in all current cases. Copies and moves in all current cases are identical because ParamStream instances don't contain any real values, just references to external params and an external substream, so their copy and move methods are the same.\r\n\r\nBut theoretically if someone did want create a `ParamsStream` with a nested substream that moved from another instance during construction, probably the code could be changed to support that better, because right now I think you have to write `ParamsStream<MySubstream>{std::move(mysubstream), myparams)`, and wouldn't be able to shorten it to  `ParamsStream{std::move(mysubstream), myparams}`. Just adding std::forward on this line wouldn't fix this, but maybe adding std::forward along with  switching from & to && in template deduction guides below would work.\r\n\r\nI can experiment with this and add a test. I could imagine this being useful if you wanted to write something like `ParamsStream mystream{FileStream{\"file.bin\"}, param1, param2}` and have the file automatically closed when the stream was destroyed.",
      "commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "created_at" : "2024-02-09T14:51:26Z",
      "diff_hunk" : "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484425597",
      "id" : 1484425597,
      "in_reply_to_id" : 1484199895,
      "line" : 1114,
      "node_id" : "PRRC_kwDOABII585Yeol9",
      "original_commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "original_line" : 1114,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 9,
      "pull_request_review_id" : 1872576998,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484425597/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T14:51:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484425597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484436443"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484436443"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I could imagine this being useful if you wanted to write something like `ParamsStream mystream{FileStream{\"file.bin\"}, param1, param2}` and have the file automatically closed when the stream was destroyed.\r\n\r\nYes, an example would be in net.cpp, but feel free to ignore, if it is too much hassle.\r\n\r\n```cpp\r\nsrc/net.cpp-    DataStream underlying_stream{vSeedsIn};\r\nsrc/net.cpp:    ParamsStream s{underlying_stream, CAddress::V2_NETWORK};\r\n",
      "commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "created_at" : "2024-02-09T14:59:58Z",
      "diff_hunk" : "@@ -1108,10 +1108,15 @@ template <typename SubStream, typename Params>\n class ParamsStream\n {\n     const Params& m_params;\n-    SubStream& m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n+    SubStream m_substream; // private to avoid leaking version/type into serialization code that shouldn't see it\n \n public:\n-    ParamsStream(SubStream& substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}\n+    ParamsStream(SubStream substream LIFETIMEBOUND, const Params& params LIFETIMEBOUND) : m_params{params}, m_substream{substream} {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28929#discussion_r1484436443",
      "id" : 1484436443,
      "in_reply_to_id" : 1484199895,
      "line" : 1114,
      "node_id" : "PRRC_kwDOABII585YerPb",
      "original_commit_id" : "3c311734d2fc6a4ca410f254ba3c8e923d58be70",
      "original_line" : 1114,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/serialize.h",
      "position" : 9,
      "pull_request_review_id" : 1872594580,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28929",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484436443/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T14:59:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484436443",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   }
]

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28977).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-11-30T21:26:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28977#issuecomment-1834585463",
      "id" : 1834585463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28977",
      "node_id" : "IC_kwDOABII585tWY13",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1834585463/reactions"
      },
      "updated_at" : "2023-11-30T21:26:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1834585463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28977#discussion_r1414530480"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28977"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414530480"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 1e19f925bb3d2b74933d8cb6d3628477cdd58c32 \"Add Gutter Guard Selector\"\r\n\r\nThese two loops could probably be consolidated into a single one since they do the same thing, just under different conditions.",
      "commit_id" : "1e19f925bb3d2b74933d8cb6d3628477cdd58c32",
      "created_at" : "2023-12-04T21:36:16Z",
      "diff_hunk" : "@@ -246,6 +246,80 @@ util::Result<SelectionResult> SelectCoinsSRD(const std::vector<OutputGroup>& utx\n     return max_tx_weight_exceeded ? ErrorMaxWeightExceeded() : util::Error();\n }\n \n+util::Result<SelectionResult> SelectCoinsGG(std::vector<OutputGroup>& utxo_pool, CAmount target_value, CAmount change_fee, FastRandomContext& rng,\n+                                             int max_weight)\n+{\n+    SelectionResult result(target_value, SelectionAlgorithm::GG);\n+    std::priority_queue<OutputGroup, std::vector<OutputGroup>, MinOutputGroupComparator> heap;\n+\n+    // Include change for Gutter Guard Selector as we want to avoid making really small change if the selection just\n+    // barely meets the target.\n+    target_value += CHANGE_LOWER + change_fee;\n+\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+    CAmount selected_lf_amount = 0;\n+    size_t lf_group_count = 0;\n+\n+    for (const OutputGroup& group : utxo_pool) {\n+        selected_lf_amount += group.GetSelectionAmount();\n+        lf_group_count++;\n+        if (selected_lf_amount >= target_value) {\n+            break;\n+        }\n+    }\n+\n+    size_t gg_group_limit = lf_group_count + 3;\n+\n+    std::vector<size_t> indexes;\n+    indexes.resize(utxo_pool.size());\n+    std::iota(indexes.begin(), indexes.end(), 0);\n+    Shuffle(indexes.begin(), indexes.end(), rng);\n+\n+    CAmount selected_eff_value = 0;\n+    int weight = 0;\n+    bool max_tx_weight_exceeded = false;\n+    for (const size_t i : indexes) {\n+        const OutputGroup& group = utxo_pool.at(i);\n+        Assume(group.GetSelectionAmount() > 0);\n+\n+        // Add group to selection\n+        heap.push(group);\n+        selected_eff_value += group.GetSelectionAmount();\n+        weight += group.m_weight;\n+\n+        // If the selection weight exceeds the maximum allowed size, remove the least valuable inputs until we\n+        // are below max weight.\n+        if (weight > max_weight) {\n+            max_tx_weight_exceeded = true; // mark it in case we don't find any useful result.\n+            do {\n+                const OutputGroup& to_remove_group = heap.top();\n+                selected_eff_value -= to_remove_group.GetSelectionAmount();\n+                weight -= to_remove_group.m_weight;\n+                heap.pop();\n+            } while (!heap.empty() && weight > max_weight);\n+        }\n+\n+        // If we have selected more output groups than permitted, drop OG with lowest effective value\n+        while (!heap.empty() && heap.size() > gg_group_limit) {\n+            const OutputGroup& to_remove_group = heap.top();\n+            selected_eff_value -= to_remove_group.GetSelectionAmount();\n+            weight -= to_remove_group.m_weight;\n+            heap.pop();\n+        }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28977#discussion_r1414530480",
      "id" : 1414530480,
      "line" : 308,
      "node_id" : "PRRC_kwDOABII585UUAWw",
      "original_commit_id" : "1e19f925bb3d2b74933d8cb6d3628477cdd58c32",
      "original_line" : 308,
      "original_position" : 63,
      "original_start_line" : 294,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 63,
      "pull_request_review_id" : 1763468491,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28977",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414530480/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 294,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-04T21:37:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414530480",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]

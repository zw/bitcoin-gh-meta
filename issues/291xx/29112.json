{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "The way that we have configured SQLite to run means that only one database transaction can be open at a time. Typically, each individual read and write operation will be its own transaction that is opened and committed automatically by SQLite. However, sometimes we want these operations to be batched into a multi-statement transaction, so `SQLiteBatch::TxnBegin`, `SQLiteBatch::TxnCommit`, and `SQLiteBatch::TxnAbort` are used to manage the transaction of the database.\r\n\r\nHowever, once a db transaction is begun with one `SQLiteBatch`, any operations performed by another `SQLiteBatch` will also occur within the same transaction. Furthermore, those other `SQLiteBatch`s will not be expecting a transaction to be active, and will abort it once the `SQLiteBatch` is destructed. This is problematic as it will prevent some data from being written, and also cause the `SQLiteBatch` that opened the transaction in the first place to be in an unexpected state and throw an error.\r\n\r\nTo avoid this situation, we need to prevent the multiple batches from writing at the same time. Although SQLite does have facilities for doing that, they require the Write Ahead Log (WAL) mode, which is a feature that we explicitly chose to disable since it spread wallet data to multiple files. As such, we need to be handling the concurrency ourselves. To do so, I've implemented added a `CSemaphore` within `SQLiteDatabase` which will be used by any `SQLiteBatch` trying to do a write operation. `wait()` is called by `TxnBegin`, and at the beginning of `WriteKey`, `EraseKey`, and `ErasePrefix`. `post()` is called in `TxnCommit`, `TxnAbort` and at the end of `WriteKey`, `EraseKey`, and `ErasePrefix`. To avoid deadlocking on ` TxnBegin()` followed by a `WriteKey()`, `SQLiteBatch will now also track whether a transaction is in progress so that it knows whether to use the semaphore.\r\n\r\nThis issue is not a problem for BDB wallets since BDB uses WAL and provides transaction objects that must be used if an operation is to occur within a transaction. Specifically, we either pass a transaction pointer, or a nullptr, to all BDB operations, and this allows for concurrent transactions so it doesn't have this problem.\r\n\r\nFixes #29110",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29112/comments",
   "created_at" : "2023-12-18T22:27:10Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29112/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/29112",
   "id" : 2047565192,
   "labels" : [
      {
         "color" : "08a781",
         "default" : false,
         "description" : null,
         "id" : 149424,
         "name" : "Wallet",
         "node_id" : "MDU6TGFiZWwxNDk0MjQ=",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Wallet"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29112/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585iT-Q8",
   "number" : 29112,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/29112.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29112",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/29112.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29112"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29112/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29112/timeline",
   "title" : "sqlite: Disallow writing from multiple `SQLiteBatch`s",
   "updated_at" : "2023-12-18T22:36:57Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29112",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
      "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
      "followers_url" : "https://api.github.com/users/achow101/followers",
      "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/achow101",
      "id" : 3782274,
      "login" : "achow101",
      "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
      "organizations_url" : "https://api.github.com/users/achow101/orgs",
      "received_events_url" : "https://api.github.com/users/achow101/received_events",
      "repos_url" : "https://api.github.com/users/achow101/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/achow101"
   }
}

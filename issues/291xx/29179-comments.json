[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29179).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1877892122) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2024-01-04T16:26:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1877390756",
      "id" : 1877390756,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29179",
      "node_id" : "IC_kwDOABII585v5rWk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877390756/reactions"
      },
      "updated_at" : "2024-01-04T23:16:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877390756",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Huh, looks like this behavior has been broken since it was introduced in #15652",
      "created_at" : "2024-01-04T23:02:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1877879833",
      "id" : 1877879833,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29179",
      "node_id" : "IC_kwDOABII585v7iwZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877879833/reactions"
      },
      "updated_at" : "2024-01-04T23:02:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877879833",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 1a52ca7619eeb1baafa5a32b364381126862b29d",
      "created_at" : "2024-01-04T23:16:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#issuecomment-1877892122",
      "id" : 1877892122,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29179",
      "node_id" : "IC_kwDOABII585v7lwa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877892122/reactions"
      },
      "updated_at" : "2024-01-04T23:16:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877892122",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1442808773"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442808773"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: could be a bit more efficient by only calling and iterating over `listunspent` once (does not test for txid collisions, but I don't think we need that?)\r\n\r\n<details>\r\n<summary>git diff on 1a52ca7619</summary>\r\n\r\n```diff\r\ndiff --git a/test/functional/wallet_import_rescan.py b/test/functional/wallet_import_rescan.py\r\nindex 1abc9c0c79..928455c355 100755\r\n--- a/test/functional/wallet_import_rescan.py\r\n+++ b/test/functional/wallet_import_rescan.py\r\n@@ -286,13 +286,12 @@ class ImportRescanTest(BitcoinTestFramework):\r\n         # itself and the other half to unspendable/fees. This transaction is only recognizable as\r\n         # belonging to this wallet when the inputs are known. That means the rescan must process the\r\n         # parent before the child.\r\n+        unspent_txid_map = {txin[\"txid\"] : txin for txin in self.nodes[1].listunspent()}\r\n         for variant in mempool_variants:\r\n-            inputs_to_spend = [txin for txin in self.nodes[1].listunspent() if txin[\"txid\"] == variant.initial_txid]\r\n-            assert_equal(len(inputs_to_spend), 1)\r\n             # Send full amount, subtracting fee from outputs, to ensure no change is created.\r\n             child = self.nodes[1].send(\r\n                 add_to_wallet=False,\r\n-                inputs=inputs_to_spend,\r\n+                inputs=[unspent_txid_map[variant.initial_txid]],\r\n                 outputs=[{ADDRESS_BCRT1_UNSPENDABLE : variant.initial_amount}],\r\n                 subtract_fee_from_outputs=[0]\r\n             )\r\n\r\n```\r\n</details>\r\n",
      "commit_id" : "aa7eda33c35a40760cd9ad26fed02c27f4127e1e",
      "created_at" : "2024-01-05T12:18:30Z",
      "diff_hunk" : "@@ -267,14 +271,45 @@ def run_test(self):\n                 address_type=variant.address_type.value,\n             ))\n             variant.key = self.nodes[1].dumpprivkey(variant.address[\"address\"])\n-            variant.initial_amount = get_rand_amount()\n+            variant.initial_amount = get_rand_amount() * 2\n             variant.initial_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.initial_amount)\n             variant.confirmation_height = 0\n             variant.timestamp = timestamp\n \n+        # Mine a block so these parents are confirmed\n+        assert_equal(len(self.nodes[0].getrawmempool()), len(mempool_variants))\n+        self.sync_mempools()\n+        block_to_disconnect = self.generate(self.nodes[0], 1)\n+        assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+\n+        # For each variant, create an unconfirmed child transaction from initial_txid, sending half of the balance to\n+        # itself and the other half to unspendable/fees. This transaction is only recognizable as\n+        # belonging to this wallet when the inputs are known. That means the rescan must process the\n+        # parent before the child.\n+        for variant in mempool_variants:\n+            inputs_to_spend = [txin for txin in self.nodes[1].listunspent() if txin[\"txid\"] == variant.initial_txid]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1442808773",
      "id" : 1442808773,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585V_4PF",
      "original_commit_id" : "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "original_line" : 290,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "test/functional/wallet_import_rescan.py",
      "position" : null,
      "pull_request_review_id" : 1805846181,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442808773/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-05T17:25:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442808773",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1442918332"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442918332"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: makes more sense to unpack here imo\r\n```suggestion\r\n        block_to_disconnect = self.generate(self.nodes[0], 1)[0]\r\n```",
      "commit_id" : "aa7eda33c35a40760cd9ad26fed02c27f4127e1e",
      "created_at" : "2024-01-05T13:55:03Z",
      "diff_hunk" : "@@ -267,14 +271,45 @@ def run_test(self):\n                 address_type=variant.address_type.value,\n             ))\n             variant.key = self.nodes[1].dumpprivkey(variant.address[\"address\"])\n-            variant.initial_amount = get_rand_amount()\n+            variant.initial_amount = get_rand_amount() * 2\n             variant.initial_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.initial_amount)\n             variant.confirmation_height = 0\n             variant.timestamp = timestamp\n \n+        # Mine a block so these parents are confirmed\n+        assert_equal(len(self.nodes[0].getrawmempool()), len(mempool_variants))\n+        self.sync_mempools()\n+        block_to_disconnect = self.generate(self.nodes[0], 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1442918332",
      "id" : 1442918332,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WAS-8",
      "original_commit_id" : "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "original_line" : 282,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "test/functional/wallet_import_rescan.py",
      "position" : null,
      "pull_request_review_id" : 1805846181,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442918332/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-05T17:25:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1442918332",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443052612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443052612"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I don't think we're actually checking the confirmations values, so for future maintenance, would this be more straightforward?\r\n```suggestion\r\n                variant.node.gettransaction(variant.initial_txid)  # raises if tx wasn't rescanned\r\n                variant.node.gettransaction(variant.child_txid)    # raises if tx wasn't rescanned\r\n```",
      "commit_id" : "aa7eda33c35a40760cd9ad26fed02c27f4127e1e",
      "created_at" : "2024-01-05T16:06:26Z",
      "diff_hunk" : "@@ -283,9 +318,11 @@ def run_test(self):\n             variant.node = self.nodes[2 + IMPORT_NODES.index(ImportNode(variant.prune, expect_rescan))]\n             variant.do_import(variant.timestamp)\n             if expect_rescan:\n-                variant.expected_balance = variant.initial_amount\n+                # Ensure both transactions were rescanned\n+                assert_equal(variant.node.gettransaction(variant.initial_txid)['confirmations'], 0)\n+                assert_equal(variant.node.gettransaction(variant.child_txid)['confirmations'], 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443052612",
      "id" : 1443052612,
      "line" : 322,
      "node_id" : "PRRC_kwDOABII585WAzxE",
      "original_commit_id" : "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "original_line" : 322,
      "original_position" : 85,
      "original_start_line" : 322,
      "path" : "test/functional/wallet_import_rescan.py",
      "position" : 98,
      "pull_request_review_id" : 1805846181,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443052612/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 321,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-05T17:25:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443052612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443144137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443144137"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It doesn't seem like we're actually testing the expected balance at any point, rather the amount received, but I may be missing nuance. Would this diff make sense? I don't like adding an extra parameter to an already long function for something so specific, if we can avoid it.\r\n\r\n<details>\r\n<summary>git diff on 1a52ca7619</summary>\r\n\r\n```diff\r\ndiff --git a/test/functional/wallet_import_rescan.py b/test/functional/wallet_import_rescan.py\r\nindex 1abc9c0c79..fa9f43f66c 100755\r\n--- a/test/functional/wallet_import_rescan.py\r\n+++ b/test/functional/wallet_import_rescan.py\r\n@@ -82,7 +82,7 @@ class Variant(collections.namedtuple(\"Variant\", \"call data address_type rescan p\r\n             )\r\n             assert_equal(response, [{\"success\": True}])\r\n \r\n-    def check(self, txid=None, amount=None, confirmation_height=None, amount_is_balance=True):\r\n+    def check(self, txid=None, amount=None, confirmation_height=None):\r\n         \"\"\"Verify that listtransactions/listreceivedbyaddress return expected values.\"\"\"\r\n \r\n         txs = self.node.listtransactions(label=self.label, count=10000, include_watchonly=True)\r\n@@ -112,8 +112,7 @@ class Variant(collections.namedtuple(\"Variant\", \"call data address_type rescan p\r\n \r\n             address, = [ad for ad in addresses if txid in ad[\"txids\"]]\r\n             assert_equal(address[\"address\"], self.address[\"address\"])\r\n-            if amount_is_balance:\r\n-                assert_equal(address[\"amount\"], self.expected_balance)\r\n+            assert_equal(address[\"amount\"], self.amount_received)\r\n             assert_equal(address[\"confirmations\"], confirmations)\r\n             # Verify the transaction is correctly marked watchonly depending on\r\n             # whether the transaction pays to an imported public key or\r\n@@ -227,11 +226,11 @@ class ImportRescanTest(BitcoinTestFramework):\r\n             variant.node = self.nodes[2 + IMPORT_NODES.index(ImportNode(variant.prune, expect_rescan))]\r\n             variant.do_import(variant.timestamp)\r\n             if expect_rescan:\r\n-                variant.expected_balance = variant.initial_amount\r\n+                variant.amount_received = variant.initial_amount\r\n                 variant.expected_txs = 1\r\n                 variant.check(variant.initial_txid, variant.initial_amount, variant.confirmation_height)\r\n             else:\r\n-                variant.expected_balance = 0\r\n+                variant.amount_received = 0\r\n                 variant.expected_txs = 0\r\n                 variant.check()\r\n \r\n@@ -251,7 +250,7 @@ class ImportRescanTest(BitcoinTestFramework):\r\n         # Check the latest results from getbalance and listtransactions.\r\n         for variant in IMPORT_VARIANTS:\r\n             self.log.info('Run check for variant {}'.format(variant))\r\n-            variant.expected_balance += variant.sent_amount\r\n+            variant.amount_received += variant.sent_amount\r\n             variant.expected_txs += 1\r\n             variant.check(variant.sent_txid, variant.sent_amount, variant.confirmation_height)\r\n \r\n@@ -297,7 +296,6 @@ class ImportRescanTest(BitcoinTestFramework):\r\n                 subtract_fee_from_outputs=[0]\r\n             )\r\n             variant.child_txid = child[\"txid\"]\r\n-            variant.expected_balance = 0\r\n             self.nodes[0].sendrawtransaction(child[\"hex\"])\r\n \r\n         # Mempools should contain the child transactions for each variant.\r\n@@ -321,10 +319,11 @@ class ImportRescanTest(BitcoinTestFramework):\r\n                 # Ensure both transactions were rescanned\r\n                 assert_equal(variant.node.gettransaction(variant.initial_txid)['confirmations'], 0)\r\n                 assert_equal(variant.node.gettransaction(variant.child_txid)['confirmations'], 0)\r\n+                variant.amount_received = variant.initial_amount\r\n                 variant.expected_txs = 1\r\n-                variant.check(variant.initial_txid, variant.initial_amount, 0, False)\r\n+                variant.check(variant.initial_txid, variant.initial_amount, 0)\r\n             else:\r\n-                variant.expected_balance = 0\r\n+                variant.amount_received = 0\r\n                 variant.expected_txs = 0\r\n                 variant.check()\r\n \r\n\r\n```\r\n</details>\r\n",
      "commit_id" : "aa7eda33c35a40760cd9ad26fed02c27f4127e1e",
      "created_at" : "2024-01-05T17:19:11Z",
      "diff_hunk" : "@@ -79,7 +82,7 @@ def do_import(self, timestamp):\n             )\n             assert_equal(response, [{\"success\": True}])\n \n-    def check(self, txid=None, amount=None, confirmation_height=None):\n+    def check(self, txid=None, amount=None, confirmation_height=None, amount_is_balance=True):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443144137",
      "id" : 1443144137,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WBKHJ",
      "original_commit_id" : "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "original_line" : 85,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/wallet_import_rescan.py",
      "position" : null,
      "pull_request_review_id" : 1805846181,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443144137/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-05T17:25:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443144137",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443208149"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208149"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thanks, taken.",
      "commit_id" : "aa7eda33c35a40760cd9ad26fed02c27f4127e1e",
      "created_at" : "2024-01-05T18:11:55Z",
      "diff_hunk" : "@@ -79,7 +82,7 @@ def do_import(self, timestamp):\n             )\n             assert_equal(response, [{\"success\": True}])\n \n-    def check(self, txid=None, amount=None, confirmation_height=None):\n+    def check(self, txid=None, amount=None, confirmation_height=None, amount_is_balance=True):",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443208149",
      "id" : 1443208149,
      "in_reply_to_id" : 1443144137,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WBZvV",
      "original_commit_id" : "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "original_line" : 85,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "test/functional/wallet_import_rescan.py",
      "position" : null,
      "pull_request_review_id" : 1806568472,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208149/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-05T18:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208149",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443208232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208232"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree, taken",
      "commit_id" : "aa7eda33c35a40760cd9ad26fed02c27f4127e1e",
      "created_at" : "2024-01-05T18:12:00Z",
      "diff_hunk" : "@@ -267,14 +271,45 @@ def run_test(self):\n                 address_type=variant.address_type.value,\n             ))\n             variant.key = self.nodes[1].dumpprivkey(variant.address[\"address\"])\n-            variant.initial_amount = get_rand_amount()\n+            variant.initial_amount = get_rand_amount() * 2\n             variant.initial_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.initial_amount)\n             variant.confirmation_height = 0\n             variant.timestamp = timestamp\n \n+        # Mine a block so these parents are confirmed\n+        assert_equal(len(self.nodes[0].getrawmempool()), len(mempool_variants))\n+        self.sync_mempools()\n+        block_to_disconnect = self.generate(self.nodes[0], 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443208232",
      "id" : 1443208232,
      "in_reply_to_id" : 1442918332,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WBZwo",
      "original_commit_id" : "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "original_line" : 282,
      "original_position" : 44,
      "original_start_line" : null,
      "path" : "test/functional/wallet_import_rescan.py",
      "position" : null,
      "pull_request_review_id" : 1806568472,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208232/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-05T18:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443208305"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208305"
         }
      },
      "author_association" : "MEMBER",
      "body" : "taken",
      "commit_id" : "aa7eda33c35a40760cd9ad26fed02c27f4127e1e",
      "created_at" : "2024-01-05T18:12:05Z",
      "diff_hunk" : "@@ -267,14 +271,45 @@ def run_test(self):\n                 address_type=variant.address_type.value,\n             ))\n             variant.key = self.nodes[1].dumpprivkey(variant.address[\"address\"])\n-            variant.initial_amount = get_rand_amount()\n+            variant.initial_amount = get_rand_amount() * 2\n             variant.initial_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.initial_amount)\n             variant.confirmation_height = 0\n             variant.timestamp = timestamp\n \n+        # Mine a block so these parents are confirmed\n+        assert_equal(len(self.nodes[0].getrawmempool()), len(mempool_variants))\n+        self.sync_mempools()\n+        block_to_disconnect = self.generate(self.nodes[0], 1)\n+        assert_equal(len(self.nodes[0].getrawmempool()), 0)\n+\n+        # For each variant, create an unconfirmed child transaction from initial_txid, sending half of the balance to\n+        # itself and the other half to unspendable/fees. This transaction is only recognizable as\n+        # belonging to this wallet when the inputs are known. That means the rescan must process the\n+        # parent before the child.\n+        for variant in mempool_variants:\n+            inputs_to_spend = [txin for txin in self.nodes[1].listunspent() if txin[\"txid\"] == variant.initial_txid]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443208305",
      "id" : 1443208305,
      "in_reply_to_id" : 1442808773,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WBZxx",
      "original_commit_id" : "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "original_line" : 290,
      "original_position" : 52,
      "original_start_line" : null,
      "path" : "test/functional/wallet_import_rescan.py",
      "position" : null,
      "pull_request_review_id" : 1806568472,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208305/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-05T18:14:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443208305",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443209504"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443209504"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added a similar comment.",
      "commit_id" : "aa7eda33c35a40760cd9ad26fed02c27f4127e1e",
      "created_at" : "2024-01-05T18:13:40Z",
      "diff_hunk" : "@@ -283,9 +318,11 @@ def run_test(self):\n             variant.node = self.nodes[2 + IMPORT_NODES.index(ImportNode(variant.prune, expect_rescan))]\n             variant.do_import(variant.timestamp)\n             if expect_rescan:\n-                variant.expected_balance = variant.initial_amount\n+                # Ensure both transactions were rescanned\n+                assert_equal(variant.node.gettransaction(variant.initial_txid)['confirmations'], 0)\n+                assert_equal(variant.node.gettransaction(variant.child_txid)['confirmations'], 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29179#discussion_r1443209504",
      "id" : 1443209504,
      "in_reply_to_id" : 1443052612,
      "line" : 322,
      "node_id" : "PRRC_kwDOABII585WBaEg",
      "original_commit_id" : "1a52ca7619eeb1baafa5a32b364381126862b29d",
      "original_line" : 322,
      "original_position" : 85,
      "original_start_line" : 322,
      "path" : "test/functional/wallet_import_rescan.py",
      "position" : 98,
      "pull_request_review_id" : 1806568472,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29179",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443209504/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 321,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-05T18:14:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1443209504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   }
]

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29143).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#25390](https://github.com/bitcoin/bitcoin/pull/25390) (sync: introduce a thread-safe generic container and use it to remove a bunch of \"GlobalMutex\"es by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-12-26T18:29:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29143#issuecomment-1869707015",
      "id" : 1869707015,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29143",
      "node_id" : "IC_kwDOABII585vcXcH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869707015/reactions"
      },
      "updated_at" : "2023-12-26T19:30:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869707015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "cc @maflcko @fanquake ",
      "created_at" : "2023-12-26T18:30:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29143#issuecomment-1869707247",
      "id" : 1869707247,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29143",
      "node_id" : "IC_kwDOABII585vcXfv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869707247/reactions"
      },
      "updated_at" : "2023-12-26T18:30:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869707247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/33068296?v=4",
         "events_url" : "https://api.github.com/users/dimitaracev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dimitaracev/followers",
         "following_url" : "https://api.github.com/users/dimitaracev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dimitaracev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dimitaracev",
         "id" : 33068296,
         "login" : "dimitaracev",
         "node_id" : "MDQ6VXNlcjMzMDY4Mjk2",
         "organizations_url" : "https://api.github.com/users/dimitaracev/orgs",
         "received_events_url" : "https://api.github.com/users/dimitaracev/received_events",
         "repos_url" : "https://api.github.com/users/dimitaracev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dimitaracev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dimitaracev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dimitaracev"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "```sh\r\ntest/functional/wallet_multiwallet.py:38:9: F841 local variable 'e' is assigned to but never used\r\ntest/functional/wallet_multiwallet.py:39:50: F821 undefined name 'e'\r\ntest/functional/wallet_multiwallet.py:39:104: F821 undefined name 'e'\r\ntest/functional/wallet_multiwallet.py:40:63: F821 undefined name 'e'\r\ntest/functional/wallet_multiwallet.py:40:130: F821 undefined name 'e'\r\n```",
      "created_at" : "2023-12-26T18:36:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29143#issuecomment-1869709929",
      "id" : 1869709929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29143",
      "node_id" : "IC_kwDOABII585vcYJp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869709929/reactions"
      },
      "updated_at" : "2023-12-26T18:36:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869709929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> How is this possible if `RemoveWallet()` locks the context wallets' mutex, checks if the wallet is there (failing if not) and then removes it.\r\n\r\nFrom my understanding, the statements\r\n```c++\r\nauto it = g_unloading_wallet_set.insert(name);\r\nassert(it.second);\r\n```\r\nassume that the wallet will always be correctly inserted into `g_unloading_wallet_set` where `g_unloading_wallet_set.insert(name)` returns a pair (`it.second` is 1 if the wallet is successfully inserted into the set to be used by `ReleaseWallet()`, or 0 if it is already present in the set). At least to me it appears that it can in some rare cases come into a collision where the wallet name is not yet removed from the `g_unloading_wallet_set` and `g_unloading_wallet_set.insert(name)` returns `it.second` as 0. Correct me if I'm wrong but I'm not very familiar with the codebase and trying to slowly learn.",
      "created_at" : "2023-12-26T23:01:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29143#issuecomment-1869811694",
      "id" : 1869811694,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29143",
      "node_id" : "IC_kwDOABII585vcw_u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869811694/reactions"
      },
      "updated_at" : "2023-12-26T23:01:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869811694",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/33068296?v=4",
         "events_url" : "https://api.github.com/users/dimitaracev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dimitaracev/followers",
         "following_url" : "https://api.github.com/users/dimitaracev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dimitaracev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dimitaracev",
         "id" : 33068296,
         "login" : "dimitaracev",
         "node_id" : "MDQ6VXNlcjMzMDY4Mjk2",
         "organizations_url" : "https://api.github.com/users/dimitaracev/orgs",
         "received_events_url" : "https://api.github.com/users/dimitaracev/received_events",
         "repos_url" : "https://api.github.com/users/dimitaracev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dimitaracev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dimitaracev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dimitaracev"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > How is this possible if `RemoveWallet()` locks the context wallets' mutex, checks if the wallet is there (failing if not) and then removes it.\r\n> \r\n> From my understanding, the statements\r\n> \r\n> ```c++\r\n> auto it = g_unloading_wallet_set.insert(name);\r\n> assert(it.second);\r\n> ```\r\n> \r\n> assume that the wallet will always be correctly inserted into `g_unloading_wallet_set` where `g_unloading_wallet_set.insert(name)` returns a pair (`it.second` is 1 if the wallet is successfully inserted into the set to be used by `ReleaseWallet()`, or 0 if it is already present in the set). At least to me it appears that it can in some rare cases come into a collision where the wallet name is not yet removed from the `g_unloading_wallet_set` and `g_unloading_wallet_set.insert(name)` returns `it.second` as 0. Correct me if I'm wrong but I'm not very familiar with the codebase and trying to slowly learn.\r\n\r\nBefore calling `UnloadWallet()`, `unloadwallet` calls `RemoveWallet()` which locks the context wallets' mutex and tries to remove the wallet. Failing if the wallet is being unloaded (aka not able to remove it from the context wallets' vector).\r\n\r\nIn other words, the code shouldn't reach the `UnloadWallet()` call. Should verify that we are not pushing two pointers of the same wallet into the context vector.",
      "created_at" : "2023-12-26T23:19:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29143#issuecomment-1869817009",
      "id" : 1869817009,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29143",
      "node_id" : "IC_kwDOABII585vcySx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869817009/reactions"
      },
      "updated_at" : "2023-12-26T23:19:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869817009",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@furszy Oh I see, will continue to look into this further. Thanks.",
      "created_at" : "2023-12-26T23:38:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29143#issuecomment-1869823524",
      "id" : 1869823524,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29143",
      "node_id" : "IC_kwDOABII585vcz4k",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869823524/reactions"
      },
      "updated_at" : "2023-12-26T23:38:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1869823524",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/33068296?v=4",
         "events_url" : "https://api.github.com/users/dimitaracev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dimitaracev/followers",
         "following_url" : "https://api.github.com/users/dimitaracev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dimitaracev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dimitaracev",
         "id" : 33068296,
         "login" : "dimitaracev",
         "node_id" : "MDQ6VXNlcjMzMDY4Mjk2",
         "organizations_url" : "https://api.github.com/users/dimitaracev/orgs",
         "received_events_url" : "https://api.github.com/users/dimitaracev/received_events",
         "repos_url" : "https://api.github.com/users/dimitaracev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dimitaracev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dimitaracev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dimitaracev"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Do you have steps to reproduce the test failure (usually a race can be reproduced by adding a sleep in the right place in the C++ code)?\r\n\r\nAlso, an assertion crash fix, is not a \"test\" fix. I presume this can happen in production, no?",
      "created_at" : "2023-12-27T08:51:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29143#issuecomment-1870086126",
      "id" : 1870086126,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29143",
      "node_id" : "IC_kwDOABII585vdz_u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1870086126/reactions"
      },
      "updated_at" : "2023-12-27T08:51:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1870086126",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Also, an assertion crash fix, is not a \"test\" fix. I presume this can happen in production, no?\r\n\r\nInitially I thought that this was the expected behavior, which is why this pull request just returns a different error message so that it can be caught in the test. But as @furszy said, the issue appears to be something completely different that needs fixing.\r\n \r\n> Do you have steps to reproduce the test failure (usually a race can be reproduced by adding a sleep in the right place in the C++ code)?\r\n\r\nDid not have time to check where exactly to add a sleep in the code, but with the following test I'm able to come into a state where the previous assertion fail happened and in my case the 'Wallet already marked for unloading' RPC error.\r\n```python\r\n#!/usr/bin/env python3\r\nfrom threading import Thread\r\nimport os\r\nimport time\r\n\r\nfrom test_framework.authproxy import JSONRPCException\r\nfrom test_framework.test_framework import BitcoinTestFramework\r\nfrom test_framework.util import (\r\n    assert_equal,\r\n    get_rpc_proxy,\r\n)\r\n\r\ngot_loading_unloading_error = False\r\n\r\ndef test_load_unload(node, name):\r\n    global got_loading_unloading_error\r\n    while True:\r\n        if got_loading_unloading_error:\r\n            return\r\n        try:\r\n            node.loadwallet(name)\r\n            node.unloadwallet(name)\r\n            node.unloadwallet(name)\r\n            threads = []\r\n            for _ in range(2):\r\n                t = Thread(target=unload_wallet, args=(node, name))\r\n                t.start()\r\n                threads.append(t)\r\n            for t in threads:\r\n                t.join()\r\n        except JSONRPCException as e:\r\n            is_wallet_already_loading = lambda ex : ex.error['code'] == -4 and 'Wallet already loading' in ex.error['message']\r\n            is_wallet_already_marked_for_unloading = lambda ex : ex.error['code'] == -4 and 'Wallet already marked for unloading' in ex.error['message']\r\n            if is_wallet_already_marked_for_unloading(e):\r\n                got_loading_unloading_error = True\r\n                return\r\n\r\ndef unload_wallet(node, wallet_name):\r\n    node.unloadwallet(wallet_name)\r\n\r\nclass MultiWalletTest(BitcoinTestFramework):\r\n    def set_test_params(self):\r\n        self.setup_clean_chain = True\r\n        self.num_nodes = 2\r\n        self.rpc_timeout = 120\r\n        self.extra_args = [[\"-nowallet\"], []]\r\n\r\n    def add_options(self, parser):\r\n        self.add_wallet_options(parser)\r\n\r\n    def run_test(self):\r\n        node = self.nodes[0]\r\n        to_create = ['w1']\r\n        for wallet_name in to_create:\r\n            self.nodes[0].createwallet(wallet_name)\r\n        node.unloadwallet('w1')\r\n        threads = []\r\n        for _ in range(3):\r\n            n = node.cli if self.options.usecli else get_rpc_proxy(node.url, 1, timeout=600, coveragedir=node.coverage_dir)\r\n            t = Thread(target=test_load_unload, args=(n, 'w1'))\r\n            t.start()\r\n            threads.append(t)\r\n        for t in threads:\r\n            t.join()\r\n        global got_loading_unloading_error\r\n        assert_equal(got_loading_unloading_error, True)\r\n\r\nif __name__ == '__main__':\r\n    MultiWalletTest().main()\r\n```\r\nI'm currently looking further into the issue, trying to debug how it can come into this situation where the assertion fails.",
      "created_at" : "2023-12-27T19:18:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29143#issuecomment-1870566016",
      "id" : 1870566016,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29143",
      "node_id" : "IC_kwDOABII585vfpKA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1870566016/reactions"
      },
      "updated_at" : "2023-12-27T19:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1870566016",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/33068296?v=4",
         "events_url" : "https://api.github.com/users/dimitaracev/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dimitaracev/followers",
         "following_url" : "https://api.github.com/users/dimitaracev/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dimitaracev/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dimitaracev",
         "id" : 33068296,
         "login" : "dimitaracev",
         "node_id" : "MDQ6VXNlcjMzMDY4Mjk2",
         "organizations_url" : "https://api.github.com/users/dimitaracev/orgs",
         "received_events_url" : "https://api.github.com/users/dimitaracev/received_events",
         "repos_url" : "https://api.github.com/users/dimitaracev/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dimitaracev/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dimitaracev/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dimitaracev"
      }
   }
]

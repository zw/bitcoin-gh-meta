[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29156).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [kevkevinpal](https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1882243654), [Eunovo](https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1888973157) |\n| Concept ACK | [michaelfolkson](https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1882786231) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29154](https://github.com/bitcoin/bitcoin/pull/29154) (tests: improve wallet multisig descriptor test and docs by mjdietzx)\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-12-29T21:27:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1872345837",
      "id" : 1872345837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29156",
      "node_id" : "IC_kwDOABII585vmbrt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1872345837/reactions"
      },
      "updated_at" : "2024-01-12T11:54:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1872345837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "PR description link is routes to 404 can you update to use this https://github.com/bitcoin/bitcoin/blob/master/test/functional/wallet_multisig_descriptor_psbt.py instead?",
      "created_at" : "2024-01-06T16:36:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1879749727",
      "id" : 1879749727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29156",
      "node_id" : "IC_kwDOABII585wCrRf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879749727/reactions"
      },
      "updated_at" : "2024-01-06T16:36:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879749727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15950706?v=4",
         "events_url" : "https://api.github.com/users/kevkevinpal/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kevkevinpal/followers",
         "following_url" : "https://api.github.com/users/kevkevinpal/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kevkevinpal/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kevkevinpal",
         "id" : 15950706,
         "login" : "kevkevinpal",
         "node_id" : "MDQ6VXNlcjE1OTUwNzA2",
         "organizations_url" : "https://api.github.com/users/kevkevinpal/orgs",
         "received_events_url" : "https://api.github.com/users/kevkevinpal/received_events",
         "repos_url" : "https://api.github.com/users/kevkevinpal/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kevkevinpal/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kevkevinpal/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kevkevinpal"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK [2422b90](https://github.com/bitcoin/bitcoin/pull/29156/commits/2422b90978f4ea13ee49954598dc8aef841e36df)\r\n\r\nI've done a little code review and so far it is looking good, I think it would be cool if instead of always using the pubkeys in the same order when decaying we could randomly use different signers, I just quickly tested it worked the other way around with this diff (not sure how you feel about adding this randomness)\r\n\r\n```\r\n             for m in range(self.M):\r\n-                signers_multisig = participants[\"multisigs\"][m]\r\n+                self.log.info(self.N - 1 - m)\r\n+                signers_multisig = participants[\"multisigs\"][self.N - 1 - m]\r\n                 self._check_psbt(psbt[\"psbt\"], to, value, signers_multisig)\r\n-                signing_wallet = participants[\"signers\"][m]\r\n+                signing_wallet = participants[\"signers\"][self.N - 1 - m]\r\n                 psbt = signing_wallet.walletprocesspsbt(psbt[\"psbt\"])\r\n```\r\n\r\nThat way we can assert that any of the keys can create the 4/4 3/4 2/4 and 1/4\r\n\r\nAlso, one thing I am unsure of is if we should include this test in `test/functional/wallet_multisig_descriptor_psbt.py` since they are very similar and maybe we can use common functions but I am not sure what will be the cleanest",
      "created_at" : "2024-01-08T04:05:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1880357066",
      "id" : 1880357066,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29156",
      "node_id" : "IC_kwDOABII585wE_jK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1880357066/reactions"
      },
      "updated_at" : "2024-01-08T04:05:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1880357066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15950706?v=4",
         "events_url" : "https://api.github.com/users/kevkevinpal/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kevkevinpal/followers",
         "following_url" : "https://api.github.com/users/kevkevinpal/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kevkevinpal/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kevkevinpal",
         "id" : 15950706,
         "login" : "kevkevinpal",
         "node_id" : "MDQ6VXNlcjE1OTUwNzA2",
         "organizations_url" : "https://api.github.com/users/kevkevinpal/orgs",
         "received_events_url" : "https://api.github.com/users/kevkevinpal/received_events",
         "repos_url" : "https://api.github.com/users/kevkevinpal/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kevkevinpal/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kevkevinpal/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kevkevinpal"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you for the review, and good idea @kevkevinpal!\r\n\r\n>  I think it would be cool if instead of always using the pubkeys in the same order when decaying we could randomly use different signers\r\n\r\nI added a 2nd commit to this PR with your suggestion. In a similar spirit I improved #29154 (also adding a 2nd commit with your suggestion, and in that case we can also assert that order of xpubs in the multisig descriptors don't matter since it is `sorted`).\r\n\r\n> Also, one thing I am unsure of is if we should include this test in test/functional/wallet_multisig_descriptor_psbt.py since they are very similar and maybe we can use common functions but I am not sure what will be the cleanest\r\n\r\nI don't think it would be too much trouble to combine them, but I didn't go that route because my opinion is that some code duplication is preferable to trying to generalize/combine these tests. So I went the route of keeping these as two simple independent integration tests. I don't have a strong opinion on this, but usually for test code like this I lean towards approach I took where I duplicate some code to favor simple and easy to explain/delete tests. If more people feel strongly one way or the other I'm happy to change though",
      "created_at" : "2024-01-08T17:24:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1881518666",
      "id" : 1881518666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29156",
      "node_id" : "IC_kwDOABII585wJbJK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1881518666/reactions"
      },
      "updated_at" : "2024-01-08T17:24:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1881518666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK [7f0be89](https://github.com/bitcoin/bitcoin/pull/29156/commits/7f0be8969e721de69fc352f76db5787836803b76)",
      "created_at" : "2024-01-09T02:42:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1882243654",
      "id" : 1882243654,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29156",
      "node_id" : "IC_kwDOABII585wMMJG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1882243654/reactions"
      },
      "updated_at" : "2024-01-09T02:42:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1882243654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15950706?v=4",
         "events_url" : "https://api.github.com/users/kevkevinpal/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kevkevinpal/followers",
         "following_url" : "https://api.github.com/users/kevkevinpal/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kevkevinpal/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kevkevinpal",
         "id" : 15950706,
         "login" : "kevkevinpal",
         "node_id" : "MDQ6VXNlcjE1OTUwNzA2",
         "organizations_url" : "https://api.github.com/users/kevkevinpal/orgs",
         "received_events_url" : "https://api.github.com/users/kevkevinpal/received_events",
         "repos_url" : "https://api.github.com/users/kevkevinpal/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kevkevinpal/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kevkevinpal/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kevkevinpal"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK\r\n\r\nA couple of things on first skim read.\r\n\r\n1) I think it is probably overkill to create a new functional test file for this. I'm not sure why it can't go in `wallet_miniscript.py`?\r\n\r\n2) Miniscript has always been described by its authors/contributors as an extension of descriptors. I personally wouldn't be against adding some Miniscript explanation, examples in `descriptors.md` but I'd want a short explanation of what Miniscript is making it clear that this decaying multisig example is enabled by Miniscript and not just added to the list of descriptor examples. Maybe longer term there should be a `miniscript.md` but for now that seems fine to me.",
      "created_at" : "2024-01-09T10:16:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1882786231",
      "id" : 1882786231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29156",
      "node_id" : "IC_kwDOABII585wOQm3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1882786231/reactions"
      },
      "updated_at" : "2024-01-09T10:16:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1882786231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/16323900?v=4",
         "events_url" : "https://api.github.com/users/michaelfolkson/events{/privacy}",
         "followers_url" : "https://api.github.com/users/michaelfolkson/followers",
         "following_url" : "https://api.github.com/users/michaelfolkson/following{/other_user}",
         "gists_url" : "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/michaelfolkson",
         "id" : 16323900,
         "login" : "michaelfolkson",
         "node_id" : "MDQ6VXNlcjE2MzIzOTAw",
         "organizations_url" : "https://api.github.com/users/michaelfolkson/orgs",
         "received_events_url" : "https://api.github.com/users/michaelfolkson/received_events",
         "repos_url" : "https://api.github.com/users/michaelfolkson/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/michaelfolkson/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/michaelfolkson"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "ACK [7f0be89](https://github.com/bitcoin/bitcoin/pull/29156/commits/7f0be8969e721de69fc352f76db5787836803b76)\r\n\r\nAdding an example for this to descriptors.md is really helpful but I think users who are unfamiliar with miniscript and descriptors might benefit from the addition of the fragments, `thresh` and `after` to the `Reference` section. Seeing these fragments used in the examples but not included the reference can introduce confusion.",
      "created_at" : "2024-01-12T11:53:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1888973157",
      "id" : 1888973157,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29156",
      "node_id" : "IC_kwDOABII585wl3Fl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888973157/reactions"
      },
      "updated_at" : "2024-01-12T11:53:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1888973157",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I tested this locally and I've observed that the test doesn't fail if you modify the external wallet's timelocks, see below:\r\n`external = multisig.getdescriptorinfo(f\"wsh(thresh({self.N},pk({f'),s:pk('.join(external_xpubs)}),sln:after(128)))\")`\r\nThe reason is that the test only sends from the external wallet once using all keys and the transactions that use the `locktimes` send from the internal wallet because that's where the funds are. Hence, changing the timelocks for the external descriptor doesn't break the test.\r\n\r\nI'm not sure if we care about this or not but fixing this is pretty simple, we just need to create a transaction that uses 3-of-4 keys and the first timelock and sends from the external wallet. The easiest way to do this is to modify the first transaction in the test. See sample code below:\r\n```\r\nself.generate(self.nodes[0], self.locktimes[0])\r\nself.sync_blocks()\r\nself.log.info(\"First, make a sending transaction, created using `walletcreatefundedpsbt` (anyone can initiate this)...\")\r\npsbt = participants[\"multisigs\"][0].walletcreatefundedpsbt(inputs=[], outputs={to: value}, feeRate=0.00010, locktime=self.locktimes[0])\r\n\r\npsbts = []\r\nself.log.info(\"Now at least M users check the psbt with decodepsbt and (if OK) signs it with walletprocesspsbt...\")\r\nfor m in random.sample(range(self.M), self.M - 1):\r\n    signers_multisig = participants[\"multisigs\"][m]\r\n    self._check_psbt(psbt[\"psbt\"], to, value, signers_multisig)\r\n    signing_wallet = participants[\"signers\"][m]\r\n    partially_signed_psbt = signing_wallet.walletprocesspsbt(psbt[\"psbt\"])\r\n    psbts.append(partially_signed_psbt[\"psbt\"])\r\n\r\nself.log.info(\"Finally, collect the signed PSBTs with combinepsbt, finalizepsbt, then broadcast the resulting transaction...\")\r\ncombined = coordinator_wallet.combinepsbt(psbts)\r\nfinalized = coordinator_wallet.finalizepsbt(combined)\r\ncoordinator_wallet.sendrawtransaction(finalized[\"hex\"])\r\n```",
      "created_at" : "2024-01-12T17:02:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1889653618",
      "id" : 1889653618,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29156",
      "node_id" : "IC_kwDOABII585wodNy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889653618/reactions"
      },
      "updated_at" : "2024-01-12T17:02:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889653618",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/37949128?v=4",
         "events_url" : "https://api.github.com/users/Eunovo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Eunovo/followers",
         "following_url" : "https://api.github.com/users/Eunovo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Eunovo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Eunovo",
         "id" : 37949128,
         "login" : "Eunovo",
         "node_id" : "MDQ6VXNlcjM3OTQ5MTI4",
         "organizations_url" : "https://api.github.com/users/Eunovo/orgs",
         "received_events_url" : "https://api.github.com/users/Eunovo/received_events",
         "repos_url" : "https://api.github.com/users/Eunovo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Eunovo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Eunovo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Eunovo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you @michaelfolkson and @Eunovo for the reviews! I agree with both of your feedback re improving `descriptors.md` docs to accompany this test. I will have a commit addressing your feedback in the coming days.\r\n\r\n> I think it is probably overkill to create a new functional test file for this. I'm not sure why it can't go in wallet_miniscript.py\r\n\r\nMy intention with this test is to provide a \"reference example\" with the same motivations and flow/architecture as #22067 (and the original issue #21278 it resolved). But taking this one step further with a \"decaying\" multisig that highlights \"Miniscript as an extension of descriptors\" and showing the same multisig architecture and signing flows \"just work\" when we utilize Miniscript.\r\n\r\nTo your point - the additional raw test coverage this provides is limited, and if anything could be accomplished in `wallet_miniscript.py`. So if a \"reference example\" that tests end-to-end functionality of a wallet like this at a high-level (and more from a user perspective) isn't valuable then this is overkill and is not needed.\r\n\r\nI think once I follow up with docs this intention will be clear. Then we can see if this additional test is useful or overkill.\r\n\r\n> modify(ing) the external wallet's timelocks\r\n\r\n@Eunovo interesting observation! We could also break up the initial deposit into multiple utxos so that we aren't only spending change after the first transaction. I played around with it locally after thinking through your writeup, but I'm leaning towards not modifying the test to try to assert this failure. Partly because modifying the external descriptor to differ from internal would be a _different wallet_ conceptually than what I have here. Ideally #22838 would be merged and I'd be using those semantics in this test and then it's even more clear that external and internal wallets should only differ in derivation path\r\n\r\nRegardless, it's cool you thought of this. For a similar wallet that uses relative time locks instead of absolute, this would be even weirder. Because the same concept could lead to the change of a spendable utxo being unspendable for a time.",
      "created_at" : "2024-01-12T18:49:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29156#issuecomment-1889791034",
      "id" : 1889791034,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29156",
      "node_id" : "IC_kwDOABII585wo-w6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889791034/reactions"
      },
      "updated_at" : "2024-01-12T18:51:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889791034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7217256?v=4",
         "events_url" : "https://api.github.com/users/mjdietzx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mjdietzx/followers",
         "following_url" : "https://api.github.com/users/mjdietzx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mjdietzx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mjdietzx",
         "id" : 7217256,
         "login" : "mjdietzx",
         "node_id" : "MDQ6VXNlcjcyMTcyNTY=",
         "organizations_url" : "https://api.github.com/users/mjdietzx/orgs",
         "received_events_url" : "https://api.github.com/users/mjdietzx/received_events",
         "repos_url" : "https://api.github.com/users/mjdietzx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mjdietzx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mjdietzx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mjdietzx"
      }
   }
]

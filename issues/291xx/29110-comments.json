[
   {
      "author_association" : "MEMBER",
      "body" : "It looks like the `SQLiteBatch` being used to write data to disk is being destroyed unexpectedly, which causes subsequent writes using the same object(??) to have the wrong db transaction state that triggers this error.\r\n\r\nEdit: I'm thinking that this might actually be due to a race condition? If there were two `SQLiteBatch` objects with one beginning a transaction, when the other executes its actions, and then destructs, it would detect that a transaction is in progress that it hadn't started, and thus do `ROLLBACK` which would result in the first batch object expecting a transaction when the other had aborted it.\r\n\r\nLooking at this further, I think the `ChainStateFlushed` that happens after we see `BEGIN TRANSACTION` is the culprit. The wallet makes a new batch for flushing the chainstate, and when this is destroyed, it also aborts the other batch's transaction.",
      "created_at" : "2023-12-18T20:05:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29110#issuecomment-1861506107",
      "id" : 1861506107,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29110",
      "node_id" : "IC_kwDOABII585u9FQ7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1861506107/reactions"
      },
      "updated_at" : "2023-12-18T20:13:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1861506107",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yeah. The description is accurate achow. I had something for this in the past for #25297. We currently support a single db connection at time; when multiple `WalletBatch` are created on different threads, the first one destructed has priority over the others.\r\n\r\nIIRC, I had a database manager class providing db references, mapping the thread id to the db ref. So different threads can wait until other processes finish dumping data, acting accordantly, before making use of the db.\r\nI think I never pushed it because I wanted to go further (and also because #25297 didn't get much attention); wanted to make the db manager class provide db txns at the software level (not db engine level), enabling real parallelism and also letting us batch writes even across data from different processes.",
      "created_at" : "2023-12-18T21:44:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29110#issuecomment-1861732127",
      "id" : 1861732127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29110",
      "node_id" : "IC_kwDOABII585u98cf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1861732127/reactions"
      },
      "updated_at" : "2023-12-18T21:46:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1861732127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   }
]

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-07-31T15:22:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28193#issuecomment-1658590792",
      "id" : 1658590792,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28193",
      "node_id" : "IC_kwDOABII585i3BZI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658590792/reactions"
      },
      "updated_at" : "2023-07-31T15:22:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658590792",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28193#discussion_r1490257674"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490257674"
         }
      },
      "author_association" : "NONE",
      "body" : "nit: Looks like the approach employed is to pick a random X value until one is found that is not on the curve.  What is the rationale for using randomness, rather than choosing a fixed X value that is not on the curve (e.g. `fd0473a380ddf239accbc31770fcc6e64096930eaa8bc57c10f5868f3596fe1e`)?  Seems like the other tests in the test file use randomness as well (e.g. `GenerateRandomKey()`), so maybe I'm missing something.  Selecting a known invalid X value would technically increase test repeatability and consistency of test execution performance (although all of the 10 runs executed locally resulted in no more than a handful of X-picking attempts before finding an invalid X value, so performance is hardly a concern here).\r\n\r\nIf I'm not overlooking something, slightly less than half of the 32-byte space is valid X coordinates on the curve, so random selection would seem to have a negligible risk of starvation in finding an off-curve X value.\r\nhttps://bitcoin.stackexchange.com/questions/55196/is-there-a-point-on-the-secp256k1-curve-for-any-given-x-coordinate",
      "commit_id" : "28287cfbe18b6c468f76389e9f66bdcf2d00f8d1",
      "created_at" : "2024-02-15T01:26:23Z",
      "diff_hunk" : "@@ -131,4 +132,36 @@ BOOST_AUTO_TEST_CASE(compress_script_to_uncompressed_pubkey_id)\n     BOOST_CHECK_EQUAL(out[0], 0x04 | (script[65] & 0x01)); // least significant bit (lsb) of last char of pubkey is mapped into out[0]\n }\n \n+BOOST_AUTO_TEST_CASE(compress_p2pk_scripts_not_on_curve)\n+{\n+    XOnlyPubKey x_not_on_curve;\n+    do {\n+        x_not_on_curve = XOnlyPubKey(g_insecure_rand_ctx.randbytes(32));\n+    } while (x_not_on_curve.IsFullyValid());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28193#discussion_r1490257674",
      "id" : 1490257674,
      "line" : 140,
      "node_id" : "PRRC_kwDOABII585Y04cK",
      "original_commit_id" : "28287cfbe18b6c468f76389e9f66bdcf2d00f8d1",
      "original_line" : 140,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/test/compress_tests.cpp",
      "position" : 17,
      "pull_request_review_id" : 1881593385,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28193",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490257674/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-15T01:28:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1490257674",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/106488469?v=4",
         "events_url" : "https://api.github.com/users/tdb3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/tdb3/followers",
         "following_url" : "https://api.github.com/users/tdb3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/tdb3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/tdb3",
         "id" : 106488469,
         "login" : "tdb3",
         "node_id" : "U_kgDOBljilQ",
         "organizations_url" : "https://api.github.com/users/tdb3/orgs",
         "received_events_url" : "https://api.github.com/users/tdb3/received_events",
         "repos_url" : "https://api.github.com/users/tdb3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/tdb3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/tdb3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/tdb3"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28193#discussion_r1500426654"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500426654"
         }
      },
      "author_association" : "NONE",
      "body" : "I also lean towards preferring a `const`/`constexpr` containing an always-invalid X-only-pubkey. Adding some logging in the loop and running the tests a bunch of times does show that we usually finds an invalid key on the first or second attempt. (This confirms the answer in the Stack Exchange link above). Only once over ~50 runs did it try 6 times.\r\n\r\n(`MakeNewKeyWithFastRandomContext()` in `orphanage_tests` also uses `.randbytes(32)` but that's for calculating private keys which don't have invalid values (except possibly 0?). `GenerateRandomKey()` is also for private keys.)",
      "commit_id" : "28287cfbe18b6c468f76389e9f66bdcf2d00f8d1",
      "created_at" : "2024-02-23T09:48:00Z",
      "diff_hunk" : "@@ -131,4 +132,36 @@ BOOST_AUTO_TEST_CASE(compress_script_to_uncompressed_pubkey_id)\n     BOOST_CHECK_EQUAL(out[0], 0x04 | (script[65] & 0x01)); // least significant bit (lsb) of last char of pubkey is mapped into out[0]\n }\n \n+BOOST_AUTO_TEST_CASE(compress_p2pk_scripts_not_on_curve)\n+{\n+    XOnlyPubKey x_not_on_curve;\n+    do {\n+        x_not_on_curve = XOnlyPubKey(g_insecure_rand_ctx.randbytes(32));\n+    } while (x_not_on_curve.IsFullyValid());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28193#discussion_r1500426654",
      "id" : 1500426654,
      "in_reply_to_id" : 1490257674,
      "line" : 140,
      "node_id" : "PRRC_kwDOABII585ZbrGe",
      "original_commit_id" : "28287cfbe18b6c468f76389e9f66bdcf2d00f8d1",
      "original_line" : 140,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/test/compress_tests.cpp",
      "position" : 17,
      "pull_request_review_id" : 1897732239,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28193",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500426654/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-23T10:16:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1500426654",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/581308?v=4",
         "events_url" : "https://api.github.com/users/cbergqvist/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cbergqvist/followers",
         "following_url" : "https://api.github.com/users/cbergqvist/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cbergqvist/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cbergqvist",
         "id" : 581308,
         "login" : "cbergqvist",
         "node_id" : "MDQ6VXNlcjU4MTMwOA==",
         "organizations_url" : "https://api.github.com/users/cbergqvist/orgs",
         "received_events_url" : "https://api.github.com/users/cbergqvist/received_events",
         "repos_url" : "https://api.github.com/users/cbergqvist/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cbergqvist/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cbergqvist/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cbergqvist"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28193#discussion_r1503463416"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503463416"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Using random values adds robustness which is nice. However, given that there are 13 real cases in the UTXO set, incorporating a couple of those as constants could work and add reproducibility for this test. I think it's up to the author ultimately, either way works.",
      "commit_id" : "28287cfbe18b6c468f76389e9f66bdcf2d00f8d1",
      "created_at" : "2024-02-27T00:04:08Z",
      "diff_hunk" : "@@ -131,4 +132,36 @@ BOOST_AUTO_TEST_CASE(compress_script_to_uncompressed_pubkey_id)\n     BOOST_CHECK_EQUAL(out[0], 0x04 | (script[65] & 0x01)); // least significant bit (lsb) of last char of pubkey is mapped into out[0]\n }\n \n+BOOST_AUTO_TEST_CASE(compress_p2pk_scripts_not_on_curve)\n+{\n+    XOnlyPubKey x_not_on_curve;\n+    do {\n+        x_not_on_curve = XOnlyPubKey(g_insecure_rand_ctx.randbytes(32));\n+    } while (x_not_on_curve.IsFullyValid());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28193#discussion_r1503463416",
      "id" : 1503463416,
      "in_reply_to_id" : 1490257674,
      "line" : 140,
      "node_id" : "PRRC_kwDOABII585ZnQf4",
      "original_commit_id" : "28287cfbe18b6c468f76389e9f66bdcf2d00f8d1",
      "original_line" : 140,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/test/compress_tests.cpp",
      "position" : 17,
      "pull_request_review_id" : 1902271720,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28193",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503463416/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-27T00:04:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1503463416",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/95179662?v=4",
         "events_url" : "https://api.github.com/users/marcofleon/events{/privacy}",
         "followers_url" : "https://api.github.com/users/marcofleon/followers",
         "following_url" : "https://api.github.com/users/marcofleon/following{/other_user}",
         "gists_url" : "https://api.github.com/users/marcofleon/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/marcofleon",
         "id" : 95179662,
         "login" : "marcofleon",
         "node_id" : "U_kgDOBaxTjg",
         "organizations_url" : "https://api.github.com/users/marcofleon/orgs",
         "received_events_url" : "https://api.github.com/users/marcofleon/received_events",
         "repos_url" : "https://api.github.com/users/marcofleon/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/marcofleon/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/marcofleon/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/marcofleon"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28193#discussion_r1509815030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28193"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509815030"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would it be good idea to change the Decompress test below to use `CompressedScript out`\r\n\r\nOr maybe instead to validate the assumption that `compressed_script == out` here?",
      "commit_id" : "28287cfbe18b6c468f76389e9f66bdcf2d00f8d1",
      "created_at" : "2024-03-02T01:59:11Z",
      "diff_hunk" : "@@ -131,4 +132,36 @@ BOOST_AUTO_TEST_CASE(compress_script_to_uncompressed_pubkey_id)\n     BOOST_CHECK_EQUAL(out[0], 0x04 | (script[65] & 0x01)); // least significant bit (lsb) of last char of pubkey is mapped into out[0]\n }\n \n+BOOST_AUTO_TEST_CASE(compress_p2pk_scripts_not_on_curve)\n+{\n+    XOnlyPubKey x_not_on_curve;\n+    do {\n+        x_not_on_curve = XOnlyPubKey(g_insecure_rand_ctx.randbytes(32));\n+    } while (x_not_on_curve.IsFullyValid());\n+\n+    // Check that P2PK script with uncompressed pubkey [=> OP_PUSH65 <0x04 .....> OP_CHECKSIG]\n+    // which is not fully valid (i.e. point is not on curve) can't be compressed\n+    std::vector<unsigned char> pubkey_raw(65, 0);\n+    pubkey_raw[0] = 4;\n+    std::copy(x_not_on_curve.begin(), x_not_on_curve.end(), &pubkey_raw[1]);\n+    CPubKey pubkey_not_on_curve(pubkey_raw);\n+    assert(pubkey_not_on_curve.IsValid());\n+    assert(!pubkey_not_on_curve.IsFullyValid());\n+    CScript script = CScript() << ToByteVector(pubkey_not_on_curve) << OP_CHECKSIG;\n+    BOOST_CHECK_EQUAL(script.size(), 67U);\n+\n+    CompressedScript out;\n+    bool done = CompressScript(script, out);\n+    BOOST_CHECK_EQUAL(done, false);\n+\n+    // Check that compressed P2PK script with uncompressed pubkey that is not fully\n+    // valid (i.e. x coordinate of the pubkey is not on curve) can't be decompressed\n+    CompressedScript compressed_script(x_not_on_curve.begin(), x_not_on_curve.end());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28193#discussion_r1509815030",
      "id" : 1509815030,
      "line" : 159,
      "node_id" : "PRRC_kwDOABII585Z_fL2",
      "original_commit_id" : "28287cfbe18b6c468f76389e9f66bdcf2d00f8d1",
      "original_line" : 159,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "src/test/compress_tests.cpp",
      "position" : 36,
      "pull_request_review_id" : 1912486870,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28193",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509815030/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-02T02:01:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509815030",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2257631?v=4",
         "events_url" : "https://api.github.com/users/davidgumberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/davidgumberg/followers",
         "following_url" : "https://api.github.com/users/davidgumberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/davidgumberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/davidgumberg",
         "id" : 2257631,
         "login" : "davidgumberg",
         "node_id" : "MDQ6VXNlcjIyNTc2MzE=",
         "organizations_url" : "https://api.github.com/users/davidgumberg/orgs",
         "received_events_url" : "https://api.github.com/users/davidgumberg/received_events",
         "repos_url" : "https://api.github.com/users/davidgumberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/davidgumberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/davidgumberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/davidgumberg"
      }
   }
]

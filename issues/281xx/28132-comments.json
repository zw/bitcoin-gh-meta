[
   {
      "documentation_url" : "https://docs.github.com/rest/issues/comments#list-issue-comments",
      "message" : "Not Found"
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept NACK | [viresinnumeris-1](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1667376865), [BitcoinErrorLog](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1674487742), [fjahr](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1683891978), [ChrisMartl](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1684098088) |\n| Concept ACK | [ariard](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1646993842), [jaonoctus](https://github.com/bitcoin/bitcoin/pull/28132#pullrequestreview-1544055502), [luke-jr](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1650366541), [hsjoberg](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1656705552), [ghost](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1656989393), [ekzyis](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657103483), [Symphonic3](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1674343686), [russeree](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1685407533), [Kruwed](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1686207974), [cryptoquick](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1709502648) |\n| Stale ACK | [brandonblack](https://github.com/bitcoin/bitcoin/pull/28132#pullrequestreview-1559299935) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28207](https://github.com/bitcoin/bitcoin/pull/28207) (mempool: Persist with XOR by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-07-23T15:44:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1646873208",
      "id" : 1646873208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iKUp4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646873208/reactions"
      },
      "updated_at" : "2023-09-07T05:34:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646873208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "FYI [mempool.space has enabled full-rbf by default](https://github.com/mempool/mempool/pull/3867), among many others.",
      "created_at" : "2023-07-23T15:49:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1646874124",
      "id" : 1646874124,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iKU4M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646874124/reactions"
      },
      "updated_at" : "2023-07-23T15:49:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646874124",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "When you say \"by default\", do you mean that full-rbf would come by default as part of IBD or when you update Bitcoin Core? When would full-rbf be \"by default\"?",
      "created_at" : "2023-07-23T20:41:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1646954964",
      "id" : 1646954964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iKonU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646954964/reactions"
      },
      "updated_at" : "2023-07-23T20:41:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646954964",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/20481828?v=4",
         "events_url" : "https://api.github.com/users/emc99/events{/privacy}",
         "followers_url" : "https://api.github.com/users/emc99/followers",
         "following_url" : "https://api.github.com/users/emc99/following{/other_user}",
         "gists_url" : "https://api.github.com/users/emc99/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/emc99",
         "id" : 20481828,
         "login" : "emc99",
         "node_id" : "MDQ6VXNlcjIwNDgxODI4",
         "organizations_url" : "https://api.github.com/users/emc99/orgs",
         "received_events_url" : "https://api.github.com/users/emc99/received_events",
         "repos_url" : "https://api.github.com/users/emc99/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/emc99/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/emc99/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/emc99"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> When you say \"by default\", do you mean that full-rbf would come by default as part of IBD or when you update Bitcoin Core? When would full-rbf be \"by default\"?\r\n\r\nThis pull-req has nothing to do with Initial Block Download (IBD).\r\n\r\nIt simply changes the default for the `-mempoolfullrbf` option to true/enabled. Previously the default was false/disabled. Users who update Bitcoin Core to a version containing this change would by default propagate and mine full-rbf replacements unless they had chosen to disable full-rbf.\r\n\r\nA significant fraction of the P2P network has already chosen to enable full-rbf, so full-rbf replacements propagate reasonably well. Almost half of pools by hash power has enabled full-rbf, so full-rbf replacements that reach those miners are readily mined, as seen on https://mempool.space/rbf#fullrbf and https://fullrbf.mempool.observer/",
      "created_at" : "2023-07-23T21:44:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1646966801",
      "id" : 1646966801,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iKrgR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646966801/reactions"
      },
      "updated_at" : "2023-07-23T21:44:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646966801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "On the first line of arguments, I think zero-conf business acceptance have the option to deploy additional full-nodes with good transaction-relay peering to obtain a reasonable view of network mempools, and therefore increase their odds of seeing a double-spend of a confirmation of interest. In practice, zero-conf applications have risk threshold, once those thresholds are reached they will deactivate zero-conf acceptance.\r\n\r\nOn the second line or arguments, mempool consistency with miners is becoming a practical concern in my opinion with the appereance of so-called âtransaction acceleratorsâ, as now LSPs can use those out-of-band transaction-relay service to fee-bump their stuck multi-party transactions, and therefore provoke a divergence with the rest of the network. I raised this risk of [âmining income asymmetries due to unequal access in to transaction flows bypassing policiesâ](https://github.com/bitcoin/bitcoin/pull/26438#issuecomment-1299522242) in Suhas proposal to remove the mempoolfullrbf option months ago.\r\n\r\nOn the third line of arguments about the enhancement of multi-party funded transactions flows, the original motivation is explained in this [post](https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-May/003033.html) on the lightning dev mailing list. RBF opt-out allows a counterparty contributing an input to block the confirmation of a multi-party transaction at minimal cost, therefore enabling a liquidity griefing at low-cost (size of the pinning tx * mempool min fee).\r\n\r\nSince then, early Lightning Service Providers deploying dual-funding have raised again the [concern](https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-May/003920.html) on the mailing list during May of this year, and how sustained RBF signaling flag opt-out can be an annoying vector of pinning attack. While from my understanding the issue might be solved on the Lightning-side by upcoming deployment of nversion=3 (where full-rbf is implied by the policy regime), this wonât solve the pinning issue for coinjoin multi-party transactions which are concerned too (and this is not sure that weâre deploying nversion=3 for the dual-funding/splicing flows due to package limits size). With that context in mind, full-rbf by default is a welcome deployment for second-layers and multi-party applications.\r\n\r\nOn the deployment schedule, weâre still mid-26.0 schedule, so I think itâs reasonable to land it now (feature freeze scheduled for 2023-10-01 as of today July 24th). This still gives a period of roughly 5 months to zero-conf business and other software that would need to tweak their software.\r\n\r\n37% of the hash power sounds a reasonable demonstration of the Bitcoin mining ecosystem selecting the transaction-relay policy favoring maximization of their mining income strategy.\r\n\r\nSo Iâm Concept ACK on this change, I still think this change deserves announcement on the mailing list and usual technical communication channels to warn ecosystem stakeholders impacted by the proposed change.",
      "created_at" : "2023-07-23T23:51:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1646993842",
      "id" : 1646993842,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iKyGy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646993842/reactions"
      },
      "updated_at" : "2023-07-23T23:51:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1646993842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "I queried the explorer like this\r\n```\r\n~ $ curl -s https://mempool.space/api/v1/block/0000000000000000000153159d7b95debfb0dadcd1040aaf9dbeb0025a1ddeac/audit-summary | jq .fullrbfTxs\r\n[\r\n  \"53cec64b52989c531550ac4606bedf1ff83d5bfd90efdc4006f122ac6b1b7643\",\r\n  \"5bc64344c56f847e2d992fab241567075473eec9423776afadc187299352bce1\",\r\n  \"64ec51dedd1404a775d590f530a01bbdc4239c8eb6d33ce4b9217ec2f0b8ddae\"\r\n]\r\n```\r\nOnly 4 of 6 mentioned transactions seem to be full-rbf, or was it a wrong request?",
      "created_at" : "2023-07-24T09:40:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1647569661",
      "id" : 1647569661,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iM-r9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1647569661/reactions"
      },
      "updated_at" : "2023-07-24T09:40:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1647569661",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73423761?v=4",
         "events_url" : "https://api.github.com/users/recursive-rat4/events{/privacy}",
         "followers_url" : "https://api.github.com/users/recursive-rat4/followers",
         "following_url" : "https://api.github.com/users/recursive-rat4/following{/other_user}",
         "gists_url" : "https://api.github.com/users/recursive-rat4/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/recursive-rat4",
         "id" : 73423761,
         "login" : "recursive-rat4",
         "node_id" : "MDQ6VXNlcjczNDIzNzYx",
         "organizations_url" : "https://api.github.com/users/recursive-rat4/orgs",
         "received_events_url" : "https://api.github.com/users/recursive-rat4/received_events",
         "repos_url" : "https://api.github.com/users/recursive-rat4/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/recursive-rat4/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/recursive-rat4/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/recursive-rat4"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\n\nOn July 24, 2023 12:41:10 PM GMT+03:00, Pavel Vasin ***@***.***> wrote:\n>I queried the explorer like this\n>```\n>~ $ curl -s https://mempool.space/api/v1/block/0000000000000000000153159d7b95debfb0dadcd1040aaf9dbeb0025a1ddeac/audit-summary | jq .fullrbfTxs\n>[\n>  \"53cec64b52989c531550ac4606bedf1ff83d5bfd90efdc4006f122ac6b1b7643\",\n>  \"5bc64344c56f847e2d992fab241567075473eec9423776afadc187299352bce1\",\n>  \"64ec51dedd1404a775d590f530a01bbdc4239c8eb6d33ce4b9217ec2f0b8ddae\"\n>]\n>```\n>Only 4 of 6 mentioned transactions seem to be full-rbf, or was it a wrong request?\n\nmempool.space doesn't keep information about replacements indefinitely; after a certain amount of time it's deleted from their databases. All those transactions were created by my OpenTimestamps calendars, and I can assure you they are full-rbf replacements.\n\nLots more too: https://alice.btc.calendar.opentimestamps.org/ https://bob.btc.calendar.opentimestamps.org/\n",
      "created_at" : "2023-07-24T15:36:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1648152222",
      "id" : 1648152222,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iPM6e",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1648152222/reactions"
      },
      "updated_at" : "2023-07-24T15:36:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1648152222",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, but the description has some issues:\r\n\r\n>Obviously, with this much support of full-rbf, arguments against it on the basis that unconfirmed transactions are safe are now invalid. \r\n\r\nIt was always invalid.\r\n\r\n>Secondly, on the basis of mempool consistency with miners, since full-rbf is the compatible policy in almost all cases, we should be supporting it by default if you take the position that we want to optimize for consistency with miners.\r\n\r\nThis is backward. Miners are incentivised to match nodes. Nodes shouldn't try to match miners.\r\n",
      "created_at" : "2023-07-25T18:53:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1650366541",
      "id" : 1650366541,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iXphN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1650366541/reactions"
      },
      "updated_at" : "2023-07-25T18:53:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1650366541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Concept ACK, but the description has some issues:\r\n> \r\n> > Obviously, with this much support of full-rbf, arguments against it on the basis that unconfirmed transactions are safe are now invalid.\r\n>\r\n> It was always invalid.\r\n\r\nReworded it to say \"even more clearly invalid\"\r\n \r\n> > Secondly, on the basis of mempool consistency with miners, since full-rbf is the compatible policy in almost all cases, we should be supporting it by default if you take the position that we want to optimize for consistency with miners.\r\n> \r\n> This is backward. Miners are incentivised to match nodes. Nodes shouldn't try to match miners.\r\n\r\nThat's probably true for consensus changes. But this isn't a consensus change. For full-rbf 1) miners can run their own nodes, 2) sufficient full-rbf nodes are running that miners can fairly reliably receive full-rbf replacements.\r\n\r\nThe status quo is _already_ that full-rbf replacements are regularly mined and can be propagated with a little bit of work. This change merely accepts that fact, and (marginally) improves the propagation situation for small miners, and makes full-rbf more convenient to use for everyone else.",
      "created_at" : "2023-07-26T10:14:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1651454924",
      "id" : 1651454924,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585ibzPM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1651454924/reactions"
      },
      "updated_at" : "2023-07-26T10:14:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1651454924",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\nThis is helpful for second layer protocols, including Lightning.",
      "created_at" : "2023-07-29T11:02:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1656705552",
      "id" : 1656705552,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iv1IQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656705552/reactions"
      },
      "updated_at" : "2023-07-29T11:03:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656705552",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3824379?v=4",
         "events_url" : "https://api.github.com/users/hsjoberg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hsjoberg/followers",
         "following_url" : "https://api.github.com/users/hsjoberg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hsjoberg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hsjoberg",
         "id" : 3824379,
         "login" : "hsjoberg",
         "node_id" : "MDQ6VXNlcjM4MjQzNzk=",
         "organizations_url" : "https://api.github.com/users/hsjoberg/orgs",
         "received_events_url" : "https://api.github.com/users/hsjoberg/received_events",
         "repos_url" : "https://api.github.com/users/hsjoberg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hsjoberg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hsjoberg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hsjoberg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "What happened to: \"It's just opt-in\"?",
      "created_at" : "2023-07-29T21:08:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1656894747",
      "id" : 1656894747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iwjUb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656894747/reactions"
      },
      "updated_at" : "2023-07-29T21:08:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656894747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6118832?v=4",
         "events_url" : "https://api.github.com/users/sandakersmann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sandakersmann/followers",
         "following_url" : "https://api.github.com/users/sandakersmann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sandakersmann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sandakersmann",
         "id" : 6118832,
         "login" : "sandakersmann",
         "node_id" : "MDQ6VXNlcjYxMTg4MzI=",
         "organizations_url" : "https://api.github.com/users/sandakersmann/orgs",
         "received_events_url" : "https://api.github.com/users/sandakersmann/received_events",
         "repos_url" : "https://api.github.com/users/sandakersmann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sandakersmann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sandakersmann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sandakersmann"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\r\n\r\nOn July 29, 2023 11:08:33 PM GMT+02:00, \"Marius KjÃ¦rstad\" ***@***.***> wrote:\r\n>What happened to: \"It's just opt-in\"?\r\n\r\n~40% of hash power decided to opt-in. You opting out is meaningless once that has happened, because unconfirmed transactions are well and truly insecure. So might as well enable it by default.\r\n\r\nMiners can still opt out if they choose. Though there's no reason not to.\r\n",
      "created_at" : "2023-07-29T21:44:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1656919344",
      "id" : 1656919344,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iwpUw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656919344/reactions"
      },
      "updated_at" : "2023-07-29T21:44:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656919344",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@petertodd Why didn't any hash power opt-in to RBF back in 2015?",
      "created_at" : "2023-07-29T23:00:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1656946537",
      "id" : 1656946537,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iwv9p",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656946537/reactions"
      },
      "updated_at" : "2023-07-29T23:00:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656946537",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6118832?v=4",
         "events_url" : "https://api.github.com/users/sandakersmann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sandakersmann/followers",
         "following_url" : "https://api.github.com/users/sandakersmann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sandakersmann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sandakersmann",
         "id" : 6118832,
         "login" : "sandakersmann",
         "node_id" : "MDQ6VXNlcjYxMTg4MzI=",
         "organizations_url" : "https://api.github.com/users/sandakersmann/orgs",
         "received_events_url" : "https://api.github.com/users/sandakersmann/received_events",
         "repos_url" : "https://api.github.com/users/sandakersmann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sandakersmann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sandakersmann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sandakersmann"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "\r\n\r\nOn July 30, 2023 1:00:32 AM GMT+02:00, \"Marius KjÃ¦rstad\" ***@***.***> wrote:\r\n>@petertodd Why didn't any hash power opt-in to RBF back in 2015?\r\n\r\nThey did. I created a full-rbf patch years ago that some miners were running.\r\n\r\nSee also: https://petertodd.org/2016/are-wallets-ready-for-rbf\r\n",
      "created_at" : "2023-07-29T23:50:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1656966330",
      "id" : 1656966330,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iw0y6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656966330/reactions"
      },
      "updated_at" : "2023-07-29T23:50:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656966330",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@petertodd Why didn't any hash power opt-in to RBF before you made that patch?",
      "created_at" : "2023-07-29T23:55:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1656967556",
      "id" : 1656967556,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iw1GE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656967556/reactions"
      },
      "updated_at" : "2023-07-29T23:55:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656967556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6118832?v=4",
         "events_url" : "https://api.github.com/users/sandakersmann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sandakersmann/followers",
         "following_url" : "https://api.github.com/users/sandakersmann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sandakersmann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sandakersmann",
         "id" : 6118832,
         "login" : "sandakersmann",
         "node_id" : "MDQ6VXNlcjYxMTg4MzI=",
         "organizations_url" : "https://api.github.com/users/sandakersmann/orgs",
         "received_events_url" : "https://api.github.com/users/sandakersmann/received_events",
         "repos_url" : "https://api.github.com/users/sandakersmann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sandakersmann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sandakersmann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sandakersmann"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK\r\n\r\nThere are no answers for questions that do not make sense. Also there are no arguments left against full RBF as it's used regularly.",
      "created_at" : "2023-07-30T01:22:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1656989393",
      "id" : 1656989393,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iw6bR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656989393/reactions"
      },
      "updated_at" : "2023-07-30T01:22:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1656989393",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/134363042?v=4",
         "events_url" : "https://api.github.com/users/zkfrio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/zkfrio/followers",
         "following_url" : "https://api.github.com/users/zkfrio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/zkfrio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/zkfrio",
         "id" : 134363042,
         "login" : "zkfrio",
         "node_id" : "U_kgDOCAI3og",
         "organizations_url" : "https://api.github.com/users/zkfrio/orgs",
         "received_events_url" : "https://api.github.com/users/zkfrio/received_events",
         "repos_url" : "https://api.github.com/users/zkfrio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/zkfrio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/zkfrio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/zkfrio"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Replace by fee makes double spending easier and harm's Bitcoin's ability to be used as a currency in my opinion",
      "created_at" : "2023-07-30T08:17:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657075910",
      "id" : 1657075910,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585ixPjG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657075910/reactions"
      },
      "updated_at" : "2023-07-30T08:17:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657075910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/80486540?v=4",
         "events_url" : "https://api.github.com/users/YellowRoseCx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/YellowRoseCx/followers",
         "following_url" : "https://api.github.com/users/YellowRoseCx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/YellowRoseCx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/YellowRoseCx",
         "id" : 80486540,
         "login" : "YellowRoseCx",
         "node_id" : "MDQ6VXNlcjgwNDg2NTQw",
         "organizations_url" : "https://api.github.com/users/YellowRoseCx/orgs",
         "received_events_url" : "https://api.github.com/users/YellowRoseCx/received_events",
         "repos_url" : "https://api.github.com/users/YellowRoseCx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/YellowRoseCx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/YellowRoseCx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/YellowRoseCx"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK\n\nEnabling full-RBF by default removes remaining false sense of security",
      "created_at" : "2023-07-30T10:34:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657103483",
      "id" : 1657103483,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585ixWR7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657103483/reactions"
      },
      "updated_at" : "2023-07-30T10:34:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657103483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/27162016?v=4",
         "events_url" : "https://api.github.com/users/ekzyis/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ekzyis/followers",
         "following_url" : "https://api.github.com/users/ekzyis/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ekzyis/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ekzyis",
         "id" : 27162016,
         "login" : "ekzyis",
         "node_id" : "MDQ6VXNlcjI3MTYyMDE2",
         "organizations_url" : "https://api.github.com/users/ekzyis/orgs",
         "received_events_url" : "https://api.github.com/users/ekzyis/received_events",
         "repos_url" : "https://api.github.com/users/ekzyis/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ekzyis/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ekzyis/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ekzyis"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sandakersmann\r\n\r\n> @petertodd Why didn't any hash power opt-in to RBF before you made that patch?\r\n\r\nSomeone had to actually write the code of course. AFAIK I was the first (though as far as I know, rbf was [first suggested by Satoshi](https://bitcointalk.org/index.php?topic=2181.msg28739#msg28739)).\r\n",
      "created_at" : "2023-07-30T13:45:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657177700",
      "id" : 1657177700,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585ixoZk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657177700/reactions"
      },
      "updated_at" : "2023-07-30T13:45:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657177700",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "The fact RBF is possible already undermines the security of the mempool, which was already low, so having it on by default or not, the fact it exists already killed zero-conf a long time ago.",
      "created_at" : "2023-07-30T14:09:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657183466",
      "id" : 1657183466,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585ixpzq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657183466/reactions"
      },
      "updated_at" : "2023-07-30T14:09:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657183466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1179000?v=4",
         "events_url" : "https://api.github.com/users/SparK-Cruz/events{/privacy}",
         "followers_url" : "https://api.github.com/users/SparK-Cruz/followers",
         "following_url" : "https://api.github.com/users/SparK-Cruz/following{/other_user}",
         "gists_url" : "https://api.github.com/users/SparK-Cruz/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/SparK-Cruz",
         "id" : 1179000,
         "login" : "SparK-Cruz",
         "node_id" : "MDQ6VXNlcjExNzkwMDA=",
         "organizations_url" : "https://api.github.com/users/SparK-Cruz/orgs",
         "received_events_url" : "https://api.github.com/users/SparK-Cruz/received_events",
         "repos_url" : "https://api.github.com/users/SparK-Cruz/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/SparK-Cruz/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/SparK-Cruz/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/SparK-Cruz"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ariard\r\n\r\n> So Iâm Concept ACK on this change, I still think this change deserves announcement on the mailing list and usual technical communication channels to warn ecosystem stakeholders impacted by the proposed change.\r\n\r\nI've posted a notice on the bitcoin-dev mailing list: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-July/021823.html\r\n\r\nThanks for the Concept ACK!",
      "created_at" : "2023-07-30T15:52:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657206487",
      "id" : 1657206487,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585ixvbX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657206487/reactions"
      },
      "updated_at" : "2023-07-30T15:52:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657206487",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "First-seen-safe is good enough for grocery shopping. But don't let me disturb you while you strip away the utility of BTC.",
      "created_at" : "2023-07-30T16:56:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657219473",
      "id" : 1657219473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585ixymR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657219473/reactions"
      },
      "updated_at" : "2023-07-30T16:56:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657219473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6118832?v=4",
         "events_url" : "https://api.github.com/users/sandakersmann/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sandakersmann/followers",
         "following_url" : "https://api.github.com/users/sandakersmann/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sandakersmann/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sandakersmann",
         "id" : 6118832,
         "login" : "sandakersmann",
         "node_id" : "MDQ6VXNlcjYxMTg4MzI=",
         "organizations_url" : "https://api.github.com/users/sandakersmann/orgs",
         "received_events_url" : "https://api.github.com/users/sandakersmann/received_events",
         "repos_url" : "https://api.github.com/users/sandakersmann/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sandakersmann/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sandakersmann/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sandakersmann"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> This is helpful for second layer protocols, including Lightning.\r\n\r\nI'm not aware of any second layer protocols that are improved by having full-rbf more broadly available.",
      "created_at" : "2023-07-30T21:18:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657268865",
      "id" : 1657268865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585ix-qB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657268865/reactions"
      },
      "updated_at" : "2023-07-30T21:18:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657268865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Users who care about full-RBF and want it already have it turned on.\r\n\r\nThis change does not impact them.\r\n\r\nThis change has the most impact on:\r\n\r\n1. Users who don't care about full-RBF.\r\n2. Users who do care and want full-RBF to be **off** and rely on defaults not changing.\r\n\r\nIn other words, it impacts most those that want it least. That seems like a questionable precedent.\r\n\r\nRegardless of how much full-RBF is desirable, changing defaults incentivizes users to avoid upgrades and over-specify defaults.",
      "created_at" : "2023-07-30T22:10:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657277622",
      "id" : 1657277622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iyAy2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657277622/reactions"
      },
      "updated_at" : "2023-07-30T22:10:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657277622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/47615825?v=4",
         "events_url" : "https://api.github.com/users/pox/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pox/followers",
         "following_url" : "https://api.github.com/users/pox/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pox/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pox",
         "id" : 47615825,
         "login" : "pox",
         "node_id" : "MDQ6VXNlcjQ3NjE1ODI1",
         "organizations_url" : "https://api.github.com/users/pox/orgs",
         "received_events_url" : "https://api.github.com/users/pox/received_events",
         "repos_url" : "https://api.github.com/users/pox/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pox/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pox/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pox"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Replace by fee makes double spending easier and harm's Bitcoin's ability to be used as a currency in my opinion\r\n\r\nRBF also allows people to be more frugal with their fee estimates as they can bump more easily if necessary - this certainly helps bitcoin's ability to be used a currency.\r\n\r\nMoreover, it has never been appropriate to rely on unconfirmed transactions. Maintaining an illusion (that transactions that aren't in the blockchain can be relied upon) is not something worth attempting by frustrating RBF.",
      "created_at" : "2023-07-31T00:43:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657332489",
      "id" : 1657332489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iyOMJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657332489/reactions"
      },
      "updated_at" : "2023-07-31T00:43:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657332489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/45926711?v=4",
         "events_url" : "https://api.github.com/users/BitcoinMechanic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinMechanic/followers",
         "following_url" : "https://api.github.com/users/BitcoinMechanic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinMechanic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinMechanic",
         "id" : 45926711,
         "login" : "BitcoinMechanic",
         "node_id" : "MDQ6VXNlcjQ1OTI2NzEx",
         "organizations_url" : "https://api.github.com/users/BitcoinMechanic/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinMechanic/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinMechanic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinMechanic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinMechanic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinMechanic"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "This entire discussion is pointless since Core won't listen to any feedback and will proceed with their centralized development and decision making process.",
      "created_at" : "2023-07-31T01:22:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657356702",
      "id" : 1657356702,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585iyUGe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657356702/reactions"
      },
      "updated_at" : "2023-07-31T01:22:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657356702",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/47200567?v=4",
         "events_url" : "https://api.github.com/users/pokkst/events{/privacy}",
         "followers_url" : "https://api.github.com/users/pokkst/followers",
         "following_url" : "https://api.github.com/users/pokkst/following{/other_user}",
         "gists_url" : "https://api.github.com/users/pokkst/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/pokkst",
         "id" : 47200567,
         "login" : "pokkst",
         "node_id" : "MDQ6VXNlcjQ3MjAwNTY3",
         "organizations_url" : "https://api.github.com/users/pokkst/orgs",
         "received_events_url" : "https://api.github.com/users/pokkst/received_events",
         "repos_url" : "https://api.github.com/users/pokkst/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/pokkst/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/pokkst/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/pokkst"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> [Binance Pool, 8.2%](https://mempool.space/tx/64a26f750c7c58812bd475d054a9aa05248b6a8a2d53c0db38c0624197a4c68a)\r\n\r\nThis replaced 87f20bf4a8b71a255e47876ca7563cdcab1a830490a1b130bbe71c28d8da3884 which had a 3.14sat/vb feerate. statoshi reported minfees up to 3.09sat/vb in the period between the original propagating and the replacement being mined.\r\n\r\n> [KuCoinPool, 1.4%](https://mempool.space/tx/8df183b087d433eac4d8e44eca5c7162a2540ee078a28ca04316fd82e12ec435)\r\n\r\nThis replaced e17630b903e9fb5bd4c6083297c25572417c0261e9a0c55ef2cde2b2a7be6523 at 3.14sat/vb; during the time between the original propagating and the replacement being mined, statoshi's minfee was dropping from 3.1sat/vb to 1.2sat/vb.\r\n\r\n> [EMCDPool, 1.1%](https://mempool.space/tx/82785474f46717bcb3598e847bed0636271467a2f708fac59102cb74561a0676)\r\n\r\nThis replaced 844a0d2caf3488e20a4befcb7e581e5d849f2eb3581d5dddbfe2ac2412a9631f which had a 3.14sat/vb feerate. statoshi reported a minfee of 3.09sat/vb around the time the original tx propogated.\r\n\r\n> [ULTIMUSPOOL, 0.3%](https://mempool.space/tx/9d77b522919efaa97ca7509ff2d7733432e9fc8cc93e49fa56024819edeee816)\r\n\r\nThis replaced 0075cfc555ac5431438c72b616af69a27496fb71e5dbdfa40f3d4520df19e97e also at 3.81sat/vb; statoshi reports a minfee reaching 3.9sat/vb over the period between the original tx propagating and the replacement being mined.\r\n\r\n>  [Poolin, 1.4%](https://mempool.space/tx/d14956420077974d8d28c2fcd005cd9f4aa65b2501b469f3f324f83f57d51c79)\r\n\r\nThis replaced 353be845e9019ac975981433672e8ff56032f599fe48ec1bd4ed968ea95949cc at 3.14sat/vb; statoshi's minfee over the 80 minutes between the original propagating and the replacement being mined was dropping from 3.4sat/vb to 2.2sat/vb then immediately rose again to 3.2sat/vb.\r\n\r\n> [Antpool, 21%](https://mempool.space/tx/53cec64b52989c531550ac4606bedf1ff83d5bfd90efdc4006f122ac6b1b7643)\r\n\r\nThis replaced 6b59ab3d86b5110565faff8d1ae2e263c4b873e406f73a0ec92988f0d587f204 at 4.76sat/vb; statoshi reports a minfee of 4.5sat/vb dropping to 3.0sat/vb then rising back to 4.0sat/vb around this period.\r\n\r\nAs far as I can see, miners evicting the original txs from their mempool due to variations across the network in minfee values is a plausible explanation for all these replacements.",
      "created_at" : "2023-07-31T05:44:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657669845",
      "id" : 1657669845,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585izgjV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657669845/reactions"
      },
      "updated_at" : "2023-07-31T05:44:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657669845",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ajtowns \r\n\r\n> > [Binance Pool, 8.2%](https://mempool.space/tx/64a26f750c7c58812bd475d054a9aa05248b6a8a2d53c0db38c0624197a4c68a)\r\n> \r\n> This replaced 87f20bf4a8b71a255e47876ca7563cdcab1a830490a1b130bbe71c28d8da3884 which had a 3.14sat/vb feerate. statoshi reported minfees up to 3.09sat/vb in the period between the original propagating and the replacement being mined.\r\n> \r\n> > [KuCoinPool, 1.4%](https://mempool.space/tx/8df183b087d433eac4d8e44eca5c7162a2540ee078a28ca04316fd82e12ec435)\r\n> \r\n> This replaced e17630b903e9fb5bd4c6083297c25572417c0261e9a0c55ef2cde2b2a7be6523 at 3.14sat/vb; during the time between the original propagating and the replacement being mined, statoshi's minfee was dropping from 3.1sat/vb to 1.2sat/vb.\r\n> \r\n> > [EMCDPool, 1.1%](https://mempool.space/tx/82785474f46717bcb3598e847bed0636271467a2f708fac59102cb74561a0676)\r\n> \r\n> This replaced 844a0d2caf3488e20a4befcb7e581e5d849f2eb3581d5dddbfe2ac2412a9631f which had a 3.14sat/vb feerate. statoshi reported a minfee of 3.09sat/vb around the time the original tx propogated.\r\n> \r\n> > [ULTIMUSPOOL, 0.3%](https://mempool.space/tx/9d77b522919efaa97ca7509ff2d7733432e9fc8cc93e49fa56024819edeee816)\r\n> \r\n> This replaced 0075cfc555ac5431438c72b616af69a27496fb71e5dbdfa40f3d4520df19e97e also at 3.81sat/vb; statoshi reports a minfee reaching 3.9sat/vb over the period between the original tx propagating and the replacement being mined.\r\n> \r\n> > [Poolin, 1.4%](https://mempool.space/tx/d14956420077974d8d28c2fcd005cd9f4aa65b2501b469f3f324f83f57d51c79)\r\n> \r\n> This replaced 353be845e9019ac975981433672e8ff56032f599fe48ec1bd4ed968ea95949cc at 3.14sat/vb; statoshi's minfee over the 80 minutes between the original propagating and the replacement being mined was dropping from 3.4sat/vb to 2.2sat/vb then immediately rose again to 3.2sat/vb.\r\n> \r\n> > [Antpool, 21%](https://mempool.space/tx/53cec64b52989c531550ac4606bedf1ff83d5bfd90efdc4006f122ac6b1b7643)\r\n> \r\n> This replaced 6b59ab3d86b5110565faff8d1ae2e263c4b873e406f73a0ec92988f0d587f204 at 4.76sat/vb; statoshi reports a minfee of 4.5sat/vb dropping to 3.0sat/vb then rising back to 4.0sat/vb around this period.\r\n> \r\n> As far as I can see, miners evicting the original txs from their mempool due to variations across the network in minfee values is a plausible explanation for all these replacements.\r\n\r\nAll of those transactions are taken from my OpenTimestamps calendars. My OTS calendars bump fees repeatedly, increasing the feerate by 1sat/vb with each replacement, starting at approximately the minimum relay fee. Every single one of those replacements is actually a long string of multiple replacements. mempool.space does not maintain replacement data beyond 24 hours or so; if you want to see live replacement data you can do to https://alice.btc.calendar.opentimestamps.org/ or https://bob.btc.calendar.opentimestamps.org/ and just click on any of the recently mined transactions to see mempool.space's replacement history data on them. You can also see full-rbf replacements at https://mempool.space/rbf#fullrbf, which I linked above as well.\r\n\r\nPlease delete your comment as it is factually incorrect and misleading. Frankly I'm surprised that you are so unaware of current mempool policies in use by miners that you were unaware of the fact that full-rbf has been widely adopted.",
      "created_at" : "2023-07-31T07:53:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657857733",
      "id" : 1657857733,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i0ObF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657857733/reactions"
      },
      "updated_at" : "2023-07-31T07:53:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1657857733",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks for also posting this policy change proposal on the mailinglist (https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657206487).\r\n\r\nThe main benefit of this PR would be to undo the split in policy caused by adding this flag and widely advocating for it. I don't think that's just a fad at this point. However I'm inclined to wait a little bit longer, e.g. after the v26 release, to see if your observations are maintained and reproduced outside of OTS. The new mempool.space tracking is helpful here.\r\n\r\nIn the release notes we should remind wallet users to not (yet) stop using the RBF flag, because their peers may not reliably relay it.\r\n\r\n[0] https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-July/021823.html",
      "created_at" : "2023-07-31T09:30:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1658006964",
      "id" : 1658006964,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i0y20",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658006964/reactions"
      },
      "updated_at" : "2023-07-31T09:30:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658006964",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "This would unnecessarily and extremely negatively impact merchants and users who choose to accept 0-conf while using mitigation tools like GAP600. This negative impact could be avoided by simply adding first seen safe rule - ie a trx can be replaced but needs to include the original outputs.\r\n\r\nAt GAP600 we continue to see strong use of our service for BTC we have seen circa 350k unique trx hash per month (over the last 3 months) requested to our platform. Our clients include - Coinpayments, Coinspaid and Changelly. Given the period of Mempool being full we have seen an increase a fee required in order to be approved by our platform for trx. This is not an insignificant use case and one which can be easily maintained as is.\r\n\r\nWe have provided further statistics in the past and direct feedback from Coinspaid CEO with in the mailing list see here - https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021240.html\r\n\r\nWe have not seen any impact of full RBF on double spend rates for our trxs which seems to put in large question the stated figure of 40% adoption by miners at such a rate of adoption we would expect to see a large increase in double spends. We expect once this setting become default this will greatly change the adoption of this service.\r\n\r\nGAP600 model targets not to get it wrong and as such  we are very sensitive to any double spend which we get wrong in predicting as we reimburse our clients. GAP600 is not a payment processor rather services payment processors, merchants and non custodial liquidity providers which service non-custodial wallets. ",
      "created_at" : "2023-07-31T10:13:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1658076861",
      "id" : 1658076861,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i1D69",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658076861/reactions"
      },
      "updated_at" : "2023-07-31T10:13:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658076861",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/34838207?v=4",
         "events_url" : "https://api.github.com/users/Daniel600/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Daniel600/followers",
         "following_url" : "https://api.github.com/users/Daniel600/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Daniel600/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Daniel600",
         "id" : 34838207,
         "login" : "Daniel600",
         "node_id" : "MDQ6VXNlcjM0ODM4MjA3",
         "organizations_url" : "https://api.github.com/users/Daniel600/orgs",
         "received_events_url" : "https://api.github.com/users/Daniel600/received_events",
         "repos_url" : "https://api.github.com/users/Daniel600/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Daniel600/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Daniel600/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Daniel600"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> by simply adding first seen safe rule - ie a trx can be replaced but needs to include the original outputs.\r\n\r\nIncluding the original outputs is not part of BIP 125. It's not realistic to expect an entirely new complex RBF proposal, especially one that's not incentive compatible for miners. It's also something for the mailinglist.\r\n\r\n> We have not seen any impact of full RBF on double spend rates for our trxs\r\n\r\nThis does seem relevant. But it can be interpreted both ways: it could also mean your customers have no intention to double-spend you even though it became technically easier. \r\n\r\nOpportunity makes a thief, but this default won't change the opportunity by much. A thief needs software that will perform a double-spend without the RBF flag. Anyone making such software will know they need to either use [preferential peering](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-June/021729.html) or publish it via a block explorer that supports full RBF.",
      "created_at" : "2023-07-31T10:45:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1658120425",
      "id" : 1658120425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i1Ojp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658120425/reactions"
      },
      "updated_at" : "2023-07-31T10:45:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658120425",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "\r\n> > We have not seen any impact of full RBF on double spend rates for our trxs\r\n> \r\n> This does seem relevant. But it can be interpreted both ways: it could also mean your customers have no intention to double-spend you even though it became technically easier.\r\n> \r\n> Opportunity makes a thief, but this default won't change the opportunity by much. A thief needs software that will perform a double-spend without the RBF flag. Anyone making such software will know they need to either use [preferential peering]or publish it via a block explorer that supports full RBF.\r\n\r\nWith FullRBF the risk factor increases significantly - currently 0-conf acceptance relies heavily on first seen rule, reasonable fee, and no ongoing attempt at a double spend - with FullRBF significantly adopted by miners non of those hold anymore and an attacker can double spend at any stage pre block inclusion \r\n",
      "created_at" : "2023-07-31T11:16:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1658170208",
      "id" : 1658170208,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i1atg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658170208/reactions"
      },
      "updated_at" : "2023-07-31T11:16:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658170208",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/34838207?v=4",
         "events_url" : "https://api.github.com/users/Daniel600/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Daniel600/followers",
         "following_url" : "https://api.github.com/users/Daniel600/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Daniel600/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Daniel600",
         "id" : 34838207,
         "login" : "Daniel600",
         "node_id" : "MDQ6VXNlcjM0ODM4MjA3",
         "organizations_url" : "https://api.github.com/users/Daniel600/orgs",
         "received_events_url" : "https://api.github.com/users/Daniel600/received_events",
         "repos_url" : "https://api.github.com/users/Daniel600/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Daniel600/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Daniel600/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Daniel600"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> with FullRBF significantly adopted by miners\r\n\r\nIf @petertodd's analysis above is correct, that's already the case and this PR won't change that.",
      "created_at" : "2023-07-31T11:31:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1658191272",
      "id" : 1658191272,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i1f2o",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658191272/reactions"
      },
      "updated_at" : "2023-07-31T11:31:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658191272",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> This would unnecessarily and extremely negatively impact merchants and users who choose to accept 0-conf while using mitigation tools like GAP600. This negative impact could be avoided by simply adding first seen safe rule - ie a trx can be replaced but needs to include the original outputs.\r\n> \r\n> At GAP600 we continue to see strong use of our service for BTC we have seen circa 350k unique trx hash per month (over the last 3 months) requested to our platform. Our clients include - Coinpayments, Coinspaid and Changelly. Given the period of Mempool being full we have seen an increase a fee required in order to be approved by our platform for trx. This is not an insignificant use case and one which can be easily maintained as is.\r\n> \r\n> We have provided further statistics in the past and direct feedback from Coinspaid CEO with in the mailing list see here - https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021240.html\r\n> \r\n> We have not seen any impact of full RBF on double spend rates for our trxs which seems to put in large question the stated figure of 40% adoption by miners at such a rate of adoption we would expect to see a large increase in double spends. We expect once this setting become default this will greatly change the adoption of this service.\r\n> \r\n> GAP600 model targets not to get it wrong and as such we are very sensitive to any double spend which we get wrong in predicting as we reimburse our clients. GAP600 is not a payment processor rather services payment processors, merchants and non custodial liquidity providers which service non-custodial wallets\r\n\r\n\"first seen\" isn't ever safe, this is why bitcoin needs a blockchain in the first place. Relying on heuristics to make assumptions about safety outside of that perverts incentives horribly, some business being able to afford to purchase/generate the relevant data giving them an advantage over those just waiting for confirmations and using bitcoin itself for which there is as low a barrier of entry as possible.\r\n\r\nBitcoin is not obligated to follow a development path that maintains your business model and indeed would do well to make it unviable just as it would chain-anal companies.",
      "created_at" : "2023-07-31T15:00:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1658548723",
      "id" : 1658548723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i23Hz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658548723/reactions"
      },
      "updated_at" : "2023-07-31T15:00:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658548723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/45926711?v=4",
         "events_url" : "https://api.github.com/users/BitcoinMechanic/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinMechanic/followers",
         "following_url" : "https://api.github.com/users/BitcoinMechanic/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinMechanic/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinMechanic",
         "id" : 45926711,
         "login" : "BitcoinMechanic",
         "node_id" : "MDQ6VXNlcjQ1OTI2NzEx",
         "organizations_url" : "https://api.github.com/users/BitcoinMechanic/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinMechanic/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinMechanic/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinMechanic/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinMechanic/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinMechanic"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "When I first read this, I did not understand what those links to https://mempool.space/ were, as I did not know, but they seem to have a new RBF feature. This RBF information then seems to go after a few days. Therefore I have provided some screenshots below so people can see the feature and it wont disappear. It shows that the transactions were replaced and that there was no RBF flag. I hope this helps.\r\n\r\n**Antpool**\r\n![antpool](https://github.com/bitcoin/bitcoin/assets/42411042/88d1607a-307a-47f1-ae4c-ad5d1ebac1a9)\r\n\r\n**Binance Pool**\r\n![BINANCE POOL](https://github.com/bitcoin/bitcoin/assets/42411042/6110ddb8-63e4-4d08-8ae2-79c90a6683ad)\r\n",
      "created_at" : "2023-07-31T15:11:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1658569312",
      "id" : 1658569312,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i28Jg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658569312/reactions"
      },
      "updated_at" : "2023-07-31T15:12:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658569312",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/42411042?v=4",
         "events_url" : "https://api.github.com/users/jonathanbier/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonathanbier/followers",
         "following_url" : "https://api.github.com/users/jonathanbier/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonathanbier/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonathanbier",
         "id" : 42411042,
         "login" : "jonathanbier",
         "node_id" : "MDQ6VXNlcjQyNDExMDQy",
         "organizations_url" : "https://api.github.com/users/jonathanbier/orgs",
         "received_events_url" : "https://api.github.com/users/jonathanbier/received_events",
         "repos_url" : "https://api.github.com/users/jonathanbier/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonathanbier/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonathanbier/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonathanbier"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> 2\\. Users who do care and want full-RBF to be **off** and rely on defaults not changing.\r\n\r\nUsers should check release notes before upgrading Bitcoin node. Various defaults changes from time to time, this won't be the first time.",
      "created_at" : "2023-07-31T17:35:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1658851397",
      "id" : 1658851397,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i4BBF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658851397/reactions"
      },
      "updated_at" : "2023-07-31T17:35:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1658851397",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Reposting my reply to this identical message on the mailing list:\r\n\r\nOn Mon, Jul 31, 2023 at 03:13:19AM -0700, Daniel Lipshitz wrote:\r\n> This would unnecessarily and extremely negatively impact merchants and users who choose to accept 0-conf while using mitigation tools like GAP600. This negative impact could be avoided by simply adding first seen safe rule - ie a trx can be replaced but needs to include the original outputs.\r\n> \r\n> At GAP600 we continue to see strong use of our service for BTC we have seen circa 350k unique trx hash per month (over the last 3 months) requested to our platform. Our clients include - Coinpayments, Coinspaid and Changelly.\r\n\r\nI checked, and Coinpayments and Coinspaid are both merchant processors. I could\r\nnot find any example of actual merchants using their platform accepting\r\nunconfirmed payments. I also could not find any documentation on their websites\r\nindicating unconfirmed transaction acceptance.\r\n\r\nAs for Changelly, their website says right on the front that \"With an average\r\ntransaction speed of 5â40 minutes, we ensure you can swiftly take advantage of\r\nmarket opportunities.\" Obivously, 5 minutes is not an unconfirmed payment.\r\n\r\nAdditionally, I verified myself by doing test transactions with BIP125 disabled\r\nand an adequate fee: unconfirmed payments are not accepted by Changelly. As\r\ntheir exchange flow clearly says \"Once BTC is confirmed in the blockchain,\r\nweâll start exchanging it to <coin>.\"\r\n\r\nYou need to provide an genuine example of an actual merchant who accepts\r\nunconfirmed transactions as payment, and actually relies on first-seen\r\nbehavior.\r\n\r\n> We have not seen any impact of full RBF on double spend rates for our trxs\r\n\r\nBased on the above findings, this appears to be because you don't actually have\r\nany clients who rely on unconfirmed payments.\r\n",
      "created_at" : "2023-08-01T15:05:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1660512698",
      "id" : 1660512698,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i-Wm6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660512698/reactions"
      },
      "updated_at" : "2023-08-01T15:05:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660512698",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "On Sun, Jul 30, 2023 at 02:18:25PM -0700, Matt Corallo wrote:\n> > This is helpful for second layer protocols, including Lightning.\n> \n> I'm not aware of any second layer protocols that are improved by having full-rbf more broadly available.\n\n@ariard provided an example above.\n\nSee also: https://petertodd.org/2023/fullrbf-multiparty-protocols\n",
      "created_at" : "2023-08-01T15:10:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1660520660",
      "id" : 1660520660,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585i-YjU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660520660/reactions"
      },
      "updated_at" : "2023-08-01T15:10:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660520660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-08-01T20:03:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1660999249",
      "id" : 1660999249,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jANZR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660999249/reactions"
      },
      "updated_at" : "2023-08-01T20:03:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660999249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Your research is not thoroughÂ and reaches an incorrect conclusion.\r\nAs stated many times - we service payment processors and some merchants directlyÂ  - Coinspaid services multiple merchants and process a significantÂ amount of BTC they are a well known and active in the space - as I provided back in December 2022 a email from Max the CEO of Coinspaid confirming their use of 0-conf as well as providing there cluster addresses to validate there deposit flows see here again -Â https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021239.html - if this is not sufficientÂ then please email support@coinspaid.com and ask to be connected to Max or someone from the team who can confirm Conspaid is clients of GAP600. Max also at the time was open to do a call, I can check again now and see if this is still the case and connect you.\r\nThat on its own is enough of a sample to validate our statistics.\r\nI haveÂ also spokenÂ to Changelly earlier today and they offered to email pro @ changelly.com and they will be able to confirm GAP600 as a service provider. Also please send me the 1 trx hash you tested and I can see if it was queried to our system and if so offer some info as to why it wasnt approved. Also if you can elaborateÂ how you integrated with Changelly - I can check with them if that area is not integrated with GAP600.Â \r\nAs the architect of such a major change to the status of 0-conf transactionsÂ I would think you would welcome the opportunityÂ to speak to business and users who actual activities will be impacted by full RBF becoming dominant.\r\nAre you able to provide the same i.e emails and contacts of people at theÂ miningÂ pools who can confirm they have adopted FULL RBF ?\r\n\r\n\r\n> Reposting my reply to this identical message on the mailing list:\r\n> On Mon, Jul 31, 2023 at 03:13:19AM -0700, Daniel Lipshitz wrote: This would unnecessarily and extremely negatively impact merchants and users who choose to accept 0-conf while using mitigation tools like GAP600. This negative impact could be avoided by simply adding first seen safe rule - ie a trx can be replaced but needs to include the original outputs. At GAP600 we continue to see strong use of our service for BTC we have seen circa 350k unique trx hash per month (over the last 3 months) requested to our platform. Our clients include - Coinpayments, Coinspaid and Changelly.\r\n> I checked, and Coinpayments and Coinspaid are both merchant processors. I could not find any example of actual merchants using their platform accepting unconfirmed payments. I also could not find any documentation on their websites indicating unconfirmed transaction acceptance. As for Changelly, their website says right on the front that \"With an average transaction speed of 5â40 minutes, we ensure you can swiftly take advantage of market opportunities.\" Obivously, 5 minutes is not an unconfirmed payment. Additionally, I verified myself by doing test transactions with BIP125 disabled and an adequate fee: unconfirmed payments are not accepted by Changelly. As their exchange flow clearly says \"Once BTC is confirmed in the blockchain, weâll start exchanging it to <coin>.\" You need to provide an genuine example of an actual merchant who accepts unconfirmed transactions as payment, and actually relies on first-seen behavior.\r\n> We have not seen any impact of full RBF on double spend rates for our trxs\r\n> Based on the above findings, this appears to be because you don't actually have any clients who rely on unconfirmed payments.\r\n\r\n",
      "created_at" : "2023-08-01T22:28:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1661182837",
      "id" : 1661182837,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jA6N1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661182837/reactions"
      },
      "updated_at" : "2023-08-01T22:28:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661182837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/34838207?v=4",
         "events_url" : "https://api.github.com/users/Daniel600/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Daniel600/followers",
         "following_url" : "https://api.github.com/users/Daniel600/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Daniel600/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Daniel600",
         "id" : 34838207,
         "login" : "Daniel600",
         "node_id" : "MDQ6VXNlcjM0ODM4MjA3",
         "organizations_url" : "https://api.github.com/users/Daniel600/orgs",
         "received_events_url" : "https://api.github.com/users/Daniel600/received_events",
         "repos_url" : "https://api.github.com/users/Daniel600/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Daniel600/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Daniel600/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Daniel600"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "On Tue, Aug 01, 2023 at 03:28:31PM -0700, Daniel Lipshitz wrote:\n> Your research is not thoroughÂ and reaches an incorrect conclusion.\n> As stated many times - we service payment processors and some merchants directlyÂ  - Coinspaid services multiple merchants and process a significantÂ amount of BTC they are a well known and active in the space - as I provided back in December 2022 a email from Max the CEO of Coinspaid confirming their use of 0-conf as well as providing there cluster addresses to validate there deposit flows see here again -Â https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-December/021239.html - if this is not sufficientÂ then please email ***@***.*** and ask to be connected to Max or someone from the team who can confirm Conspaid is clients of GAP600. Max also at the time was open to do a call, I can check again now and see if this is still the case and connect you.\n> That on its own is enough of a sample to validate our statistics.\n> I haveÂ also spokenÂ to Changelly earlier today and they offered to email pro @ changelly.com and they will be able to confirm GAP600 as a service provider. Also please send me the 1 trx hash you tested and I can see if it was queried to our system and if so offer some info as to why it wasnt approved. Also if you can elaborateÂ how you integrated with Changelly - I can check with them if that area is not integrated with GAP600.Â \n> As the architect of such a major change to the status of 0-conf transactionsÂ I would think you would welcome the opportunityÂ to speak to business and users who actual activities will be impacted by full RBF becoming dominant.\n> Are you able to provide the same i.e emails and contacts of people at theÂ miningÂ pools who can confirm they have adopted FULL RBF ?\n\nFYI I replied to this on the mailing list. It's rather silly to duplicate this\nentire conversation both here and the bitcoin-dev mailing list.\n",
      "created_at" : "2023-08-02T01:29:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1661327327",
      "id" : 1661327327,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jBdff",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661327327/reactions"
      },
      "updated_at" : "2023-08-02T01:29:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661327327",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "A clear and open method to research the adoption of full RBF would look something like this and could easily be done - \r\n\r\nCreate 20 trxs (larger numbers better) in between every block and after 30 seconds try replace them.\r\nRun this test for at least a few hours preferably more than 24 hours or even a few days.\r\nSee results of how many were replaced.\r\nIgnore trx results if trx are included in blocks before replace trxs are published.\r\nHave other Bitcoin Core developers independently implement and review the test results \r\n\r\nBased on a test like this or something similar it would be reliable to get to an assessment of the adoption of full RBF.",
      "created_at" : "2023-08-02T10:29:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1661960440",
      "id" : 1661960440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jD4D4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661960440/reactions"
      },
      "updated_at" : "2023-08-02T10:31:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1661960440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/34838207?v=4",
         "events_url" : "https://api.github.com/users/Daniel600/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Daniel600/followers",
         "following_url" : "https://api.github.com/users/Daniel600/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Daniel600/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Daniel600",
         "id" : 34838207,
         "login" : "Daniel600",
         "node_id" : "MDQ6VXNlcjM0ODM4MjA3",
         "organizations_url" : "https://api.github.com/users/Daniel600/orgs",
         "received_events_url" : "https://api.github.com/users/Daniel600/received_events",
         "repos_url" : "https://api.github.com/users/Daniel600/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Daniel600/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Daniel600/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Daniel600"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28132#discussion_r1282089319"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28132"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282089319"
         }
      },
      "author_association" : "NONE",
      "body" : "Might be better to add a comment above line 29 a la\r\n```\r\n# both nodes disable full-rbf to test BIP125 signaling\r\n```\r\n\r\nand then change the comment on line 38 to\r\n```\r\n# second node has default mempool limits\r\n```",
      "commit_id" : "5b5f03f5739d66969bacd3be1d0d6608a5f27a5a",
      "created_at" : "2023-08-02T15:40:42Z",
      "diff_hunk" : "@@ -28,14 +28,17 @@ def set_test_params(self):\n         self.num_nodes = 2\n         self.extra_args = [\n             [\n+                \"-mempoolfullrbf=0\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#discussion_r1282089319",
      "id" : 1282089319,
      "line" : 32,
      "node_id" : "PRRC_kwDOABII585MayFn",
      "original_commit_id" : "024403e95d76f824c58851d84468c693bf0cbeae",
      "original_line" : 32,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/feature_rbf.py",
      "position" : 7,
      "pull_request_review_id" : 1559299935,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28132",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282089319/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-02T15:43:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1282089319",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/90655836?v=4",
         "events_url" : "https://api.github.com/users/brandonblack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brandonblack/followers",
         "following_url" : "https://api.github.com/users/brandonblack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brandonblack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brandonblack",
         "id" : 90655836,
         "login" : "brandonblack",
         "node_id" : "MDQ6VXNlcjkwNjU1ODM2",
         "organizations_url" : "https://api.github.com/users/brandonblack/orgs",
         "received_events_url" : "https://api.github.com/users/brandonblack/received_events",
         "repos_url" : "https://api.github.com/users/brandonblack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brandonblack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brandonblack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brandonblack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28132#discussion_r1283105646"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28132"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283105646"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks! Good idea; fixed.",
      "commit_id" : "5b5f03f5739d66969bacd3be1d0d6608a5f27a5a",
      "created_at" : "2023-08-03T12:04:07Z",
      "diff_hunk" : "@@ -28,14 +28,17 @@ def set_test_params(self):\n         self.num_nodes = 2\n         self.extra_args = [\n             [\n+                \"-mempoolfullrbf=0\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#discussion_r1283105646",
      "id" : 1283105646,
      "in_reply_to_id" : 1282089319,
      "line" : 32,
      "node_id" : "PRRC_kwDOABII585MeqNu",
      "original_commit_id" : "024403e95d76f824c58851d84468c693bf0cbeae",
      "original_line" : 32,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "test/functional/feature_rbf.py",
      "position" : 7,
      "pull_request_review_id" : 1560944869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28132",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283105646/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-03T12:04:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283105646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "What's the root cause that makes a transaction need Replace-by-fee in the first place? Can we fix that?\r\n\r\n\r\nRBF is a feature for consenting adults. If you donât want to participate in it, you donât need to. \r\nYour passion for it isnât a reason to force others into using it in transactions by default that donât involve you.\r\n\r\n",
      "created_at" : "2023-08-03T17:06:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1664336561",
      "id" : 1664336561,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jM8Kx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1664336561/reactions"
      },
      "updated_at" : "2023-08-03T17:06:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1664336561",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/80486540?v=4",
         "events_url" : "https://api.github.com/users/YellowRoseCx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/YellowRoseCx/followers",
         "following_url" : "https://api.github.com/users/YellowRoseCx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/YellowRoseCx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/YellowRoseCx",
         "id" : 80486540,
         "login" : "YellowRoseCx",
         "node_id" : "MDQ6VXNlcjgwNDg2NTQw",
         "organizations_url" : "https://api.github.com/users/YellowRoseCx/orgs",
         "received_events_url" : "https://api.github.com/users/YellowRoseCx/received_events",
         "repos_url" : "https://api.github.com/users/YellowRoseCx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/YellowRoseCx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/YellowRoseCx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/YellowRoseCx"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I'm not aware of any second layer protocols that are improved by having full-rbf more broadly available.\r\n\r\n@TheBlueMatt See https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-May/003033.html and https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-May/003920.html",
      "created_at" : "2023-08-03T23:14:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1664750667",
      "id" : 1664750667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jOhRL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1664750667/reactions"
      },
      "updated_at" : "2023-08-03T23:14:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1664750667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "With having full-rbf by default privacy would be increased for transactions created by bitcoin core, this is very important pull request.\r\n\r\nMaybe that's the thing we don't like in this proposal?\r\n\r\n\r\nAnyone claiming they are accepting 0-conf bitcoin transaction over internet is spreading FUD and that having full-rbf by default does anything bad to their non-existent payment system.\r\n\r\n\r\n\r\n",
      "created_at" : "2023-08-04T16:41:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1665898833",
      "id" : 1665898833,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jS5lR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 1,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1665898833/reactions"
      },
      "updated_at" : "2023-08-04T16:41:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1665898833",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/97235900?v=4",
         "events_url" : "https://api.github.com/users/MajesticBank/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MajesticBank/followers",
         "following_url" : "https://api.github.com/users/MajesticBank/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MajesticBank/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MajesticBank",
         "id" : 97235900,
         "login" : "MajesticBank",
         "node_id" : "U_kgDOBcuzvA",
         "organizations_url" : "https://api.github.com/users/MajesticBank/orgs",
         "received_events_url" : "https://api.github.com/users/MajesticBank/received_events",
         "repos_url" : "https://api.github.com/users/MajesticBank/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MajesticBank/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MajesticBank/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MajesticBank"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> With having full-rbf by default privacy would be increased for transactions created by bitcoin core, this is very important pull request.\r\n> \r\n> Maybe that's the thing we don't like in this proposal?\r\n> \r\n> Anyone claiming they are accepting 0-conf bitcoin transaction over internet is spreading FUD and that having full-rbf by default does anything bad to their non-existent payment system.\r\n\r\nHow long do you want Bitcoin users to stand waiting in a store before they can leave with their groceries?\r\n\r\nTo quote the whitepaper:\r\n\r\n> In this paper, we propose a solution to the double-spending problem using a peer-to-peer distributed timestamp server to generate **computational proof of the chronological order of transactions**. The system is secure as long as honest nodes collectively control more CPU power than any cooperating group of attacker nodes.\r\n\r\nMaking miners ignore the âchronological order of transactionsâ by default converts them all into dishonest attackers, which would break the system completely.\r\n\r\n\"If a miner sees a broadcast double spend of a confirmed transaction that would result in fees higher than the expected cost of forking the chain, miners implementing the RBF policy completely would then start work on forking the chain from that point. And as they would all do it simultaneously, this would then incentivise broadcasts of yet more double spends against already confirmed transactions that have only tiny fee increases â but as miners are working on a rewrite of the timeline anyway, it costs them nothing to go back and include other double spends as well.\" -Mike Hearn\r\n\r\n\r\n\"It's OK to accept 0-conf transactions if you can reverse whatever it is you're doing for the buyer, or if you know the buyer's identity and can therefore legally attack them for fraud if they reverse the transaction. \" - Theymos\r\n\r\n",
      "created_at" : "2023-08-04T17:08:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1665933394",
      "id" : 1665933394,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jTCBS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1665933394/reactions"
      },
      "updated_at" : "2023-08-04T17:08:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1665933394",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/80486540?v=4",
         "events_url" : "https://api.github.com/users/YellowRoseCx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/YellowRoseCx/followers",
         "following_url" : "https://api.github.com/users/YellowRoseCx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/YellowRoseCx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/YellowRoseCx",
         "id" : 80486540,
         "login" : "YellowRoseCx",
         "node_id" : "MDQ6VXNlcjgwNDg2NTQw",
         "organizations_url" : "https://api.github.com/users/YellowRoseCx/orgs",
         "received_events_url" : "https://api.github.com/users/YellowRoseCx/received_events",
         "repos_url" : "https://api.github.com/users/YellowRoseCx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/YellowRoseCx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/YellowRoseCx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/YellowRoseCx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> With having full-rbf by default privacy would be increased for transactions created by bitcoin core, this is very important pull request.\r\n\r\nThat is correct. The BIP125 flag is a way to distinguish transactions from different wallets, and Chainanalysis certainly makes use of this. Deployment of Full-RBF would eliminate the need for any wallet to set BIP125 flags, allowing all wallets to eventually transition to having identical characteristics.\r\n\r\n> Anyone claiming they are accepting 0-conf bitcoin transaction over internet is spreading FUD and that having full-rbf by default does anything bad to their non-existent payment system.\r\n\r\nFYI I still have not been able to find a single example of an online service that actually accepts unconfirmed transactions in exchange for something of value, relying on first-seen behavior.\r\n\r\nIf someone knows of such a service, they should reply in this thread with the URL.",
      "created_at" : "2023-08-04T17:14:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1665939229",
      "id" : 1665939229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jTDcd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1665939229/reactions"
      },
      "updated_at" : "2023-08-04T17:14:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1665939229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> How long do you want Bitcoin users to stand waiting in a store before they can leave with their groceries?\r\n\r\nWhy is there no mention of the Lightning Network in this thread? Users should use the Lightning Network for instant payments which are also cheaper than onchain.\r\n\r\n> To quote the whitepaper:\r\n>\r\n>> In this paper, we propose a solution to the double-spending problem using a peer-to-peer distributed timestamp server to generate computational proof of the chronological order of transactions. The system is secure as long as honest nodes collectively control more CPU power than any cooperating group of attacker nodes.\r\n\r\n\"Computational proof of the chronological order of transaction\" just means that computational proof is required to **generate consensus** which transactions happened before others hence the term timechain. This is enough to solve the double-spend problem. Everyone just needs to agree in which order transactions happened. It does not mean that the first-seen transaction has to be included in the blockchain.\r\n\r\n> \"If a miner sees a broadcast double spend of a confirmed transaction that would result in fees higher than the expected cost of forking the chain, miners implementing the RBF policy completely would then start work on forking the chain from that point. And as they would all do it simultaneously, this would then incentivise broadcasts of yet more double spends against already confirmed transactions that have only tiny fee increases â but as miners are working on a rewrite of the timeline anyway, it costs them nothing to go back and include other double spends as well.\" -Mike Hearn\r\n\r\nEvery miner would mine their **own block** simultaneously in that case. So every miner would be on their own. Hence it makes more sense to keep mining the longest chain since that's the only way to generate consensus. If you fork the chain because you think that makes you more money, the same reasoning applies to other miners. Why would they accept your chain? They would just also mine their own chain.\r\n\r\nAt the end, bitcoin wouldn't work like this so any miner which attempts this would quickly realize they are actually losing money, not making more money.",
      "created_at" : "2023-08-04T19:53:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1666104716",
      "id" : 1666104716,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jTr2M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666104716/reactions"
      },
      "updated_at" : "2023-08-04T19:53:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666104716",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/27162016?v=4",
         "events_url" : "https://api.github.com/users/ekzyis/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ekzyis/followers",
         "following_url" : "https://api.github.com/users/ekzyis/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ekzyis/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ekzyis",
         "id" : 27162016,
         "login" : "ekzyis",
         "node_id" : "MDQ6VXNlcjI3MTYyMDE2",
         "organizations_url" : "https://api.github.com/users/ekzyis/orgs",
         "received_events_url" : "https://api.github.com/users/ekzyis/received_events",
         "repos_url" : "https://api.github.com/users/ekzyis/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ekzyis/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ekzyis/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ekzyis"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Those are good points but as for the first, my honest answer is because I\r\nthink it's complicated to use unless you use centralized or trust based\r\nservices which is completely against the Bitcoin ethos imo. Even though LN\r\nuses the same currency/coin(bitcoin) as the Bitcoin Network, using it is\r\nnot actually using Bitcoin unless you're opening or closing channel. I've\r\nbeen using bitcoin for over a decade and imo unless I can look up my\r\ntransaction on the Bitcoin blockchain connected to my BTC node, then I\r\ndon't consider it a Bitcoin transaction. It's like using a wrapped bitcoin\r\non a different network.\r\n\r\nI had asked this question a little further up, but instead of focusing on\r\ntransaction recovery from the mempool, why not focus efforts on reducing\r\nthe need for Replace by Fee to begin with? If the root cause of what's\r\ncausing some transactions to need to be replaced is addressed, then\r\nwouldn't that be better long-term?\r\n\r\n\r\n\r\n\r\nOn Fri, Aug 4, 2023, 2:53 PM ekzyis ***@***.***> wrote:\r\n\r\n> How long do you want Bitcoin users to stand waiting in a store before they\r\n> can leave with their groceries?\r\n>\r\n> Why is there no mention of the Lightning Network in this thread? Users\r\n> should use the Lightning Network for instant payments which are also\r\n> cheaper than onchain.\r\n>\r\n> To quote the whitepaper:\r\n>\r\n> In this paper, we propose a solution to the double-spending problem using\r\n> a peer-to-peer distributed timestamp server to generate computational proof\r\n> of the chronological order of transactions. The system is secure as long as\r\n> honest nodes collectively control more CPU power than any cooperating group\r\n> of attacker nodes.\r\n>\r\n> \"Computational proof of the chronological order of transaction\" just means\r\n> that computational proof is required to *generate consensus* which\r\n> transactions happened before others hence the term timechain. This is\r\n> enough to solve the double-spend problem. Everyone just needs to agree in\r\n> which order transactions happened. It does not mean that the first-seen\r\n> transaction has to be included in the blockchain.\r\n>\r\n> \"If a miner sees a broadcast double spend of a confirmed transaction that\r\n> would result in fees higher than the expected cost of forking the chain,\r\n> miners implementing the RBF policy completely would then start work on\r\n> forking the chain from that point. And as they would all do it\r\n> simultaneously, this would then incentivise broadcasts of yet more double\r\n> spends against already confirmed transactions that have only tiny fee\r\n> increases â but as miners are working on a rewrite of the timeline anyway,\r\n> it costs them nothing to go back and include other double spends as well.\"\r\n> -Mike Hearn\r\n>\r\n> Every miner would mine their *own block* simultaneously in that case. So\r\n> every miner would be on their own. Hence it makes more sense to keep mining\r\n> the longest chain since that's the only way to generate consensus. If you\r\n> fork the chain because you think that makes you more money, the same\r\n> reasoning applies to other miners. Why would they accept your chain? They\r\n> would just also mine their own chain.\r\n>\r\n> At the end, bitcoin wouldn't work like this so any miner which attempts\r\n> this would quickly realize they are actually losing money, not making more\r\n> money.\r\n>\r\n> â\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1666104716>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/ATGCBDCFBMWWKIFYWRJ47ITXTVHLLANCNFSM6AAAAAA2US354A>\r\n> .\r\n> You are receiving this because you commented.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "created_at" : "2023-08-05T03:23:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1666370902",
      "id" : 1666370902,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jUs1W",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666370902/reactions"
      },
      "updated_at" : "2023-08-05T03:23:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666370902",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/80486540?v=4",
         "events_url" : "https://api.github.com/users/YellowRoseCx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/YellowRoseCx/followers",
         "following_url" : "https://api.github.com/users/YellowRoseCx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/YellowRoseCx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/YellowRoseCx",
         "id" : 80486540,
         "login" : "YellowRoseCx",
         "node_id" : "MDQ6VXNlcjgwNDg2NTQw",
         "organizations_url" : "https://api.github.com/users/YellowRoseCx/orgs",
         "received_events_url" : "https://api.github.com/users/YellowRoseCx/received_events",
         "repos_url" : "https://api.github.com/users/YellowRoseCx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/YellowRoseCx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/YellowRoseCx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/YellowRoseCx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> why not focus efforts on reducing the need for Replace by Fee to begin with?\r\n\r\nAs I  and others have explained above in the linked resources, eg https://petertodd.org/2023/fullrbf-multiparty-protocols and https://petertodd.org/2023/why-you-should-run-mempoolfullrbf, it is impossible to eliminate the need for transaction replacement.",
      "created_at" : "2023-08-05T13:58:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1666513527",
      "id" : 1666513527,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jVPp3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666513527/reactions"
      },
      "updated_at" : "2023-08-05T13:58:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666513527",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> > why not focus efforts on reducing the need for Replace by Fee to begin with?\r\n> \r\n> As I and others have explained above in the linked resources, eg https://petertodd.org/2023/fullrbf-multiparty-protocols and https://petertodd.org/2023/why-you-should-run-mempoolfullrbf, it is impossible to eliminate the need for transaction replacement.\r\n\r\nAfter reading your blog posts and thinking about it for the day, I've got some questions about it if you don't mind. \r\nOne of the issues you write about is when a CoinJoin input is spent before the round is complete causing nodes to see the non-coinjoin transaction first. When this happens, why wouldn't nodes then reject that second transaction with spent inputs instead of letting it sit in the mempool? Or if nodes can do this, remove the spent input and associated output from the transaction so the rest of the unspent inputs go through as fast as the CoinJoin multiparty Tx fee lets them. Has there ever been discussion of using cryptographic proofs of transactions sent between nodes/wallets to determine if a coin input has already been submitted to the blockchain and using that to reject \"double-spends\" of that coin(unless the transactions are marked for with ability to be replaced)? I'd think that would stop the issue of double spent coins in CoinJoins/multiparty transactions causing it to be stuck in the mempool for a long time",
      "created_at" : "2023-08-06T05:28:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1666725276",
      "id" : 1666725276,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jWDWc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666725276/reactions"
      },
      "updated_at" : "2023-08-06T05:28:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666725276",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/80486540?v=4",
         "events_url" : "https://api.github.com/users/YellowRoseCx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/YellowRoseCx/followers",
         "following_url" : "https://api.github.com/users/YellowRoseCx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/YellowRoseCx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/YellowRoseCx",
         "id" : 80486540,
         "login" : "YellowRoseCx",
         "node_id" : "MDQ6VXNlcjgwNDg2NTQw",
         "organizations_url" : "https://api.github.com/users/YellowRoseCx/orgs",
         "received_events_url" : "https://api.github.com/users/YellowRoseCx/received_events",
         "repos_url" : "https://api.github.com/users/YellowRoseCx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/YellowRoseCx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/YellowRoseCx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/YellowRoseCx"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK\r\n\r\nClearly, some are going to be adversely affected by this PR if it gets merged. \r\n\r\nBitcoin Core does not belong to any single group. It should not be used to push personal agendas.\r\n\r\nLet the node runners decide. Please don't assume they don't know what they're doing and push what _you_ think is best onto others.\r\n\r\n",
      "created_at" : "2023-08-07T07:56:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1667376865",
      "id" : 1667376865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jYibh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667376865/reactions"
      },
      "updated_at" : "2023-08-07T07:56:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667376865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/121429386?v=4",
         "events_url" : "https://api.github.com/users/viresinnumeris-1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/viresinnumeris-1/followers",
         "following_url" : "https://api.github.com/users/viresinnumeris-1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/viresinnumeris-1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/viresinnumeris-1",
         "id" : 121429386,
         "login" : "viresinnumeris-1",
         "node_id" : "U_kgDOBzzdig",
         "organizations_url" : "https://api.github.com/users/viresinnumeris-1/orgs",
         "received_events_url" : "https://api.github.com/users/viresinnumeris-1/received_events",
         "repos_url" : "https://api.github.com/users/viresinnumeris-1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/viresinnumeris-1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/viresinnumeris-1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/viresinnumeris-1"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > As I and others have explained above in the linked resources, eg https://petertodd.org/2023/fullrbf-multiparty-protocols and https://petertodd.org/2023/why-you-should-run-mempoolfullrbf, it is impossible to eliminate the need for transaction replacement.\r\n> \r\n> After reading your blog posts and thinking about it for the day, I've got some questions about it if you don't mind. One of the issues you write about is when a CoinJoin input is spent before the round is complete causing nodes to see the non-coinjoin transaction first. When this happens, why wouldn't nodes then reject that second transaction with spent inputs instead of letting it sit in the mempool?\r\n\r\nIn a decentralized system there is no way to reliably know which transaction is in fact the second.\r\n\r\n> Or if nodes can do this, remove the spent input and associated output from the transaction so the rest of the unspent inputs go through as fast as the CoinJoin multiparty Tx fee lets them. Has there ever been discussion of using cryptographic proofs of transactions sent between nodes/wallets to determine if a coin input has already been submitted to the blockchain and using that to reject \"double-spends\" of that coin(unless the transactions are marked for with ability to be replaced)? I'd think that would stop the issue of double spent coins in CoinJoins/multiparty transactions causing it to be stuck in the mempool for a long time\r\n\r\nLook, given that no-one can provide actual examples of services accepting unconfirmed transactions, there is no reason to waste engineering effort for a totally broken, insecure, \"feature\" that essentially no-one is actually using. Especially when it causes harm to other use-cases like coinjoins that are very widely used. It's a fact that double-spending unconfirmed transactions is very easy. That's not going to change.",
      "created_at" : "2023-08-08T10:21:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1669341194",
      "id" : 1669341194,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jgCAK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1669341194/reactions"
      },
      "updated_at" : "2023-08-08T10:21:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1669341194",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> NACK\r\n> \r\n> Clearly, some are going to be adversely affected by this PR if it gets merged.\r\n\r\nCitation needed.\r\n\r\nYou need to provide actual examples of services that are going to be negatively affected. Simply claiming that is not enough. No-one has provided such examples in this pull-req or on the bitcoin-dev mailing list.",
      "created_at" : "2023-08-08T10:22:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1669342850",
      "id" : 1669342850,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jgCaC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1669342850/reactions"
      },
      "updated_at" : "2023-08-08T10:22:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1669342850",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "For accuracy purposes GAP600 supports a range of clients  who use 0-conf for their end users in a range of applications - including gaming/gambling, instant crypto swops, and Forex. All industries which take their privacy very seriously. GAP600 has provided email quotes and root addresses (here and in the mailing list) in order to validate this claim for this signifiant market.\r\n\r\nYou have accused GAP600 and myself of outright lying, based on your perceived understanding of how GAP600 should run its business, and based on your assumed understanding of how our clients should choose to share their data (in public forums which are not known for civil discourse or action). That is your prerogative.\r\n\r\nI have asked some of our clients to share direct feedback, up to their comfort level. I am not sure if they will choose to do so. \r\n\r\nYour mistake here, is the mistake of all central planners who assume they are able to understand and plan the market. This proposal will result in a major protocol change as to how Bitcoin has always run since genesis, and a major negative impact on a market sector which actually uses Bitcoin for commerce.\r\n\r\nWith this market impact being waved away based on your assumptions.\r\n\r\n> > NACK\r\n> > Clearly, some are going to be adversely affected by this PR if it gets merged.\r\n> \r\n> Citation needed.\r\n> \r\n> You need to provide actual examples of services that are going to be negatively affected. Simply claiming that is not enough. No-one has provided such examples in this pull-req or on the bitcoin-dev mailing list.\r\n\r\n",
      "created_at" : "2023-08-08T12:25:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1669514712",
      "id" : 1669514712,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jgsXY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1669514712/reactions"
      },
      "updated_at" : "2023-08-08T12:25:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1669514712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/34838207?v=4",
         "events_url" : "https://api.github.com/users/Daniel600/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Daniel600/followers",
         "following_url" : "https://api.github.com/users/Daniel600/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Daniel600/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Daniel600",
         "id" : 34838207,
         "login" : "Daniel600",
         "node_id" : "MDQ6VXNlcjM0ODM4MjA3",
         "organizations_url" : "https://api.github.com/users/Daniel600/orgs",
         "received_events_url" : "https://api.github.com/users/Daniel600/received_events",
         "repos_url" : "https://api.github.com/users/Daniel600/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Daniel600/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Daniel600/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Daniel600"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "#1 At this point I will assume Daniel600 is not just spreading lies but obviously pressured / paid to promote lower privacy on bitcoin blockchain. \r\n\r\nThere is no service on internet that accept 0-conf bitcoin transaction, end. \r\n\r\nI have 10 years experience in this industry and running crypto-instant swap exchange for 2+ years https://majesticbank.sc/\r\n\r\nMade over 500,000+ transactions using Coinpayments, Coinspaid and Changelly + fixedfloat, changenow and many more instant-swap sites, no service ever accepted 0-conf payments, his claims are so much full of FUD, it's unbearable. \r\n\r\nMaybe there is a different reason he doesn't like this, so better be honest man, because this is non-sense. \r\n\r\n#2  Pseudonymity (at first was anonymity)  for bitcoin is a lie. \r\n\r\nYour addresses might not interact on blockchain at all, but the software, wallet you use to make them can tell a lot about you and link them together. Version of transaction, which address type are you using, your average(usual) fee and in this case LockTime. \r\n\r\nHaving so many address type is obvious bummer for privacy, which we can't affect that but obviously locktime is something we can do about. \r\n\r\n(not considering pool thing as I don't deeply )\r\n\r\n\r\n#3 Users can't make decision on their own, when they don't understand technology and blockchain, if they understood what are we discussing here they would definitely want rbf by default.\r\n\r\nIt's more comfortable for them, so they can later increase fee, specially when bitcoin congestion happens every few days.\r\n\r\nLike it happened today, better bitcoin-core picking of estimate fee to follow and services should update to automatically update to higher fee in case end-user is waiting more then hour. \r\n\r\nBitcoin is coin that's widely and this is improvement not a feature.\r\n\r\n",
      "created_at" : "2023-08-08T16:43:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1669963434",
      "id" : 1669963434,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jiZ6q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 1,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1669963434/reactions"
      },
      "updated_at" : "2023-08-08T16:43:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1669963434",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/97235900?v=4",
         "events_url" : "https://api.github.com/users/MajesticBank/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MajesticBank/followers",
         "following_url" : "https://api.github.com/users/MajesticBank/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MajesticBank/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MajesticBank",
         "id" : 97235900,
         "login" : "MajesticBank",
         "node_id" : "U_kgDOBcuzvA",
         "organizations_url" : "https://api.github.com/users/MajesticBank/orgs",
         "received_events_url" : "https://api.github.com/users/MajesticBank/received_events",
         "repos_url" : "https://api.github.com/users/MajesticBank/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MajesticBank/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MajesticBank/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MajesticBank"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "You'd likely have to go back to 2016 or before , when RBF wasn't added, to find the lists of merchants who accepted 0-conf transactions for smaller IRL transactions. A lot of merchants stopped accepting 0- conf when it was made easier to fraudulently cancel a transaction which has overall likely slowed down IRL merchant adoption and use, if not reversed it.\r\n\r\n\r\n\r\n>Users can't make decision on their own\r\n\r\nare you serious? \"Bitcoin users are dumb and us devs know what's best for them\" is a real thought you believe?\r\n\r\n",
      "created_at" : "2023-08-08T18:04:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1670067500",
      "id" : 1670067500,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jizUs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1670067500/reactions"
      },
      "updated_at" : "2023-08-08T18:04:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1670067500",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/80486540?v=4",
         "events_url" : "https://api.github.com/users/YellowRoseCx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/YellowRoseCx/followers",
         "following_url" : "https://api.github.com/users/YellowRoseCx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/YellowRoseCx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/YellowRoseCx",
         "id" : 80486540,
         "login" : "YellowRoseCx",
         "node_id" : "MDQ6VXNlcjgwNDg2NTQw",
         "organizations_url" : "https://api.github.com/users/YellowRoseCx/orgs",
         "received_events_url" : "https://api.github.com/users/YellowRoseCx/received_events",
         "repos_url" : "https://api.github.com/users/YellowRoseCx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/YellowRoseCx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/YellowRoseCx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/YellowRoseCx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> All of those transactions are taken from my OpenTimestamps calendars. My OTS calendars bump fees repeatedly, increasing the feerate by 1sat/vb with each replacement, starting at approximately the minimum relay fee.\r\n\r\nYes, that is a pretty perfect mechanism if you want to create a false positive for \"full rbf\" when all you're actually triggering is eviction from the mempool due to a change in minfee. For nodes that don't run \"full rbf\", they'll see one of the early transactions, add it to the mempool, then ignore any replacements for a while, until their local minfee drops below the original transaction, at which point they'll accept the first replacement they see. Presuming that takes a while, that replacement will then have a high fee, and be included in their templates. That matches all the examples you gave.\r\n\r\nIt does not match some recent txs mined by antpool, though: eg [b4a8d9...](https://mempool.space/tx/b4a8d9d32c43706ab9ec80955e91cf44fef8f4b557781818486ebb7b8b1238c2) at 17.1sat/vb seems to have been mined in the first block that any of its alternatives paid sufficiently for, and there doesn't seem to be any indication that the minfee should have risen above even the fee of the initial alternative (a6f344845e58d6ef288870b37674942d0505d9ee64f0d289164c3f401be8c086) at 5.98sat/vb (statoshi's graphs indicate a max minfee around that time of 5.6sat/vb).\r\n\r\nAll of the data being linked here (the OTS webpages, fullrbf.mempool.observer and mempool.space) remove that data after at most a couple of weeks which makes it pretty difficult to review. I've made some custom patches to bitcoind to make it easier for me to double check your claims, but that's not convenient or easily reproducible by others either.\r\n\r\n> Please delete your comment as it is factually incorrect and misleading. Frankly I'm surprised that you are so unaware of current mempool policies in use by miners that you were unaware of the fact that full-rbf has been widely adopted.\r\n\r\nInsults and \"delete your comment\" don't make for either scientific or constructive discussion.",
      "created_at" : "2023-08-09T06:46:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1670764585",
      "id" : 1670764585,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jldgp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1670764585/reactions"
      },
      "updated_at" : "2023-08-09T06:46:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1670764585",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Some full RBF transactions are being mined. \r\n\r\nWho cares about origin?\r\n\r\n>OpenTimestamps\r\n\r\nEven if opentimestamps full RBF transactions are mined\r\n\r\nDo you even think for a moment that it doesn't matter if have it default or not?\r\n\r\nOr is it just about emotional drama?\r\n\r\nFull RBF transactions are being relayed and miners include them in blocks.\r\n\r\nIf making it default affects your security, I want to know your project. I won't exploit. ",
      "created_at" : "2023-08-09T20:35:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1672111259",
      "id" : 1672111259,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jqmSb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1672111259/reactions"
      },
      "updated_at" : "2023-08-09T20:35:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1672111259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/134363042?v=4",
         "events_url" : "https://api.github.com/users/zkfrio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/zkfrio/followers",
         "following_url" : "https://api.github.com/users/zkfrio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/zkfrio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/zkfrio",
         "id" : 134363042,
         "login" : "zkfrio",
         "node_id" : "U_kgDOCAI3og",
         "organizations_url" : "https://api.github.com/users/zkfrio/orgs",
         "received_events_url" : "https://api.github.com/users/zkfrio/received_events",
         "repos_url" : "https://api.github.com/users/zkfrio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/zkfrio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/zkfrio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/zkfrio"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > All of those transactions are taken from my OpenTimestamps calendars. My OTS calendars bump fees repeatedly, increasing the feerate by 1sat/vb with each replacement, starting at approximately the minimum relay fee.\r\n> \r\n> Yes, that is a pretty perfect mechanism if you want to create a false positive for \"full rbf\" when all you're actually triggering is eviction from the mempool due to a change in minfee. For nodes that don't run \"full rbf\", they'll see one of the early transactions, add it to the mempool, then ignore any replacements for a while, until their local minfee drops below the original transaction, at which point they'll accept the first replacement they see. Presuming that takes a while, that replacement will then have a high fee, and be included in their templates. That matches all the examples you gave.\r\n\r\nThose example are just examples: my belief is based on far larger numbers of transactions getting mined by those pools. Notably, OTS sets nLockTime freshly on each transaction, and the nLockTime's of the observed, mined, transactions are all up to date. For example, here's a recent OTS tx mined by Foundry USA, showing that they are *not* mining full-rbf as the transaction mined was broadcast multiple blocks prior: https://mempool.space/tx/585810a208f2141a730f7589ce8484d8bd11a3c3607c471fecf3354d30e6c2cf\r\n\r\nAnyway, for even better examples, on Aug 2nd I updated both calendars to send their initial transactions at significantly above minfee.\r\n\r\n> It does not match some recent txs mined by antpool, though: eg [b4a8d9...](https://mempool.space/tx/b4a8d9d32c43706ab9ec80955e91cf44fef8f4b557781818486ebb7b8b1238c2) at 17.1sat/vb seems to have been mined in the first block that any of its alternatives paid sufficiently for, and there doesn't seem to be any indication that the minfee should have risen above even the fee of the initial alternative (a6f344845e58d6ef288870b37674942d0505d9ee64f0d289164c3f401be8c086) at 5.98sat/vb (statoshi's graphs indicate a max minfee around that time of 5.6sat/vb).\r\n\r\nYes, AntPool has *very* clearly been mining full-rbf for some time now. The supermajority of OTS full-rbf txs are mined by them, which is what you'd expect given their 20% hash power. I haven't tried to measure what % of their hash power has full-rbf turned on. But it's likely high or even 100% as mempool.space shows reasonably close to optimal fees for most txs that do get mined.\r\n\r\nBinance Pool is also clearly mining full-rbf. Examples: https://mempool.space/tx/79e111b3250f1afbf7f9a5ea0fcef32b07131e2f7d46842f0d191b5f73fa755c, https://mempool.space/tx/bd7991006ed12e6139cdad1112130731a0ad37e2766d5e3b71608522455143fc, https://mempool.space/tx/1c880f5c2310e9e043f11cd50b2986982c5afdb138e95f59892fc1eda8d27893\r\n\r\nKuCoinPool: https://mempool.space/tx/0eb8e67ddcda86ee0d7bd24be5e695d07d539c68974168fe82dd7b87471d494f, https://mempool.space/tx/52506bbcb0b7af3beeca68294cf39cf411d16ead225c3369953eb57fe6290915\r\n\r\nPoolin: https://mempool.space/tx/25148aa341911ee12ad25d44f1321ab30ebeb40c0cf04653dce1a19f12b4d914 \r\nEMCDPool: https://mempool.space/tx/dd583a3f1142447e13ffac31c10fc2322c99c1d52a1096546869ee709e70a3fd\r\n\r\nAntPool + Binance Pool already represents 33% of hash power.\r\n\r\n> All of the data being linked here (the OTS webpages, fullrbf.mempool.observer and mempool.space) remove that data after at most a couple of weeks which makes it pretty difficult to review. I've made some custom patches to bitcoind to make it easier for me to double check your claims, but that's not convenient or easily reproducible by others either.\r\n\r\nAll you have to do to double check these claims is to run a well-connected Bitcoin node with full-rbf enabled, and `debug=mempool` set. You can easily see what transactions have been accepted and when via this method by simply grepping your `debug.log` file. To be sure you're seeing all full-rbf replacements, you can use my full-rbf peering fork: https://github.com/petertodd/bitcoin/tree/full-rbf-v25.0\r\n\r\n> > Please delete your comment as it is factually incorrect and misleading. Frankly I'm surprised that you are so unaware of current mempool policies in use by miners that you were unaware of the fact that full-rbf has been widely adopted.\r\n> \r\n> Insults and \"delete your comment\" don't make for either scientific or constructive discussion.\r\n\r\nIt is productive to delete incorrect and misleading comments once notified, especially in the case where the misinformation is encouraging people to use Bitcoin in a dangerous and insecure way. Your comment was clearly incorrect, and not in a subtle way, and showed a lack of investigation. And as you can easily see in the above discussion, we have a company - GAP600 - denying the reality that a large % of hash power mines full-rbf, while trying to sell a clearly broken service.",
      "created_at" : "2023-08-10T21:41:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1673956144",
      "id" : 1673956144,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jxosw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673956144/reactions"
      },
      "updated_at" : "2023-08-10T21:43:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1673956144",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK",
      "created_at" : "2023-08-11T07:51:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1674343686",
      "id" : 1674343686,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jzHUG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1674343686/reactions"
      },
      "updated_at" : "2023-08-11T07:51:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1674343686",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/46897919?v=4",
         "events_url" : "https://api.github.com/users/Symphonic3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Symphonic3/followers",
         "following_url" : "https://api.github.com/users/Symphonic3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Symphonic3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Symphonic3",
         "id" : 46897919,
         "login" : "Symphonic3",
         "node_id" : "MDQ6VXNlcjQ2ODk3OTE5",
         "organizations_url" : "https://api.github.com/users/Symphonic3/orgs",
         "received_events_url" : "https://api.github.com/users/Symphonic3/received_events",
         "repos_url" : "https://api.github.com/users/Symphonic3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Symphonic3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Symphonic3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Symphonic3"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "NACK.\r\n\r\nThe preceding mempoolfullrbf debate resulted in a Bitcoin Core where mempool policy is a minority voting system. \r\n\r\nWhile I acknowledge that mempool policy is local and any consistency we have across policies is a phenomenon of incentives, AND that the likely proper solution is to REMOVE mempool policy steering from both the Core community and software, here we are nonetheless.\r\n\r\nThe default config for Core is a dangerous space to design, and we should hold the user space, and status quo utility as sacred.\r\n\r\nIt is my belief that continued mempool manipulation will result in less and less stability and utility. Maybe this is inevitable or necessary for future situations, but, right now, no one actually needs mempoolfullrbf, and I personally value onchain payment use cases more than any of the mempoolfullrbf arguments presented.",
      "created_at" : "2023-08-11T09:56:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1674487742",
      "id" : 1674487742,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585jzqe-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1674487742/reactions"
      },
      "updated_at" : "2023-08-11T10:14:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1674487742",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18273620?v=4",
         "events_url" : "https://api.github.com/users/BitcoinErrorLog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinErrorLog/followers",
         "following_url" : "https://api.github.com/users/BitcoinErrorLog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinErrorLog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinErrorLog",
         "id" : 18273620,
         "login" : "BitcoinErrorLog",
         "node_id" : "MDQ6VXNlcjE4MjczNjIw",
         "organizations_url" : "https://api.github.com/users/BitcoinErrorLog/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinErrorLog/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinErrorLog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinErrorLog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinErrorLog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinErrorLog"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "On Fri, Aug 11, 2023 at 02:56:55AM -0700, John Carvalho wrote:\n> NACK.\n> \n> The preceding mempoolfullrbf debate resulted in a Bitcoin Core where mempool policy is a minority voting system. \n> \n> While I acknowledge that mempool policy is local and any consistency we have across policies is a phenomenon of incentives, AND that the likely proper solution is to REMOVE mempool policy steering from both the Core community and software, here we are nonetheless.\n> \n> The default config for Core is a dangerous space to design, and we should hold the user space, and status quo utility as sacred.\n> \n> It is my belief that continued mempool manipulation will result in less and less stability and utility. Maybe this is inevitable or necessary for future situations, but, right now, no one actually needs mempoolfullrbf, and I personally value onchain payment use cases more than any of the fullmempoolrbf arguments presented.\n\nDo you have an actual example of a real-world online merchant that accepts\nunconfirmed transactions for something of value immediately? Please provide a\nURL so we can check.\n\nI _still_ have not found such an example. GAP600 has claimed to have such\ncustomers. But so far their claims have not checked out.\n\nWithout such an example your claim that you \"personally value onchain payment\nuse cases\" is not relevant.\n",
      "created_at" : "2023-08-11T12:55:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1674741387",
      "id" : 1674741387,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585j0oaL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1674741387/reactions"
      },
      "updated_at" : "2023-08-11T12:55:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1674741387",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "More than 2 years ago, the liquidity griefing provoked by RBF opt-out of a counterparty contributing to a multi-party transaction (splicing / dual-funding) was brought on the mailing list in a post intitled [âOn Mempool Funny Games against Multi-Party Funded Transactionsâ ](https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-May/003033.html) and it was the main motivation behind the introduction of `mempoolfullrbf` with https://github.com/bitcoin/bitcoin/pull/25353.\r\n\r\nSince then the liquidity griefing concern in the context of multi-party transaction has been brought by another Lightning developer in the mailing list post [âLiquidity griefing for 0-conf dual-funded txsâ](https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-May/003920.html) and such use-case patterns is in early deployment phase, and start to have more and more economic volume, it turns out itâs a good tool to address the liquidity management issues Lightning is so often blamed with.\r\n\r\nSince then, and during all the last year conversation about `mempoolfullrbf`, if it should be turned by default, activated at some block-height-encoded flag or remove as an option, to the best of my knowledge no counter-reply has been technically argued on this liquidity griefing concern. That said, if doubts persist, Iâm very open to do a real-world exploitation if someone takes the burden of setting a âblueâ Lightning infrastructure and communicate back the learnings to the community.\r\n\r\nAccording to this [public data-collection dashboard](https://bitcoin.clarkmoody.com/dashboard/), the Lightning Network is a network of 4,713 BTC, 16,313 self-announcing nodes and 68,739 publics channels. Quantitative results than anyone running a Lightning node is able to independently verify thanks to the gossip network.\r\n\r\nWith a goal to conciliate multiple use-cases, a technical philosophy has been sketched out âto each use-case its set of policy rulesâ (iiuc) in a reply to the mailing list post entitled [âOn mempool policy consistencyâ](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021116.html) by a Bitcoin Core developer. I donât think this philosophy is practical as this is not solving the liquidity griefing issue, even with proposed [nversion=3 changes codes](https://github.com/bitcoin/bitcoin/pull/25038/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R785) as non-rbf signaling nversion=2 are not made replaceable by nversion=3 transactions.\r\n\r\nThere is definitely an ongoing effort to make the mempool policy rules more modular (see #25584) and documented (see #22806) though they have been started years ago, and the main bottleneck is code and review by skilled hands and eyes. I think most of the GH comments from the 28 participants so far (and the 55 ones in #26438 and the 66 ones in #26525) have been âcheap talksâ. I donât think comments like [âI feel the mempool policy rules should be X\"](https://github.com/bitcoin/bitcoin/pull/26525#issuecomment-1320241214) have convincing weight in the technical discussion of a +500$ B decentralized network.\r\n\r\nFrom my viewpoint and communication channels, there is no really steering (in the IETF sense) of mempool policy rules by the Bitcoin Core community, rather dealing with legacy technical debt. `mempoolfullrbf` was not even a subject at the last CoreDev meeting if my memory works well, which is the most âclosed-yet-invitation-based-on-technical-proof-of-workâ communication channel we have in the Bitcoin development community.\r\n\r\nAiming to roll the ball forward I do have few technical questions for the users running zero-conf in an economic fashion:\r\n- do you have already deployed âfire cutâ thresholds if more than X of your incoming on-chain transaction traffic is double-spend ?\r\n- would you consider batch CPFP of incoming zero-conf transaction as enabled by package-relay to deter double-spend ?\r\n- have you privacy-preserving cryptographic proofs (see the [`taproot-ringsig`](https://github.com/jonasnick/taproot-ringsig) proof-of-concept) of the business statements youâre claiming for the past periods ?\r\n- would you consider monitoring miners mempools for double-spend of a given UTXO, think âreverse transaction-acceleratorâ ?\r\n\r\nThe measurement method of the PR author to justify the change have been called out as âdubiousâ in the latest [Bitcoin Optech newsletter](https://bitcoinops.org/en/newsletters/2023/08/09/). In fact I think in a decentralized community where the decision-making process has to be decentralized and auditable, itâs a good methodological advance to see a PR author coming with real-world numbers, even if the methodology is imperfect. I would rather invite the Bitcoin Optech newsletter to inform how someone could re-do the claimed measurement âat homeâ.\r\n\r\nUltimately, I think the conversation is still a lack of consensus on the mempool policy rules design philosophy in a growing ecosystem of use-cases underpinned by a matrix of incentives and host of different performances. On this very issue, Iâm to blame as Iâve never replied to the author of the mailing list thread âOn mempool policy consistencyâ [here](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021132.html).\r\n\r\nI think the PR can be put as a draft for now by the maintainers as there is no technical consensus on enabling full-rbf by default.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created_at" : "2023-08-12T05:26:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1675711759",
      "id" : 1675711759,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585j4VUP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1675711759/reactions"
      },
      "updated_at" : "2023-08-12T05:26:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1675711759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> More than 2 years ago, the liquidity griefing provoked by RBF opt-out of a counterparty contributing to a multi-party transaction (splicing / dual-funding) was brought on the mailing list in a post intitled [âOn Mempool Funny Games against Multi-Party Funded Transactionsâ ](https://lists.linuxfoundation.org/pipermail/lightning-dev/2021-May/003033.html) and it was the main motivation behind the introduction of `mempoolfullrbf` with #25353.\r\n> \r\n> Since then the liquidity griefing concern in the context of multi-party transaction has been brought by another Lightning developer in the mailing list post [âLiquidity griefing for 0-conf dual-funded txsâ](https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-May/003920.html) and such use-case patterns is in early deployment phase, and start to have more and more economic volume, it turns out itâs a good tool to address the liquidity management issues Lightning is so often blamed with.\r\n> \r\n> Since then, and during all the last year conversation about `mempoolfullrbf`, if it should be turned by default, activated at some block-height-encoded flag or remove as an option, to the best of my knowledge no counter-reply has been technically argued on this liquidity griefing concern. That said, if doubts persist, Iâm very open to do a real-world exploitation if someone takes the burden of setting a âblueâ Lightning infrastructure and communicate back the learnings to the community.\r\n> \r\n> According to this [public data-collection dashboard](https://bitcoin.clarkmoody.com/dashboard/), the Lightning Network is a network of 4,713 BTC, 16,313 self-announcing nodes and 68,739 publics channels. Quantitative results than anyone running a Lightning node is able to independently verify thanks to the gossip network.\r\n> \r\n> With a goal to conciliate multiple use-cases, a technical philosophy has been sketched out âto each use-case its set of policy rulesâ (iiuc) in a reply to the mailing list post entitled [âOn mempool policy consistencyâ](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021116.html) by a Bitcoin Core developer. I donât think this philosophy is practical as this is not solving the liquidity griefing issue, even with proposed [nversion=3 changes codes](https://github.com/bitcoin/bitcoin/pull/25038/files#diff-97c3a52bc5fad452d82670a7fd291800bae20c7bc35bb82686c2c0a4ea7b5b98R785) as non-rbf signaling nversion=2 are not made replaceable by nversion=3 transactions.\r\n> \r\n> There is definitely an ongoing effort to make the mempool policy rules more modular (see #25584) and documented (see #22806) though they have been started years ago, and the main bottleneck is code and review by skilled hands and eyes. I think most of the GH comments from the 28 participants so far (and the 55 ones in #26438 and the 66 ones in #26525) have been âcheap talksâ. I donât think comments like [âI feel the mempool policy rules should be X\"](https://github.com/bitcoin/bitcoin/pull/26525#issuecomment-1320241214) have convincing weight in the technical discussion of a +500$ B decentralized network.\r\n> \r\n> From my viewpoint and communication channels, there is no really steering (in the IETF sense) of mempool policy rules by the Bitcoin Core community, rather dealing with legacy technical debt. `mempoolfullrbf` was not even a subject at the last CoreDev meeting if my memory works well, which is the most âclosed-yet-invitation-based-on-technical-proof-of-workâ communication channel we have in the Bitcoin development community.\r\n> \r\n> Aiming to roll the ball forward I do have few technical questions for the users running zero-conf in an economic fashion:\r\n> \r\n> * do you have already deployed âfire cutâ thresholds if more than X of your incoming on-chain transaction traffic is double-spend ?\r\n> * would you consider batch CPFP of incoming zero-conf transaction as enabled by package-relay to deter double-spend ?\r\n> * have you privacy-preserving cryptographic proofs (see the [`taproot-ringsig`](https://github.com/jonasnick/taproot-ringsig) proof-of-concept) of the business statements youâre claiming for the past periods ?\r\n> * would you consider monitoring miners mempools for double-spend of a given UTXO, think âreverse transaction-acceleratorâ ?\r\n> \r\n> The measurement method of the PR author to justify the change have been called out as âdubiousâ in the latest [Bitcoin Optech newsletter](https://bitcoinops.org/en/newsletters/2023/08/09/). In fact I think in a decentralized community where the decision-making process has to be decentralized and auditable, itâs a good methodological advance to see a PR author coming with real-world numbers, even if the methodology is imperfect. I would rather invite the Bitcoin Optech newsletter to inform how someone could re-do the claimed measurement âat homeâ.\r\n> \r\n> Ultimately, I think the conversation is still a lack of consensus on the mempool policy rules design philosophy in a growing ecosystem of use-cases underpinned by a matrix of incentives and host of different performances. On this very issue, Iâm to blame as Iâve never replied to the author of the mailing list thread âOn mempool policy consistencyâ [here](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/021132.html).\r\n> \r\n> I think the PR can be put as a draft for now by the maintainers as there is no technical consensus on enabling full-rbf by default.\r\n\r\nNobody cares about your research.\r\n\r\nThis pull request would be locked for comments.\r\n\r\nNobody things logically.\r\n\r\nWe are a bunch of emotional people who do not understand reality. \r\n\r\nIt's okay. People who think their projects are unsafe will be exploited. We will get to reality in some time.",
      "created_at" : "2023-08-12T21:23:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1676104981",
      "id" : 1676104981,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585j51UV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1676104981/reactions"
      },
      "updated_at" : "2023-08-12T21:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1676104981",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/134363042?v=4",
         "events_url" : "https://api.github.com/users/zkfrio/events{/privacy}",
         "followers_url" : "https://api.github.com/users/zkfrio/followers",
         "following_url" : "https://api.github.com/users/zkfrio/following{/other_user}",
         "gists_url" : "https://api.github.com/users/zkfrio/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/zkfrio",
         "id" : 134363042,
         "login" : "zkfrio",
         "node_id" : "U_kgDOCAI3og",
         "organizations_url" : "https://api.github.com/users/zkfrio/orgs",
         "received_events_url" : "https://api.github.com/users/zkfrio/received_events",
         "repos_url" : "https://api.github.com/users/zkfrio/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/zkfrio/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/zkfrio/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/zkfrio"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Please keep discussion here civil and on topic. Ad hominems are neither useful nor productive.",
      "created_at" : "2023-08-13T10:04:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1676305796",
      "id" : 1676305796,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585j6mWE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1676305796/reactions"
      },
      "updated_at" : "2023-08-13T10:04:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1676305796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@zkfrio Thanks for your thoughts and I'm staying available to explain any technical concepts laid out on a public communication channels such as the Bitcoin mailing list or IRC, and offer my time in a true FOSS spirit.\r\n\r\nIn matters of ad hominems and personal threats, I'm following the personal policy to process the ones coming from pseudonymous GH users (minding all the practice GH is following to bind users to a social persona) as \"cheap talk\", as there is no track records on your statements. Though if you estimate that my Bitcoin scientific or engineering statements are damaging your professional or personal interests, you're always free to sue me in the competent jurisdiction (you can use the default antoine.riard@gmail.com for the letters of actions).\r\n\r\nIf it's more a question of you not finding the corrects words to express your thoughts on a delicate and complex technical subject such as full-rbf, and here I understand how sometimes it can hard to articulate a reasoning being native french-speaking and non-english, I'm happy to offer you a beer at the next technical Bitcoin conference. Sincerely from a human being, to another one.",
      "created_at" : "2023-08-13T23:41:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1676497083",
      "id" : 1676497083,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585j7VC7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1676497083/reactions"
      },
      "updated_at" : "2023-08-13T23:41:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1676497083",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Do you have an actual example of a real-world online merchant that accepts unconfirmed transactions for something of value immediately? Please provide a URL so we can check. I _still_ have not found such an example. GAP600 has claimed to have such customers. But so far their claims have not checked out. Without such an example your claim that you \"personally value onchain payment use cases\" is not relevant.\r\n\r\nMany examples of 0conf acceptance have been provided, with consistency across years. The examples I am the most familiar and confident in are Bitrefill, where I worked for a few years and witnessed the benefits first-hand for both users and the merchant, and Blocktank LSP, where we try to provide as much of an instant LN channel user experience as possible. These are all demonstrated at their respective websites (bitrefill.com, blocktank.to (which is also represented within Bitkit wallet, bitkit.to).\r\n\r\nThere is also a community of other LSP-affiliated engineers creating specifications that include assumptions for optional 0conf flows, meaning there are many existing projects and businesses that hope to incorporate risk-managed 0conf acceptance into their products and services.\r\n\r\nThere is also data and testimony from several other people in the mailing list in recent years.\r\n\r\nThere is no question that the 0conf use case is present, and certainly no question it is more utilized and potentially useful than any use case served by this PR.\r\n\r\nNodes should not be ignoring or redefining user-intent via mempool policy in the first place. If I want RBF, I will flag it in my txn. If I want users of my app to be able to RBF, I will default that setting in my own client.",
      "created_at" : "2023-08-14T06:33:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1676755450",
      "id" : 1676755450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585j8UH6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1676755450/reactions"
      },
      "updated_at" : "2023-08-14T06:33:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1676755450",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18273620?v=4",
         "events_url" : "https://api.github.com/users/BitcoinErrorLog/events{/privacy}",
         "followers_url" : "https://api.github.com/users/BitcoinErrorLog/followers",
         "following_url" : "https://api.github.com/users/BitcoinErrorLog/following{/other_user}",
         "gists_url" : "https://api.github.com/users/BitcoinErrorLog/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/BitcoinErrorLog",
         "id" : 18273620,
         "login" : "BitcoinErrorLog",
         "node_id" : "MDQ6VXNlcjE4MjczNjIw",
         "organizations_url" : "https://api.github.com/users/BitcoinErrorLog/orgs",
         "received_events_url" : "https://api.github.com/users/BitcoinErrorLog/received_events",
         "repos_url" : "https://api.github.com/users/BitcoinErrorLog/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/BitcoinErrorLog/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/BitcoinErrorLog/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/BitcoinErrorLog"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "On Sun, Aug 13, 2023 at 11:33:19PM -0700, John Carvalho wrote:\n> > Do you have an actual example of a real-world online merchant that accepts unconfirmed transactions for something of value immediately? Please provide a URL so we can check. I _still_ have not found such an example. GAP600 has claimed to have such customers. But so far their claims have not checked out. Without such an example your claim that you \"personally value onchain payment use cases\" is not relevant.\n> \n> Many examples of 0conf acceptance have been provided, with consistency across years. The examples I am the most familiar and confident in are Bitrefill, where I worked for a few years and witnessed the benefits first-hand for both users and the merchant, and Blocktank LSP, where we try to provide as much of an instant LN channel user experience as possible. These are all demonstrated at their respective websites (bitrefill.com, blocktank.to (which is also represented within Bitkit wallet, bitkit.to).\n\nBitrefill does not accept unconfirmed transactions, and as far as I can tell,\nhas not accepted them for many months. While their order page claims otherwise\nunder the advanced tab, even if you send a transaction with sufficient fee it\nwill not be accepted without a confirmation. I and friends of mine have tested\nthis multiple times, including with logged in, well-used accounts. If you\nbelieve otherwise, tell me exactly how to get it to accept an unconfirmed\ntransaction.\n\nAs for Blocktank LSP and Bitkit, tell me, exactly how do I get it to accept an\nunconfirmed transaction in exchange for something of value?\n",
      "created_at" : "2023-08-14T10:57:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1677109798",
      "id" : 1677109798,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585j9qom",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677109798/reactions"
      },
      "updated_at" : "2023-08-14T10:57:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677109798",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "On Sun, Aug 13, 2023 at 11:33:19PM -0700, John Carvalho wrote:\n> There is also a community of other LSP-affiliated engineers creating specifications that include assumptions for optional 0conf flows, meaning there are many existing projects and businesses that hope to incorporate risk-managed 0conf acceptance into their products and services.\n\nI should point out that if what you are claiming is true, we should be merging\nthis change now rather than later. We have clear technical consensus that\nacceptance of unconfirmed transactions is dangerous, and businesses trying to\ndo that pose a risk towards the Bitcoin ecosystem as a whole. Ensuring a new\nround of such reckless businesses doesn't develop is in the interests of\neveryone but those businesses. Merging this pull-req now helps prevent that\noutcome, and we have an opportunity to do so at a time when the evidence has\nclearly shown that no or essentially no actual businesses are relying on\nunconfirmed transactions.\n",
      "created_at" : "2023-08-14T11:14:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1677131261",
      "id" : 1677131261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585j9v39",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677131261/reactions"
      },
      "updated_at" : "2023-08-14T11:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677131261",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "On Fri, Aug 11, 2023 at 10:27:10PM -0700, Antoine Riard wrote:\n> Aiming to roll the ball forward I do have few technical questions for the users running zero-conf in an economic fashion:\n> - do you have already deployed âfire cutâ thresholds if more than X of your incoming on-chain transaction traffic is double-spend ?\n> - would you consider batch CPFP of incoming zero-conf transaction as enabled by package-relay to deter double-spend ?\n> - have you privacy-preserving cryptographic proofs (see the [`taproot-ringsig`](https://github.com/jonasnick/taproot-ringsig) proof-of-concept) of the business statements youâre claiming for the past periods ?\n> - would you consider monitoring miners mempools for double-spend of a given UTXO, think âreverse transaction-acceleratorâ ?\n\nI think you asking these questions inappropriately gives readers the impression\nthat there actually are non-trivial examples of real businesses who are relying\non unconfirmed transactions. The fact is in this entire thread no-one has been\nable to provide clear, convincing, evidence that this is true.\n\nWe have a lot of claims. But claims are not evidence of use. If anything, the\nclaims so far are suggestive of fraud. For example it's plausible that the lack\nof usage of GAP600 is because they offer a service that doesn't actually work,\nso businesses use them briefly - paying them money - and then quit. GAP600 has\neven said that they don't even test their own service with real double-spends.\n\nNotably, in the example of Changelly given above, they did respond to be and\nconfirmed that they do NOT use GAP600's service for any real\ncustomer-to-business use-case. Changelly also confirmed to me that they have\nnever even tested it with a real double spend.\n\n> The measurement method of the PR author to justify the change have been called out as âdubiousâ in the latest [Bitcoin Optech newsletter](https://bitcoinops.org/en/newsletters/2023/08/09/).\n\nFirst of all, the word \"dubious\" doesn't even appear in the Bitcoin Optech\nnewsletter. Quoting it in such a way is not accurate. Second, all Bitocin\nOptech actually did was link Andrew Chow's initial comment, which even he\nadmitted was clearly not correct with respect to Antpool.\n",
      "created_at" : "2023-08-14T11:28:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1677149238",
      "id" : 1677149238,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585j90Q2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677149238/reactions"
      },
      "updated_at" : "2023-08-14T11:28:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677149238",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Secondly, on the basis of mempool consistency with miners, since full-rbf is the compatible policy in almost all cases, we should be supporting it by default if you take the position that we want to optimize for consistency with miners.\n\nIf 37% of hash rate is mining full RBF, enabling full RBF is (currently) a move away from mempool consistency with majority hash rate.\n\n> Thirdly, all previous arguments in favor of full-rbf, such as multiparty transactions, wallets, user-expectations, etc. still apply.\n\nFull RBF is already possible, and these arguments are not a convincing reason for changing default policy.\n\n> This simplification of mempool policy is well overdue. Let's get this merged and this silly debate over with. Miners and node operators who choose to disable full-rbf still can with a simple configuration change.\n\nA change to a default does not meaningfully simplify mempool policy, which is arbitrary and controlled by individual nodes and as such cannot be meaningfully simplified.\n\nThe arguments for and against throughout this PR still seem to be about full RBF as a concept. Full RBF as a concept is out of the bag and usable. So:\n\nWhat is the benefit (or drawback) to changing the default policy for users' own mempool for them?\n\nThat's all this PR does.\n\nAs far as I can tell its currently a tradeoff between fee efficiency and priority; if I have full RBF enabled, I see higher bids which 37% of hashrate might mine. Bidding against full RBF transactions is less fee efficient, but increases the odds of my being included in the next block. I might lean slightly toward full RBF true because I see a _more_ complete picture of awaiting transactions (if my mempool isn't full and evicting, in which case which txs I'd rather have in my mempool is entirely based on what I'm using my mempool for), but that's not a great argument for making that decision for others.",
      "created_at" : "2023-08-14T15:23:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1677542038",
      "id" : 1677542038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585j_UKW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677542038/reactions"
      },
      "updated_at" : "2023-08-14T16:01:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677542038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23095702?v=4",
         "events_url" : "https://api.github.com/users/iBeizsley/events{/privacy}",
         "followers_url" : "https://api.github.com/users/iBeizsley/followers",
         "following_url" : "https://api.github.com/users/iBeizsley/following{/other_user}",
         "gists_url" : "https://api.github.com/users/iBeizsley/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/iBeizsley",
         "id" : 23095702,
         "login" : "iBeizsley",
         "node_id" : "MDQ6VXNlcjIzMDk1NzAy",
         "organizations_url" : "https://api.github.com/users/iBeizsley/orgs",
         "received_events_url" : "https://api.github.com/users/iBeizsley/received_events",
         "repos_url" : "https://api.github.com/users/iBeizsley/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/iBeizsley/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/iBeizsley/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/iBeizsley"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@iBeizsley\r\n> If 37% of hash rate is mining full RBF, enabling full RBF is (currently) a move away from mempool consistency with majority hash rate.\r\n\r\nYou are mistaken. Think about this in terms of information: the purpose of a Bitcoin node is to widely distribute information in the form of transactions and blocks.\r\n\r\nFull-RBF miners want to learn about full-RBF replacements. Non-full-RBF miners don't care about full-RBF replacements. But it does them no harm to receive that information: they just ignore it.\r\n\r\nFull-RBF nodes distribute the same information as non-full-RBF nodes: transactions and blocks. But in addition, they also distribute information about full-RBF replacements. So a full-RBF node is compatible with both full-RBF and non-full-RBF miners. While a non-full-RBF node is only compatible with non-full-RBF miners.\r\n\r\nIf 0% hashing power was mining full-RBF you could argue that the full-RBF replacement information was irrelevant. But the fact is, a significant % of hashing power *is* mining full-RBF, so it makes sense to adopt the mempool policy of maximum compatibility: Full-RBF.\r\n\r\n> > This simplification of mempool policy is well overdue. Let's get this merged and this silly debate over with. Miners and node operators who choose to disable full-rbf still can with a simple configuration change.\r\n> \r\n> A change to a default does not meaningfully simplify mempool policy, which is arbitrary and controlled by individual nodes and as such cannot be meaningfully simplified.\r\n\r\nIn the future it will. As I mentioned above, wallets have been moving to taking away the ability to set or unset BIP125, simplifying the user experience. As more miners mine full-RBF, the need for that code diminishes, eventually allowing us to remove it entirely from both nodes and wallets.\r\n\r\nWe do not need to support irrelevant options that no-one actually uses. The fact is, no-one in this thread has been able to come up with a real-world example of a business that actually depends on unconfirmed transactions. The distinction between replaceable and \"non-replaceable\" transactions that BIP125 introduced is thus irrelevant, and we can phase it out.",
      "created_at" : "2023-08-14T18:08:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1677834108",
      "id" : 1677834108,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kAbd8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677834108/reactions"
      },
      "updated_at" : "2023-08-14T18:09:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677834108",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> You are mistaken. Think about this in terms of information: the purpose of a Bitcoin node is to widely distribute information in the form of transactions and blocks.\r\n\r\nThat's one potential goal of a node runner, but not all node runners, and not the only goal.\r\n\r\nIn fact, as far as I'm aware, all estimates point to an overwhelming majority of nodes _not_ relaying.\r\n\r\nRunning a node is an absolute necessity to interact with Bitcoin without any trust or dependence on third parties. Running a node is the only way to validate that the chain you're on is following the rules you want. Running a node is a requirement of many services. At least in the Bitcoin circles I travel in, these are the primary reasons people run nodes.\r\n\r\nThere are certainly people who run nodes with the aim of 'supporting the network'. To an extent, this is why I run a node. But running a node is primarily a selfish endeavour; to exercise your own self-sovereignty, at least with the node runners I know. \r\n\r\nIf people want to relay as much as possible, they can set this flag. Assuming that is the goal of the majority is just that: an assumption.\r\n\r\n> In the future it will.\r\n\r\nMaybe. That's what you'd hope, and I can empathize with that goal; less code makes things easier to maintain, and less likely to go wrong. But that's not a reason to make a decision for noderunners when there are clearly people who _don't_ want the first-seen option to disappear. At least for now. That is steering policy with defaults. I'm extremely uncomfortable with that, and I know that many other Bitcoiners are.",
      "created_at" : "2023-08-14T18:31:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1677864859",
      "id" : 1677864859,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kAi-b",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677864859/reactions"
      },
      "updated_at" : "2023-08-14T18:38:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677864859",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23095702?v=4",
         "events_url" : "https://api.github.com/users/iBeizsley/events{/privacy}",
         "followers_url" : "https://api.github.com/users/iBeizsley/followers",
         "following_url" : "https://api.github.com/users/iBeizsley/following{/other_user}",
         "gists_url" : "https://api.github.com/users/iBeizsley/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/iBeizsley",
         "id" : 23095702,
         "login" : "iBeizsley",
         "node_id" : "MDQ6VXNlcjIzMDk1NzAy",
         "organizations_url" : "https://api.github.com/users/iBeizsley/orgs",
         "received_events_url" : "https://api.github.com/users/iBeizsley/received_events",
         "repos_url" : "https://api.github.com/users/iBeizsley/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/iBeizsley/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/iBeizsley/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/iBeizsley"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> That's one potential goal of a node runner, but not all node runners, and not the only goal.\r\n> \r\n> In fact, as far as I'm aware, all estimates point to an overwhelming majority of nodes _not_ relaying.\r\n\r\nCitation needed.\r\n\r\nThe default behavior of Bitcoin Core is to relay transactions, whether or not the node is a listening node. If you believe that the overwhelming majority of nodes have disabled transaction relay (eg via `-blocksonly`), you need to cite that claim. That is **definitely** not true with respect to listening nodes, as if the \"overwhelming majority\" of listening nodes had disabled transaction relay, transaction relay for non-listening nodes would not work. It works fine.\r\n\r\nAnyway, full-RBF is only relevant to nodes that relay. Even if your claim was true, it would be irrelevant to this discussion.\r\n \r\n\r\n> Maybe. That's what you'd hope, and I can empathize with that goal; less code makes things easier to maintain, and less likely to go wrong. But that's not a reason to make a decision for noderunners when there are clearly people who _don't_ want the first-seen option to disappear. That is steering policy with defaults. I'm extremely uncomfortable with that, and I know that many other Bitcoiners are.\r\n\r\nThat same kind of logic was used to argue for increasing the block size, and it's no surprise that many big blockers have argued against full-rbf. The fact is we make technical trade offs all the time. This happens to be a tradeoff between an essentially non-existent class of users, and a much larger group of actual, real world, users who benefit from full-RBF: https://petertodd.org/2023/why-you-should-run-mempoolfullrbf#the-controversy",
      "created_at" : "2023-08-14T18:44:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1677882273",
      "id" : 1677882273,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kAnOh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677882273/reactions"
      },
      "updated_at" : "2023-08-14T18:44:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677882273",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> The default behavior of Bitcoin Core is to relay transactions\n\nYes, bad (incorrect) wording. The majority are (/appear to be) non-listening. Point being that those whose primary goal is maximum relay of blocks and transactions would be listening to achieve that.\n \n> Anyway, full-RBF is only relevant to nodes that relay. Even if your claim was true, it would be irrelevant to this discussion.\n\nFull RBF is relevant to anybody who has a mempool whose state they care about or rely on, and anyone who has any opinion or need beyond 'maximum' when it comes to relay.\n\nFor those, for example, using their mempool to decide transaction fees, there is a difference they may or may not be aware of while full RBF transactions are mined by a (large) minority of hashrate.\n\n> That same kind of logic was used to argue for increasing the block size, and it's no surprise that many big blockers have argued against full-rbf.\n\nWhat logic, exactly?\n\nRe: complexity? You're the one who brought up complexity and maintenance.\n\nRe: core steering non-consensus policy? Given blocksize is consensus layer, no, they didn't.\n\nThis is borderline ad hominem by association. Sorry, I'm not a big blocker. Were the topic of blocksize to become relevant again, I'd be arguing to _shrink_ it short of something big changing. While we're at it, I agree zero conf is a terrible idea.\n\n> This happens to be a tradeoff between an essentially non-existent class of users, and a much larger group of actual, real world, users who benefit from full-RBF:Â https://petertodd.org/2023/why-you-should-run-mempoolfullrbf#the-controversy\n\nUsers can _already_ benefit from full RBF. Again: I am not arguing for or against full RBF as a concept. It's fine. I am asking for a justification for changing default policy. That we need defaults at all is an unfortunate fact. To change them is to make a decision for everyone running defaults you have no right to make. You need a good reason to justify that, and 'maximum relay' for full RBF replacements which are already being relayed fine with people opting in isn't a particularly good reason.",
      "created_at" : "2023-08-14T19:09:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1677913513",
      "id" : 1677913513,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kAu2p",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677913513/reactions"
      },
      "updated_at" : "2023-08-14T19:44:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677913513",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23095702?v=4",
         "events_url" : "https://api.github.com/users/iBeizsley/events{/privacy}",
         "followers_url" : "https://api.github.com/users/iBeizsley/followers",
         "following_url" : "https://api.github.com/users/iBeizsley/following{/other_user}",
         "gists_url" : "https://api.github.com/users/iBeizsley/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/iBeizsley",
         "id" : 23095702,
         "login" : "iBeizsley",
         "node_id" : "MDQ6VXNlcjIzMDk1NzAy",
         "organizations_url" : "https://api.github.com/users/iBeizsley/orgs",
         "received_events_url" : "https://api.github.com/users/iBeizsley/received_events",
         "repos_url" : "https://api.github.com/users/iBeizsley/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/iBeizsley/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/iBeizsley/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/iBeizsley"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> > You are mistaken. Think about this in terms of information: the purpose of a Bitcoin node is to widely distribute information in the form of transactions and blocks.\n> \n> That's one potential goal of a node runner, but not all node runners, and not the only goal.\n> \n> In fact, as far as I'm aware, all estimates point to an overwhelming majority of nodes _not_ relaying.\n> \n> Running a node is an absolute necessity to interact with Bitcoin without any trust or dependence on third parties. Running a node is the only way to validate that the chain you're on is following the rules you want. Running a node is a requirement of many services. At least in the Bitcoin circles I travel in, these are the primary reasons people run nodes.\n> \n> There are certainly people who run nodes with the aim of 'supporting the network'. To an extent, this is why I run a node. But running a node is primarily a selfish endeavour; to exercise your own self-soverignty.\n\n\nSatoshi Nakamoto said having all users of a network run their own node doesn't scale and is similar to every Usenet user running their own NNTP server. \n\nAnd he recommended \"users to use Simplified Payment Verification (section 8) to check for double spending, which only requires having the chain of block headers, or about 12KB per day. Only people trying to create new coins would need to run network nodes. At first, most users would run network nodes, but as the network grows beyond a certain point, it would be left more and more to specialists with server farms of specialized hardware.\"\n\nNon-mining nodes have no network power unless you're accepting payments through that node, otherwise they can only watch the rules, not enforce them. Miners in consensus create the rules and enforce them. The power comes from voting ability from hashrate.\n\n\"A fully validating node running on a RaspPi does nothing to enforce consensus because miners don't care if you follow their chain or not.\n\nThe economic nodes that matter are exchanges, vendors, etc. because their choices dictate default consumer behavior, which overall has a far greater impact on the consensus ecosystem than a non-mining user node.\n\nFully validating nodes that process no transactions/have no economic activity have no input on the consensus of Bitcoin.\"",
      "created_at" : "2023-08-14T19:10:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1677914442",
      "id" : 1677914442,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kAvFK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 2,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677914442/reactions"
      },
      "updated_at" : "2023-08-14T19:10:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677914442",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/80486540?v=4",
         "events_url" : "https://api.github.com/users/YellowRoseCx/events{/privacy}",
         "followers_url" : "https://api.github.com/users/YellowRoseCx/followers",
         "following_url" : "https://api.github.com/users/YellowRoseCx/following{/other_user}",
         "gists_url" : "https://api.github.com/users/YellowRoseCx/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/YellowRoseCx",
         "id" : 80486540,
         "login" : "YellowRoseCx",
         "node_id" : "MDQ6VXNlcjgwNDg2NTQw",
         "organizations_url" : "https://api.github.com/users/YellowRoseCx/orgs",
         "received_events_url" : "https://api.github.com/users/YellowRoseCx/received_events",
         "repos_url" : "https://api.github.com/users/YellowRoseCx/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/YellowRoseCx/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/YellowRoseCx/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/YellowRoseCx"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > The default behavior of Bitcoin Core is to relay transactions\r\n> \r\n> Yes, bad (incorrect) wording. The majority are (/appear to be) non-listening. Point being that those whose primary goal is maximum relay of blocks and transactions would be listening to achieve that.\r\n\r\nYou're arguing a logical fallacy here. You might as well argue that the vast majority of people don't even run nodes, so there's no reason for any node to distribute any transactions or blocks at all.\r\n\r\nThe fact is, nodes that choose to propagate transactions are spreading information around. Spreading the maximal amount of useful information - all replacements, full-rbf or not - is maximally compatible with both full-rbf and non-full-rbf miners.\r\n \r\n> Full RBF is relevant to anybody who has a mempool whose state they care about or rely on, and anyone who has any opinion or need beyond 'maximum' when it comes to relay.\r\n> \r\n> For those, for example, using their mempool to decide transaction fees, there is a difference they may or may not be aware of while full RBF transactions are _mined_ by a (large) minority of hashrate.\r\n\r\nAgain, for the purpose of transaction fees since miners are mining full-rbf, knowing about full-rbf replacements (and thus their contribution to fees) gives you the maximum information.\r\n\r\nOf course, in practice replacements are only a small % of overall fees, so the difference is small. But that difference is in favor of defaulting to full-rbf.\r\n\r\n> > That same kind of logic was used to argue for increasing the block size, and it's no surprise that many big blockers have argued against full-rbf.\r\n> \r\n> What logic, exactly?\r\n\r\nThe logic that a small minority simply wanting a broken feature to exist forever is reason to keep it.\r\n\r\n> This is borderline ad hominem by association. Sorry, I'm not a big blocker. Were the topic of blocksize to become relevant again, I'd be arguing to _shrink_ it short of something big changing. While we're at it, I agree zero conf is a terrible idea.\r\n\r\nYes, it is a terrible idea. BIP125 bends over backwards to support essentially non-existent \"zero conf\" usecases. Getting rid of BIP125 - adopting full-rbf - fixes that mistake. The only reason why you'd want the BIP125 flag is for the sake of zero-conf. There's no other reason to have a distinction between replaceable and \"non-replaceable\" transactions.\r\n \r\n> > This happens to be a tradeoff between an essentially non-existent class of users, and a much larger group of actual, real world, users who benefit from full-RBF: https://petertodd.org/2023/why-you-should-run-mempoolfullrbf#the-controversy\r\n> \r\n> Users can _already_ benefit from full RBF.\r\n\r\nYes. And adopting it by default makes it easier for all users to benefit from it. The fact that a limited version of a good thing exists is not grounds to stop all improvement.",
      "created_at" : "2023-08-14T19:54:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1677969873",
      "id" : 1677969873,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kA8nR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677969873/reactions"
      },
      "updated_at" : "2023-08-14T19:54:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1677969873",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> On Fri, Aug 11, 2023 at 10:27:10PM -0700, Antoine Riard wrote: Aiming to roll the ball forward I do have few technical questions for the users running zero-conf in an economic fashion: - do you have already deployed âfire cutâ thresholds if more than X of your incoming on-chain transaction traffic is double-spend ? - would you consider batch CPFP of incoming zero-conf transaction as enabled by package-relay to deter double-spend ? - have you privacy-preserving cryptographic proofs (see the [`taproot-ringsig`](https://github.com/jonasnick/taproot-ringsig) proof-of-concept) of the business statements youâre claiming for the past periods ? - would you consider monitoring miners mempools for double-spend of a given UTXO, think âreverse transaction-acceleratorâ ?\r\n> I think you asking these questions inappropriately gives readers the impression that there actually are non-trivial examples of real businesses who are relying on unconfirmed transactions. The fact is in this entire thread no-one has been able to provide clear, convincing, evidence that this is true. We have a lot of claims. But claims are not evidence of use. If anything, the claims so far are suggestive of fraud. For example it's plausible that the lack of usage of GAP600 is because they offer a service that doesn't actually work, so businesses use them briefly - paying them money - and then quit. GAP600 has even said that they don't even test their own service with real double-spends. Notably, in the example of Changelly given above, they did respond to be and confirmed that they do NOT use GAP600's service for any real customer-to-business use-case. Changelly also confirmed to me that they have never even tested it with a real double spend.\r\n> The measurement method of the PR author to justify the change have been called out as âdubiousâ in the latest [Bitcoin Optech newsletter](https://bitcoinops.org/en/newsletters/2023/08/09/).\r\n> First of all, the word \"dubious\" doesn't even appear in the Bitcoin Optech newsletter. Quoting it in such a way is not accurate. Second, all Bitocin Optech actually did was link Andrew Chow's initial comment, which even he admitted was clearly not correct with respect to Antpool.\r\n\r\nShould anyone here (except the author) wish to have a test account of GAP600 please reach out via our site, would be happy to provide. I am also open to have a public call to show and discuss our offering and possibly show live transactions being scored and queried.\r\n\r\nIt is clear from the authors commentary this PR is not about full RBF it is about stopping 0-conf.\r\n\r\nThe onerous is not on 0-conf or first seen rule proponents to justify their use cases. The onerous is on the author to show and justify that this PR is so important and value adding that it should be adopted  despite 0-conf use cases and adoption. This has not been remotely shown. \r\n\r\nThe methodology of 37% assessment above is not thorough - a simple test of representative trx count with a time gap followed by a replace trxs would give an initial assessment.  A feature which has 37% natural adoption with in less than a year indicates viral adoption and wouldn't require any lobbying, or default setting to become dominant with in a very short time.\r\n\r\nThe author continues to repeat baseless accusations - these have been responded to https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1669514712 \r\n\r\nGAP600 is active business with ongoing clients who value their privacy just like the miners the author quotes above - July 2023 GAP600 serviced  circa 350k unique transaction hashes. I will check directly with Changelly on their feedback, as well as look to asses further information which can be shared publicly. The author does not and can not know all use cases of Bitcoin. \r\n",
      "created_at" : "2023-08-14T20:59:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1678052992",
      "id" : 1678052992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kBQ6A",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1678052992/reactions"
      },
      "updated_at" : "2023-08-14T20:59:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1678052992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/34838207?v=4",
         "events_url" : "https://api.github.com/users/Daniel600/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Daniel600/followers",
         "following_url" : "https://api.github.com/users/Daniel600/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Daniel600/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Daniel600",
         "id" : 34838207,
         "login" : "Daniel600",
         "node_id" : "MDQ6VXNlcjM0ODM4MjA3",
         "organizations_url" : "https://api.github.com/users/Daniel600/orgs",
         "received_events_url" : "https://api.github.com/users/Daniel600/received_events",
         "repos_url" : "https://api.github.com/users/Daniel600/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Daniel600/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Daniel600/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Daniel600"
      }
   },
   {
      "author_association" : "NONE",
      "body" : " > You're arguing a logical fallacy here. You might as well argue that the vast majority of people don't even run nodes, so there's no reason for any node to distribute any transactions or blocks at all.\n\nNot at all. I'm arguing that\n\n> the purpose of a Bitcoin node is to widely distribute transactions and blocks\n\nIs false. It's one purpose of some nodes (that they mostly do by default doesn't mean that's a major goal of the people running them), but it's optional, and which transactions get relayed is dependent on all kinds of things, including whether your mempool is currently full. I could shrink my mempool to the minimum size to have a reasonable fee estimate, and stop relaying transactions which are below its floor, but which are absolutely relevant to the rest of the network, for example.\n\n'Maximum relay' doesn't seem to matter anywhere else.\n\nThere are a cohort of Bitcoiners who actively don't want to maximally relay for different reasons. Some are the zeroconf people. Some are people who don't want to relay ordinals. Whether or not you agree with them, it's not the place of core to dictate what their node relays.\n\n> The fact is, nodes that choose to propagate transactions are spreading information around. Spreading the maximal amount of useful information - all replacements, full-rbf or not - is maximally compatible with both full-rbf and non-full-rbf miners.\n\nNo. Nodes relay transactions by default. That is not a choice, and relaying transactions is tightly coupled with having a mempool. Afaict, which transactions get relayed is almost _entirely_ the same decision as which transactions get added to my mempool in core.\n\nGiven my node is _my node_ first, regardless of whether it reduces some ideal (the ideal you are arguing is 'maximum relay'), _my node_ will be configured for _my purposes_, and mempool configuration, again, is a part of that. \n\n> Again, for the purpose of transaction fees since miners are mining full-rbf, knowing about full-rbf replacements (and thus their contribution to fees) gives you the maximum information.\n\nNo, replacements drop the replaced tx out of the mempool. It gives you different information. In the case of full RBF, it presents a transaction which 37% of hash rate might mine _in lieu of_ a transaction which the other 63% might mine. \n\n> Of course, in practice replacements are only a small % of overall fees, so the difference is small. But that difference is in favor of defaulting to full-rbf.\n\nI agree the difference is currently small, but its 'being in favour of default full RBF' is entirely arbitrary. You don't know which is preferable for users, yet you want to change default policy and pick _your_ preferred option.\n\n> The logic that a small minority simply wanting a broken feature to exist forever is reason to keep it.\n\nThis is a massive stretch. Big blockers wanted to increase block size, a consensus change, to not have to think about actual scaling solutions. They wanted to push the cost of 'scaling' onto node runners. \n\nFirst seen is not broken. Of the two available options, it is the one which currently better reflects majority hashrate policy. It can coexist with full RBF indefinitely, and sure, if full RBF sees large scale adoption, first at mining, and then by node runners, a default change might make sense. We aren't there yet. I actually expected us to get there a lot faster; my concern when the flag was merged was that we'd see very quick, very broad miner adoption (given leaving money on the table otherwise), but little user awareness/adoption at which point there's an exploitable information asymmetry in publishing a low fee non-RBF-flagging transaction, waiting a little for propagation, then publishing a competitive fee full RBF replacement to invisibly (to those with no full RBF) outbid others in the fee market. Maybe that's still a valid concern, but given it doesn't seem to have materialised, maybe I'm missing something.\n\n> Yes, it is a terrible idea. BIP125 bends over backwards to support essentially non-existent \"zero conf\" usecases. Getting rid of BIP125 - adopting full-rbf - fixes that mistake. The only reason why you'd want the BIP125 flag is for the sake of zero-conf. There's no other reason to have a distinction between replaceable and \"non-replaceable\" transactions.\n\nThe issue is we have that flag, we have untold numbers of nodes running unknown local policy for unknown reasons. This PR makes a decision for them. I don't think such decisions should be taken lightly, and I simply don't see much _real_ utility in this change.\n\nFull RBF works. It's already accessible. The only potential benefits of this change, as far as I can tell, are:\n- Maybe in the future being able to remove an option node runners currently have without too much fuss. \n- People who want full RBF not needing to configure it.\n\nThe first is a nice-if-it-happens, but actively seeking to reduce options, even options you don't agree with, which have no actual impact on others, doesn't sit right with me.\n\nThe second is honestly a loss, to me. I want people to configure their nodes. I want them to make those decisions themselves. Admittedly that's not a great argument either, but I don't think that minor convenience is any more a compelling reason to change a default, and it's the one being used to justify a change from the status quo without any real evidence for or against that being what users at large actually want. \n\n> Yes. And adopting it by default makes it easier for all users to benefit from it. The fact that a limited version of a good thing exists is not grounds to stop all improvement.\n\nI don't agree it makes things much easier, besides by pretending there are absolutely no trade offs and just making the decision about those trade offs for the user. Which, with the current state of the network, is false.\n\nIf it was just relay, I would probably have already acked. But it _does_ impact your local view of the mempool, and some decisions you might make based on it, in non-obvious ways and I don't like that decision being made for users without good (in my view) justification.\n\nAnyone who _really wants_ full RBF will have enabled it already. This PR gets basically (I suppose it's possible someone could have manually set false in their config) everyone else, whether that's the local policy they would want, if informed and made to pick, or not.",
      "created_at" : "2023-08-14T22:09:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1678145113",
      "id" : 1678145113,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kBnZZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1678145113/reactions"
      },
      "updated_at" : "2023-08-14T23:30:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1678145113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23095702?v=4",
         "events_url" : "https://api.github.com/users/iBeizsley/events{/privacy}",
         "followers_url" : "https://api.github.com/users/iBeizsley/followers",
         "following_url" : "https://api.github.com/users/iBeizsley/following{/other_user}",
         "gists_url" : "https://api.github.com/users/iBeizsley/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/iBeizsley",
         "id" : 23095702,
         "login" : "iBeizsley",
         "node_id" : "MDQ6VXNlcjIzMDk1NzAy",
         "organizations_url" : "https://api.github.com/users/iBeizsley/orgs",
         "received_events_url" : "https://api.github.com/users/iBeizsley/received_events",
         "repos_url" : "https://api.github.com/users/iBeizsley/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/iBeizsley/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/iBeizsley/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/iBeizsley"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@iBeizsley @Daniel600 I think it's worth noting that what's being argued here is **NOT** any less of a choice for users than disabling full-rbf by default. The decision is made for the user no matter what the default is. Inaction does not equate to not making a decision. It is not possible for a setting to be \"unset\" by default, it must either be off or on.\r\n\r\nBitcoin Core's policy has been against transaction censorship; there is a reason why tools like ordisrespector will not and should not make it into the base bitcoin client, no matter how much I or any other bitcoiner supports them. From this perspective, consistent policy that reduces capacity for censorship is the norm, and thus this change which relaxes mempool policy allowing more transactions through should be supported by Core.\r\n\r\nThe ignoring of non-rbf-flagging replacements has never been economically aligned for miners. At any point in time, a sufficiently expensive transaction can and will be mined by miners. This is evident in the presence of numerous \"transaction accelerators\" (direct inputs to their mempools) provided by miners.\r\n\r\nYou are indirectly advocating for a form of transaction censorship, which I personally see as extremely dangerous behaviour.\r\n\r\n@YellowRoseCx \r\n\r\n> Satoshi Nakamoto said having all users of a network run their own node doesn't scale and is similar to every Usenet user running their own NNTP server.\r\n>\r\n> And he recommended \"users to use Simplified Payment Verification (section 8) to check for double spending, which only requires having the chain of block headers, or about 12KB per day. Only people trying to create new coins would need to run network nodes. At first, most users would run network nodes, but as the network grows beyond a certain point, it would be left more and more to specialists with server farms of specialized hardware.\"\r\n\r\nIf Satoshi Nakamoto says something and you fall into that appeal to authority, what is to stop you from following any grifter or authoritarian ruler? Bitcoin does not operate based on what someone or someone else says, this assumption is silly. Regardless, most opinions of Satoshi are wildly outdated and frankly come from a place of unfamiliarity with bitcoin. Just because they created it doesn't mean it wasn't still an extremely new technology.\r\n\r\n> Non-mining nodes have no network power unless you're accepting payments through that node, otherwise they can only watch the rules, not enforce them. Miners in consensus create the rules and enforce them. The power comes from voting ability from hashrate.\r\n> \r\n> \"A fully validating node running on a RaspPi does nothing to enforce consensus because miners don't care if you follow their chain or not.\r\n\r\nSure, miners don't care if you follow their chain. In addition, nodes don't care if miners don't follow their rules. There is absolutely no behavior within bitcoin that is going to cause anyone to follow a miner that invents new consensus rules. Believe it or not, when a miner does that, we call these 'shitcoins'.\r\n\r\n> The economic nodes that matter are exchanges, vendors, etc. because their choices dictate default consumer behavior, which overall has a far greater impact on the consensus ecosystem than a non-mining user node.\r\n> \r\n> Fully validating nodes that process no transactions/have no economic activity have no input on the consensus of Bitcoin.\"\r\n\r\nThis is untrue. One's status as a business is entirely irrelevant if they begin running on a fork that is incompatible with bitcoin. How is any of this relevant to this discussion?",
      "created_at" : "2023-08-15T01:01:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1678283404",
      "id" : 1678283404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kCJKM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1678283404/reactions"
      },
      "updated_at" : "2023-08-15T01:01:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1678283404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/46897919?v=4",
         "events_url" : "https://api.github.com/users/Symphonic3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Symphonic3/followers",
         "following_url" : "https://api.github.com/users/Symphonic3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Symphonic3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Symphonic3",
         "id" : 46897919,
         "login" : "Symphonic3",
         "node_id" : "MDQ6VXNlcjQ2ODk3OTE5",
         "organizations_url" : "https://api.github.com/users/Symphonic3/orgs",
         "received_events_url" : "https://api.github.com/users/Symphonic3/received_events",
         "repos_url" : "https://api.github.com/users/Symphonic3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Symphonic3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Symphonic3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Symphonic3"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I think it's worth noting that what's being argued here is **NOT** any less of a choice for users than disabling full-rbf by default. The decision is made for the user no matter what the default is. Inaction does not equate to not making a decision.\n\nFirst seen is the existing default. I'm of the personal opinion it's probably a worse default in a vacuum, but the decision isn't being made in a vacuum, and changing defaults to influence policy toward personal preference, even if I'm confident in that preference, is quite different in my view to something being the default because there was not previously another option.\n\n> It is not possible for a setting to be \"unset\" by default, it must either be off or on.\n\nIt absolutely is possible, that's just not how Core has operated. I would immediately ack a PR which prompted the user to select a policy in the absence of a defined setting in their config for this, and any other policy, but I don't imagine it would get merged.\n\n> Bitcoin Core's policy has been against transaction censorship... You are indirectly advocating for a form of transaction censorship, which I personally see as extremely dangerous behaviour.\n\nAm I censoring your transactions if I run blocks only? Am I censoring your transaction if I set my mempool limit to 10mb, it fills up, and your transaction has a fee rate below my mempool's current floor? I won't relay your transaction in either of those cases, and plenty of other scenarios I don't think people would consider to be censorship.\n\nBy your own admission, and I completely agree, full RBF seems highly incentive aligned for miners. A relatively low percentage of nodes relaying these transactions allows them to reach miners, and be mined. Not changing the default isn't censorship; these transactions are reaching miners despite the default being to not relay them.\n\nI'm not _completely_ against changing the default, and I'm absolutely not against full RBF as a concept. But I've yet to hear a good justification for making a change from the status quo on behalf of users.",
      "created_at" : "2023-08-15T01:36:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1678303905",
      "id" : 1678303905,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kCOKh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1678303905/reactions"
      },
      "updated_at" : "2023-08-15T01:41:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1678303905",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23095702?v=4",
         "events_url" : "https://api.github.com/users/iBeizsley/events{/privacy}",
         "followers_url" : "https://api.github.com/users/iBeizsley/followers",
         "following_url" : "https://api.github.com/users/iBeizsley/following{/other_user}",
         "gists_url" : "https://api.github.com/users/iBeizsley/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/iBeizsley",
         "id" : 23095702,
         "login" : "iBeizsley",
         "node_id" : "MDQ6VXNlcjIzMDk1NzAy",
         "organizations_url" : "https://api.github.com/users/iBeizsley/orgs",
         "received_events_url" : "https://api.github.com/users/iBeizsley/received_events",
         "repos_url" : "https://api.github.com/users/iBeizsley/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/iBeizsley/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/iBeizsley/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/iBeizsley"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> First seen is the existing default. I'm of the personal opinion it's probably a worse default in a vacuum, but the decision isn't being made in a vacuum, and changing defaults to influence policy toward personal preference, even if I'm confident in that preference, is quite different in my view to something being the default because there was not previously another option.\r\n\r\nThis philosophy is antithetical to any kind of development at all.\r\n\r\n> It is not possible for a setting to be \"unset\" by default, it must either be off or on.\r\n> \r\n> It absolutely is possible, that's just not how Core has operated. I would immediately ack a PR which prompted the user to select a policy in the absence of a defined setting in their config for this, and any other policy, but I don't imagine it would get merged.\r\n\r\nHow do you propose the default state of the checkbox presented to the user be set?\r\n\r\n> Am I censoring your transactions if I run blocks only? Am I censoring your transaction if I set my mempool limit to 10mb, it fills up, and your transaction has a fee rate below my mempool's current floor? I won't relay your transaction in either of those cases, and plenty of other scenarios I don't think people would consider to be censorship.\r\n\r\nYou are engaging in transaction censorship whether you like it or not by running a mempool policy that doesn't relay every consensus valid transaction. Leech nodes are a mild form of censorship on the network.\r\n\r\n> By your own admission, and I completely agree, full RBF seems highly incentive aligned for miners. A relatively low percentage of nodes relaying these transactions allows them to reach miners, and be mined. Not changing the default isn't censorship; these transactions are reaching miners despite the default being to not relay them.\r\n> \r\n> I'm not _completely_ against changing the default, and I'm absolutely not against full RBF as a concept. But I've yet to hear a good justification for making a change from the status quo on behalf of users.\r\n\r\nBecause if it's assumed that Full-RBF is now occurring pervasively, it is unhealthy for the network to have a 60%+ disagreement on certain txs. This leads to bad assumptions, e.g. thinking that 0-conf is safe, and leads to degraded health of transaction relay if it continues, especially if the same were to happen with other kinds of transactions.",
      "created_at" : "2023-08-15T02:50:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1678354752",
      "id" : 1678354752,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kCalA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 1,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1678354752/reactions"
      },
      "updated_at" : "2023-08-15T02:50:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1678354752",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/46897919?v=4",
         "events_url" : "https://api.github.com/users/Symphonic3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Symphonic3/followers",
         "following_url" : "https://api.github.com/users/Symphonic3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Symphonic3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Symphonic3",
         "id" : 46897919,
         "login" : "Symphonic3",
         "node_id" : "MDQ6VXNlcjQ2ODk3OTE5",
         "organizations_url" : "https://api.github.com/users/Symphonic3/orgs",
         "received_events_url" : "https://api.github.com/users/Symphonic3/received_events",
         "repos_url" : "https://api.github.com/users/Symphonic3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Symphonic3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Symphonic3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Symphonic3"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ajtowns  @ariard  See [[bitcoin-dev] Full-RBF testing: at least 31% of hash power, over at least 4 pools, is mining full-RBF right now](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021890.html) for a re-confirmation of my OTS calendar findings, including a tool that anyone can easily use to also test full-RBF adoption for themselves.\r\n\r\n@Daniel600 \r\n> The methodology of 37% assessment above is not thorough - a simple test of representative trx count with a time gap followed by a replace trxs would give an initial assessment. A feature which has 37% natural adoption with in less than a year indicates viral adoption and wouldn't require any lobbying, or default setting to become dominant with in a very short time.\r\n\r\nAs you can see, I've reconfirmed my OTS findings with test transactions, showing many examples of 4 different pools mining full-RBF. Re: \"wouldn't require any lobbying\", this pull-req isn't about lobbying. It's acknowledging the fact that miners have adopted full-RBF in significant numbers, and since they have, there is every reason to take advantage of that capability by setting an appropriate default for transaction relaying nodes. Miners who want to continue *not* mining full-RBF replacements are of course able to do so, and it's quite possible that some will, at least initially. Full-RBF relaying nodes are of course compatible with non-full-RBF miners.",
      "created_at" : "2023-08-16T10:38:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1680366922",
      "id" : 1680366922,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kKF1K",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1680366922/reactions"
      },
      "updated_at" : "2023-08-17T14:36:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1680366922",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think you asking these questions inappropriately gives readers the impression\r\n> that there actually are non-trivial examples of real businesses who are relying\r\n> on unconfirmed transactions. The fact is in this entire thread no-one has been\r\n> able to provide clear, convincing, evidence that this is true.\r\n\r\nI think you have two layers of reasoning: a) browsing the matrix of alternatives solutions for unconfirmed transactions and b) the economics traffic of the use-cases which justifies to design and deploy such alternatives solutions. a) is interesting for _single-party_ 0-conf channels LSPs.\r\n\r\n> First of all, the word \"dubious\" doesn't even appear in the Bitcoin Optech\r\n> newsletter. \r\n\r\n\"Peter Todd argues that the change is warranted because (according to his measurements, which have been [called into doubt](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657669845)),â. (newsletter #263) and âdubiousâ definition, see wiktionary entry: https://en.wiktionary.org/wiki/dubious So I think my statement on your statement as represented by Optech was correct.\r\n\r\n> See [[bitcoin-dev] Full-RBF testing: at least 31% of hash power, over at least 4 pools, is mining full-RBF right now](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021890.html) for a re-confirmation of my OTS calendar > findings, including a tool that anyone can easily use to also test full-RBF adoption for themselves.\r\n\r\nSeen the post. I think it could be interesting to re-do a coordinated full-RBF tests with full-nodes run by a set of independents participants, with debug=mempool enabled to corroborate the observations. Akin to astronomical observatories to watch volcanology or meteorology phenoma. Maybe with a longer delay than 30 seconds between replacements.\r\n\r\nPersonally I donât have time to participate in such observation during the coming weeks, though if there is a mailing list announcement ahead, Iâll do my best to have a well-connected full-node running with debug=mempool to participate in such coordinated and distributed observations of full-rbf double-spends.",
      "created_at" : "2023-08-17T02:36:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1681522508",
      "id" : 1681522508,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kOf9M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1681522508/reactions"
      },
      "updated_at" : "2023-08-17T02:38:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1681522508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > I think you asking these questions inappropriately gives readers the impression\r\n> > that there actually are non-trivial examples of real businesses who are relying\r\n> > on unconfirmed transactions. The fact is in this entire thread no-one has been\r\n> > able to provide clear, convincing, evidence that this is true.\r\n> \r\n> I think you have two layers of reasoning: a) browsing the matrix of alternatives solutions for unconfirmed transactions and b) the economics traffic of the use-cases which justifies to design and deploy such alternatives solutions. a) is interesting for _single-party_ 0-conf channels LSPs.\r\n\r\nIt's pretty simple. What you said was \"I do have few technical questions for **the users** running zero-conf in an economic fashion\". (emphasis mine) That statement gives the clear impression that you think those users actually exist in non-trivial numbers. Since no-one has provided any hard evidence they do, that's misleading.\r\n\r\nAs for 0-conf channels, none of the actual deployed ones (eg Phoenix) rely on first-seen. Phoenix even sets the BIP125 flag on their LN-related on-chain transactions, and they do _not_ accept on-chain payments without confirmation. If you are aware of another *deployed in production* LN implementation that does, I'd like to know, because that's clearly dangerous and they should stop.\r\n\r\n> > First of all, the word \"dubious\" doesn't even appear in the Bitcoin Optech\r\n> > newsletter.\r\n> \r\n> \"Peter Todd argues that the change is warranted because (according to his measurements, which have been [called into doubt](https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1657669845)),â. (newsletter #263) and âdubiousâ definition, see wiktionary entry: https://en.wiktionary.org/wiki/dubious So I think my statement on your statement as represented by Optech was correct.\r\n\r\nMaybe you're missing this because of english not being a first language, but the word \"dubious\" in this context has significantly different connotations, particularly as you were implying that Bitcoin Optech *themselves* had characterized my research as such.\r\n\r\n> > See [[bitcoin-dev] Full-RBF testing: at least 31% of hash power, over at least 4 pools, is mining full-RBF right now](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2023-August/021890.html) for a re-confirmation of my OTS calendar > findings, including a tool that anyone can easily use to also test full-RBF adoption for themselves.\r\n> \r\n> Seen the post. I think it could be interesting to re-do a coordinated full-RBF tests with full-nodes run by a set of independents participants, with debug=mempool enabled to corroborate the observations. Akin to astronomical observatories to watch volcanology or meteorology phenoma. Maybe with a longer delay than 30 seconds between replacements.\r\n\r\nMy OTS research was done with transactions that were usually much more than 30 seconds between replacements. That research has already been done and clearly shows full-RBF mining. After all, in addition to my transactons, there's plenty of other sources of full-RBF replacements, and plenty of services such as https://mempool.space/rbf and https://fullrbf.mempool.observer/ observing those replacements happening. This isn't an occasional propagation glitch. At this point I believe denying the obvious is harmful, as it misleads people about the risks of unconfirmed transactions.\r\n\r\n> Personally I donât have time to participate in such observation during the coming weeks, though if there is a mailing list announcement ahead, Iâll do my best to have a well-connected full-node running with debug=mempool to participate in such coordinated and distributed observations of full-rbf double-spends.\r\n\r\nI'll ask you a simple question: do you think *any* miners are mining full-RBF at the moment?",
      "created_at" : "2023-08-17T14:34:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1682399338",
      "id" : 1682399338,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kR2Bq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1682399338/reactions"
      },
      "updated_at" : "2023-08-17T14:34:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1682399338",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept Ack. To quote moonsettler from a different mempool policy discussion\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/28217#issuecomment-1666604137\r\n\r\n>evil mempool is among the largest existential threats to bitcoin and we absolutely have no way to stop it from coming into existence. in fact unnecessarily restrictive mempool policy naturally incentivizes it's emergence.\r\n\r\n>people attempting to effectively filter economically motivated, paying market for block space will most likely result in perverse outcomes that may hurt the security assumptions badly. basically opens the door for reorg markets because it solves the whole coordination problem.\r\n\r\nNow, do I agree with this line of logic in full? Not necessarily, but if an \"evil mempool\" concerns you, it certainly applies to full rbf. Every \"stuck\" transaction in the mempool that wasn't marked with RBF has to go to a \"transaction accelerator\" which is certainly an evil mempool if there ever was one. Lets allow all miners the incentives of higher paying transactions and not just the ones that are part of pools that have transaction acceleration services.",
      "created_at" : "2023-08-17T16:32:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1682605147",
      "id" : 1682605147,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kSoRb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1682605147/reactions"
      },
      "updated_at" : "2023-08-17T16:32:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1682605147",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23155951?v=4",
         "events_url" : "https://api.github.com/users/nerd2ninja/events{/privacy}",
         "followers_url" : "https://api.github.com/users/nerd2ninja/followers",
         "following_url" : "https://api.github.com/users/nerd2ninja/following{/other_user}",
         "gists_url" : "https://api.github.com/users/nerd2ninja/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/nerd2ninja",
         "id" : 23155951,
         "login" : "nerd2ninja",
         "node_id" : "MDQ6VXNlcjIzMTU1OTUx",
         "organizations_url" : "https://api.github.com/users/nerd2ninja/orgs",
         "received_events_url" : "https://api.github.com/users/nerd2ninja/received_events",
         "repos_url" : "https://api.github.com/users/nerd2ninja/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/nerd2ninja/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/nerd2ninja/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/nerd2ninja"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@petertodd\r\n\r\nRepeatedly seeking \"citations\" for 0-conf use cases is not the way to convince people that your PR should be merged. You made the PR, seeking to change a long-standing default value. The onus in on **you** to show us that your PR will not break existing use cases. Forcefully demanding users and supporters of 0-conf/FSS policies to show their data is fallacious shifting of burden of proof. If you don't think these use cases exist, go ahead and prove it. \r\n\r\nYour own views on mempool policies are not infallible. Users of 0-conf/FSS have their own reasons and that itself should be respected. Being dismissive and browbeating others into submission does nothing to support your cause.",
      "created_at" : "2023-08-18T12:06:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1683822349",
      "id" : 1683822349,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kXRcN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1683822349/reactions"
      },
      "updated_at" : "2023-08-18T12:06:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1683822349",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/121429386?v=4",
         "events_url" : "https://api.github.com/users/viresinnumeris-1/events{/privacy}",
         "followers_url" : "https://api.github.com/users/viresinnumeris-1/followers",
         "following_url" : "https://api.github.com/users/viresinnumeris-1/following{/other_user}",
         "gists_url" : "https://api.github.com/users/viresinnumeris-1/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/viresinnumeris-1",
         "id" : 121429386,
         "login" : "viresinnumeris-1",
         "node_id" : "U_kgDOBzzdig",
         "organizations_url" : "https://api.github.com/users/viresinnumeris-1/orgs",
         "received_events_url" : "https://api.github.com/users/viresinnumeris-1/received_events",
         "repos_url" : "https://api.github.com/users/viresinnumeris-1/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/viresinnumeris-1/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/viresinnumeris-1/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/viresinnumeris-1"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The onus in on you to show us that your PR will not break existing use cases. \r\n\r\nHis argument is, of course, that the use cases are already broken and thus the setting may as well be changed to reflect reality and help the network. I find the evidence presented convincing enough.\r\n\r\n> If you don't think these use cases exist, go ahead and prove it.\r\n\r\nProving a negative in this context seems nearly impossible. How should he do that? Visit every website on the web and check if they accept 0-conf? Asking others to prove him wrong seems the only viable course of action in this regard. And there is also precedent for this in previous changes on the implementation and protocol level. There have been many mailing list posts over the years asking \"does it break anything for you if we do this?\" and if people didn't speak up and laid out their use case in a convincing manner the plans usually went ahead if the change was otherwise viewed as positive.\r\n\r\nIf you don't like it just give a NACK and lay out an argument strong enough that he can not convince people otherwise.",
      "created_at" : "2023-08-18T13:04:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1683891978",
      "id" : 1683891978,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kXicK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1683891978/reactions"
      },
      "updated_at" : "2023-08-18T13:04:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1683891978",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Repeatedly seeking \"citations\" for 0-conf use cases is not the way to convince people that your PR should be merged. You made the PR, seeking to change a long-standing default value. The onus in on **you** to show us that your PR will not break existing use cases. Forcefully demanding users and supporters of 0-conf/FSS policies to show their data is fallacious shifting of burden of proof. If you don't think these use cases exist, go ahead and prove it.\r\n\r\nProving it is is exactly what I am doing, in multiple ways. For example:\r\n\r\n1. Challenging people to demonstrate actual production use-cases that rely on first-seen mempool policy. People have failed to do that, even companies claiming to offer such services.\r\n2. Proving that [over 31% of hash power is mining full-rbf](https://petertodd.org/2023/fullrbf-testing). Relying on first-seen is obviously nuts when so many miners ignore it. So it's no wonder that people continually fail to provide examples of such use-cases: those use-cases are broken and people have stopped doing that.\r\n3. Demonstrating that services that previously relied on first-seen have stopped doing so.\r\n\r\nIt used to be the case that lots of BTC<->altcoin exchange services would accept Bitcoin with zero confirmations and no KYC. Those services have all stopped doing that because doing so gets you exploited, over and over again. People have lost literally hundreds of thousands of dollars unsuccessfully trying to accept unconfirmed transactions.\r\n\r\nSimilarly, Bitrefill used to accept unconfirmed transactions. They've stopped doing that. No doubt because it's just too easy to exploit.\r\n \r\n> Your own views on mempool policies are not infallible. Users of 0-conf/FSS have their own reasons and that itself should be respected. Being dismissive and browbeating others into submission does nothing to support your cause.\r\n\r\nWe are quite willing to discuss mempool policies that attempt to prevent *actual* use of Bitcoin: https://github.com/bitcoin/bitcoin/pull/28217 (note ACKS by active Core devs) and we have merged similar policies in the past (eg the dust rule).\r\n\r\nEliminating a broken policy that people don't actually use, in exchange for [many other benefits](https://petertodd.org/2023/fullrbf-multiparty-protocols), makes a lot of sense.",
      "created_at" : "2023-08-19T09:34:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1684904753",
      "id" : 1684904753,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kbZsx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1684904753/reactions"
      },
      "updated_at" : "2023-08-19T09:34:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1684904753",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK : RBF is a larp. ",
      "created_at" : "2023-08-20T22:02:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1685407533",
      "id" : 1685407533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kdUct",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1685407533/reactions"
      },
      "updated_at" : "2023-08-20T22:02:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1685407533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3104223?v=4",
         "events_url" : "https://api.github.com/users/russeree/events{/privacy}",
         "followers_url" : "https://api.github.com/users/russeree/followers",
         "following_url" : "https://api.github.com/users/russeree/following{/other_user}",
         "gists_url" : "https://api.github.com/users/russeree/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/russeree",
         "id" : 3104223,
         "login" : "russeree",
         "node_id" : "MDQ6VXNlcjMxMDQyMjM=",
         "organizations_url" : "https://api.github.com/users/russeree/orgs",
         "received_events_url" : "https://api.github.com/users/russeree/received_events",
         "repos_url" : "https://api.github.com/users/russeree/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/russeree/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/russeree/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/russeree"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "ACK.  mempoolfullrbf=0 incentivizes the formation of an \"Evil Mempool/Private Mempool\" since the most economical transactions are censored instead of broadcast.  This would harm the underlying security of the network and make fee estimation less accurate.",
      "created_at" : "2023-08-21T12:08:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1686207974",
      "id" : 1686207974,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585kgX3m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686207974/reactions"
      },
      "updated_at" : "2023-08-21T12:08:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1686207974",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/118238055?v=4",
         "events_url" : "https://api.github.com/users/Kruwed/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Kruwed/followers",
         "following_url" : "https://api.github.com/users/Kruwed/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Kruwed/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Kruwed",
         "id" : 118238055,
         "login" : "Kruwed",
         "node_id" : "U_kgDOBwwrZw",
         "organizations_url" : "https://api.github.com/users/Kruwed/orgs",
         "received_events_url" : "https://api.github.com/users/Kruwed/received_events",
         "repos_url" : "https://api.github.com/users/Kruwed/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Kruwed/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Kruwed/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Kruwed"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-08-29T08:57:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1697040067",
      "id" : 1697040067,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585lJsbD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697040067/reactions"
      },
      "updated_at" : "2023-08-29T08:57:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697040067",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It's pretty simple. What you said was \"I do have few technical questions for the users running zero-conf in an economic\r\n>fashion\". (emphasis mine) That statement gives the clear impression that you think those users actually exist in non-trivial > numbers. Since no-one has provided any hard evidence they do, that's misleading.\r\n\r\nMy statement was only an invitation to those users, if their actually exist in non-trivial numbers, to give provide relevant technical and economic information to the present discussion. From my experience of last year initial `mempoolfullrbf` deployment and some users showing up to defend the status quo (cf. Muunâs [mail](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-October/020980.html)) more than I expected I think the good communication practice is to give the opportunity and relative time for such potential users to give their say. In matters of Bitcoin protocol upgrades, you never know if the lack of opposition is the lack of opposing users, or the lack of awareness of such existing opposing users.\r\n\r\n> As for 0-conf channels, none of the actual deployed ones (eg Phoenix) rely on first-seen. Phoenix even sets the BIP125\r\n> flag on their LN-related on-chain transactions, and they do not accept on-chain payments without confirmation. If you are > aware of another deployed in production LN implementation that does, I'd like to know, because that's clearly dangerous\r\n> and they should stop.\r\n\r\nIâm not ware of another deployed in production LN implementation / services that does 0-conf channels, though for your awareness zero-conf dual-funding / splicing can be expected to become a real-world usage (cf. Phoenix dev [mail](https://lists.linuxfoundation.org/pipermail/lightning-dev/2023-May/003920.html)), where mempool pinning becomes a liquidity griefing. Even if this real-world usage brings risks, I think itâs a reasonable trade-off on the liquidity management dimension.\r\n\r\n> Maybe you're missing this because of english not being a first language, but the word \"dubious\" in this context has\r\n> significantly different connotations, particularly as you were implying that Bitcoin Optech themselves had characterized\r\n> my research as such.\r\n\r\nFor sure it was unclear to me if in this context what was called dubious by Optech, either the measurement methodology, or the outcome of the measurement themselves. I think debating a measurement methodology is always a good conversation to have, history of science is sparked with epistemology controversies.\r\n\r\n> My OTS research was done with transactions that were usually much more than 30 seconds between replacements. That > research has already been done and clearly shows full-RBF mining. After all, in addition to my transactons, there's plenty\r\n> of other sources of full-RBF replacements, and plenty of services such as https://mempool.space/rbf and\r\n> https://fullrbf.mempool.observer/ observing those replacements happening. This isn't an occasional propagation glitch. At > this point I believe denying the obvious is harmful, as it misleads people about the risks of unconfirmed transactions.\r\n\r\nTo be fair Iâve looked on myself on few of those observation devices showing some hints of full-RBF mining after last year initial mempoolfullrbf deployment. I donât think at that stage itâs an occasional propagation glitch, though to clarify my intent I think itâs valuable to spend time discussing what we think is a proven method to demonstrate phenomena on the transaction-relay network. I donât think it will be the last time weâll have as an ecosystem a controversy on policy rules deployment. While I agree on misleaded people not understanding the risks of unconfirmed transactions there will always a trade-off to appreciate between moving forward with a protocol upgrade deployment lacking enough consensus and as such raising more discussion and taking time to build more technical ground and understanding of said protocol upgrade.\r\n\r\n> I'll ask you a simple question: do you think any miners are mining full-RBF at the moment?\r\n\r\nYes and I think from my memory of last year full-rbf transactions propagations simulations, if 10% of the transaction-relay nodes (not mining nodes) are running the flags with true, in practice it might be logically equivalent to the majority of nodes running full-rbf.",
      "created_at" : "2023-08-29T15:12:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1697640723",
      "id" : 1697640723,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585lL_ET",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697640723/reactions"
      },
      "updated_at" : "2023-08-29T15:12:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1697640723",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK\r\n\r\nI think at this point the argument against mining pool incentive compatibility has been proven moot:\r\nhttps://twitter.com/mononautical/status/1699440451118313955\r\n\r\nAs for whether double-spending is easier because of RBF, replacing payments in an open global network protocol with adversarial untrusted distributed consensus cannot be guaranteed until a transaction is mined. Anyone pretending the case is anything to the contrary is making promises Bitcoin can't keep and has technically never been able to keep. Zeroconf is peddling snake oil.\r\n\r\nOr, to put it even more succinctly: RBF is a larp.",
      "created_at" : "2023-09-07T05:34:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1709502648",
      "id" : 1709502648,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585l5PC4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1709502648/reactions"
      },
      "updated_at" : "2023-09-07T05:34:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1709502648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/285690?v=4",
         "events_url" : "https://api.github.com/users/cryptoquick/events{/privacy}",
         "followers_url" : "https://api.github.com/users/cryptoquick/followers",
         "following_url" : "https://api.github.com/users/cryptoquick/following{/other_user}",
         "gists_url" : "https://api.github.com/users/cryptoquick/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/cryptoquick",
         "id" : 285690,
         "login" : "cryptoquick",
         "node_id" : "MDQ6VXNlcjI4NTY5MA==",
         "organizations_url" : "https://api.github.com/users/cryptoquick/orgs",
         "received_events_url" : "https://api.github.com/users/cryptoquick/received_events",
         "repos_url" : "https://api.github.com/users/cryptoquick/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/cryptoquick/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/cryptoquick/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/cryptoquick"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think itâs good to communicate on the mailing list in which version (27.0 or 28.0) full-rbf might be turn on by default. I advocated such setting in the past as early as 0.24, though at the time some 0-conf transactions applications and services were migrating their stuff in consequence.",
      "created_at" : "2023-11-03T20:12:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1793036667",
      "id" : 1793036667,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585q35F7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793036667/reactions"
      },
      "updated_at" : "2023-11-03T20:12:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793036667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Well it's certainly not going to be in 26, as we're releasing it now. \r\n\r\nIf we actually merge this soonish I'll make a post saying it will come out in 27.0. I can also write some release notes if people want them.\r\n\r\nRight now Antpool is the largest pool, and it's still mining full-rbf, along with all the others mentioned above. (Luxor recently turned it back on; as Nick alluded to, looks like they unintentionally had it turned off) So IIRC we're at ~40% of hash power mining it.\r\n\r\nOn November 3, 2023 5:12:32 PM GMT-03:00, Antoine Riard ***@***.***> wrote:\r\n>I think itâs good to communicate on the mailing list in which version (27.0 or 28.0) full-rbf might be turn on by default. I advocated such setting in the past as early as 0.24, though at the time some 0-conf transactions applications and services were migrating their stuff in consequence.\r\n>\r\n",
      "created_at" : "2023-11-03T20:40:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1793068038",
      "id" : 1793068038,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585q4AwG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793068038/reactions"
      },
      "updated_at" : "2023-11-03T20:40:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793068038",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Conveniently, here's an example of Luxor mining a full-rbf double spend 20 minutes ago: https://mempool.space/tx/8c2a54f92237a66662083fdd3a85d4d7b1399f9301edf434eaf72219b8440f82\r\n\r\nOn November 3, 2023 5:12:32 PM GMT-03:00, Antoine Riard ***@***.***> wrote:\r\n>I think itâs good to communicate on the mailing list in which version (27.0 or 28.0) full-rbf might be turn on by default. I advocated such setting in the past as early as 0.24, though at the time some 0-conf transactions applications and services were migrating their stuff in consequence.\r\n>\r\n",
      "created_at" : "2023-11-03T20:42:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28132#issuecomment-1793071684",
      "id" : 1793071684,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28132",
      "node_id" : "IC_kwDOABII585q4BpE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793071684/reactions"
      },
      "updated_at" : "2023-11-03T20:42:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1793071684",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   }
]

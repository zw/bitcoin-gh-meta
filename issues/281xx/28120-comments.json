[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28120).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/28120#pullrequestreview-1729314172), [andrewtoth](https://github.com/bitcoin/bitcoin/pull/28120#pullrequestreview-1761328425) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2023-07-21T13:55:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#issuecomment-1645631813",
      "id" : 1645631813,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28120",
      "node_id" : "IC_kwDOABII585iFllF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645631813/reactions"
      },
      "updated_at" : "2023-12-03T18:21:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1645631813",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> What would be bad is if all our current peers were limited, and we wouldn't try to request the needed blocks from anyone, but also wouldn't try to exchange them for better peers, so that we would be stuck.\r\n\r\nI agree with this part. I think the solution should be expanded to give a chance in such cases, and it should be merged within the same PR.",
      "created_at" : "2023-07-25T09:40:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#issuecomment-1649479100",
      "id" : 1649479100,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28120",
      "node_id" : "IC_kwDOABII585iUQ28",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1649479100/reactions"
      },
      "updated_at" : "2023-07-25T09:40:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1649479100",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Agree with @mzumsande and @naumenkogs. Maybe not the same PR if it's substantially different, but the new eviction logic should be merged before this fix.",
      "created_at" : "2023-07-25T18:33:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#issuecomment-1650338677",
      "id" : 1650338677,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28120",
      "node_id" : "IC_kwDOABII585iXit1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1650338677/reactions"
      },
      "updated_at" : "2023-07-25T18:33:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1650338677",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-10-02T21:54:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#issuecomment-1743824410",
      "id" : 1743824410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28120",
      "node_id" : "IC_kwDOABII585n8KYa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1743824410/reactions"
      },
      "updated_at" : "2023-10-02T21:54:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1743824410",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1375513667"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375513667"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think we want to keep the + 2 buffer here. This means we would potentially still request blocks 2 blocks after 288, so up to 290. The buffer for sending requested blocks up to 288 + 2 is there for when the sender sees new blocks but the requester has not yet seen it. In this case we are requesting so we should respect the 288 limit.",
      "commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "created_at" : "2023-10-29T21:14:46Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+\n             if (pindex->nStatus & BLOCK_HAVE_DATA || (activeChain && activeChain->Contains(pindex))) {\n-                if (activeChain && pindex->HaveNumChainTxs())\n+                if (activeChain && pindex->HaveNumChainTxs()) {\n                     state->pindexLastCommonBlock = pindex;\n-            } else if (!IsBlockRequested(pindex->GetBlockHash())) {\n-                // The block is not already downloaded, and not yet in flight.\n-                if (pindex->nHeight > nWindowEnd) {\n-                    // We reached the end of the window.\n-                    if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n-                        // We aren't able to fetch anything, but we would be if the download window was one larger.\n-                        if (nodeStaller) *nodeStaller = waitingfor;\n-                    }\n-                    return;\n                 }\n-                vBlocks.push_back(pindex);\n-                if (vBlocks.size() == count) {\n-                    return;\n+                continue;\n+            }\n+\n+            // Is block in-flight?\n+            if (IsBlockRequested(pindex->GetBlockHash())) {\n+                if (waitingfor == -1) {\n+                    // This is the first already-in-flight block.\n+                    waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n                 }\n-            } else if (waitingfor == -1) {\n-                // This is the first already-in-flight block.\n-                waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n+                continue;\n+            }\n+\n+            // The block is not already downloaded, and not yet in flight.\n+            if (pindex->nHeight > nWindowEnd) {\n+                // We reached the end of the window.\n+                if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n+                    // We aren't able to fetch anything, but we would be if the download window was one larger.\n+                    if (nodeStaller) *nodeStaller = waitingfor;\n+                }\n+                return;\n+            }\n+\n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight > static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) + 2 /* add two blocks buffer extension for possible races */)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1375513667",
      "id" : 1375513667,
      "line" : 1480,
      "node_id" : "PRRC_kwDOABII585R_KxD",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 1480,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 61,
      "pull_request_review_id" : 1703037733,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375513667/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-29T21:42:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375513667",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378843710"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378843710"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In the commit message of f3089e57aadac462e59499fdeb8091c42f39327b `refactor: Make FindNextBlocksToDownload friendlier`:\r\n\r\n`s/FindNextBlocksToDownload/PeerManagerImpl::FindNextBlocks()/`",
      "commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "created_at" : "2023-11-01T14:02:36Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378843710",
      "id" : 1378843710,
      "line" : 1452,
      "node_id" : "PRRC_kwDOABII585SL3w-",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 1452,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 17,
      "pull_request_review_id" : 1708290287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378843710/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-01T15:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378843710",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378886266"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378886266"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree - no need for +2, or even it could be harmful and defeat the margin on the sender side - e.g. if the sender is at height 1290, this logic would allow requesting block 1000. Then if the sender progresses to height 1291 in the meantime and sees request for 1000 they will disconnect.\r\n\r\nFurther, to make this symmetric with the sender maybe it should be -2? If we assume the sender has no margin and disconnects for anything >288 then the requester should request only up to 286 (incl)?",
      "commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "created_at" : "2023-11-01T14:36:47Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+\n             if (pindex->nStatus & BLOCK_HAVE_DATA || (activeChain && activeChain->Contains(pindex))) {\n-                if (activeChain && pindex->HaveNumChainTxs())\n+                if (activeChain && pindex->HaveNumChainTxs()) {\n                     state->pindexLastCommonBlock = pindex;\n-            } else if (!IsBlockRequested(pindex->GetBlockHash())) {\n-                // The block is not already downloaded, and not yet in flight.\n-                if (pindex->nHeight > nWindowEnd) {\n-                    // We reached the end of the window.\n-                    if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n-                        // We aren't able to fetch anything, but we would be if the download window was one larger.\n-                        if (nodeStaller) *nodeStaller = waitingfor;\n-                    }\n-                    return;\n                 }\n-                vBlocks.push_back(pindex);\n-                if (vBlocks.size() == count) {\n-                    return;\n+                continue;\n+            }\n+\n+            // Is block in-flight?\n+            if (IsBlockRequested(pindex->GetBlockHash())) {\n+                if (waitingfor == -1) {\n+                    // This is the first already-in-flight block.\n+                    waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n                 }\n-            } else if (waitingfor == -1) {\n-                // This is the first already-in-flight block.\n-                waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n+                continue;\n+            }\n+\n+            // The block is not already downloaded, and not yet in flight.\n+            if (pindex->nHeight > nWindowEnd) {\n+                // We reached the end of the window.\n+                if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n+                    // We aren't able to fetch anything, but we would be if the download window was one larger.\n+                    if (nodeStaller) *nodeStaller = waitingfor;\n+                }\n+                return;\n+            }\n+\n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight > static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) + 2 /* add two blocks buffer extension for possible races */)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378886266",
      "id" : 1378886266,
      "in_reply_to_id" : 1375513667,
      "line" : 1480,
      "node_id" : "PRRC_kwDOABII585SMCJ6",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 1480,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 61,
      "pull_request_review_id" : 1708290287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378886266/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-01T15:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378886266",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378905232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378905232"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Should this not be `continue;`? I find `PeerManagerImpl::FindNextBlocks()` hard to follow. Are the entries in `vToFetch` sorted in ascending or descending order?",
      "commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "created_at" : "2023-11-01T14:51:00Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+\n             if (pindex->nStatus & BLOCK_HAVE_DATA || (activeChain && activeChain->Contains(pindex))) {\n-                if (activeChain && pindex->HaveNumChainTxs())\n+                if (activeChain && pindex->HaveNumChainTxs()) {\n                     state->pindexLastCommonBlock = pindex;\n-            } else if (!IsBlockRequested(pindex->GetBlockHash())) {\n-                // The block is not already downloaded, and not yet in flight.\n-                if (pindex->nHeight > nWindowEnd) {\n-                    // We reached the end of the window.\n-                    if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n-                        // We aren't able to fetch anything, but we would be if the download window was one larger.\n-                        if (nodeStaller) *nodeStaller = waitingfor;\n-                    }\n-                    return;\n                 }\n-                vBlocks.push_back(pindex);\n-                if (vBlocks.size() == count) {\n-                    return;\n+                continue;\n+            }\n+\n+            // Is block in-flight?\n+            if (IsBlockRequested(pindex->GetBlockHash())) {\n+                if (waitingfor == -1) {\n+                    // This is the first already-in-flight block.\n+                    waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n                 }\n-            } else if (waitingfor == -1) {\n-                // This is the first already-in-flight block.\n-                waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n+                continue;\n+            }\n+\n+            // The block is not already downloaded, and not yet in flight.\n+            if (pindex->nHeight > nWindowEnd) {\n+                // We reached the end of the window.\n+                if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n+                    // We aren't able to fetch anything, but we would be if the download window was one larger.\n+                    if (nodeStaller) *nodeStaller = waitingfor;\n+                }\n+                return;\n+            }\n+\n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight > static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) + 2 /* add two blocks buffer extension for possible races */)) {\n+                return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378905232",
      "id" : 1378905232,
      "line" : 1481,
      "node_id" : "PRRC_kwDOABII585SMGyQ",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 1481,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 62,
      "pull_request_review_id" : 1708290287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378905232/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-01T15:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378905232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378928478"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378928478"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is the intention here to mimic `NODE_NETWORK_LIMITED_MIN_BLOCKS` from the C++ source code, which is `288`? `MIN_BLOCKS_TO_KEEP` is a different constant defined in both the C++ and Python code which happens to be also `288`. Should `NODE_NETWORK_LIMITED_MIN_BLOCKS` be defined in the Python code (equal to 288, but not necessary equal or tied to `MIN_BLOCKS_TO_KEEP`)?",
      "commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "created_at" : "2023-11-01T15:08:35Z",
      "diff_hunk" : "@@ -46,6 +49,44 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_old_blocks(self):\n+        self.log.info(\"Test node not requesting blocks beyond limited peer threshold\")\n+        # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 2)\n+        self.connect_nodes(0, 2)\n+        self.generate(miner, 1, sync_fun=self.no_op)\n+\n+        # Verify all peers are at the same height\n+        best_block = miner.getbestblockhash()\n+        for node in [full_node, pruned_node]:\n+            self.wait_until(lambda: node.getbestblockhash() == best_block, timeout=10)\n+\n+        # Verify that all peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Disconnect full_node from the other two peers (the node will remain out of IBD)\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        self.generate(miner, MIN_BLOCKS_TO_KEEP + 12, sync_fun=self.no_op)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378928478",
      "id" : 1378928478,
      "line" : 79,
      "node_id" : "PRRC_kwDOABII585SMMde",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 79,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 41,
      "pull_request_review_id" : 1708290287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378928478/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-01T15:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378928478",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378931951"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378931951"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Here `sync_blocks()` is used and above `self.wait_until(lambda: node.getbestblockhash() == ...` is used to achieve the same purpose. For consistency maybe use only one of the methods.",
      "commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "created_at" : "2023-11-01T15:11:22Z",
      "diff_hunk" : "@@ -46,6 +49,44 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_old_blocks(self):\n+        self.log.info(\"Test node not requesting blocks beyond limited peer threshold\")\n+        # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 2)\n+        self.connect_nodes(0, 2)\n+        self.generate(miner, 1, sync_fun=self.no_op)\n+\n+        # Verify all peers are at the same height\n+        best_block = miner.getbestblockhash()\n+        for node in [full_node, pruned_node]:\n+            self.wait_until(lambda: node.getbestblockhash() == best_block, timeout=10)\n+\n+        # Verify that all peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Disconnect full_node from the other two peers (the node will remain out of IBD)\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        self.generate(miner, MIN_BLOCKS_TO_KEEP + 12, sync_fun=self.no_op)\n+        self.sync_blocks([miner, pruned_node])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378931951",
      "id" : 1378931951,
      "line" : 80,
      "node_id" : "PRRC_kwDOABII585SMNTv",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 80,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 42,
      "pull_request_review_id" : 1708290287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378931951/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-01T15:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378931951",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378941093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378941093"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This sleep is non-deterministic. The good thing is that it will not cause sporadic test failures, but still, it could occasionally report success even if the full node requests an old block and gets disconnected (false positive). Also it adds unconditional 3 seconds to the tests execution time.\r\n\r\nIs it possible to lookup something in the log or via RPC to cross check that the full node has made a decision not to request blocks from the pruned node?",
      "commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "created_at" : "2023-11-01T15:18:53Z",
      "diff_hunk" : "@@ -46,6 +49,44 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_old_blocks(self):\n+        self.log.info(\"Test node not requesting blocks beyond limited peer threshold\")\n+        # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 2)\n+        self.connect_nodes(0, 2)\n+        self.generate(miner, 1, sync_fun=self.no_op)\n+\n+        # Verify all peers are at the same height\n+        best_block = miner.getbestblockhash()\n+        for node in [full_node, pruned_node]:\n+            self.wait_until(lambda: node.getbestblockhash() == best_block, timeout=10)\n+\n+        # Verify that all peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Disconnect full_node from the other two peers (the node will remain out of IBD)\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        self.generate(miner, MIN_BLOCKS_TO_KEEP + 12, sync_fun=self.no_op)\n+        self.sync_blocks([miner, pruned_node])\n+\n+        # Connect full_node to prune_node and check peers don't disconnect right away.\n+        # (they will disconnect if full_node, which is chain-wise behind, request blocks\n+        #  older than MIN_BLOCKS_TO_KEEP)\n+        self.connect_nodes(0, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 1)\n+        time.sleep(3)  # Wait for a few seconds to ensure peers remain connected\n+        assert_equal(len(full_node.getpeerinfo()), 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1378941093",
      "id" : 1378941093,
      "line" : 88,
      "node_id" : "PRRC_kwDOABII585SMPil",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 88,
      "original_position" : 50,
      "original_start_line" : 87,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 50,
      "pull_request_review_id" : 1708290287,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378941093/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 87,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-01T15:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1378941093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380681598"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380681598"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Upps yeah. This was intended to be -2.. fixing it.",
      "commit_id" : "534996ab5351a7aa2b98f0d7c93dab0dfe073407",
      "created_at" : "2023-11-02T19:29:11Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+\n             if (pindex->nStatus & BLOCK_HAVE_DATA || (activeChain && activeChain->Contains(pindex))) {\n-                if (activeChain && pindex->HaveNumChainTxs())\n+                if (activeChain && pindex->HaveNumChainTxs()) {\n                     state->pindexLastCommonBlock = pindex;\n-            } else if (!IsBlockRequested(pindex->GetBlockHash())) {\n-                // The block is not already downloaded, and not yet in flight.\n-                if (pindex->nHeight > nWindowEnd) {\n-                    // We reached the end of the window.\n-                    if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n-                        // We aren't able to fetch anything, but we would be if the download window was one larger.\n-                        if (nodeStaller) *nodeStaller = waitingfor;\n-                    }\n-                    return;\n                 }\n-                vBlocks.push_back(pindex);\n-                if (vBlocks.size() == count) {\n-                    return;\n+                continue;\n+            }\n+\n+            // Is block in-flight?\n+            if (IsBlockRequested(pindex->GetBlockHash())) {\n+                if (waitingfor == -1) {\n+                    // This is the first already-in-flight block.\n+                    waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n                 }\n-            } else if (waitingfor == -1) {\n-                // This is the first already-in-flight block.\n-                waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n+                continue;\n+            }\n+\n+            // The block is not already downloaded, and not yet in flight.\n+            if (pindex->nHeight > nWindowEnd) {\n+                // We reached the end of the window.\n+                if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n+                    // We aren't able to fetch anything, but we would be if the download window was one larger.\n+                    if (nodeStaller) *nodeStaller = waitingfor;\n+                }\n+                return;\n+            }\n+\n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight > static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) + 2 /* add two blocks buffer extension for possible races */)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380681598",
      "id" : 1380681598,
      "in_reply_to_id" : 1375513667,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585SS4d-",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 1480,
      "original_position" : 61,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1711092950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380681598/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-02T22:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380681598",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380702499"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380702499"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Should this not be `continue;`? I find `PeerManagerImpl::FindNextBlocks()` hard to follow. Are the entries in `vToFetch` sorted in ascending or descending order?\r\n\r\n`vToFetch` is arranged in increasing order. Needs to stop once it reaches the last block the peer can provide, without continuing further.\r\n\r\n`FindNextBlocks` begins from the last block in common with the peer. Then, during each iteration of the loop, it gets the block that is 128 blocks ahead and populates `vToFetch` by moving backwards: it pushes the last block of the window to the last position of the array, the second to last block to the second to last position of the array, and so on.\r\nSubsequently, the function iterates over, the now ordered, `vToFetch` in forward direction, adding the blocks that will be requested to `vBlocks`.\r\n",
      "commit_id" : "534996ab5351a7aa2b98f0d7c93dab0dfe073407",
      "created_at" : "2023-11-02T19:54:11Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+\n             if (pindex->nStatus & BLOCK_HAVE_DATA || (activeChain && activeChain->Contains(pindex))) {\n-                if (activeChain && pindex->HaveNumChainTxs())\n+                if (activeChain && pindex->HaveNumChainTxs()) {\n                     state->pindexLastCommonBlock = pindex;\n-            } else if (!IsBlockRequested(pindex->GetBlockHash())) {\n-                // The block is not already downloaded, and not yet in flight.\n-                if (pindex->nHeight > nWindowEnd) {\n-                    // We reached the end of the window.\n-                    if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n-                        // We aren't able to fetch anything, but we would be if the download window was one larger.\n-                        if (nodeStaller) *nodeStaller = waitingfor;\n-                    }\n-                    return;\n                 }\n-                vBlocks.push_back(pindex);\n-                if (vBlocks.size() == count) {\n-                    return;\n+                continue;\n+            }\n+\n+            // Is block in-flight?\n+            if (IsBlockRequested(pindex->GetBlockHash())) {\n+                if (waitingfor == -1) {\n+                    // This is the first already-in-flight block.\n+                    waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n                 }\n-            } else if (waitingfor == -1) {\n-                // This is the first already-in-flight block.\n-                waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n+                continue;\n+            }\n+\n+            // The block is not already downloaded, and not yet in flight.\n+            if (pindex->nHeight > nWindowEnd) {\n+                // We reached the end of the window.\n+                if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n+                    // We aren't able to fetch anything, but we would be if the download window was one larger.\n+                    if (nodeStaller) *nodeStaller = waitingfor;\n+                }\n+                return;\n+            }\n+\n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight > static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) + 2 /* add two blocks buffer extension for possible races */)) {\n+                return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380702499",
      "id" : 1380702499,
      "in_reply_to_id" : 1378905232,
      "line" : 1481,
      "node_id" : "PRRC_kwDOABII585SS9kj",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 1481,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 62,
      "pull_request_review_id" : 1711092950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380702499/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-02T22:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380702499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380719816"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380719816"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Is the intention here to mimic `NODE_NETWORK_LIMITED_MIN_BLOCKS` from the C++ source code, which is `288`?\r\n\r\nYeah, I used `MIN_BLOCKS_TO_KEEP` merely because it is already part of the test framework.\r\n\r\n> `MIN_BLOCKS_TO_KEEP` is a different constant defined in both the C++ and Python code which happens to be also `288`. Should `NODE_NETWORK_LIMITED_MIN_BLOCKS` be defined in the Python code (equal to 288, but not necessary equal or tied to `MIN_BLOCKS_TO_KEEP`)?\r\n\r\nIf it helps readability, sure (I would just need to see where to place it).\r\nIt is important to note that `NODE_NETWORK_LIMITED_MIN_BLOCKS` is dependent on `MIN_BLOCKS_TO_KEEP` and should always be less than or equal to it.\r\n\r\n",
      "commit_id" : "534996ab5351a7aa2b98f0d7c93dab0dfe073407",
      "created_at" : "2023-11-02T20:12:32Z",
      "diff_hunk" : "@@ -46,6 +49,44 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_old_blocks(self):\n+        self.log.info(\"Test node not requesting blocks beyond limited peer threshold\")\n+        # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 2)\n+        self.connect_nodes(0, 2)\n+        self.generate(miner, 1, sync_fun=self.no_op)\n+\n+        # Verify all peers are at the same height\n+        best_block = miner.getbestblockhash()\n+        for node in [full_node, pruned_node]:\n+            self.wait_until(lambda: node.getbestblockhash() == best_block, timeout=10)\n+\n+        # Verify that all peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Disconnect full_node from the other two peers (the node will remain out of IBD)\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        self.generate(miner, MIN_BLOCKS_TO_KEEP + 12, sync_fun=self.no_op)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380719816",
      "id" : 1380719816,
      "in_reply_to_id" : 1378928478,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585STBzI",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 77,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 39,
      "pull_request_review_id" : 1711092950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380719816/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-02T22:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380719816",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380733259"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380733259"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Is it possible to lookup something in the log or via RPC to cross check that the full node has made a decision not to request blocks from the pruned node?\r\n\r\nHmm, not really. We aren't logging any of the reasons behind a lack of a getdata request for a certain block from a certain peer (invalid tree, no segwit support, already in-flight). The approach would lead to excessive logging for no real gain.\r\n\r\nWhat we could do, maybe in a follow-up?, to eliminate the unnecessary sleep time, is migrate this functional test check into a unit test. Similar to what I'm doing on #28170 for `FindNextBlocks`.",
      "commit_id" : "534996ab5351a7aa2b98f0d7c93dab0dfe073407",
      "created_at" : "2023-11-02T20:28:10Z",
      "diff_hunk" : "@@ -46,6 +49,44 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_old_blocks(self):\n+        self.log.info(\"Test node not requesting blocks beyond limited peer threshold\")\n+        # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 2)\n+        self.connect_nodes(0, 2)\n+        self.generate(miner, 1, sync_fun=self.no_op)\n+\n+        # Verify all peers are at the same height\n+        best_block = miner.getbestblockhash()\n+        for node in [full_node, pruned_node]:\n+            self.wait_until(lambda: node.getbestblockhash() == best_block, timeout=10)\n+\n+        # Verify that all peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Disconnect full_node from the other two peers (the node will remain out of IBD)\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        self.generate(miner, MIN_BLOCKS_TO_KEEP + 12, sync_fun=self.no_op)\n+        self.sync_blocks([miner, pruned_node])\n+\n+        # Connect full_node to prune_node and check peers don't disconnect right away.\n+        # (they will disconnect if full_node, which is chain-wise behind, request blocks\n+        #  older than MIN_BLOCKS_TO_KEEP)\n+        self.connect_nodes(0, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 1)\n+        time.sleep(3)  # Wait for a few seconds to ensure peers remain connected\n+        assert_equal(len(full_node.getpeerinfo()), 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380733259",
      "id" : 1380733259,
      "in_reply_to_id" : 1378941093,
      "line" : 86,
      "node_id" : "PRRC_kwDOABII585STFFL",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 86,
      "original_position" : 50,
      "original_start_line" : 87,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 48,
      "pull_request_review_id" : 1711092950,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380733259/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 85,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-02T22:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380733259",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380849706"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380849706"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thx, done as suggested.",
      "commit_id" : "534996ab5351a7aa2b98f0d7c93dab0dfe073407",
      "created_at" : "2023-11-02T22:30:33Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380849706",
      "id" : 1380849706,
      "in_reply_to_id" : 1378843710,
      "line" : 1452,
      "node_id" : "PRRC_kwDOABII585SThgq",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 1452,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 17,
      "pull_request_review_id" : 1711349344,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380849706/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-02T22:30:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380849706",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380849886"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380849886"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Thx, done as suggested.",
      "commit_id" : "534996ab5351a7aa2b98f0d7c93dab0dfe073407",
      "created_at" : "2023-11-02T22:30:41Z",
      "diff_hunk" : "@@ -46,6 +49,44 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_old_blocks(self):\n+        self.log.info(\"Test node not requesting blocks beyond limited peer threshold\")\n+        # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 2)\n+        self.connect_nodes(0, 2)\n+        self.generate(miner, 1, sync_fun=self.no_op)\n+\n+        # Verify all peers are at the same height\n+        best_block = miner.getbestblockhash()\n+        for node in [full_node, pruned_node]:\n+            self.wait_until(lambda: node.getbestblockhash() == best_block, timeout=10)\n+\n+        # Verify that all peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Disconnect full_node from the other two peers (the node will remain out of IBD)\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        self.generate(miner, MIN_BLOCKS_TO_KEEP + 12, sync_fun=self.no_op)\n+        self.sync_blocks([miner, pruned_node])",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1380849886",
      "id" : 1380849886,
      "in_reply_to_id" : 1378931951,
      "line" : 78,
      "node_id" : "PRRC_kwDOABII585SThje",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 78,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 40,
      "pull_request_review_id" : 1711349665,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380849886/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-02T22:30:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1380849886",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1389521297"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389521297"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok, lets use an example (from the newly added test):\r\n\r\n`vToFetch = [2 ... 129]`\r\n`state->pindexBestKnownBlock->nHeight = 301`\r\nSo the peer's height is `301`. We can assume they can provide blocks `[13 ... 301]`.\r\nAt the first iteration of the loop `pindex->nHeight` is 2 (`vToFetch[0]`).\r\nThe code ends up with `return;` because `301 - 2 > 286` and we never request any blocks from that peer.\r\n\r\nShouldn't we request blocks `[13 ... 301]` instead?",
      "commit_id" : "adfc9c7d0c43ab0616775f464483756a01b9d829",
      "created_at" : "2023-11-10T15:11:05Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+\n             if (pindex->nStatus & BLOCK_HAVE_DATA || (activeChain && activeChain->Contains(pindex))) {\n-                if (activeChain && pindex->HaveNumChainTxs())\n+                if (activeChain && pindex->HaveNumChainTxs()) {\n                     state->pindexLastCommonBlock = pindex;\n-            } else if (!IsBlockRequested(pindex->GetBlockHash())) {\n-                // The block is not already downloaded, and not yet in flight.\n-                if (pindex->nHeight > nWindowEnd) {\n-                    // We reached the end of the window.\n-                    if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n-                        // We aren't able to fetch anything, but we would be if the download window was one larger.\n-                        if (nodeStaller) *nodeStaller = waitingfor;\n-                    }\n-                    return;\n                 }\n-                vBlocks.push_back(pindex);\n-                if (vBlocks.size() == count) {\n-                    return;\n+                continue;\n+            }\n+\n+            // Is block in-flight?\n+            if (IsBlockRequested(pindex->GetBlockHash())) {\n+                if (waitingfor == -1) {\n+                    // This is the first already-in-flight block.\n+                    waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n                 }\n-            } else if (waitingfor == -1) {\n-                // This is the first already-in-flight block.\n-                waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n+                continue;\n+            }\n+\n+            // The block is not already downloaded, and not yet in flight.\n+            if (pindex->nHeight > nWindowEnd) {\n+                // We reached the end of the window.\n+                if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n+                    // We aren't able to fetch anything, but we would be if the download window was one larger.\n+                    if (nodeStaller) *nodeStaller = waitingfor;\n+                }\n+                return;\n+            }\n+\n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight > static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) + 2 /* add two blocks buffer extension for possible races */)) {\n+                return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1389521297",
      "id" : 1389521297,
      "in_reply_to_id" : 1378905232,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S0mmR",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 1481,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1724990529,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389521297/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-10T15:11:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389521297",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1389526651"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389526651"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The test would fail if run standalone without the preceding tests. The failure is on line 78: `self.sync_blocks([miner, pruned_node])`. That is because the test relies on the pruned node being connected to the miner which is indeed the case - some leftover from previous tests. This diff makes it succeed when run standalone:\r\n\r\n```diff\r\n--- i/test/functional/p2p_node_network_limited.py\r\n+++ w/test/functional/p2p_node_network_limited.py\r\n@@ -54,25 +54,24 @@ class NodeNetworkLimitedTest(BitcoinTestFramework):\r\n         # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\r\n         pruned_node = self.nodes[0]\r\n         miner = self.nodes[1]\r\n         full_node = self.nodes[2]\r\n \r\n         # Connect and generate block to ensure IBD=false\r\n+        self.connect_nodes(0, 1)\r\n         self.connect_nodes(1, 2)\r\n-        self.connect_nodes(0, 2)\r\n         self.generate(miner, 1, sync_fun=self.no_op)\r\n \r\n         # Verify all peers are at the same height\r\n         self.sync_blocks([miner, pruned_node])\r\n                                      \r\n         # Verify peers are out of IBD\r\n         for node in self.nodes:\r\n             assert not node.getblockchaininfo()['initialblockdownload']    \r\n \r\n         # Disconnect full_node from the other two peers (the node will remain out of IBD)\r\n-        self.disconnect_nodes(0, 2)\r\n         self.disconnect_nodes(1, 2)                                       \r\n         assert_equal(len(full_node.getpeerinfo()), 0)                     \r\n \r\n         # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\r\n```\r\n\r\nIt is also shorter and I think more clear.",
      "commit_id" : "adfc9c7d0c43ab0616775f464483756a01b9d829",
      "created_at" : "2023-11-10T15:16:21Z",
      "diff_hunk" : "@@ -46,6 +49,42 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_old_blocks(self):\n+        self.log.info(\"Test node not requesting blocks beyond limited peer threshold\")\n+        # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 2)\n+        self.connect_nodes(0, 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1389526651",
      "id" : 1389526651,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S0n57",
      "original_commit_id" : "534996ab5351a7aa2b98f0d7c93dab0dfe073407",
      "original_line" : 61,
      "original_position" : 23,
      "original_start_line" : 59,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : null,
      "pull_request_review_id" : 1724999237,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389526651/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-10T15:16:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389526651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1390030476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390030476"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Hmm, that will only happen when the node is close to the tip, because of the 1024 block download window. More precisely, when the node is within 1312 blocks from the tip (window + limited peers threshold). Nice observation!.\r\nWill modify it and add coverage for it.",
      "commit_id" : "adfc9c7d0c43ab0616775f464483756a01b9d829",
      "created_at" : "2023-11-10T23:41:55Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+\n             if (pindex->nStatus & BLOCK_HAVE_DATA || (activeChain && activeChain->Contains(pindex))) {\n-                if (activeChain && pindex->HaveNumChainTxs())\n+                if (activeChain && pindex->HaveNumChainTxs()) {\n                     state->pindexLastCommonBlock = pindex;\n-            } else if (!IsBlockRequested(pindex->GetBlockHash())) {\n-                // The block is not already downloaded, and not yet in flight.\n-                if (pindex->nHeight > nWindowEnd) {\n-                    // We reached the end of the window.\n-                    if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n-                        // We aren't able to fetch anything, but we would be if the download window was one larger.\n-                        if (nodeStaller) *nodeStaller = waitingfor;\n-                    }\n-                    return;\n                 }\n-                vBlocks.push_back(pindex);\n-                if (vBlocks.size() == count) {\n-                    return;\n+                continue;\n+            }\n+\n+            // Is block in-flight?\n+            if (IsBlockRequested(pindex->GetBlockHash())) {\n+                if (waitingfor == -1) {\n+                    // This is the first already-in-flight block.\n+                    waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n                 }\n-            } else if (waitingfor == -1) {\n-                // This is the first already-in-flight block.\n-                waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n+                continue;\n+            }\n+\n+            // The block is not already downloaded, and not yet in flight.\n+            if (pindex->nHeight > nWindowEnd) {\n+                // We reached the end of the window.\n+                if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n+                    // We aren't able to fetch anything, but we would be if the download window was one larger.\n+                    if (nodeStaller) *nodeStaller = waitingfor;\n+                }\n+                return;\n+            }\n+\n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight > static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) + 2 /* add two blocks buffer extension for possible races */)) {\n+                return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1390030476",
      "id" : 1390030476,
      "in_reply_to_id" : 1378905232,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S2i6M",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 1481,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1725803875,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390030476/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-10T23:49:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390030476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1390075262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390075262"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ended up doing it in a slightly different way. Using `setnetworkactive` to isolate the full node from the other two. I think that is clearer in this way.",
      "commit_id" : "930e531046e7215dccdf7c69e81030d49772c4a8",
      "created_at" : "2023-11-11T01:09:10Z",
      "diff_hunk" : "@@ -46,6 +49,42 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_old_blocks(self):\n+        self.log.info(\"Test node not requesting blocks beyond limited peer threshold\")\n+        # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 2)\n+        self.connect_nodes(0, 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1390075262",
      "id" : 1390075262,
      "in_reply_to_id" : 1389526651,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S2t1-",
      "original_commit_id" : "534996ab5351a7aa2b98f0d7c93dab0dfe073407",
      "original_line" : 61,
      "original_position" : 23,
      "original_start_line" : 59,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : null,
      "pull_request_review_id" : 1725865759,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390075262/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-11T01:09:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390075262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1390079370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390079370"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Removed the unconditional wait on the last update :).",
      "commit_id" : "930e531046e7215dccdf7c69e81030d49772c4a8",
      "created_at" : "2023-11-11T01:10:32Z",
      "diff_hunk" : "@@ -46,6 +49,44 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_old_blocks(self):\n+        self.log.info(\"Test node not requesting blocks beyond limited peer threshold\")\n+        # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 2)\n+        self.connect_nodes(0, 2)\n+        self.generate(miner, 1, sync_fun=self.no_op)\n+\n+        # Verify all peers are at the same height\n+        best_block = miner.getbestblockhash()\n+        for node in [full_node, pruned_node]:\n+            self.wait_until(lambda: node.getbestblockhash() == best_block, timeout=10)\n+\n+        # Verify that all peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Disconnect full_node from the other two peers (the node will remain out of IBD)\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        self.generate(miner, MIN_BLOCKS_TO_KEEP + 12, sync_fun=self.no_op)\n+        self.sync_blocks([miner, pruned_node])\n+\n+        # Connect full_node to prune_node and check peers don't disconnect right away.\n+        # (they will disconnect if full_node, which is chain-wise behind, request blocks\n+        #  older than MIN_BLOCKS_TO_KEEP)\n+        self.connect_nodes(0, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 1)\n+        time.sleep(3)  # Wait for a few seconds to ensure peers remain connected\n+        assert_equal(len(full_node.getpeerinfo()), 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1390079370",
      "id" : 1390079370,
      "in_reply_to_id" : 1378941093,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S2u2K",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 82,
      "original_position" : 50,
      "original_start_line" : 87,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : null,
      "pull_request_review_id" : 1725871224,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390079370/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-11T01:10:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390079370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1390079461"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390079461"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Added `NODE_NETWORK_LIMITED_MIN_BLOCKS` on the last update.",
      "commit_id" : "930e531046e7215dccdf7c69e81030d49772c4a8",
      "created_at" : "2023-11-11T01:10:54Z",
      "diff_hunk" : "@@ -46,6 +49,44 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_old_blocks(self):\n+        self.log.info(\"Test node not requesting blocks beyond limited peer threshold\")\n+        # The request of blocks further than the NETWORK_NODE_LIMITED threshold causes a direct disconnection.\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 2)\n+        self.connect_nodes(0, 2)\n+        self.generate(miner, 1, sync_fun=self.no_op)\n+\n+        # Verify all peers are at the same height\n+        best_block = miner.getbestblockhash()\n+        for node in [full_node, pruned_node]:\n+            self.wait_until(lambda: node.getbestblockhash() == best_block, timeout=10)\n+\n+        # Verify that all peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Disconnect full_node from the other two peers (the node will remain out of IBD)\n+        self.disconnect_nodes(0, 2)\n+        self.disconnect_nodes(1, 2)\n+        assert_equal(len(full_node.getpeerinfo()), 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        self.generate(miner, MIN_BLOCKS_TO_KEEP + 12, sync_fun=self.no_op)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1390079461",
      "id" : 1390079461,
      "in_reply_to_id" : 1378928478,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S2u3l",
      "original_commit_id" : "c1612ea1f050b3daede6a181464bbbce6e254b2d",
      "original_line" : 77,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : null,
      "pull_request_review_id" : 1725871339,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390079461/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-11T01:10:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390079461",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1391086424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391086424"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think there is an off-by-one error here, should this be `>=` instead of `>`? Lets say the limited peer is at height `H` then the intention of this is to request blocks `(H-286, H]` from it, a total of `286` blocks. However it would not `continue` for height `H-286` and would request that block too.",
      "commit_id" : "930e531046e7215dccdf7c69e81030d49772c4a8",
      "created_at" : "2023-11-13T13:00:59Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+\n             if (pindex->nStatus & BLOCK_HAVE_DATA || (activeChain && activeChain->Contains(pindex))) {\n-                if (activeChain && pindex->HaveNumChainTxs())\n+                if (activeChain && pindex->HaveNumChainTxs()) {\n                     state->pindexLastCommonBlock = pindex;\n-            } else if (!IsBlockRequested(pindex->GetBlockHash())) {\n-                // The block is not already downloaded, and not yet in flight.\n-                if (pindex->nHeight > nWindowEnd) {\n-                    // We reached the end of the window.\n-                    if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n-                        // We aren't able to fetch anything, but we would be if the download window was one larger.\n-                        if (nodeStaller) *nodeStaller = waitingfor;\n-                    }\n-                    return;\n                 }\n-                vBlocks.push_back(pindex);\n-                if (vBlocks.size() == count) {\n-                    return;\n+                continue;\n+            }\n+\n+            // Is block in-flight?\n+            if (IsBlockRequested(pindex->GetBlockHash())) {\n+                if (waitingfor == -1) {\n+                    // This is the first already-in-flight block.\n+                    waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n                 }\n-            } else if (waitingfor == -1) {\n-                // This is the first already-in-flight block.\n-                waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n+                continue;\n+            }\n+\n+            // The block is not already downloaded, and not yet in flight.\n+            if (pindex->nHeight > nWindowEnd) {\n+                // We reached the end of the window.\n+                if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n+                    // We aren't able to fetch anything, but we would be if the download window was one larger.\n+                    if (nodeStaller) *nodeStaller = waitingfor;\n+                }\n+                return;\n+            }\n+\n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight > static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) - 2 /* two blocks buffer for possible races */)) {\n+                continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1391086424",
      "id" : 1391086424,
      "line" : 1481,
      "node_id" : "PRRC_kwDOABII585S6ktY",
      "original_commit_id" : "930e531046e7215dccdf7c69e81030d49772c4a8",
      "original_line" : 1481,
      "original_position" : 62,
      "original_start_line" : 1480,
      "path" : "src/net_processing.cpp",
      "position" : 62,
      "pull_request_review_id" : 1726995757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391086424/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1480,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-13T13:28:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391086424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1391104472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391104472"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The full node is at height `1` and the pruned node is at height `289`. The first loop verifies that the full node has blocks `[4, 289]` (`286` blocks in total), which is ok. But then it only checks that the full node does not have block `2`. What about block `3`? It is not checked and should not have been downloaded but it has been downloaded.\r\n\r\nTo avoid the gap the range in the second loop should be `range(1, limited_threshold_buffer + 1)` or even:\r\n\r\n```python\r\nfor height in range(start_height_full_node + 1, start_height_full_node + 1 + limited_threshold_buffer):\r\n```\r\n\r\nor have one loop instead of two:\r\n\r\n```python\r\nfor height in range(start_height_full_node + 1, tip_height + 1):\r\n    if height <= tip_height - (NODE_NETWORK_LIMITED_MIN_BLOCKS - 2):\r\n        assert_raises_rpc_error(-1, \"Block not found on disk\", full_node.getblock, pruned_node.getblockhash(height))\r\n    else:\r\n        full_node.getblock(pruned_node.getblockhash(height))\r\n```",
      "commit_id" : "930e531046e7215dccdf7c69e81030d49772c4a8",
      "created_at" : "2023-11-13T13:17:49Z",
      "diff_hunk" : "@@ -46,6 +50,65 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_historical_blocks(self):\n+        self.log.info(\"Test full node does not request blocks beyond the limited peer threshold\")\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 0)\n+        self.connect_nodes(1, 2)\n+        self.generate(miner, 1)\n+\n+        # Verify peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Isolate full_node (the node will remain out of IBD)\n+        full_node.setnetworkactive(False)\n+        self.wait_until(lambda: len(full_node.getpeerinfo()) == 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        self.generate(miner, NODE_NETWORK_LIMITED_MIN_BLOCKS, sync_fun=self.no_op)\n+        self.sync_blocks([miner, pruned_node])\n+\n+        # Connect full_node to prune_node and check peers don't disconnect right away.\n+        # (they will disconnect if full_node, which is chain-wise behind, request blocks\n+        # older than NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+        start_height_full_node = full_node.getblockcount()\n+        full_node.setnetworkactive(True)\n+        self.connect_nodes(2, 0)\n+        assert_equal(len(full_node.getpeerinfo()), 1)\n+\n+        # Wait until the full_node is headers-wise sync\n+        best_block_hash = pruned_node.getbestblockhash()\n+        self.wait_until(lambda: next(filter(lambda x: x['hash'] == best_block_hash, full_node.getchaintips()))['status'] == \"headers-only\")\n+\n+        # Now, since the node aims to download a window of 1024 blocks,\n+        # ensure it requests the blocks below the threshold only (with a\n+        # 2-block buffer). And also, ensure it does not request blocks\n+        # deeper than the threshold (minus the buffer).\n+        limited_threshold_buffer = 2\n+\n+        # Traverse in reverse order, ensuring the node stores all blocks\n+        # expected to be downloaded from the limited peer.\n+        tip_height = pruned_node.getblockcount()\n+        self.wait_until(lambda: not try_rpc(-1, \"Block not found\", full_node.getblock, pruned_node.getbestblockhash()))\n+        for height in range(tip_height, start_height_full_node + limited_threshold_buffer, -1):\n+            full_node.getblock(pruned_node.getblockhash(height))  # just need to assert it does not raise an exception\n+\n+        # Verify all blocks that should not have been requested.\n+        for move in range(1, limited_threshold_buffer):\n+            height = start_height_full_node + move\n+            assert_raises_rpc_error(-1, \"Block not found on disk\", full_node.getblock, pruned_node.getblockhash(height))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1391104472",
      "id" : 1391104472,
      "line" : 104,
      "node_id" : "PRRC_kwDOABII585S6pHY",
      "original_commit_id" : "930e531046e7215dccdf7c69e81030d49772c4a8",
      "original_line" : 104,
      "original_position" : 68,
      "original_start_line" : 98,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 68,
      "pull_request_review_id" : 1726995757,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391104472/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 98,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-13T13:28:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391104472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1391727015"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391727015"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done as suggested. Thanks.",
      "commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "created_at" : "2023-11-13T21:30:31Z",
      "diff_hunk" : "@@ -46,6 +50,65 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_historical_blocks(self):\n+        self.log.info(\"Test full node does not request blocks beyond the limited peer threshold\")\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 0)\n+        self.connect_nodes(1, 2)\n+        self.generate(miner, 1)\n+\n+        # Verify peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Isolate full_node (the node will remain out of IBD)\n+        full_node.setnetworkactive(False)\n+        self.wait_until(lambda: len(full_node.getpeerinfo()) == 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        self.generate(miner, NODE_NETWORK_LIMITED_MIN_BLOCKS, sync_fun=self.no_op)\n+        self.sync_blocks([miner, pruned_node])\n+\n+        # Connect full_node to prune_node and check peers don't disconnect right away.\n+        # (they will disconnect if full_node, which is chain-wise behind, request blocks\n+        # older than NODE_NETWORK_LIMITED_MIN_BLOCKS)\n+        start_height_full_node = full_node.getblockcount()\n+        full_node.setnetworkactive(True)\n+        self.connect_nodes(2, 0)\n+        assert_equal(len(full_node.getpeerinfo()), 1)\n+\n+        # Wait until the full_node is headers-wise sync\n+        best_block_hash = pruned_node.getbestblockhash()\n+        self.wait_until(lambda: next(filter(lambda x: x['hash'] == best_block_hash, full_node.getchaintips()))['status'] == \"headers-only\")\n+\n+        # Now, since the node aims to download a window of 1024 blocks,\n+        # ensure it requests the blocks below the threshold only (with a\n+        # 2-block buffer). And also, ensure it does not request blocks\n+        # deeper than the threshold (minus the buffer).\n+        limited_threshold_buffer = 2\n+\n+        # Traverse in reverse order, ensuring the node stores all blocks\n+        # expected to be downloaded from the limited peer.\n+        tip_height = pruned_node.getblockcount()\n+        self.wait_until(lambda: not try_rpc(-1, \"Block not found\", full_node.getblock, pruned_node.getbestblockhash()))\n+        for height in range(tip_height, start_height_full_node + limited_threshold_buffer, -1):\n+            full_node.getblock(pruned_node.getblockhash(height))  # just need to assert it does not raise an exception\n+\n+        # Verify all blocks that should not have been requested.\n+        for move in range(1, limited_threshold_buffer):\n+            height = start_height_full_node + move\n+            assert_raises_rpc_error(-1, \"Block not found on disk\", full_node.getblock, pruned_node.getblockhash(height))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1391727015",
      "id" : 1391727015,
      "in_reply_to_id" : 1391104472,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S9BGn",
      "original_commit_id" : "930e531046e7215dccdf7c69e81030d49772c4a8",
      "original_line" : 104,
      "original_position" : 68,
      "original_start_line" : 98,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : null,
      "pull_request_review_id" : 1728318505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391727015/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-13T21:46:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391727015",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1391727313"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391727313"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sounds good. Corrected.",
      "commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "created_at" : "2023-11-13T21:30:51Z",
      "diff_hunk" : "@@ -1443,30 +1444,46 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 // We consider the chain that this peer is on invalid.\n                 return;\n             }\n+\n             if (!CanServeWitnesses(peer) && DeploymentActiveAt(*pindex, m_chainman, Consensus::DEPLOYMENT_SEGWIT)) {\n                 // We wouldn't download this block or its descendants from this peer.\n                 return;\n             }\n+\n             if (pindex->nStatus & BLOCK_HAVE_DATA || (activeChain && activeChain->Contains(pindex))) {\n-                if (activeChain && pindex->HaveNumChainTxs())\n+                if (activeChain && pindex->HaveNumChainTxs()) {\n                     state->pindexLastCommonBlock = pindex;\n-            } else if (!IsBlockRequested(pindex->GetBlockHash())) {\n-                // The block is not already downloaded, and not yet in flight.\n-                if (pindex->nHeight > nWindowEnd) {\n-                    // We reached the end of the window.\n-                    if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n-                        // We aren't able to fetch anything, but we would be if the download window was one larger.\n-                        if (nodeStaller) *nodeStaller = waitingfor;\n-                    }\n-                    return;\n                 }\n-                vBlocks.push_back(pindex);\n-                if (vBlocks.size() == count) {\n-                    return;\n+                continue;\n+            }\n+\n+            // Is block in-flight?\n+            if (IsBlockRequested(pindex->GetBlockHash())) {\n+                if (waitingfor == -1) {\n+                    // This is the first already-in-flight block.\n+                    waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n                 }\n-            } else if (waitingfor == -1) {\n-                // This is the first already-in-flight block.\n-                waitingfor = mapBlocksInFlight.lower_bound(pindex->GetBlockHash())->second.first;\n+                continue;\n+            }\n+\n+            // The block is not already downloaded, and not yet in flight.\n+            if (pindex->nHeight > nWindowEnd) {\n+                // We reached the end of the window.\n+                if (vBlocks.size() == 0 && waitingfor != peer.m_id) {\n+                    // We aren't able to fetch anything, but we would be if the download window was one larger.\n+                    if (nodeStaller) *nodeStaller = waitingfor;\n+                }\n+                return;\n+            }\n+\n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight > static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) - 2 /* two blocks buffer for possible races */)) {\n+                continue;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1391727313",
      "id" : 1391727313,
      "in_reply_to_id" : 1391086424,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S9BLR",
      "original_commit_id" : "930e531046e7215dccdf7c69e81030d49772c4a8",
      "original_line" : 1481,
      "original_position" : 62,
      "original_start_line" : 1480,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1728318505,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391727313/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-13T21:30:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1391727313",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1413170635"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413170635"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: Could add a comment on why number 12 is chosen here?",
      "commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "created_at" : "2023-12-03T18:20:26Z",
      "diff_hunk" : "@@ -46,6 +50,63 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_historical_blocks(self):\n+        self.log.info(\"Test full node does not request blocks beyond the limited peer threshold\")\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 0)\n+        self.connect_nodes(1, 2)\n+        self.generate(miner, 1)\n+\n+        # Verify peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Isolate full_node (the node will remain out of IBD)\n+        full_node.setnetworkactive(False)\n+        self.wait_until(lambda: len(full_node.getpeerinfo()) == 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        # Blocks deeper than the threshold are considered \"historical blocks\"\n+        num_historial_blocks = 12",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1413170635",
      "id" : 1413170635,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII585UO0XL",
      "original_commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "original_line" : 74,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 38,
      "pull_request_review_id" : 1761328425,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413170635/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-03T18:21:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413170635",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1413826104"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413826104"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure. Will do if I have to retouch.\r\nThe number is to test the blocks download procedure and its moving window.\r\nFor instance, if the peer is at block 100, and it mines 300 blocks (288 + 12). The test verifies the node only download the blocks that are below the threshold from the limited peer (last 288 blocks minus the buffer). Then, the test connects a full node and it checks the node download the remaining historical blocks from it.\r\n",
      "commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "created_at" : "2023-12-04T12:49:30Z",
      "diff_hunk" : "@@ -46,6 +50,63 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_historical_blocks(self):\n+        self.log.info(\"Test full node does not request blocks beyond the limited peer threshold\")\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 0)\n+        self.connect_nodes(1, 2)\n+        self.generate(miner, 1)\n+\n+        # Verify peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Isolate full_node (the node will remain out of IBD)\n+        full_node.setnetworkactive(False)\n+        self.wait_until(lambda: len(full_node.getpeerinfo()) == 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        # Blocks deeper than the threshold are considered \"historical blocks\"\n+        num_historial_blocks = 12",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1413826104",
      "id" : 1413826104,
      "in_reply_to_id" : 1413170635,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII585URUY4",
      "original_commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "original_line" : 74,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 38,
      "pull_request_review_id" : 1762325628,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413826104/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-04T12:49:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413826104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1413832532"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413832532"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah yes, it makes sense what `num_historical_blocks` purpose is. The nit is why the number 12 was chosen specifically. I suppose to just make it an even 300, and it can be arbitrary?",
      "commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "created_at" : "2023-12-04T12:55:00Z",
      "diff_hunk" : "@@ -46,6 +50,63 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_historical_blocks(self):\n+        self.log.info(\"Test full node does not request blocks beyond the limited peer threshold\")\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 0)\n+        self.connect_nodes(1, 2)\n+        self.generate(miner, 1)\n+\n+        # Verify peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Isolate full_node (the node will remain out of IBD)\n+        full_node.setnetworkactive(False)\n+        self.wait_until(lambda: len(full_node.getpeerinfo()) == 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        # Blocks deeper than the threshold are considered \"historical blocks\"\n+        num_historial_blocks = 12",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1413832532",
      "id" : 1413832532,
      "in_reply_to_id" : 1413170635,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII585URV9U",
      "original_commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "original_line" : 74,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 38,
      "pull_request_review_id" : 1762335924,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413832532/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-04T12:55:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413832532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1413837545"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413837545"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Ah yes, it makes sense what `num_historical_blocks` purpose is. The nit is why the number 12 was chosen specifically. I suppose to just make it an even 300, and it can be arbitrary?\r\n\r\nYep.",
      "commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "created_at" : "2023-12-04T12:58:36Z",
      "diff_hunk" : "@@ -46,6 +50,63 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_historical_blocks(self):\n+        self.log.info(\"Test full node does not request blocks beyond the limited peer threshold\")\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 0)\n+        self.connect_nodes(1, 2)\n+        self.generate(miner, 1)\n+\n+        # Verify peers are out of IBD\n+        for node in self.nodes:\n+            assert not node.getblockchaininfo()['initialblockdownload']\n+\n+        # Isolate full_node (the node will remain out of IBD)\n+        full_node.setnetworkactive(False)\n+        self.wait_until(lambda: len(full_node.getpeerinfo()) == 0)\n+\n+        # Mine blocks and sync the pruned node. Surpass the NETWORK_NODE_LIMITED threshold.\n+        # Blocks deeper than the threshold are considered \"historical blocks\"\n+        num_historial_blocks = 12",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1413837545",
      "id" : 1413837545,
      "in_reply_to_id" : 1413170635,
      "line" : 74,
      "node_id" : "PRRC_kwDOABII585URXLp",
      "original_commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "original_line" : 74,
      "original_position" : 38,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 38,
      "pull_request_review_id" : 1762343933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413837545/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-04T12:58:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1413837545",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1417250008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1417250008"
         }
      },
      "author_association" : "MEMBER",
      "body" : "ea3138b7b189158db80bfd1f9d9dd17e7ef52f3f\r\n\r\nmight as well jump `pindex` forward here, so that the second condition is satisfied?",
      "commit_id" : "a0687ffd568b0984a8b1e51fd0061f87f25e95d7",
      "created_at" : "2023-12-06T12:54:00Z",
      "diff_hunk" : "@@ -1475,6 +1476,11 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 return;\n             }\n \n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight >= static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) - 2 /* two blocks buffer for possible races */)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1417250008",
      "id" : 1417250008,
      "line" : 1480,
      "node_id" : "PRRC_kwDOABII585UeYTY",
      "original_commit_id" : "ea3138b7b189158db80bfd1f9d9dd17e7ef52f3f",
      "original_line" : 1480,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 61,
      "pull_request_review_id" : 1767479926,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1417250008/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-06T12:54:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1417250008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "The code looks alright, but i'd still rather have [this](https://github.com/bitcoin/bitcoin/pull/28120#pullrequestreview-1557211930) addressed first. It looks like even #28170 doesn't directly handle this, but rather prepare the codebase for another PR handling it?",
      "created_at" : "2023-12-06T12:59:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#issuecomment-1842833890",
      "id" : 1842833890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28120",
      "node_id" : "IC_kwDOABII585t12ni",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1842833890/reactions"
      },
      "updated_at" : "2023-12-06T12:59:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1842833890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1438410355"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438410355"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm not sure what you are referring to. Could you rephrase it please.\r\nWant to update `pindexLastCommonBlock` to `pindex`?",
      "commit_id" : "c5b5843d8f10d96f76ee6b95f2b1b1b4ce755f75",
      "created_at" : "2023-12-29T21:04:44Z",
      "diff_hunk" : "@@ -1475,6 +1476,11 @@ void PeerManagerImpl::FindNextBlocks(std::vector<const CBlockIndex*>& vBlocks, c\n                 return;\n             }\n \n+            // Don't request blocks that go further than what limited peers can provide\n+            if (is_limited_peer && (state->pindexBestKnownBlock->nHeight - pindex->nHeight >= static_cast<int>(NODE_NETWORK_LIMITED_MIN_BLOCKS) - 2 /* two blocks buffer for possible races */)) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1438410355",
      "id" : 1438410355,
      "in_reply_to_id" : 1417250008,
      "line" : 1510,
      "node_id" : "PRRC_kwDOABII585VvGZz",
      "original_commit_id" : "ea3138b7b189158db80bfd1f9d9dd17e7ef52f3f",
      "original_line" : 1510,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 61,
      "pull_request_review_id" : 1799217466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438410355/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-30T12:51:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438410355",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1491334604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491334604"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't understand this part of the test. Why do we connect nodes 1 and 2, just to disconnect again without doing anything in between?\r\nWhy is the `generate` call necessary? For me, the test also succeeds if I delete it. But if we do have to generate a block, shouldn't we then also at least add a `sync_blocks` to ensure it propagates to all nodes before disconnecting?",
      "commit_id" : "c5b5843d8f10d96f76ee6b95f2b1b1b4ce755f75",
      "created_at" : "2024-02-15T16:56:01Z",
      "diff_hunk" : "@@ -54,6 +58,63 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_historical_blocks(self):\n+        self.log.info(\"Test full node does not request blocks beyond the limited peer threshold\")\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 0)\n+        self.connect_nodes(1, 2)\n+        self.generate(miner, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1491334604",
      "id" : 1491334604,
      "line" : 70,
      "node_id" : "PRRC_kwDOABII585Y4_XM",
      "original_commit_id" : "c5b5843d8f10d96f76ee6b95f2b1b1b4ce755f75",
      "original_line" : 70,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 26,
      "pull_request_review_id" : 1883359307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491334604/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-15T17:38:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491334604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1491464952"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491464952"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I don't understand this part of the test. Why do we connect nodes 1 and 2, just to disconnect again without doing anything in between? Why is the generate call necessary?\r\n\r\nTo ensure all nodes are out of IBD. The idea was to isolate this test case from the previous cases executed along the file. It was done in this way to be able to run this test case at any point of the file. This was vasild request because he was running it first, commenting the rest of the cases to speed the process up.\r\n\r\nThe connection requirement is because the test overrides `setup_network`, which skips the framework's connections creation process (peers start the test with no connections).\r\n\r\n> shouldn't we then also at least add a sync_blocks to ensure it propagates to all nodes before disconnecting?\r\n\r\nThe `self.generate(miner, 1)` function calls `sync_blocks()` internally.",
      "commit_id" : "c5b5843d8f10d96f76ee6b95f2b1b1b4ce755f75",
      "created_at" : "2024-02-15T18:48:08Z",
      "diff_hunk" : "@@ -54,6 +58,63 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_historical_blocks(self):\n+        self.log.info(\"Test full node does not request blocks beyond the limited peer threshold\")\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 0)\n+        self.connect_nodes(1, 2)\n+        self.generate(miner, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1491464952",
      "id" : 1491464952,
      "in_reply_to_id" : 1491334604,
      "line" : 70,
      "node_id" : "PRRC_kwDOABII585Y5fL4",
      "original_commit_id" : "c5b5843d8f10d96f76ee6b95f2b1b1b4ce755f75",
      "original_line" : 70,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 26,
      "pull_request_review_id" : 1883571073,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491464952/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-15T18:49:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491464952",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1491664859"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491664859"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "ok, makes sense!",
      "commit_id" : "c5b5843d8f10d96f76ee6b95f2b1b1b4ce755f75",
      "created_at" : "2024-02-15T21:01:54Z",
      "diff_hunk" : "@@ -54,6 +58,63 @@ def setup_network(self):\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n+    def test_avoid_requesting_historical_blocks(self):\n+        self.log.info(\"Test full node does not request blocks beyond the limited peer threshold\")\n+        pruned_node = self.nodes[0]\n+        miner = self.nodes[1]\n+        full_node = self.nodes[2]\n+\n+        # Connect and generate block to ensure IBD=false\n+        self.connect_nodes(1, 0)\n+        self.connect_nodes(1, 2)\n+        self.generate(miner, 1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28120#discussion_r1491664859",
      "id" : 1491664859,
      "in_reply_to_id" : 1491334604,
      "line" : 70,
      "node_id" : "PRRC_kwDOABII585Y6P_b",
      "original_commit_id" : "c5b5843d8f10d96f76ee6b95f2b1b1b4ce755f75",
      "original_line" : 70,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "test/functional/p2p_node_network_limited.py",
      "position" : 26,
      "pull_request_review_id" : 1883871815,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28120",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491664859/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-15T21:01:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491664859",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   }
]

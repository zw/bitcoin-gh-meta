[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/27854).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [Fi3](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587152706), [sipa](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587485219), [ariard](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1590322328), [dunxen](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1591759027), [kristapsk](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1598574675), [luke-jr](https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1605237375) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27896](https://github.com/bitcoin/bitcoin/pull/27896) (Remove the syscall sandbox by fanquake)\n* [#26966](https://github.com/bitcoin/bitcoin/pull/26966) (index: blockfilter initial sync speedup, parallelize process by furszy)\n* [#24539](https://github.com/bitcoin/bitcoin/pull/24539) (Add a \"tx output spender\" index by sstone)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-06-11T08:54:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1586080747",
      "id" : 1586080747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585eiavr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1586080747/reactions"
      },
      "updated_at" : "2023-10-16T07:53:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1586080747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "What are the reasons for not having this as a separate piece of software that calls the Bitcoin Core RPCs? From glancing at the code here it seems like `getblocktemplate` and `submitblock` would be the only needed RPCs. I've seen the discussion about separation (multi-process) in https://github.com/bitcoin/bitcoin/pull/23049 but wasn't convinced by the arguments there (e.g. https://github.com/bitcoin/bitcoin/pull/23049#issuecomment-926009122). I am worried about the maintenance burden of this and would prefer it being a separate thing.\r\n\r\nIf stratumv3 or \"some other cool new mining protocol\" comes out tomorrow, are we gonna add support for that too? In my opinion, Bitcoin Core's interfaces should accommodate projects like this but direct integration should be reserved for strictly necessary things.",
      "created_at" : "2023-06-12T09:53:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1586988190",
      "id" : 1586988190,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585el4Se",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1586988190/reactions"
      },
      "updated_at" : "2023-06-12T09:53:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1586988190",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "One reason is that `getblocktemplate` require polling bitcoind where `NewTemplate` will be pushed by bitcoind. What you call stratumV3 would likely be an extension of Sv2 and will likley use the same binary data format and framing of Sv2.\r\n\r\n",
      "created_at" : "2023-06-12T11:01:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587095727",
      "id" : 1587095727,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585emSiv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587095727/reactions"
      },
      "updated_at" : "2023-06-12T11:01:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587095727",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6207037?v=4",
         "events_url" : "https://api.github.com/users/Fi3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fi3/followers",
         "following_url" : "https://api.github.com/users/Fi3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fi3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fi3",
         "id" : 6207037,
         "login" : "Fi3",
         "node_id" : "MDQ6VXNlcjYyMDcwMzc=",
         "organizations_url" : "https://api.github.com/users/Fi3/orgs",
         "received_events_url" : "https://api.github.com/users/Fi3/received_events",
         "repos_url" : "https://api.github.com/users/Fi3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fi3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fi3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fi3"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> One reason is that getblocktemplate require polling bitcoind where NewTemplate will be pushed by bitcoind.\r\n\r\nI'm imagining a separate process `stratumv2d` that implements the server from this PR but polls the block template through `getblocktemplate` instead of using the BlockAssembler directly (which is equivalent to a poll, minus the rpc roundtrip). stratumv2d could then still push template updates after polling from bitcoind.\r\n\r\n> What you call stratumV3 would likely be an extension of Sv2 and will likley use the same binary data format and framing of Sv2.\r\n\r\nI was just trying to make a point about Bitcoin Core probably not wanting to support every mining protocol that will ever exist.",
      "created_at" : "2023-06-12T11:12:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587116056",
      "id" : 1587116056,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585emXgY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587116056/reactions"
      },
      "updated_at" : "2023-06-12T11:12:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587116056",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> I'm imagining a separate process stratumv2d that implements the server from this PR but polls the block template through getblocktemplate instead of using the BlockAssembler directly (which is equivalent to a poll, minus the rpc roundtrip). stratumv2d could then still push template updates after polling from bitcoind.\r\n\r\nhaving it implemented into bitcoind is not a big change and will allow more flexibility  when templates are pushed respect to just poll  `getblocktemplate`\r\n\r\n> I was just trying to make a point about Bitcoin Core probably not wanting to support every mining protocol that will ever exist.\r\n\r\nSure, and I agree. What I want to say is that in the case of an improvement of Sv2 that needs new/different messages to be supported by bitcoind these messages will use the same data format and framing' proposed here. So there wont be the need to support a completely new protocol.  \r\n\r\n' please note that the framing implemented if this PR is not the one on the spec so when I say the one proposed here I mean the one that is specified in the Sv2 spec.  The framing will be updated if there will be sufficient support for an concept ACK\r\n\r\n",
      "created_at" : "2023-06-12T11:35:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587152706",
      "id" : 1587152706,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585emgdC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587152706/reactions"
      },
      "updated_at" : "2023-06-12T12:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587152706",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6207037?v=4",
         "events_url" : "https://api.github.com/users/Fi3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fi3/followers",
         "following_url" : "https://api.github.com/users/Fi3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fi3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fi3",
         "id" : 6207037,
         "login" : "Fi3",
         "node_id" : "MDQ6VXNlcjYyMDcwMzc=",
         "organizations_url" : "https://api.github.com/users/Fi3/orgs",
         "received_events_url" : "https://api.github.com/users/Fi3/received_events",
         "repos_url" : "https://api.github.com/users/Fi3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fi3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fi3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fi3"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> having it implemented into bitcoind is not a big change and will allow more flexibility in when templates are pushed respect to just poll getblocktemplate\r\n\r\nWhat are you thinking of in terms of flexibility that the current interfaces do not offer? I can't think of anything that would not work by using the current interfaces or exposing extra functionality through them. For example, looking at Matt's comment https://github.com/bitcoin/bitcoin/pull/23049#issuecomment-926009122:\r\n\r\n> do things like pre-construct next-next-block templates in advance and push them out quicker\r\n\r\nThis is not something we currently support and would (afaik) require significant changes to our mining/mempool logic (entirely separate of any stratum v2 changes). Once we have that functionality we should expose it through our interfaces (e.g. zmq, rpc, rest) such that applications like stratum v2 can make use of it.\r\n\r\n> the inefficiencies of getblocktemplate have been a real source of pain for pool operators for some time, I'm excited its going away.\r\n\r\nCorrect me if I'm wrong but the inefficiencies of `getblocktemplate` (for the most part) stem from the underlying mining algorithm's runtime complexity. This is not something that stratum v2 magically solves.",
      "created_at" : "2023-06-12T13:08:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587311912",
      "id" : 1587311912,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585enHUo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587311912/reactions"
      },
      "updated_at" : "2023-06-12T13:08:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587311912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Can not answer about Matt comment. (@TheBlueMatt maybe can clarify?)\r\n\r\nWhat I intended is  for example create a new template as soon as txs in mempool allow creations of new template with a fee amount that is bigger than x than the one of last created template. Or create a future template based on the one that miner is mining (next-next-block). \r\n\r\n> This is not something we currently support and would (afaik) require significant changes to our mining/mempool logic (entirely separate of any stratum v2 changes). Once we have that functionality we should expose it through our interfaces (e.g. zmq, rpc, rest) such that applications like stratum v2 can make use of it.\r\n\r\nIt make sense to me. But I would like to know also Matt opinion on that. ",
      "created_at" : "2023-06-12T13:28:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587347653",
      "id" : 1587347653,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585enQDF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587347653/reactions"
      },
      "updated_at" : "2023-06-12T13:28:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587347653",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6207037?v=4",
         "events_url" : "https://api.github.com/users/Fi3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fi3/followers",
         "following_url" : "https://api.github.com/users/Fi3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fi3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fi3",
         "id" : 6207037,
         "login" : "Fi3",
         "node_id" : "MDQ6VXNlcjYyMDcwMzc=",
         "organizations_url" : "https://api.github.com/users/Fi3/orgs",
         "received_events_url" : "https://api.github.com/users/Fi3/received_events",
         "repos_url" : "https://api.github.com/users/Fi3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fi3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fi3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fi3"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm Concept ACK on eventually replacing the current `getblocktemplate` with another interface, for the following reasons:\r\n* The poll-based nature introduces unnecessary latency over a hypothetical push-based one.\r\n* Being RPC based, `getblocktemplate` is bandwidth and CPU inefficient due to JSON and hex encoding (for large amounts of data being transferred on every call).\r\n* `getblocktemplate` provides too much information for clients that do not care about performing their own transaction selection (full transaction hex and dependency information), with no way to opt out.\r\n\r\nNone of these deficiencies require the full StratumV2 approach to address; e.g. longpolling RPC could partially address the polling concern, a binary REST or ZMQ interface instead of RPC could address encoding issues, and additional RPC options to reduce verbosity could address that concern. Still, I don't think there was much impetus to improve upon these in an ecosystem that is `getblocktemplate`-based.\r\n\r\nIf (and that is an if) it is clear that the ecosystem is likely to adopt StratumV2, then I believe it makes sense to consider it as an interface too now. An alternative could still be a more \"neutral\" interface that is also push-based, binary, and efficient, and keep the StratumV2 logic as a separate daemon. That has advantages and disadvantages:\r\n\r\n* Advantages:\r\n  * Less complexity in Bitcoin Core to review and maintain.\r\n  * Less tied to the specific protocol, so wouldn't need Bitcoin Core changes when further protocol changes occur (as long as those don't introduce additional data requirements not exposed by the interface), perhaps making it easier to evolve StratumV2 (and/or successors).\r\n* Disadvantages:\r\n  * Slight efficiency/latency loss due to needing an additional process/layer to do the translation.\r\n  * Additional deployment friction (I do think it's important in general to make sure mining is as easy and efficient as possible, and having easily usable interfaces helps with that).\r\n  * In case a feature like outsourcing transaction selection is considered, I can imagine having one party performing the coinbase construction (the pool), and another performing transaction selection (the bitcoind talked to). In case this involves communicating e.g. the size/sigops of that coinbase to bitcoind for block construction, that may be harder to incorporate in a \"neutral\" protocol (it'd necessarily be bidirectional, while REST/ZMQ are inherently uni-directional I believe).\r\n\r\nI haven't reviewed StratumV2 itself, so I'm curious how people see these. Perhaps one can also consider different trade-offs in between \"`bitcoind` speaks the mining protocol directly\" and \"`bitcoind` only speaks a neutral interface\":\r\n* I assume what is considered in this PR is already only a subset of StratumV2 (as I remember there are multiple subprotocols, and I imagine not all of them are relevant to Bitcoin Core). But seeing things like Noise being part of the protocol, I do wonder if it's a possibility to just consider an unencrypted/unauthenticated subset, requiring a (perhaps much thinner) separate daemon to add that. Doing so may perhaps reduce the complexity to maintain in Bitcoin Core significantly.\r\n* Perhaps we see what is considered here as StratumV2 not so much as \"the\" mining protocol we expect everything to use, but just as the de facto binary interface protocol chosen because we need one anyway, and StratumV2 is already designed to cover the needs of such a protocol. If StratumV2 expansions/evolutions come along, or whatever other protocol, it may not be unreasonable to expect that to need a separate daemon that speaks StratumV2 with Bitcoin Core still.\r\n\r\n> This is not something we currently support and would (afaik) require significant changes to our mining/mempool logic (entirely separate of any stratum v2 changes). Once we have that functionality we should expose it through our interfaces (e.g. zmq, rpc, rest) such that applications like stratum v2 can make use of it.\r\n\r\nIt's true that we don't current support this, and that Stratum V2 does not magically solve this, but I do believe that part of the reason we don't is exactly because it's not that trivial in an RPC-based setting, and hard to move away from that in an ecosystem that's reliant on `getblocktemplate`. And in the long term, I do believe it's reasonable to consider at least the possibility of doing block template construction asynchronously in Bitcoin Core, because it is the one piece of infrastructure that has all the information to do so, and moving to such an approach enables for more computationally heavy block building without burdening the critical path.",
      "created_at" : "2023-06-12T14:40:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587485219",
      "id" : 1587485219,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585enxoj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 5,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 5,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587485219/reactions"
      },
      "updated_at" : "2023-06-12T15:11:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587485219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> An alternative could still be a more \"neutral\" interface that is also push-based, binary, and efficient, and keep the StratumV2 logic as a separate daemon. \r\n\r\nGiven that Sv2 logic for TP is already minimal. The option of not using an already existent interface (zmq,rpc) neiter using the already specified Sv2 interface but redesign from scratch a new one, do not make much sense to me. \r\n\r\n> \r\n    Advantages:\r\n        Less complexity in Bitcoin Core to review and maintain.\r\n        Less tied to the specific protocol, so wouldn't need Bitcoin Core changes when further protocol changes occur (as long as those don't introduce additional data requirements not exposed by the interface), perhaps making it easier to evolve StratumV2 (and/or successors).\r\n    Disadvantages:\r\n        Slight efficiency/latency loss due to needing an additional process/layer to do the translation.\r\n        Additional deployment friction (I do think it's important in general to make sure mining is as easy and efficient as possible, and having easily usable interfaces helps with that).\r\n        In case a feature like outsourcing transaction selection is considered, I can imagine having one party performing the coinbase construction (the pool), and another performing transaction selection (the bitcoind talked to). In case this involves communicating e.g. the size/sigops of that coinbase to bitcoind for block construction, that may be harder to incorporate in a \"neutral\" protocol.\r\n\r\n* Less complexity on Bitcoin Core: not sure how less complex we can be, maybe a little bit, but this with the need to introduce a new interface with his own spec.\r\n* Slight efficiency/latency loss: I don't think that this could ever be a real world issue but the point is right. \r\n* Additional deployment friction: this is one of the main reason for why we want to include noise in the TP and not doing it as a separate layer.\r\n* About the last point the pool/miner communicate how much space at maximum he need for the coinbase outputs and the TP create a template considering it.\r\n\r\n> I assume what is considered in this PR is already only a subset of StratumV2 (as I remember there are multiple subprotocols, and I imagine not all of them are relevant to Bitcoin Core). But seeing things like Noise being part of the protocol, I do wonder if it's a possibility to just consider an unencrypted/unauthenticated subset, requiring a (perhaps much thinner) separate daemon to add that. Doing so may perhaps reduce the complexity to maintain in Bitcoin Core significantly.\r\n\r\nAlso this make sense to me but I still would like to hear the opinion from someone else that have insight into Sv2.\r\n\r\n> Perhaps we see what is considered here as StratumV2 not so much as \"the\" mining protocol we expect everything to use, but just as the de facto binary interface protocol chosen because we need one anyway, and StratumV2 is already designed to cover the needs of such a protocol. If StratumV2 expansions/evolutions come along, or whatever other protocol, it may not be unreasonable to expect that to need a separate daemon that speaks StratumV2 with Bitcoin Core still.\r\n\r\nyep\r\n",
      "created_at" : "2023-06-12T15:17:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587553321",
      "id" : 1587553321,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585eoCQp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587553321/reactions"
      },
      "updated_at" : "2023-06-12T15:17:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587553321",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6207037?v=4",
         "events_url" : "https://api.github.com/users/Fi3/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Fi3/followers",
         "following_url" : "https://api.github.com/users/Fi3/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Fi3/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Fi3",
         "id" : 6207037,
         "login" : "Fi3",
         "node_id" : "MDQ6VXNlcjYyMDcwMzc=",
         "organizations_url" : "https://api.github.com/users/Fi3/orgs",
         "received_events_url" : "https://api.github.com/users/Fi3/received_events",
         "repos_url" : "https://api.github.com/users/Fi3/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Fi3/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Fi3/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Fi3"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> None of these deficiencies require the full StratumV2 approach to address;\n\nThis protocol basically is a protocol designed exactly for this use-case. The fact that it comes under a \"StratumV2\" banner is somewhat unrelated, there's only some common framing. It's also not a substantial protocol, arguably simpler than getblocktemplate in full.\n\nThis protocol exists basically to create an alternative to getblocktemplate which solves key problems in it, and can be used with or without any other Stratumv2 content.\n\n* it is (much, much) lower bandwidth than getblocktemplate,\n* it explicitly moves decisions of when to switch to a new block to bitcoin core with a push model, rather than long polling which almost never gets used in practice. This allows for substantially better optimization of transaction selection and next-block switching across the ecosystem. This also implies we cannot build this das some kind of layer on the existing bitcoin core APIs, there needs to be something new.\n* it provides some cryptographic authentication, allowing the protocol to go over the open internet without fear - this allows the protocol to take the place of current systems like CK's \"solopool\", which allows miners to solo mine without the complexity of running a full node and pool stack, and can now be replicated by any full node. More generally, abstracting the block construction logic from a pool via a protocol which doesn't require tight integration could allow pools or miners with regulatory risk to use a third party template provider.\n\nThis protocol is certainly not set in stone, if someone has ideas for other goals that should be addressed or other protocol tweaks that can still happen at this phase, though ideally not a complete rewrite :).",
      "created_at" : "2023-06-12T16:15:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587650914",
      "id" : 1587650914,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585eoaFi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587650914/reactions"
      },
      "updated_at" : "2023-06-12T16:18:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587650914",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226922409"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226922409"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why bother making this optional? Can just have a config flag.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-06-12T16:28:32Z",
      "diff_hunk" : "@@ -344,6 +344,17 @@ AC_ARG_ENABLE([lto],\n     [enable_lto=$enableval],\n     [enable_lto=no])\n \n+dnl Enable running a StratumV2 Template Provider server.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226922409",
      "id" : 1226922409,
      "line" : 347,
      "node_id" : "PRRC_kwDOABII585JIVmp",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 347,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "configure.ac",
      "position" : 4,
      "pull_request_review_id" : 1475323709,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226922409/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-12T16:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226922409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226924386"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226924386"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Shouldnt this be non-0? 1KB would match the current GBT logic. More generally, there doesn't seem to be a way to set this, somehow I'd thought it was in the exposed protocol, but if not it probably should be.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-06-12T16:30:29Z",
      "diff_hunk" : "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;\n+\n+    /**\n+     * Optional protocol features provided by the server.\n+     */\n+    uint16_t optional_features = 0;\n+\n+    /**\n+     * The default option for the additional space required for coinbase output.\n+     */\n+    unsigned int default_coinbase_tx_additional_output_size = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226924386",
      "id" : 1226924386,
      "line" : 64,
      "node_id" : "PRRC_kwDOABII585JIWFi",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 64,
      "original_position" : 64,
      "original_start_line" : null,
      "path" : "src/sv2_template_provider.h",
      "position" : 64,
      "pull_request_review_id" : 1475323709,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226924386/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-12T16:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226924386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226927976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226927976"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why is this a config flag? The message future_template bit indicates that its a predicted template, and presumably we'll have a stream of both predicted and current templates on the wire, not something in the options?",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-06-12T16:33:58Z",
      "diff_hunk" : "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;\n+\n+    /**\n+     * Optional protocol features provided by the server.\n+     */\n+    uint16_t optional_features = 0;\n+\n+    /**\n+     * The default option for the additional space required for coinbase output.\n+     */\n+    unsigned int default_coinbase_tx_additional_output_size = 0;\n+\n+    /**\n+     * The default flag for all new work.\n+     */\n+    bool default_future_templates = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226927976",
      "id" : 1226927976,
      "line" : 69,
      "node_id" : "PRRC_kwDOABII585JIW9o",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 69,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/sv2_template_provider.h",
      "position" : 69,
      "pull_request_review_id" : 1475323709,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226927976/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-12T16:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226927976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226928617"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226928617"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is there a reason not to hard-code this and optional_features until we actually have a need for them? Just less code if we do.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-06-12T16:34:37Z",
      "diff_hunk" : "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1226928617",
      "id" : 1226928617,
      "line" : 54,
      "node_id" : "PRRC_kwDOABII585JIXHp",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/sv2_template_provider.h",
      "position" : 54,
      "pull_request_review_id" : 1475323709,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226928617/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-12T16:35:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1226928617",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> What are the reasons for not having this as a separate piece of software that calls the Bitcoin Core RPCs? From glancing at the code here it seems like `getblocktemplate` and `submitblock` would be the only needed RPCs. I've seen the discussion about separation (multi-process) in #23049 but wasn't convinced by the arguments there (e.g. [#23049 (comment)](https://github.com/bitcoin/bitcoin/pull/23049#issuecomment-926009122)). I am worried about the maintenance burden of this and would prefer it being a separate thing.\r\n> \r\n> If stratumv3 or \"some other cool new mining protocol\" comes out tomorrow, are we gonna add support for that too? In my opinion, Bitcoin Core's interfaces should accommodate projects like this but direct integration should be reserved for strictly necessary things.\r\n\r\nThanks and appreciate the time for reviewing the PR. A lot of the points are valid especially concerns around maintenance burden and supporting numerous project integrations.\r\n\r\nIn terms of RPC calls, this is of course possible. With stratum v2 some of the goals are around improving performance and reducing latency. JSON RPC can fall short in speed and efficiency. If the sv2 TP were to be run as a separate   process that uses the existing RPC calls, then at a very high level we have the overhead:\r\n\r\n- Encoding Template fields to bytes\r\n- Encode bytes to HexStr\r\n- Build a JSON representation with HexStr fields\r\n- Serialize JSON representation to utf8 binary and send over the wire\r\n\r\nwhere as if sv2 provided templates:\r\n\r\n- Encode Template fields to bytes (sv2 encoding)\r\n- Send sv2 bytes over the wire\r\n\r\nThere are different approaches we could take, none of which I think has necessarily strong support for a particular direction but I guess the common goal would be, to be able to extract templates and submit work more efficiently with less overhead than the current RPCs available",
      "created_at" : "2023-06-12T17:06:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587728576",
      "id" : 1587728576,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585eotDA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587728576/reactions"
      },
      "updated_at" : "2023-06-12T17:06:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587728576",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18324680?v=4",
         "events_url" : "https://api.github.com/users/ccdle12/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ccdle12/followers",
         "following_url" : "https://api.github.com/users/ccdle12/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ccdle12/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ccdle12",
         "id" : 18324680,
         "login" : "ccdle12",
         "node_id" : "MDQ6VXNlcjE4MzI0Njgw",
         "organizations_url" : "https://api.github.com/users/ccdle12/orgs",
         "received_events_url" : "https://api.github.com/users/ccdle12/received_events",
         "repos_url" : "https://api.github.com/users/ccdle12/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ccdle12/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ccdle12"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> In terms of RPC calls, this is of course possible. With stratum v2 some of the goals are around improving performance and reducing latency. JSON RPC can fall short in speed and efficiency.\r\n\r\nIts not just latency and overhead, however - one of the important goals of replacing GBT in Bitcoin Core broadly is to move towards everything being push, rather than polling. In general, block templates should come out of Bitcoin Core very aggressively - when a new block comes in and has been validated, before the mempool gets updated, we should be able to get a new block template out based on some prediction and conflict-removal, from there, we can update the mempool and then do a full new block generation, updating the template again. During steady-state, we should make decisions about when to update the block template based on new transactions (ignore 30-second-old transactions unless they have lots of fees, do a block template update immediately if a huge-fee transaction comes in, etc). This is important for long-term sustainability of Bitcoin Core as a block template constructor, and while GBT technically supports polling, I don't think any major production pool servers actually use it - it being optional means you can't make decisions like most of the above without assuming everyone uses GBT long-polling, which just isn't true.",
      "created_at" : "2023-06-12T19:32:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1587954425",
      "id" : 1587954425,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585epkL5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587954425/reactions"
      },
      "updated_at" : "2023-06-12T19:32:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1587954425",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227252081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227252081"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I reasoned since that this proposal wasn't introducing/editing arguably a core feature that it should be optional. Also setting it by default, I think clashes with how the functional tests currently run in Bitcoin since the sv2 server will respond to building a new template on best block change and will affect assertions on the state of the mempool in functional tests.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-06-12T21:17:42Z",
      "diff_hunk" : "@@ -344,6 +344,17 @@ AC_ARG_ENABLE([lto],\n     [enable_lto=$enableval],\n     [enable_lto=no])\n \n+dnl Enable running a StratumV2 Template Provider server.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227252081",
      "id" : 1227252081,
      "in_reply_to_id" : 1226922409,
      "line" : 347,
      "node_id" : "PRRC_kwDOABII585JJmFx",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 347,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "configure.ac",
      "position" : 4,
      "pull_request_review_id" : 1475838967,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227252081/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-12T21:17:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227252081",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18324680?v=4",
         "events_url" : "https://api.github.com/users/ccdle12/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ccdle12/followers",
         "following_url" : "https://api.github.com/users/ccdle12/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ccdle12/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ccdle12",
         "id" : 18324680,
         "login" : "ccdle12",
         "node_id" : "MDQ6VXNlcjE4MzI0Njgw",
         "organizations_url" : "https://api.github.com/users/ccdle12/orgs",
         "received_events_url" : "https://api.github.com/users/ccdle12/received_events",
         "repos_url" : "https://api.github.com/users/ccdle12/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ccdle12/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ccdle12"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227252607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227252607"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is true, I treated this PR as draft. Currently in development and testing against the SRI, all templates are assumed to be future so this would be updated if this PR gains interest for a complete implementation.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-06-12T21:18:12Z",
      "diff_hunk" : "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;\n+\n+    /**\n+     * Optional protocol features provided by the server.\n+     */\n+    uint16_t optional_features = 0;\n+\n+    /**\n+     * The default option for the additional space required for coinbase output.\n+     */\n+    unsigned int default_coinbase_tx_additional_output_size = 0;\n+\n+    /**\n+     * The default flag for all new work.\n+     */\n+    bool default_future_templates = true;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227252607",
      "id" : 1227252607,
      "in_reply_to_id" : 1226927976,
      "line" : 69,
      "node_id" : "PRRC_kwDOABII585JJmN_",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 69,
      "original_position" : 69,
      "original_start_line" : null,
      "path" : "src/sv2_template_provider.h",
      "position" : 69,
      "pull_request_review_id" : 1475839499,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227252607/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-12T21:18:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227252607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18324680?v=4",
         "events_url" : "https://api.github.com/users/ccdle12/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ccdle12/followers",
         "following_url" : "https://api.github.com/users/ccdle12/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ccdle12/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ccdle12",
         "id" : 18324680,
         "login" : "ccdle12",
         "node_id" : "MDQ6VXNlcjE4MzI0Njgw",
         "organizations_url" : "https://api.github.com/users/ccdle12/orgs",
         "received_events_url" : "https://api.github.com/users/ccdle12/received_events",
         "repos_url" : "https://api.github.com/users/ccdle12/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ccdle12/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ccdle12"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227253132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227253132"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "True, we can hard code it when these fields need to be serialized and add a comment above explaining why they are currently hard coded",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-06-12T21:18:38Z",
      "diff_hunk" : "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227253132",
      "id" : 1227253132,
      "in_reply_to_id" : 1226928617,
      "line" : 54,
      "node_id" : "PRRC_kwDOABII585JJmWM",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/sv2_template_provider.h",
      "position" : 54,
      "pull_request_review_id" : 1475839956,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227253132/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-12T21:18:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227253132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18324680?v=4",
         "events_url" : "https://api.github.com/users/ccdle12/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ccdle12/followers",
         "following_url" : "https://api.github.com/users/ccdle12/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ccdle12/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ccdle12",
         "id" : 18324680,
         "login" : "ccdle12",
         "node_id" : "MDQ6VXNlcjE4MzI0Njgw",
         "organizations_url" : "https://api.github.com/users/ccdle12/orgs",
         "received_events_url" : "https://api.github.com/users/ccdle12/received_events",
         "repos_url" : "https://api.github.com/users/ccdle12/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ccdle12/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ccdle12"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227309139"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227309139"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "We can turn it on with a non-default config knob, though, it doesn't have to be non-built. I'm not sure I understand why it should be compile-time optional - it doesn't add a new dependency, doesn't invasive touch other code, and is completely unused if the config knob isn't turned on.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-06-12T22:35:45Z",
      "diff_hunk" : "@@ -344,6 +344,17 @@ AC_ARG_ENABLE([lto],\n     [enable_lto=$enableval],\n     [enable_lto=no])\n \n+dnl Enable running a StratumV2 Template Provider server.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1227309139",
      "id" : 1227309139,
      "in_reply_to_id" : 1226922409,
      "line" : 347,
      "node_id" : "PRRC_kwDOABII585JJ0BT",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 347,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "configure.ac",
      "position" : 4,
      "pull_request_review_id" : 1475918893,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227309139/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-12T22:35:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1227309139",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Over-turning my comment from https://github.com/bitcoin/bitcoin/pull/23049#issuecomment-925446441. After studying more Stratum V2 and the inner details of mining operations, and in light of more âreactive\" block template construction in future in function of the processed mempool content, I think this more valuable to have Stratum V2 TP integrated in Bitcoin Core to enhance decentralization of the mining ecosystem. From a maintenance viewpoint, the changes are very âperipheralâ from other subsystem like the validation engine or the p2p stack so concept ACK to have Stratum V2 TP in Core.\r\n\r\n> Another architectural approach other than a new thread and server for the Sv2 TP might be preferred such as the current work in the [multiprocess project](https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Process-Separation)\r\n\r\nIn the future, it might make sense to split the `bitcoin-node` process in a bunch of more granualr process (e.g `bitcoin-validation`, `bitcoin-server` with indexes, `bitcoin-p2p`) to avoid exposed DoS leakage between them or having redundance of some functionality like block-relay. What can be a good architecture/deployment fit for a âhobbyistâ full-node might not work for a substantial mining pool or Lightning Service Provider.",
      "created_at" : "2023-06-14T01:56:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1590322328",
      "id" : 1590322328,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585eymSY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1590322328/reactions"
      },
      "updated_at" : "2023-06-14T01:56:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1590322328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK as an alternative to getblocktemplate. Iâm still digging into the deeper bits of StratumV2 though. :)",
      "created_at" : "2023-06-14T18:09:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1591759027",
      "id" : 1591759027,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585e4FCz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1591759027/reactions"
      },
      "updated_at" : "2023-06-14T18:09:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1591759027",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3072149?v=4",
         "events_url" : "https://api.github.com/users/dunxen/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dunxen/followers",
         "following_url" : "https://api.github.com/users/dunxen/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dunxen/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dunxen",
         "id" : 3072149,
         "login" : "dunxen",
         "node_id" : "MDQ6VXNlcjMwNzIxNDk=",
         "organizations_url" : "https://api.github.com/users/dunxen/orgs",
         "received_events_url" : "https://api.github.com/users/dunxen/received_events",
         "repos_url" : "https://api.github.com/users/dunxen/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dunxen/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dunxen/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dunxen"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I've been playing around with Stratum v2 in recent months and may get my hands on an old S9. So hopefully I can test this when electricity prices go negative, soon(tm).",
      "created_at" : "2023-06-14T20:04:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1591898368",
      "id" : 1591898368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585e4nEA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 2,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1591898368/reactions"
      },
      "updated_at" : "2023-06-14T20:04:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1591898368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\n\r\n> may get my hands on an old S9. So hopefully I can test this when electricity prices go negative\r\n\r\nI even have S9 and could be ok to pay that electricity bill for some tests, but currently it's already too hot in my flat (I use it as a space heater from time to time, when it's too cold).",
      "created_at" : "2023-06-20T11:07:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1598574675",
      "id" : 1598574675,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585fSFBT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1598574675/reactions"
      },
      "updated_at" : "2023-06-20T11:07:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1598574675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2023-06-24T02:23:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1605237375",
      "id" : 1605237375,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585frfp_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1605237375/reactions"
      },
      "updated_at" : "2023-06-24T02:23:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1605237375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@kristapsk I removed two of the three hashboards and set the target consumption to 100W. In practice it's more like 130, but that's fine; not hot and not too noisy (mine came with BrainsOS+ installed)",
      "created_at" : "2023-06-26T14:53:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1607656508",
      "id" : 1607656508,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585f0uQ8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1607656508/reactions"
      },
      "updated_at" : "2023-06-26T14:54:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1607656508",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-06-27T22:46:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1610320717",
      "id" : 1610320717,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585f-4tN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1610320717/reactions"
      },
      "updated_at" : "2023-06-27T22:46:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1610320717",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1250873859"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1250873859"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This should also mention the testnet, regtest and signet ports.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-07-03T13:11:18Z",
      "diff_hunk" : "@@ -630,6 +638,10 @@ void SetupServerArgs(ArgsManager& argsman)\n #if defined(USE_SYSCALL_SANDBOX)\n     argsman.AddArg(\"-sandbox=<mode>\", \"Use the experimental syscall sandbox in the specified mode (-sandbox=log-and-abort or -sandbox=abort). Allow only expected syscalls to be used by bitcoind. Note that this is an experimental new feature that may cause bitcoind to exit or crash unexpectedly: use with caution. In the \\\"log-and-abort\\\" mode the invocation of an unexpected syscall results in a debug handler being invoked which will log the incident and terminate the program (without executing the unexpected syscall). In the \\\"abort\\\" mode the invocation of an unexpected syscall results in the entire process being killed immediately by the kernel without executing the unexpected syscall.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif // USE_SYSCALL_SANDBOX\n+       //\n+#if ENABLE_TEMPLATE_PROVIDER\n+    argsman.AddArg(\"-stratumv2=<port>\", \"Listen for stratumv2 connections on <port>. Bitcoind will act as a Template Provider. (default: 8442)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1250873859",
      "id" : 1250873859,
      "line" : 643,
      "node_id" : "PRRC_kwDOABII585KjtID",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 643,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 42,
      "pull_request_review_id" : 1511170547,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1250873859/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-03T13:57:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1250873859",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi @Sjors , thanks and appreciate the review,\r\n\r\n> The PR description could use instructions on how to test this. Specifically I'd like to try it on mainnet against my vintage S9 with BraiinsOS+ (not sure which pools already support job negotiation/ announcement). This can of course point to existing documentation. [Config D](https://stratumprotocol.org/getting-started/#config-d-sv1-firmware--translation-proxy-jn-job-negotiator--sv2-pool) is close but it assumes regtest and running your own pool.\r\n\r\nFor this, honestly I'm not sure which would be the best configuration, I'll need to ask a few people that have done mainnet testing/testing with devices. I'll update the PR description once I find out.\r\n\r\n---\r\n\r\n> It will also be easier to test and review this pull request if you add some functional tests. Maybe also add a `-debug=sv2` log category so it's easier to see what's happening.\r\n> \r\n> > There could be potential conflict with functional tests. [...] My guess is that it would be acceptable to disable the Sv2 TP when running functional tests [...]\r\n> \r\n> I think it's better to fix / improve these tests. Depending on the exact issue that could be done in a separate PR.\r\n\r\nYou're right, I'll work on setting up some functional tests and also adding the debug log category.\r\n\r\n---\r\n\r\n> Imo this does not need to go behind a `--enable-template-provider` flag. Having `-stratumv2` off by default is enough. You're not adding a new dependency nor creating a new binary. Covering all possible configure flags in CI scales exponentially. Of course this ties into my previous point about tests.\r\n> \r\n> I'm seeing `CreateNewBlock()` messages now even when running without `-stratumv2`. That should probably be changed.\r\n> \r\n> When running with `-stratumv2` it says `Sv2 Template Provider listening on port: 0` so something is off with the default argument parsing there.\r\n\r\nThis makes more sense. I implemented this change removing the compile configuration flag and just used `-stratumv2` and `stratumv2port` with some default ports for each env. \r\n\r\nI think since there's a lot of changes in this one PR and noise to come, it would probably make sense to break this down into much smaller focused PRs? I think it would be much more beneficial for reviewers to consume and review smaller chunks of code.",
      "created_at" : "2023-07-12T09:56:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1632207805",
      "id" : 1632207805,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585hSYO9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632207805/reactions"
      },
      "updated_at" : "2023-07-12T09:56:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1632207805",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18324680?v=4",
         "events_url" : "https://api.github.com/users/ccdle12/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ccdle12/followers",
         "following_url" : "https://api.github.com/users/ccdle12/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ccdle12/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ccdle12",
         "id" : 18324680,
         "login" : "ccdle12",
         "node_id" : "MDQ6VXNlcjE4MzI0Njgw",
         "organizations_url" : "https://api.github.com/users/ccdle12/orgs",
         "received_events_url" : "https://api.github.com/users/ccdle12/received_events",
         "repos_url" : "https://api.github.com/users/ccdle12/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ccdle12/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ccdle12"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276895712"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276895712"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Probably should be called `-stratumv2port`, unless it supports specifying an IP to bind to (probably a good idea)",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-07-27T22:48:41Z",
      "diff_hunk" : "@@ -630,6 +638,10 @@ void SetupServerArgs(ArgsManager& argsman)\n #if defined(USE_SYSCALL_SANDBOX)\n     argsman.AddArg(\"-sandbox=<mode>\", \"Use the experimental syscall sandbox in the specified mode (-sandbox=log-and-abort or -sandbox=abort). Allow only expected syscalls to be used by bitcoind. Note that this is an experimental new feature that may cause bitcoind to exit or crash unexpectedly: use with caution. In the \\\"log-and-abort\\\" mode the invocation of an unexpected syscall results in a debug handler being invoked which will log the incident and terminate the program (without executing the unexpected syscall). In the \\\"abort\\\" mode the invocation of an unexpected syscall results in the entire process being killed immediately by the kernel without executing the unexpected syscall.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif // USE_SYSCALL_SANDBOX\n+       //\n+#if ENABLE_TEMPLATE_PROVIDER\n+    argsman.AddArg(\"-stratumv2=<port>\", \"Listen for stratumv2 connections on <port>. Bitcoind will act as a Template Provider. (default: 8442)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276895712",
      "id" : 1276895712,
      "line" : 643,
      "node_id" : "PRRC_kwDOABII585MG-Hg",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 643,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 42,
      "pull_request_review_id" : 1550950789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276895712/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-27T22:52:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276895712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276896030"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896030"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We don't typically refer to \"Bitcoind\" like this",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-07-27T22:49:07Z",
      "diff_hunk" : "@@ -630,6 +638,10 @@ void SetupServerArgs(ArgsManager& argsman)\n #if defined(USE_SYSCALL_SANDBOX)\n     argsman.AddArg(\"-sandbox=<mode>\", \"Use the experimental syscall sandbox in the specified mode (-sandbox=log-and-abort or -sandbox=abort). Allow only expected syscalls to be used by bitcoind. Note that this is an experimental new feature that may cause bitcoind to exit or crash unexpectedly: use with caution. In the \\\"log-and-abort\\\" mode the invocation of an unexpected syscall results in a debug handler being invoked which will log the incident and terminate the program (without executing the unexpected syscall). In the \\\"abort\\\" mode the invocation of an unexpected syscall results in the entire process being killed immediately by the kernel without executing the unexpected syscall.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif // USE_SYSCALL_SANDBOX\n+       //\n+#if ENABLE_TEMPLATE_PROVIDER\n+    argsman.AddArg(\"-stratumv2=<port>\", \"Listen for stratumv2 connections on <port>. Bitcoind will act as a Template Provider. (default: 8442)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276896030",
      "id" : 1276896030,
      "line" : 643,
      "node_id" : "PRRC_kwDOABII585MG-Me",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 643,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 42,
      "pull_request_review_id" : 1550950789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896030/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-27T22:52:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896030",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276896582"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896582"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Should be added to the port number check earlier",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-07-27T22:49:48Z",
      "diff_hunk" : "@@ -1869,6 +1881,22 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         return false;\n     }\n \n+#ifdef ENABLE_TEMPLATE_PROVIDER\n+    assert(!node.sv2_template_provider);\n+    assert(node.chainman);\n+    assert(node.mempool);\n+\n+    node.sv2_template_provider = std::make_unique<Sv2TemplateProvider>(*node.chainman, *node.mempool);\n+\n+    try {\n+        auto sv2_port{static_cast<uint16_t>(gArgs.GetIntArg(\"-stratumv2\", 8442))};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276896582",
      "id" : 1276896582,
      "line" : 1892,
      "node_id" : "PRRC_kwDOABII585MG-VG",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 1892,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 59,
      "pull_request_review_id" : 1550950789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896582/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-27T22:52:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896582",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276896935"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896935"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Rather than prefixing with \"sv2:\", suggest a new log category.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-07-27T22:50:15Z",
      "diff_hunk" : "@@ -1869,6 +1881,22 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         return false;\n     }\n \n+#ifdef ENABLE_TEMPLATE_PROVIDER\n+    assert(!node.sv2_template_provider);\n+    assert(node.chainman);\n+    assert(node.mempool);\n+\n+    node.sv2_template_provider = std::make_unique<Sv2TemplateProvider>(*node.chainman, *node.mempool);\n+\n+    try {\n+        auto sv2_port{static_cast<uint16_t>(gArgs.GetIntArg(\"-stratumv2\", 8442))};\n+        node.sv2_template_provider->Start(Sv2TemplateProviderOptions { .port = sv2_port });\n+    } catch (const std::runtime_error& e) {\n+        LogPrintf(\"sv2: %s\\n\", e.what());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276896935",
      "id" : 1276896935,
      "line" : 1895,
      "node_id" : "PRRC_kwDOABII585MG-an",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 1895,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 62,
      "pull_request_review_id" : 1550950789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896935/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-27T22:52:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276896935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276897878"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276897878"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Code readability is more important than \"less code\"...",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-07-27T22:51:26Z",
      "diff_hunk" : "@@ -0,0 +1,258 @@\n+#ifndef BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+#define BITCOIN_SV2_TEMPLATE_PROVIDER_H\n+\n+#include <logging.h>\n+#include <node/sv2_messages.h>\n+#include <node/miner.h>\n+#include <streams.h>\n+#include <util/sock.h>\n+\n+class ChainstateManager;\n+class CTxMemPool;\n+\n+struct Sv2Client\n+{\n+    /**\n+     * Receiving and sending socket for the connected client\n+     */\n+    std::shared_ptr<Sock> m_sock;\n+\n+    /**\n+     * Whether the client has confirmed the connection with a successful SetupConnection.\n+     */\n+    bool m_setup_connection_confirmed;\n+\n+    /**\n+     * Whether the client is a candidate for disconnection.\n+     */\n+    bool m_disconnect_flag;\n+\n+    /**\n+     * Whether the client has received CoinbaseOutputDataSize message.\n+     */\n+    bool m_coinbase_output_data_size_recv;\n+\n+    /**\n+     * Specific additional coinbase tx output size required for the client.\n+     */\n+    unsigned int m_coinbase_tx_outputs_size;\n+\n+    explicit Sv2Client(std::shared_ptr<Sock> sock) : m_sock{sock} {};\n+};\n+\n+struct Sv2TemplateProviderOptions\n+{\n+    /**\n+     * The default listening port for the server.\n+     */\n+    uint16_t port = 8442;\n+\n+    /**\n+     * The current protocol version of stratum v2 supported by the server. Not to be confused\n+     * with byte value of identitying the stratum v2 subprotocol.\n+     */\n+    uint16_t protocol_version = 2;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1276897878",
      "id" : 1276897878,
      "in_reply_to_id" : 1226928617,
      "line" : 54,
      "node_id" : "PRRC_kwDOABII585MG-pW",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 54,
      "original_position" : 54,
      "original_start_line" : null,
      "path" : "src/sv2_template_provider.h",
      "position" : 54,
      "pull_request_review_id" : 1550950789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276897878/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-27T22:52:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276897878",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1360264837"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360264837"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you for the suggestion. I'll update the argument name and also add an IP binding option.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-10-16T07:53:41Z",
      "diff_hunk" : "@@ -630,6 +638,10 @@ void SetupServerArgs(ArgsManager& argsman)\n #if defined(USE_SYSCALL_SANDBOX)\n     argsman.AddArg(\"-sandbox=<mode>\", \"Use the experimental syscall sandbox in the specified mode (-sandbox=log-and-abort or -sandbox=abort). Allow only expected syscalls to be used by bitcoind. Note that this is an experimental new feature that may cause bitcoind to exit or crash unexpectedly: use with caution. In the \\\"log-and-abort\\\" mode the invocation of an unexpected syscall results in a debug handler being invoked which will log the incident and terminate the program (without executing the unexpected syscall). In the \\\"abort\\\" mode the invocation of an unexpected syscall results in the entire process being killed immediately by the kernel without executing the unexpected syscall.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif // USE_SYSCALL_SANDBOX\n+       //\n+#if ENABLE_TEMPLATE_PROVIDER\n+    argsman.AddArg(\"-stratumv2=<port>\", \"Listen for stratumv2 connections on <port>. Bitcoind will act as a Template Provider. (default: 8442)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1360264837",
      "id" : 1360264837,
      "in_reply_to_id" : 1276895712,
      "line" : 643,
      "node_id" : "PRRC_kwDOABII585RE_6F",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 643,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 42,
      "pull_request_review_id" : 1679344174,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360264837/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-16T07:53:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360264837",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18324680?v=4",
         "events_url" : "https://api.github.com/users/ccdle12/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ccdle12/followers",
         "following_url" : "https://api.github.com/users/ccdle12/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ccdle12/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ccdle12",
         "id" : 18324680,
         "login" : "ccdle12",
         "node_id" : "MDQ6VXNlcjE4MzI0Njgw",
         "organizations_url" : "https://api.github.com/users/ccdle12/orgs",
         "received_events_url" : "https://api.github.com/users/ccdle12/received_events",
         "repos_url" : "https://api.github.com/users/ccdle12/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ccdle12/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ccdle12"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1360267338"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360267338"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok thanks, I'll remove this reference in the description.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-10-16T07:55:31Z",
      "diff_hunk" : "@@ -630,6 +638,10 @@ void SetupServerArgs(ArgsManager& argsman)\n #if defined(USE_SYSCALL_SANDBOX)\n     argsman.AddArg(\"-sandbox=<mode>\", \"Use the experimental syscall sandbox in the specified mode (-sandbox=log-and-abort or -sandbox=abort). Allow only expected syscalls to be used by bitcoind. Note that this is an experimental new feature that may cause bitcoind to exit or crash unexpectedly: use with caution. In the \\\"log-and-abort\\\" mode the invocation of an unexpected syscall results in a debug handler being invoked which will log the incident and terminate the program (without executing the unexpected syscall). In the \\\"abort\\\" mode the invocation of an unexpected syscall results in the entire process being killed immediately by the kernel without executing the unexpected syscall.\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);\n #endif // USE_SYSCALL_SANDBOX\n+       //\n+#if ENABLE_TEMPLATE_PROVIDER\n+    argsman.AddArg(\"-stratumv2=<port>\", \"Listen for stratumv2 connections on <port>. Bitcoind will act as a Template Provider. (default: 8442)\", ArgsManager::ALLOW_ANY, OptionsCategory::OPTIONS);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1360267338",
      "id" : 1360267338,
      "in_reply_to_id" : 1276896030,
      "line" : 643,
      "node_id" : "PRRC_kwDOABII585RFAhK",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 643,
      "original_position" : 42,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 42,
      "pull_request_review_id" : 1679347754,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360267338/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-16T07:55:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360267338",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18324680?v=4",
         "events_url" : "https://api.github.com/users/ccdle12/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ccdle12/followers",
         "following_url" : "https://api.github.com/users/ccdle12/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ccdle12/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ccdle12",
         "id" : 18324680,
         "login" : "ccdle12",
         "node_id" : "MDQ6VXNlcjE4MzI0Njgw",
         "organizations_url" : "https://api.github.com/users/ccdle12/orgs",
         "received_events_url" : "https://api.github.com/users/ccdle12/received_events",
         "repos_url" : "https://api.github.com/users/ccdle12/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ccdle12/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ccdle12"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1360267683"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360267683"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ok thanks, I'll add a new log category.",
      "commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "created_at" : "2023-10-16T07:55:49Z",
      "diff_hunk" : "@@ -1869,6 +1881,22 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n         return false;\n     }\n \n+#ifdef ENABLE_TEMPLATE_PROVIDER\n+    assert(!node.sv2_template_provider);\n+    assert(node.chainman);\n+    assert(node.mempool);\n+\n+    node.sv2_template_provider = std::make_unique<Sv2TemplateProvider>(*node.chainman, *node.mempool);\n+\n+    try {\n+        auto sv2_port{static_cast<uint16_t>(gArgs.GetIntArg(\"-stratumv2\", 8442))};\n+        node.sv2_template_provider->Start(Sv2TemplateProviderOptions { .port = sv2_port });\n+    } catch (const std::runtime_error& e) {\n+        LogPrintf(\"sv2: %s\\n\", e.what());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#discussion_r1360267683",
      "id" : 1360267683,
      "in_reply_to_id" : 1276896935,
      "line" : 1895,
      "node_id" : "PRRC_kwDOABII585RFAmj",
      "original_commit_id" : "21bb3946c40ca115778efc04ca8e5084b460e26b",
      "original_line" : 1895,
      "original_position" : 62,
      "original_start_line" : null,
      "path" : "src/init.cpp",
      "position" : 62,
      "pull_request_review_id" : 1679348307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27854",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360267683/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-16T07:55:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1360267683",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18324680?v=4",
         "events_url" : "https://api.github.com/users/ccdle12/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ccdle12/followers",
         "following_url" : "https://api.github.com/users/ccdle12/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ccdle12/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ccdle12",
         "id" : 18324680,
         "login" : "ccdle12",
         "node_id" : "MDQ6VXNlcjE4MzI0Njgw",
         "organizations_url" : "https://api.github.com/users/ccdle12/orgs",
         "received_events_url" : "https://api.github.com/users/ccdle12/received_events",
         "repos_url" : "https://api.github.com/users/ccdle12/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ccdle12/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ccdle12"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi everyone,\r\n\r\nApologies for the absence. I've been busy working on related branches to address some of the reviews here and to keep up with the changes in the stratumv2 spec.\r\n\r\nIt seems like both the protocol and the template provider work/spec have stabilized. I believe the focus from this point onward will be on intensive testing and refactoring the code to align more closely with the Bitcoin project.\r\n\r\nI'll likely need to reassess the best way to present these changes, possibly in smaller, more focused PRs to make it easier for contributors to review.",
      "created_at" : "2023-10-16T07:56:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1763931109",
      "id" : 1763931109,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585pI3Pl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1763931109/reactions"
      },
      "updated_at" : "2023-10-16T07:56:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1763931109",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18324680?v=4",
         "events_url" : "https://api.github.com/users/ccdle12/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ccdle12/followers",
         "following_url" : "https://api.github.com/users/ccdle12/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ccdle12/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ccdle12",
         "id" : 18324680,
         "login" : "ccdle12",
         "node_id" : "MDQ6VXNlcjE4MzI0Njgw",
         "organizations_url" : "https://api.github.com/users/ccdle12/orgs",
         "received_events_url" : "https://api.github.com/users/ccdle12/received_events",
         "repos_url" : "https://api.github.com/users/ccdle12/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ccdle12/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ccdle12/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ccdle12"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Hi @ccdle12. Stratum v2 is one of the proposed high-priority projects in https://github.com/bitcoin/bitcoin/issues/28642 and it received several votes.  It may be helpful if you can comment there whether the next six months would be favorable timing for the Stratum v2 work,  if you (or someone else) is willing to be an active lead, and if that person would be able to attend the weekly [`#bitcoin-core-dev` IRC meetings](https://github.com/jonatack/bitcoin-development/blob/master/bitcoin-core-dev-irc-meetings.txt) to provide status updates and answer questions.",
      "created_at" : "2023-10-16T18:22:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1765050943",
      "id" : 1765050943,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585pNIo_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1765050943/reactions"
      },
      "updated_at" : "2023-10-16T18:25:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1765050943",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I was able to mine a bit on testnet today using:\r\n* @Fi3's experimental branch: https://github.com/Fi3/bitcoin/commits/PatchTemplates\r\n* an S9 running Braiins OS, but using Stratum v1 because apparently the firmware is behind the spec\r\n* Translator proxy (v1 -> v2) running locally, connected to my S9, and upstream to a testnet pool. The pool incidentally rugged me because I don't have an account :-)\r\n* Job Declarator client running locally, connected to my node, and upstream to a testnet Job Declarator _server_\r\n\r\nI have not tried the censorship solo mining fallback yet (there's no easy way to trigger that without a test pool that censors).\r\n\r\nIt would be great to see _this_ PR updated with the latest stuff, and maybe also rebased.\r\n\r\nIn addition it would be useful to have an _up to date_ overview of what parts of the Stratum v2 spec are implemented in what part of the code here.\r\n\r\n\r\nI wonder if we can keep the first iteration of this project poll based, e.g. the above linked branch just creates a template every 30 seconds and the Job Declarator client occasionally comes by and asks for it. The main changes to focus on would then be a new communication protocol and some new messages. Then a later pull request could figure out how to make it all push based. Since the existing `getblocktemplate` RPC is unaffected, it should be fine to ship work in progress and test-only stratum v2 functionality.\r\n\r\nAlternatively we completely figure out how to get everything right before merging anything.",
      "created_at" : "2023-11-24T15:37:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1825832743",
      "id" : 1825832743,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585s0_8n",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825832743/reactions"
      },
      "updated_at" : "2023-11-24T15:39:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825832743",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I have a rebased and reorganised branch: https://github.com/bitcoin/bitcoin/compare/master...Sjors:bitcoin:2023/11/sv2-poll\r\n\r\nIt's based on @Fi3's https://github.com/bitcoin/bitcoin/compare/master...Fi3:bitcoin:PatchTemplates which IIUC is the most recent thing people are testing with (see Discord chat). That branch starts where this PR ends and has several newer commits by @ccdle12 and @Fi3.\r\n\r\n@ccdle12 are you still working on this? If not, I could take over and open a new PR. Otherwise, you could check if my branch is useful and use it here.",
      "created_at" : "2023-11-30T14:51:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1833934826",
      "id" : 1833934826,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585tT5_q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 3,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 3,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1833934826/reactions"
      },
      "updated_at" : "2023-11-30T15:02:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1833934826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Happy to leave this open for a bit, but here's my PR: #28983",
      "created_at" : "2023-12-01T11:39:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27854#issuecomment-1835979687",
      "id" : 1835979687,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27854",
      "node_id" : "IC_kwDOABII585tbtOn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1835979687/reactions"
      },
      "updated_at" : "2023-12-01T11:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1835979687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]

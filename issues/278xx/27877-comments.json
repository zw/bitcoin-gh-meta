[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/27877).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jonatack](https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1834473406), [S3RK](https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1837467046), [kashifs](https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1859275939), [ishaanam](https://github.com/bitcoin/bitcoin/pull/27877#pullrequestreview-1816719303) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28985](https://github.com/bitcoin/bitcoin/pull/28985) (Avoid changeless input sets when SFFO is active by murchandamus)\n* [#28977](https://github.com/bitcoin/bitcoin/pull/28977) (Add Gutter Guard Selector by murchandamus)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-06-13T22:32:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1590140722",
      "id" : 1590140722,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585ex58y",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1590140722/reactions"
      },
      "updated_at" : "2024-01-11T22:50:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1590140722",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "At this point, Iâm mostly looking for Concept reviews.\r\n\r\nSome ideas floating around in the context that Iâd love comments on:\r\n\r\n- Also run CoinGrinder when the fees surpass some relative portion of the recipient output amounts\r\n- Only run CoinGrinder if no changeless solution was proposed",
      "created_at" : "2023-06-14T13:58:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1591266110",
      "id" : 1591266110,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585e2Ms-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1591266110/reactions"
      },
      "updated_at" : "2023-06-14T17:56:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1591266110",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for exploring this, I think this is an interesting idea! I'll comment based on my specific usage of the wallet for lightning service providers, please bear in mind that this is a very specific use case that is quite different from regular users (see #24795 for early details about this).\r\n\r\nMy understanding of the current goals of coin selection are that it tries to find a good balance between minimizing fees and consolidating utxos. The latter actually helps the former: consolidating utxos is usually good for performance, and if you do it when fees are low, you will avoid paying more fees in the future when fees are higher because you'll be able to use less inputs in your future transactions.\r\n\r\nIn the case of a lightning service provider, we'd rather avoid consolidating utxos, and are ready to pay more fees to keep a large enough utxo set to satisfy our users' needs. The main reasons for that are that:\r\n\r\n- we are using 0-conf (in a setup where the user is trusting us to not double-spend)\r\n- we are using low fees for those transactions (it's ok to keep transactions unconfirmed until the mempool clears, this is how we can keep the cost low for users)\r\n- the change outputs from most of those transactions are _unsafe_ because they may be double-spent by a commitment transaction (and thus generally unusable until the the transaction confirms, except when used for that same user)\r\n\r\nThat last point is a consequence of [splicing](https://github.com/lightning/bolts/pull/863), let me know if you want me to explain that point in more details.\r\n\r\nIf we run out of _safe_ utxos, we cannot onboard new users, which may require us to transfer funds from a cold wallet while making sure we're creating many utxos, at a time where the on-chain fees may be high. Our ideal wallet would maintain a large pool of utxos of various sizes, to ensure we're always ready to onboard new users or sell liquidity to existing users.\r\n\r\nI understand that this is the opposite of what most end users want and can't be achieved by the same algorithm: that's why I would find it very useful to have various coin selection algorithms in bitcoin core, that are tuned to different profiles/scenarios. I like that this algorithm feels like something we could use (at all feerates) to keep a wallet state that makes more sense for us.",
      "created_at" : "2023-06-15T10:44:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1592803865",
      "id" : 1592803865,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585e8EIZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1592803865/reactions"
      },
      "updated_at" : "2023-06-15T10:44:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1592803865",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Changes in last force-push: https://github.com/bitcoin/bitcoin/compare/10621c6c4499ba32ff3b7f0bd11b0351f36982b4..0446986f8dd87db29153618d380d159ec0016c1a\r\n\r\nThanks for your thoughts, @t-bast. Your comment inspired a small optimization. \r\nCoinGrinder has been simplified by keeping only track of the input weight (instead of weight and waste), and minimizing input weight throughout. This reduced the number of parameters necessary to call CoinGrinder, simplified the input set traversal, and allows CoinGrinder to be used at all feerates instead of just high feerates. It is however still only called for feerates above 100â¯á¹©/vB from [`spend.cpp`](https://github.com/bitcoin/bitcoin/pull/27877/files#diff-6e06b309cd494ef5da4e78aa0929a980767edd12342137f268b9219167064d13R586) at this time.",
      "created_at" : "2023-06-15T20:11:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1593666325",
      "id" : 1593666325,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585e_WsV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1593666325/reactions"
      },
      "updated_at" : "2023-06-15T20:12:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1593666325",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Ran the fuzzer for a bit:\r\n\r\n```\r\nfuzz: wallet/test/fuzz/coinselection.cpp:102: void wallet::coin_grinder_fuzz_target(FuzzBufferType): Assertion `result_knapsack->GetWeight() >= result_cg->GetWeight()' failed.\r\n```\r\n\r\nInput to reproduce:\r\n```sh\r\n$ echo \"d3d3/wF383d3d3d3d3d3d3d3d3d5d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3d3fzd3d3d3d3d7BE\r\nWnd3d3d3d3V3d3d3d3d3d3l6d3d3d3d3d3f///8Fd3d3d3d3d3d3d3d3d1d3d3d3d3d3d3d3d3d3\r\nd3d3d3d3d3d3d3d3d3d3d3d3Mnd3d3d3d3d5d3d3d3d3YS5hYWFhYWFhYWFhYWFhYWFhYWFhYUBh\r\nYWEuAAAACmFhWWFhYWFhd3d3d3d3d3d3d3d3dzp3d3d3d3d3d3d3d3d3d3d3d/N3d3d3d3d3d3d3\r\nd3d3eXd3d3d3d3d3d3d1d3d3d3d3d3d3dzJ3d3d3d3d3eXd3d3d3d3d3d3d1d3d3d3d3d3d3dzJ3\r\nd3d3d3d3d3d3d3d3d3d3dyh3d3d3d3d3dxcC+xc=\" | base64 -d > coingrinder_crash\r\n```",
      "created_at" : "2023-06-20T09:40:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1598451117",
      "id" : 1598451117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585fRm2t",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1598451117/reactions"
      },
      "updated_at" : "2023-06-20T09:40:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1598451117",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I would like to see if the CI catches the [crash](https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1598451117), now that #27919 has been merged. @Xekyo would you mind rebasing?",
      "created_at" : "2023-06-21T09:24:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1600498713",
      "id" : 1600498713,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585fZawZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1600498713/reactions"
      },
      "updated_at" : "2023-06-21T09:24:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1600498713",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@dergoegge: Thanks, I discovered the issue myself over the weekend and was exploring yesterday whether I could come up with another optimization. In the end, I fixed the fuzz test by only comparing the weight with SRD and Knapsack when CoinGrinder actually concluded searching the combination space exhaustively. Since finding the lowest weight input set is an NP-hard problem, itâs clearly expected that we can generate UTXO pools for which CoinGrinder will not be able to finish the search in 100k attempts, it was naÃ¯ve to expect that the fuzz test wouldnât eventually find such a case.\r\n\r\nYour crash seed passes now.\r\n\r\nIâm sorry Iâm only seeing your comment after pushing the fix.",
      "created_at" : "2023-06-21T17:07:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1601246132",
      "id" : 1601246132,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585fcRO0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1601246132/reactions"
      },
      "updated_at" : "2023-06-21T17:24:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1601246132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I think you can still rebase to unblock the CI in any case?",
      "created_at" : "2023-06-21T17:10:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1601255030",
      "id" : 1601255030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585fcTZ2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1601255030/reactions"
      },
      "updated_at" : "2023-06-21T17:10:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1601255030",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased on Master.\r\n\r\nChanges since last rebase: SelectionResult now has a record if BnB or CoinGrinder run out of tries and thus have not found the optimal solution.",
      "created_at" : "2023-06-21T17:16:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1601273279",
      "id" : 1601273279,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585fcX2_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1601273279/reactions"
      },
      "updated_at" : "2023-06-21T17:16:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1601273279",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/Xekyo/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Xekyo/followers",
         "following_url" : "https://api.github.com/users/Xekyo/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Xekyo/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Xekyo",
         "id" : 4060799,
         "login" : "Xekyo",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/Xekyo/orgs",
         "received_events_url" : "https://api.github.com/users/Xekyo/received_events",
         "repos_url" : "https://api.github.com/users/Xekyo/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Xekyo/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Xekyo"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-06-23T22:01:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1605031556",
      "id" : 1605031556,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585fqtaE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1605031556/reactions"
      },
      "updated_at" : "2023-06-23T22:01:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1605031556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1318794256"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318794256"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 49ec2d4ada6d9abb43c2a5f35dd6f2e5666157f9: Is there any case that `curr_try` may be greater than `TOTAL_TRIES`? ",
      "commit_id" : "6b4cf71446d18c7fc0cbe09aade80769c062e573",
      "created_at" : "2023-09-07T15:37:38Z",
      "diff_hunk" : "@@ -191,6 +191,161 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected\n+ *\n+ * @param const std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.\n+ * @param int max_weight The maximum weight available for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+\n+    std::vector<size_t> best_selection; // best selection UTXO indices\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = INT_MAX;\n+\n+    std::vector<size_t> curr_selection; // selected UTXO indices\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+\n+    bool max_tx_weight_exceeded = false;\n+\n+    // Sort the utxo_pool\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n+    for (const OutputGroup& utxo : utxo_pool) {\n+        // Assert that this utxo is not negative. It should never be negative,\n+        // effective value calculation should have removed it\n+        assert(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n+    }\n+    if (total_available < selection_target + change_target) {\n+        // Insufficient funds\n+        return util::Error();\n+    }\n+\n+    size_t utxo_pool_index = 0;\n+    enum operations { add, shift, cut, done };\n+    operations next_op = operations::add;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(curr_selection.back());\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection.pop_back();\n+    };\n+\n+    auto add_utxo_at_index = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection.push_back(utxo_pool_index);\n+        next_op = operations::add;\n+    };\n+\n+    for (size_t curr_try = 0;;) {\n+        if (curr_try >= TOTAL_TRIES || next_op == operations::done) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1318794256",
      "id" : 1318794256,
      "line" : 301,
      "node_id" : "PRRC_kwDOABII585OmzQQ",
      "original_commit_id" : "49ec2d4ada6d9abb43c2a5f35dd6f2e5666157f9",
      "original_line" : 277,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 145,
      "pull_request_review_id" : 1615733605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318794256/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-07T15:37:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318794256",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1318948005"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318948005"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "No, I donât think so, an equality check here should be functionally equivalent.",
      "commit_id" : "6b4cf71446d18c7fc0cbe09aade80769c062e573",
      "created_at" : "2023-09-07T17:56:03Z",
      "diff_hunk" : "@@ -191,6 +191,161 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected\n+ *\n+ * @param const std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.\n+ * @param int max_weight The maximum weight available for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+\n+    std::vector<size_t> best_selection; // best selection UTXO indices\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = INT_MAX;\n+\n+    std::vector<size_t> curr_selection; // selected UTXO indices\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+\n+    bool max_tx_weight_exceeded = false;\n+\n+    // Sort the utxo_pool\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n+    for (const OutputGroup& utxo : utxo_pool) {\n+        // Assert that this utxo is not negative. It should never be negative,\n+        // effective value calculation should have removed it\n+        assert(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n+    }\n+    if (total_available < selection_target + change_target) {\n+        // Insufficient funds\n+        return util::Error();\n+    }\n+\n+    size_t utxo_pool_index = 0;\n+    enum operations { add, shift, cut, done };\n+    operations next_op = operations::add;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(curr_selection.back());\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection.pop_back();\n+    };\n+\n+    auto add_utxo_at_index = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection.push_back(utxo_pool_index);\n+        next_op = operations::add;\n+    };\n+\n+    for (size_t curr_try = 0;;) {\n+        if (curr_try >= TOTAL_TRIES || next_op == operations::done) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1318948005",
      "id" : 1318948005,
      "in_reply_to_id" : 1318794256,
      "line" : 301,
      "node_id" : "PRRC_kwDOABII585OnYyl",
      "original_commit_id" : "49ec2d4ada6d9abb43c2a5f35dd6f2e5666157f9",
      "original_line" : 277,
      "original_position" : 87,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 145,
      "pull_request_review_id" : 1615976225,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318948005/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-07T17:56:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1318948005",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1319031269"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319031269"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In cf14a72859a2eaf42a24a2ea3125bdadde5f6611: Here we're setting it for BnB but seems we're not using `GetAlgoCompleted` for it?",
      "commit_id" : "6b4cf71446d18c7fc0cbe09aade80769c062e573",
      "created_at" : "2023-09-07T19:23:20Z",
      "diff_hunk" : "@@ -174,6 +174,10 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n                 curr_selection_weight += utxo.m_weight;\n             }\n         }\n+        if (curr_try >= TOTAL_TRIES - 1) {\n+            // On last attempt and didnât break due to full traversal: solution is non-optimal\n+            result.SetAlgoCompleted(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1319031269",
      "id" : 1319031269,
      "line" : 191,
      "node_id" : "PRRC_kwDOABII585OntHl",
      "original_commit_id" : "cf14a72859a2eaf42a24a2ea3125bdadde5f6611",
      "original_line" : 179,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 45,
      "pull_request_review_id" : 1616104896,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319031269/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-07T19:23:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1319031269",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1320274591"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320274591"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "You are right, Iâll have follow up on this",
      "commit_id" : "6b4cf71446d18c7fc0cbe09aade80769c062e573",
      "created_at" : "2023-09-08T19:41:44Z",
      "diff_hunk" : "@@ -174,6 +174,10 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n                 curr_selection_weight += utxo.m_weight;\n             }\n         }\n+        if (curr_try >= TOTAL_TRIES - 1) {\n+            // On last attempt and didnât break due to full traversal: solution is non-optimal\n+            result.SetAlgoCompleted(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1320274591",
      "id" : 1320274591,
      "in_reply_to_id" : 1319031269,
      "line" : 191,
      "node_id" : "PRRC_kwDOABII585Oscqf",
      "original_commit_id" : "cf14a72859a2eaf42a24a2ea3125bdadde5f6611",
      "original_line" : 179,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 45,
      "pull_request_review_id" : 1618156668,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320274591/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-08T19:41:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1320274591",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK here or https://github.com/bitcoin/bitcoin/pull/28977 based on today's IRC discussion https://bitcoin-irc.chaincode.com/bitcoin-core-dev/2023-11-30#986727.",
      "created_at" : "2023-11-30T20:10:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1834473406",
      "id" : 1834473406,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585tV9e-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 1,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1834473406/reactions"
      },
      "updated_at" : "2023-11-30T22:17:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1834473406",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK.\r\n\r\nThe PR description should say that we don't use hardcoded fee rate value, but rather multiple of long-term-fee-rate. LTFR is an existing user configurable parameter. It's also a good fit for the purpose of determining when to be more \"aggressive\" with coin selection, because it captures forward looking fee market expectations. ",
      "created_at" : "2023-12-03T12:32:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1837467046",
      "id" : 1837467046,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585thYWm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1837467046/reactions"
      },
      "updated_at" : "2023-12-03T12:32:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1837467046",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1466284?v=4",
         "events_url" : "https://api.github.com/users/S3RK/events{/privacy}",
         "followers_url" : "https://api.github.com/users/S3RK/followers",
         "following_url" : "https://api.github.com/users/S3RK/following{/other_user}",
         "gists_url" : "https://api.github.com/users/S3RK/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/S3RK",
         "id" : 1466284,
         "login" : "S3RK",
         "node_id" : "MDQ6VXNlcjE0NjYyODQ=",
         "organizations_url" : "https://api.github.com/users/S3RK/orgs",
         "received_events_url" : "https://api.github.com/users/S3RK/received_events",
         "repos_url" : "https://api.github.com/users/S3RK/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/S3RK/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/S3RK"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The PR description should say that we don't use hardcoded fee rate value, but rather multiple of long-term-fee-rate. LTFR is an existing user configurable parameter. It's also a good fit for the purpose of determining when to be more \"aggressive\" with coin selection, because it captures forward looking fee market expectations.\r\n\r\nThanks, Iâve amended the description.",
      "created_at" : "2023-12-04T19:19:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1839309807",
      "id" : 1839309807,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585toaPv",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1839309807/reactions"
      },
      "updated_at" : "2023-12-04T19:19:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1839309807",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1414446693"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414446693"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 313d4df88360edf1bad1f3415166a96f0ee93f0a \"opt: Tie-break UTXO sort by waste for BnB\"\r\n\r\nThis comparison is a little hard to follow as it requires reminding yourself of the effects of the waste score. It wasn't immediately obvious why the weight matters for this comparison. It seems like it would be simpler to just actually calculate the wastes and compare them.\r\n\r\n```suggestion\r\n            return (a.fee - a.long_term_fee) > (b.fee - b.long_term_fee);\r\n```",
      "commit_id" : "7aa9d18320a384e99cec523371945055ba224ad0",
      "created_at" : "2023-12-04T20:25:00Z",
      "diff_hunk" : "@@ -28,6 +28,14 @@ static util::Result<SelectionResult> ErrorMaxWeightExceeded()\n struct {\n     bool operator()(const OutputGroup& a, const OutputGroup& b) const\n     {\n+        if (a.GetSelectionAmount() == b.GetSelectionAmount()) {\n+            // Sort lower waste to front on tied effective_value\n+            if (a.long_term_fee < a.fee) {\n+                return a.m_weight < b.m_weight;\n+            } else {\n+                return a.m_weight > b.m_weight;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1414446693",
      "id" : 1414446693,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UTr5l",
      "original_commit_id" : "313d4df88360edf1bad1f3415166a96f0ee93f0a",
      "original_line" : 37,
      "original_position" : 10,
      "original_start_line" : 33,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1763330890,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414446693/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-04T21:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414446693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1414455724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414455724"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In ec308d7873f7eb4d597c00708091ede55e9ff5a5 \"coinselection: Add CoinGrinder algorithm\"\r\n\r\nI wish there was a better way to write feerate*3. This is kinda hard to read.",
      "commit_id" : "7aa9d18320a384e99cec523371945055ba224ad0",
      "created_at" : "2023-12-04T20:31:20Z",
      "diff_hunk" : "@@ -585,6 +585,13 @@ util::Result<SelectionResult> ChooseSelectionResult(const CAmount& nTargetValue,\n         results.push_back(*knapsack_result);\n     } else append_error(knapsack_result);\n \n+    if (coin_selection_params.m_effective_feerate > CFeeRate{coin_selection_params.m_long_term_feerate.GetFee(3000)}) { // Minimize input set for feerates of at least 3ÃLTFRE (default: 30â¯á¹©/vB+)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1414455724",
      "id" : 1414455724,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UTuGs",
      "original_commit_id" : "ec308d7873f7eb4d597c00708091ede55e9ff5a5",
      "original_line" : 588,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1763330890,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 2,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 2,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414455724/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-04T21:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414455724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1414479523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414479523"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In ec308d7873f7eb4d597c00708091ede55e9ff5a5 \"coinselection: Add CoinGrinder algorithm\"\r\n\r\nSince this lambda is used in only one spot, I think it would be a bit easier to read to just have it inline.",
      "commit_id" : "7aa9d18320a384e99cec523371945055ba224ad0",
      "created_at" : "2023-12-04T20:50:35Z",
      "diff_hunk" : "@@ -191,6 +191,160 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected\n+ *\n+ * @param const std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.\n+ * @param int max_weight The maximum weight available for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+\n+    std::vector<size_t> best_selection; // best selection UTXO indices\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = INT_MAX;\n+\n+    std::vector<size_t> curr_selection; // selected UTXO indices\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+\n+    bool max_tx_weight_exceeded = false;\n+\n+    // Sort the utxo_pool\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n+    for (const OutputGroup& utxo : utxo_pool) {\n+        // Assert that this utxo is not negative. It should never be negative,\n+        // effective value calculation should have removed it\n+        assert(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n+    }\n+    if (total_available < selection_target + change_target) {\n+        // Insufficient funds\n+        return util::Error();\n+    }\n+\n+    size_t utxo_pool_index = 0; // Points at the UTXO to select next\n+    enum operations { add, shift, cut, done };\n+    operations next_op = operations::add;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(curr_selection.back());\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection.pop_back();\n+    };\n+\n+    auto add_utxo_at_index = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection.push_back(utxo_pool_index);\n+        next_op = operations::add;\n+    };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1414479523",
      "id" : 1414479523,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UTz6j",
      "original_commit_id" : "ec308d7873f7eb4d597c00708091ede55e9ff5a5",
      "original_line" : 274,
      "original_position" : 84,
      "original_start_line" : 268,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1763330890,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414479523/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-04T21:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414479523",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1414513187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414513187"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 6ba9c1cd1032c75e618d8ca7b7aee6ebed16d22d \"opt: Cut if last addition was minimal weight\"\r\n\r\nWhy 2x `max_weight` instead of just `max_weight`?",
      "commit_id" : "7aa9d18320a384e99cec523371945055ba224ad0",
      "created_at" : "2023-12-04T21:20:06Z",
      "diff_hunk" : "@@ -257,17 +257,21 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n     // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending_effval_weight);\n     std::vector<CAmount> lookahead(utxo_pool.size());\n+    std::vector<int> min_tail_weight(utxo_pool.size());\n \n     // Calculate lookahead and check that there are sufficient funds\n     CAmount total_available = 0;\n+    int min_group_weight = 2*max_weight;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1414513187",
      "id" : 1414513187,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UT8Ij",
      "original_commit_id" : "6ba9c1cd1032c75e618d8ca7b7aee6ebed16d22d",
      "original_line" : 264,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1763330890,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414513187/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-04T21:25:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1414513187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1420936262"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420936262"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, great suggestion. Adopted, but with turned around comparison, it needs to be less-than (I checked with a test).",
      "commit_id" : "7aa9d18320a384e99cec523371945055ba224ad0",
      "created_at" : "2023-12-08T19:33:07Z",
      "diff_hunk" : "@@ -28,6 +28,14 @@ static util::Result<SelectionResult> ErrorMaxWeightExceeded()\n struct {\n     bool operator()(const OutputGroup& a, const OutputGroup& b) const\n     {\n+        if (a.GetSelectionAmount() == b.GetSelectionAmount()) {\n+            // Sort lower waste to front on tied effective_value\n+            if (a.long_term_fee < a.fee) {\n+                return a.m_weight < b.m_weight;\n+            } else {\n+                return a.m_weight > b.m_weight;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1420936262",
      "id" : 1420936262,
      "in_reply_to_id" : 1414446693,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UscRG",
      "original_commit_id" : "313d4df88360edf1bad1f3415166a96f0ee93f0a",
      "original_line" : 37,
      "original_position" : 10,
      "original_start_line" : 33,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1773042003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420936262/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-08T20:05:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420936262",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1420947210"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420947210"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Added multiplication operator in https://github.com/bitcoin/bitcoin/pull/29037, and amended here",
      "commit_id" : "7aa9d18320a384e99cec523371945055ba224ad0",
      "created_at" : "2023-12-08T19:38:21Z",
      "diff_hunk" : "@@ -585,6 +585,13 @@ util::Result<SelectionResult> ChooseSelectionResult(const CAmount& nTargetValue,\n         results.push_back(*knapsack_result);\n     } else append_error(knapsack_result);\n \n+    if (coin_selection_params.m_effective_feerate > CFeeRate{coin_selection_params.m_long_term_feerate.GetFee(3000)}) { // Minimize input set for feerates of at least 3ÃLTFRE (default: 30â¯á¹©/vB+)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1420947210",
      "id" : 1420947210,
      "in_reply_to_id" : 1414455724,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Use8K",
      "original_commit_id" : "ec308d7873f7eb4d597c00708091ede55e9ff5a5",
      "original_line" : 588,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 1773042003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420947210/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-08T20:05:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420947210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1420959370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420959370"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Inlined the `add_utxo_at_index` function",
      "commit_id" : "7aa9d18320a384e99cec523371945055ba224ad0",
      "created_at" : "2023-12-08T19:41:31Z",
      "diff_hunk" : "@@ -191,6 +191,160 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected\n+ *\n+ * @param const std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.\n+ * @param int max_weight The maximum weight available for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+\n+    std::vector<size_t> best_selection; // best selection UTXO indices\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = INT_MAX;\n+\n+    std::vector<size_t> curr_selection; // selected UTXO indices\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+\n+    bool max_tx_weight_exceeded = false;\n+\n+    // Sort the utxo_pool\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n+    for (const OutputGroup& utxo : utxo_pool) {\n+        // Assert that this utxo is not negative. It should never be negative,\n+        // effective value calculation should have removed it\n+        assert(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n+    }\n+    if (total_available < selection_target + change_target) {\n+        // Insufficient funds\n+        return util::Error();\n+    }\n+\n+    size_t utxo_pool_index = 0; // Points at the UTXO to select next\n+    enum operations { add, shift, cut, done };\n+    operations next_op = operations::add;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(curr_selection.back());\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection.pop_back();\n+    };\n+\n+    auto add_utxo_at_index = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection.push_back(utxo_pool_index);\n+        next_op = operations::add;\n+    };",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1420959370",
      "id" : 1420959370,
      "in_reply_to_id" : 1414479523,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ush6K",
      "original_commit_id" : "ec308d7873f7eb4d597c00708091ede55e9ff5a5",
      "original_line" : 274,
      "original_position" : 84,
      "original_start_line" : 268,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1773042003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420959370/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-08T20:05:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420959370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1420968134"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420968134"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I just need this to be as big as the largest or bigger than any of the actual groupsâ input weights. Changed to `std::numeric_limits<int>::max()`",
      "commit_id" : "7aa9d18320a384e99cec523371945055ba224ad0",
      "created_at" : "2023-12-08T19:47:52Z",
      "diff_hunk" : "@@ -257,17 +257,21 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n     // Sort the utxo_pool\n     std::sort(utxo_pool.begin(), utxo_pool.end(), descending_effval_weight);\n     std::vector<CAmount> lookahead(utxo_pool.size());\n+    std::vector<int> min_tail_weight(utxo_pool.size());\n \n     // Calculate lookahead and check that there are sufficient funds\n     CAmount total_available = 0;\n+    int min_group_weight = 2*max_weight;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1420968134",
      "id" : 1420968134,
      "in_reply_to_id" : 1414513187,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UskDG",
      "original_commit_id" : "6ba9c1cd1032c75e618d8ca7b7aee6ebed16d22d",
      "original_line" : 264,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1773042003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420968134/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-08T20:05:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420968134",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1420971102"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420971102"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I dropped tracking whether the algorithm was able to exhaustively search the UTXO pool from BnB for now",
      "commit_id" : "7aa9d18320a384e99cec523371945055ba224ad0",
      "created_at" : "2023-12-08T19:51:51Z",
      "diff_hunk" : "@@ -174,6 +174,10 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n                 curr_selection_weight += utxo.m_weight;\n             }\n         }\n+        if (curr_try >= TOTAL_TRIES - 1) {\n+            // On last attempt and didnât break due to full traversal: solution is non-optimal\n+            result.SetAlgoCompleted(false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1420971102",
      "id" : 1420971102,
      "in_reply_to_id" : 1319031269,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Uskxe",
      "original_commit_id" : "cf14a72859a2eaf42a24a2ea3125bdadde5f6611",
      "original_line" : 191,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1773042003,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420971102/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-08T20:05:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1420971102",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Edit: Moved simulation result discussion to [Delving Bitcoin](https://delvingbitcoin.org/t/gutterguard-and-coingrinder-simulation-results/279)",
      "created_at" : "2023-12-09T03:03:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1848150890",
      "id" : 1848150890,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585uKItq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848150890/reactions"
      },
      "updated_at" : "2023-12-21T22:15:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848150890",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Edit: Moved simulation result discussion to [Delving Bitcoin](https://delvingbitcoin.org/t/gutterguard-and-coingrinder-simulation-results/279)",
      "created_at" : "2023-12-09T03:08:38Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1848191242",
      "id" : 1848191242,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585uKSkK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848191242/reactions"
      },
      "updated_at" : "2023-12-21T22:15:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848191242",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1421777389"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421777389"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "For consistency, I think this should read:\r\n\r\n`the 4th is deselected, the 2nd is deselected and the 3rd is selected`",
      "commit_id" : "ef8ed8c973b2a48ccff54e4443a88e876d210bcf",
      "created_at" : "2023-12-10T16:14:35Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1421777389",
      "id" : 1421777389,
      "line" : 224,
      "node_id" : "PRRC_kwDOABII585Uvpnt",
      "original_commit_id" : "232d3d94fc9692d2c7c00dd797e71ed01c808e03",
      "original_line" : 212,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 65,
      "pull_request_review_id" : 1774060383,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421777389/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-10T16:14:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421777389",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1489460?v=4",
         "events_url" : "https://api.github.com/users/kashifs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kashifs/followers",
         "following_url" : "https://api.github.com/users/kashifs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kashifs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kashifs",
         "id" : 1489460,
         "login" : "kashifs",
         "node_id" : "MDQ6VXNlcjE0ODk0NjA=",
         "organizations_url" : "https://api.github.com/users/kashifs/orgs",
         "received_events_url" : "https://api.github.com/users/kashifs/received_events",
         "repos_url" : "https://api.github.com/users/kashifs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kashifs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kashifs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kashifs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1421789507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421789507"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This should read:\r\n\r\n`@param std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.`",
      "commit_id" : "ef8ed8c973b2a48ccff54e4443a88e876d210bcf",
      "created_at" : "2023-12-10T17:40:26Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected\n+ *\n+ * @param const std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1421789507",
      "id" : 1421789507,
      "line" : 226,
      "node_id" : "PRRC_kwDOABII585UvslD",
      "original_commit_id" : "232d3d94fc9692d2c7c00dd797e71ed01c808e03",
      "original_line" : 214,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 67,
      "pull_request_review_id" : 1774071212,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421789507/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-10T17:40:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421789507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1489460?v=4",
         "events_url" : "https://api.github.com/users/kashifs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kashifs/followers",
         "following_url" : "https://api.github.com/users/kashifs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kashifs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kashifs",
         "id" : 1489460,
         "login" : "kashifs",
         "node_id" : "MDQ6VXNlcjE0ODk0NjA=",
         "organizations_url" : "https://api.github.com/users/kashifs/orgs",
         "received_events_url" : "https://api.github.com/users/kashifs/received_events",
         "repos_url" : "https://api.github.com/users/kashifs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kashifs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kashifs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kashifs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1421790528"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421790528"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "this should read:\r\n\r\n`@param CAmount change_target The minimum budget for creating a change output that we add to the selection_target.`",
      "commit_id" : "ef8ed8c973b2a48ccff54e4443a88e876d210bcf",
      "created_at" : "2023-12-10T17:47:49Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected\n+ *\n+ * @param const std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1421790528",
      "id" : 1421790528,
      "line" : 231,
      "node_id" : "PRRC_kwDOABII585Uvs1A",
      "original_commit_id" : "232d3d94fc9692d2c7c00dd797e71ed01c808e03",
      "original_line" : 219,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 72,
      "pull_request_review_id" : 1774072057,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421790528/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-10T17:47:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1421790528",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1489460?v=4",
         "events_url" : "https://api.github.com/users/kashifs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kashifs/followers",
         "following_url" : "https://api.github.com/users/kashifs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kashifs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kashifs",
         "id" : 1489460,
         "login" : "kashifs",
         "node_id" : "MDQ6VXNlcjE0ODk0NjA=",
         "organizations_url" : "https://api.github.com/users/kashifs/orgs",
         "received_events_url" : "https://api.github.com/users/kashifs/received_events",
         "repos_url" : "https://api.github.com/users/kashifs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kashifs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kashifs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kashifs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1423095044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423095044"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "perhaps `change_target` could be `const CAmount&`?",
      "commit_id" : "ef8ed8c973b2a48ccff54e4443a88e876d210bcf",
      "created_at" : "2023-12-11T20:33:53Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected\n+ *\n+ * @param const std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1423095044",
      "id" : 1423095044,
      "in_reply_to_id" : 1421790528,
      "line" : 231,
      "node_id" : "PRRC_kwDOABII585U0rUE",
      "original_commit_id" : "232d3d94fc9692d2c7c00dd797e71ed01c808e03",
      "original_line" : 219,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 72,
      "pull_request_review_id" : 1776118641,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423095044/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-11T20:33:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423095044",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1425998172"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425998172"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Perhaps. That would make it consistent with const CAmount& selection_target. It's my understanding that the documentation should exactly match the function definition. Is there another way to look at this?",
      "commit_id" : "ef8ed8c973b2a48ccff54e4443a88e876d210bcf",
      "created_at" : "2023-12-13T23:45:10Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected\n+ *\n+ * @param const std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1425998172",
      "id" : 1425998172,
      "in_reply_to_id" : 1421790528,
      "line" : 231,
      "node_id" : "PRRC_kwDOABII585U_wFc",
      "original_commit_id" : "232d3d94fc9692d2c7c00dd797e71ed01c808e03",
      "original_line" : 219,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 72,
      "pull_request_review_id" : 1780665941,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425998172/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-13T23:45:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425998172",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1489460?v=4",
         "events_url" : "https://api.github.com/users/kashifs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kashifs/followers",
         "following_url" : "https://api.github.com/users/kashifs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kashifs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kashifs",
         "id" : 1489460,
         "login" : "kashifs",
         "node_id" : "MDQ6VXNlcjE0ODk0NjA=",
         "organizations_url" : "https://api.github.com/users/kashifs/orgs",
         "received_events_url" : "https://api.github.com/users/kashifs/received_events",
         "repos_url" : "https://api.github.com/users/kashifs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kashifs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kashifs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kashifs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK [ef8ed8](https://github.com/bitcoin/bitcoin/commit/ef8ed8c973b2a48ccff54e4443a88e876d210bcf)",
      "created_at" : "2023-12-17T20:31:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1859275939",
      "id" : 1859275939,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585u0kyj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1859275939/reactions"
      },
      "updated_at" : "2023-12-17T20:32:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1859275939",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1489460?v=4",
         "events_url" : "https://api.github.com/users/kashifs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kashifs/followers",
         "following_url" : "https://api.github.com/users/kashifs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kashifs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kashifs",
         "id" : 1489460,
         "login" : "kashifs",
         "node_id" : "MDQ6VXNlcjE0ODk0NjA=",
         "organizations_url" : "https://api.github.com/users/kashifs/orgs",
         "received_events_url" : "https://api.github.com/users/kashifs/received_events",
         "repos_url" : "https://api.github.com/users/kashifs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kashifs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kashifs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kashifs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1435191286"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435191286"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, Iâll fix that",
      "commit_id" : "a7e3ad5efe6be7d662803779429a254d825da9dd",
      "created_at" : "2023-12-22T16:10:52Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1435191286",
      "id" : 1435191286,
      "in_reply_to_id" : 1421777389,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Vi0f2",
      "original_commit_id" : "232d3d94fc9692d2c7c00dd797e71ed01c808e03",
      "original_line" : 212,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1794686545,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435191286/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-22T16:54:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435191286",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1435191774"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435191774"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed, thanks",
      "commit_id" : "a7e3ad5efe6be7d662803779429a254d825da9dd",
      "created_at" : "2023-12-22T16:11:39Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected\n+ *\n+ * @param const std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1435191774",
      "id" : 1435191774,
      "in_reply_to_id" : 1421789507,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Vi0ne",
      "original_commit_id" : "232d3d94fc9692d2c7c00dd797e71ed01c808e03",
      "original_line" : 214,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1794686545,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435191774/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-22T16:54:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435191774",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1435192987"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435192987"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, Iâve amended the documentation",
      "commit_id" : "a7e3ad5efe6be7d662803779429a254d825da9dd",
      "created_at" : "2023-12-22T16:13:37Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here 5th) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the third is deselected, the first is deselected and the second is selected\n+ *\n+ * @param const std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1435192987",
      "id" : 1435192987,
      "in_reply_to_id" : 1421790528,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Vi06b",
      "original_commit_id" : "232d3d94fc9692d2c7c00dd797e71ed01c808e03",
      "original_line" : 219,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1794686545,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435192987/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-22T16:54:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435192987",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1438411775"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438411775"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Perhaps this explanation of the algorithm belongs more inside the body of the function than at the top, as it's explaining the implementation and not the interface?",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2023-12-29T21:11:38Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1438411775",
      "id" : 1438411775,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VvGv_",
      "original_commit_id" : "73b87bacf6d633e89d78f8621b8311c5853ea641",
      "original_line" : 198,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1799219103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438411775/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-29T22:24:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438411775",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1438411976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438411976"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It took me a while to figure out what the intent of each operation is. It may be worthwhile to document that here too. My belief is:\r\n* ADD: explore the current prefix further (by selecting the first undecided transaction, ignoring equal-value transactions if the last one was unselected).\r\n* SHIFT: skip the current prefix (just the selection branch).\r\n* CUT: skip the current prefix (both selection and non-selection branches).\r\n\r\nIt may also be helpful to explain for each of the operations how the \"current index\" is affected by them.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2023-12-29T21:12:21Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1438411976",
      "id" : 1438411976,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VvGzI",
      "original_commit_id" : "73b87bacf6d633e89d78f8621b8311c5853ea641",
      "original_line" : 201,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1799219103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438411976/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-29T22:59:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438411976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "In a [simulation](https://delvingbitcoin.org/t/gutterguard-and-coingrinder-simulation-results/279) comparing the `master` branch with the `CoinGrinder` branch playing through a scenario that performs 5â¯005 payments with feerates sampled from 2023, CoinGrinder reduces the total transaction fees by 9.5%.\r\n\r\nExcerpts from the result table:\r\n\r\n| Branch | Mean UTXO count | Total Fees paid | Change outputs created | Solutions found by |\r\n| ---- | --- | --- | --- | --- |\r\n| `master` | 165.36 | 0.44500219 | 3020 | knapsack: 610 ; srd: 2414 ; bnb: 1981 |\r\n| `CoinGrinder` | 230.68 | 0.40248296 | 3110 | knapsack: 520 ; bnb: 1894 ; cg: 1382â¯; srd: 1209 |\r\n\r\nAs can be seen, in this scenario in which the vast majority of transactions are created above the _long-term feerate estimate_, CoinGrinder significantly reduces the overall fee expenditures at the cost of creating change outputs slightly more often, and maintaining a larger UTXO pool. We do see the walletâs UTXO pool quickly contract whenever the feerates are reduced to lower levels: \r\n![image](https://github.com/bitcoin/bitcoin/assets/4060799/87223918-eb26-44da-ab23-a96fd72ab23a)\r\n\r\n\r\nWe can see in a second simulation that uses the same payment scenario but a series of much lower feerates (\"Peak and tail\") that the UTXO pool size is only slightly elevated when a larger portion of the transactions is performed at feerates below the _long-term feerate estimate_. We see that the addition of CoinGrinder reduces the total fees by about 4% due to better performance in the infrequent high feerate payments.\r\n\r\n| Branch | Mean UTXO count | Total Fees paid | Change outputs created | Solutions found by |\r\n| ---- | --- | --- | --- | --- |\r\n| `master` | 32.70 |0.10775743 | 4556 | knapsack: 3636 ; srd: 920 ; bnb: 449 |\r\n| `CoinGrinder` | 34.31 | 0.10326806 | 4538 | knapsack: 3593 ; srd: 554 ; bnb: 467;â¯cg: 391 |\r\n\r\nPlease see this [Delving Bitcoin](https://delvingbitcoin.org/t/gutterguard-and-coingrinder-simulation-results/279) thread for the complete description of the simulation and results.",
      "created_at" : "2023-12-29T21:30:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1872346963",
      "id" : 1872346963,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585vmb9T",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1872346963/reactions"
      },
      "updated_at" : "2023-12-29T21:58:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1872346963",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1438428556"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438428556"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Given that any of the {add, shift, cut} states ends with executing an add, and the end of the add operation (the block of code on this line and below) determines what the next iteration will be, I think it would be more natural to move this block to the beginning of the while loop, before the switch case. So then it becomes a processing loop that in every iteration decides what it will be doing (cut, shift, or add), without state carried between iterations? This doesn't work for \"done\", but that could be a boolean instead.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2023-12-29T22:08:27Z",
      "diff_hunk" : "@@ -183,6 +200,189 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here the 5th UTXO) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th UTXO is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the fourth UTXO is deselected, the second is deselected and the third is selected\n+ *\n+ * @param std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param const CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.\n+ * @param int max_weight The maximum weight available for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+\n+    std::vector<size_t> best_selection; // best selection UTXO indices\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = max_weight; // Tie is fine, because we prefer lower selection amount\n+\n+    std::vector<size_t> curr_selection; // selected UTXO indices\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+\n+    bool max_tx_weight_exceeded = false;\n+\n+    // Sort the utxo_pool\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending_effval_weight);\n+    std::vector<CAmount> lookahead(utxo_pool.size());\n+    std::vector<int> min_tail_weight(utxo_pool.size());\n+\n+    // Calculate lookahead and check that there are sufficient funds\n+    CAmount total_available = 0;\n+    int min_group_weight = std::numeric_limits<int>::max();\n+    size_t i = utxo_pool.size();\n+    while (i > 0) {\n+        --i;\n+        lookahead.at(i) = total_available;\n+        min_tail_weight.at(i) = min_group_weight;\n+        // Assert that this utxo is not negative. It should never be negative,\n+        // effective value calculation should have removed it\n+        assert(utxo_pool.at(i).GetSelectionAmount() > 0);\n+        total_available += utxo_pool.at(i).GetSelectionAmount();\n+        min_group_weight = std::min(min_group_weight, utxo_pool.at(i).m_weight);\n+    }\n+    if (total_available < selection_target + change_target) {\n+        // Insufficient funds\n+        return util::Error();\n+    }\n+\n+    size_t utxo_pool_index = 0; // Points at the UTXO to select next\n+    enum operations { add, shift, cut, done };\n+    operations next_op = operations::add;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(curr_selection.back());\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection.pop_back();\n+    };\n+\n+    for (size_t curr_try = 0;;) {\n+        if (curr_try >= TOTAL_TRIES || next_op == operations::done) {\n+            result.SetAlgoCompleted(next_op == operations::done); // True if done, false if curr_try hit TOTAL_TRIES\n+            // Exhausted search space or reached limit\n+            break;\n+        }\n+        switch (next_op)\n+        {\n+        case cut:\n+        {\n+            // Deselect last selected, then shift last selected by one\n+            if (curr_selection.empty()) {\n+                next_op = operations::done;\n+                break; // Search finished\n+            }\n+            deselect_last();\n+            [[fallthrough]];\n+        }\n+        case shift:\n+        {\n+            // Deselect last selected, select UTXO group at next index instead\n+            if (curr_selection.empty()) {\n+                next_op = operations::done;\n+                break; // Search finished\n+            }\n+            utxo_pool_index = curr_selection.back() + 1;\n+            deselect_last();\n+            [[fallthrough]];\n+        }\n+        case add:\n+        {\n+            if (utxo_pool_index > 0\n+                    && (curr_selection.empty() || curr_selection.back() != utxo_pool_index - 1)\n+                    && utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() == utxo_pool.at(utxo_pool_index).GetSelectionAmount()\n+                    && utxo_pool.at(utxo_pool_index - 1).fee == utxo_pool.at(utxo_pool_index).fee) {\n+                if (utxo_pool_index < utxo_pool.size() - 1) {\n+                    // Skip if previous UTXO is equivalent and unselected\n+                    next_op = operations::add;\n+                    ++utxo_pool_index;\n+                    break;\n+                } else {\n+                    // \"Skipping\" end of branch: SHIFT instead\n+                    next_op = operations::shift;\n+                    break;\n+                }\n+            }\n+            // Select next UTXO\n+            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n+            curr_amount += utxo.GetSelectionAmount();\n+            curr_weight += utxo.m_weight;\n+            curr_selection.push_back(utxo_pool_index);\n+            next_op = operations::add;\n+\n+            // Depending on evaluation of current selection, ADD next, SHIFT latest, or CUT latest and shift prior",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1438428556",
      "id" : 1438428556,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VvK2M",
      "original_commit_id" : "a7e3ad5efe6be7d662803779429a254d825da9dd",
      "original_line" : 338,
      "original_position" : 179,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1799219103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438428556/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-29T22:24:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438428556",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1438429769"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438429769"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'd avoid the `std::vector::at` everywhere and use `std::vector::operator[]` instead, as `at` involves conditional branches to detect out-of-bounds access (well-predicted ones, but for a tight loop like this I do expect it to still be impactful). It's generally better to crash than to have UB due to out-of-bounds access, but inside performance-critical algorithms I think it's worth the extra review effort to make sure there are no out-of-bounds accesses.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2023-12-29T22:15:02Z",
      "diff_hunk" : "@@ -183,6 +200,189 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here the 5th UTXO) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th UTXO is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the fourth UTXO is deselected, the second is deselected and the third is selected\n+ *\n+ * @param std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param const CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.\n+ * @param int max_weight The maximum weight available for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+\n+    std::vector<size_t> best_selection; // best selection UTXO indices\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = max_weight; // Tie is fine, because we prefer lower selection amount\n+\n+    std::vector<size_t> curr_selection; // selected UTXO indices\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+\n+    bool max_tx_weight_exceeded = false;\n+\n+    // Sort the utxo_pool\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending_effval_weight);\n+    std::vector<CAmount> lookahead(utxo_pool.size());\n+    std::vector<int> min_tail_weight(utxo_pool.size());\n+\n+    // Calculate lookahead and check that there are sufficient funds\n+    CAmount total_available = 0;\n+    int min_group_weight = std::numeric_limits<int>::max();\n+    size_t i = utxo_pool.size();\n+    while (i > 0) {\n+        --i;\n+        lookahead.at(i) = total_available;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1438429769",
      "id" : 1438429769,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VvLJJ",
      "original_commit_id" : "a7e3ad5efe6be7d662803779429a254d825da9dd",
      "original_line" : 261,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1799219103,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438429769/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-29T22:24:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438429769",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1438435912"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438435912"
         }
      },
      "author_association" : "MEMBER",
      "body" : "One complication with the \"move decision for add/shift/cut to beginning of loop\" approach is that this skipping doesn't work anymore as-is. I'd suggest turning it into a while loop that increments `utxo_pool_index` until the skip condition is no longer satisfied.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2023-12-29T22:54:11Z",
      "diff_hunk" : "@@ -183,6 +200,189 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here the 5th UTXO) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th UTXO is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the fourth UTXO is deselected, the second is deselected and the third is selected\n+ *\n+ * @param std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param const CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.\n+ * @param int max_weight The maximum weight available for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+\n+    std::vector<size_t> best_selection; // best selection UTXO indices\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = max_weight; // Tie is fine, because we prefer lower selection amount\n+\n+    std::vector<size_t> curr_selection; // selected UTXO indices\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+\n+    bool max_tx_weight_exceeded = false;\n+\n+    // Sort the utxo_pool\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending_effval_weight);\n+    std::vector<CAmount> lookahead(utxo_pool.size());\n+    std::vector<int> min_tail_weight(utxo_pool.size());\n+\n+    // Calculate lookahead and check that there are sufficient funds\n+    CAmount total_available = 0;\n+    int min_group_weight = std::numeric_limits<int>::max();\n+    size_t i = utxo_pool.size();\n+    while (i > 0) {\n+        --i;\n+        lookahead.at(i) = total_available;\n+        min_tail_weight.at(i) = min_group_weight;\n+        // Assert that this utxo is not negative. It should never be negative,\n+        // effective value calculation should have removed it\n+        assert(utxo_pool.at(i).GetSelectionAmount() > 0);\n+        total_available += utxo_pool.at(i).GetSelectionAmount();\n+        min_group_weight = std::min(min_group_weight, utxo_pool.at(i).m_weight);\n+    }\n+    if (total_available < selection_target + change_target) {\n+        // Insufficient funds\n+        return util::Error();\n+    }\n+\n+    size_t utxo_pool_index = 0; // Points at the UTXO to select next\n+    enum operations { add, shift, cut, done };\n+    operations next_op = operations::add;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(curr_selection.back());\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection.pop_back();\n+    };\n+\n+    for (size_t curr_try = 0;;) {\n+        if (curr_try >= TOTAL_TRIES || next_op == operations::done) {\n+            result.SetAlgoCompleted(next_op == operations::done); // True if done, false if curr_try hit TOTAL_TRIES\n+            // Exhausted search space or reached limit\n+            break;\n+        }\n+        switch (next_op)\n+        {\n+        case cut:\n+        {\n+            // Deselect last selected, then shift last selected by one\n+            if (curr_selection.empty()) {\n+                next_op = operations::done;\n+                break; // Search finished\n+            }\n+            deselect_last();\n+            [[fallthrough]];\n+        }\n+        case shift:\n+        {\n+            // Deselect last selected, select UTXO group at next index instead\n+            if (curr_selection.empty()) {\n+                next_op = operations::done;\n+                break; // Search finished\n+            }\n+            utxo_pool_index = curr_selection.back() + 1;\n+            deselect_last();\n+            [[fallthrough]];\n+        }\n+        case add:\n+        {\n+            if (utxo_pool_index > 0\n+                    && (curr_selection.empty() || curr_selection.back() != utxo_pool_index - 1)\n+                    && utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() == utxo_pool.at(utxo_pool_index).GetSelectionAmount()\n+                    && utxo_pool.at(utxo_pool_index - 1).fee == utxo_pool.at(utxo_pool_index).fee) {\n+                if (utxo_pool_index < utxo_pool.size() - 1) {\n+                    // Skip if previous UTXO is equivalent and unselected",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1438435912",
      "id" : 1438435912,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VvMpI",
      "original_commit_id" : "a7e3ad5efe6be7d662803779429a254d825da9dd",
      "original_line" : 321,
      "original_position" : 162,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1799249817,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438435912/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-29T22:54:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1438435912",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1439793432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439793432"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I have reduced the description here to the interface and will add the remaining explanations to the corresponding spots of the function.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-02T20:28:43Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1439793432",
      "id" : 1439793432,
      "in_reply_to_id" : 1438411775,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585V0YEY",
      "original_commit_id" : "73b87bacf6d633e89d78f8621b8311c5853ea641",
      "original_line" : 198,
      "original_position" : 11,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1800970305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439793432/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-08T21:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439793432",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1439882229"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439882229"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I have completely rewritten my description. I hope itâs clearer now.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-02T21:29:14Z",
      "diff_hunk" : "@@ -188,6 +188,156 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1439882229",
      "id" : 1439882229,
      "in_reply_to_id" : 1438411976,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585V0tv1",
      "original_commit_id" : "73b87bacf6d633e89d78f8621b8311c5853ea641",
      "original_line" : 201,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1800970305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439882229/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-08T21:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1439882229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "After discussing Pieterâs review comments further with him, I decided to restructure the algorithm proposed in this PR. Iâm returning the PR to draft for a few days while I rewrite the commits.",
      "created_at" : "2024-01-04T15:10:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1877253041",
      "id" : 1877253041,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585v5Jux",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877253041/reactions"
      },
      "updated_at" : "2024-01-04T15:10:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1877253041",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445276896"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445276896"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I replaced all the `std::vector::at` with `std::vector::operator[]`.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-08T20:11:45Z",
      "diff_hunk" : "@@ -183,6 +200,189 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here the 5th UTXO) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th UTXO is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the fourth UTXO is deselected, the second is deselected and the third is selected\n+ *\n+ * @param std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param const CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.\n+ * @param int max_weight The maximum weight available for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+\n+    std::vector<size_t> best_selection; // best selection UTXO indices\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = max_weight; // Tie is fine, because we prefer lower selection amount\n+\n+    std::vector<size_t> curr_selection; // selected UTXO indices\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+\n+    bool max_tx_weight_exceeded = false;\n+\n+    // Sort the utxo_pool\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending_effval_weight);\n+    std::vector<CAmount> lookahead(utxo_pool.size());\n+    std::vector<int> min_tail_weight(utxo_pool.size());\n+\n+    // Calculate lookahead and check that there are sufficient funds\n+    CAmount total_available = 0;\n+    int min_group_weight = std::numeric_limits<int>::max();\n+    size_t i = utxo_pool.size();\n+    while (i > 0) {\n+        --i;\n+        lookahead.at(i) = total_available;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445276896",
      "id" : 1445276896,
      "in_reply_to_id" : 1438429769,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WJSzg",
      "original_commit_id" : "a7e3ad5efe6be7d662803779429a254d825da9dd",
      "original_line" : 261,
      "original_position" : 102,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1800970305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445276896/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-08T21:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445276896",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445277299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445277299"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Iâve completely rewritten CoinGrinder to implement this suggestion.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-08T20:12:09Z",
      "diff_hunk" : "@@ -183,6 +200,189 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * The Coin Grinder algorithm is a DFS-based algorithm that deterministically\n+ * searches for the minimum-weight input set producing a change output. The\n+ * algorithm is closely related to the Branch and Bound algorithm, but will\n+ * produce a transaction with a change output instead of aiming to create a\n+ * changeless transaction.\n+ *\n+ * This implementation produces a new input set in every loop iteration. It\n+ * uses three operations to transition between input set candidates:\n+ *\n+ * â¢ ADD: select the UTXO group at the current index into the input set\n+ * â¢ SHIFT: deselect the last selected UTXO group, then ADD the next UTXO group\n+ * â¢ CUT: deselect the last selected UTXO group, then SHIFT\n+ *\n+ * E.g. on a UTXO pool consisting of six UTXOs in which the 2nd and 4th are selected, expressing the current selection as a bitmap, the operations would look as follows:\n+ *\n+ * â¢ ADD:   010100 â 010110\n+ *          the UTXO at the index (here the 5th UTXO) is additionally selected\n+ * â¢ SHIFT: 010100 â 010010\n+ *          the 4th UTXO is deselected and the 5th is selected instead\n+ * â¢ CUT:   010100 â 001000\n+ *          the fourth UTXO is deselected, the second is deselected and the third is selected\n+ *\n+ * @param std::vector<OutputGroup>& utxo_pool The UTXO groups that we are choosing from.\n+ *        These UTXO groups will be sorted in descending order by effective\n+ *        value, with lower weight preferred as a tie-breaker.\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without\n+ *        considering change.\n+ * @param const CAmount& change_target The minimum budget for creating a change output that we add to the selection_target.\n+ * @param int max_weight The maximum weight available for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+\n+    std::vector<size_t> best_selection; // best selection UTXO indices\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = max_weight; // Tie is fine, because we prefer lower selection amount\n+\n+    std::vector<size_t> curr_selection; // selected UTXO indices\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+\n+    bool max_tx_weight_exceeded = false;\n+\n+    // Sort the utxo_pool\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending_effval_weight);\n+    std::vector<CAmount> lookahead(utxo_pool.size());\n+    std::vector<int> min_tail_weight(utxo_pool.size());\n+\n+    // Calculate lookahead and check that there are sufficient funds\n+    CAmount total_available = 0;\n+    int min_group_weight = std::numeric_limits<int>::max();\n+    size_t i = utxo_pool.size();\n+    while (i > 0) {\n+        --i;\n+        lookahead.at(i) = total_available;\n+        min_tail_weight.at(i) = min_group_weight;\n+        // Assert that this utxo is not negative. It should never be negative,\n+        // effective value calculation should have removed it\n+        assert(utxo_pool.at(i).GetSelectionAmount() > 0);\n+        total_available += utxo_pool.at(i).GetSelectionAmount();\n+        min_group_weight = std::min(min_group_weight, utxo_pool.at(i).m_weight);\n+    }\n+    if (total_available < selection_target + change_target) {\n+        // Insufficient funds\n+        return util::Error();\n+    }\n+\n+    size_t utxo_pool_index = 0; // Points at the UTXO to select next\n+    enum operations { add, shift, cut, done };\n+    operations next_op = operations::add;\n+\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool.at(curr_selection.back());\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection.pop_back();\n+    };\n+\n+    for (size_t curr_try = 0;;) {\n+        if (curr_try >= TOTAL_TRIES || next_op == operations::done) {\n+            result.SetAlgoCompleted(next_op == operations::done); // True if done, false if curr_try hit TOTAL_TRIES\n+            // Exhausted search space or reached limit\n+            break;\n+        }\n+        switch (next_op)\n+        {\n+        case cut:\n+        {\n+            // Deselect last selected, then shift last selected by one\n+            if (curr_selection.empty()) {\n+                next_op = operations::done;\n+                break; // Search finished\n+            }\n+            deselect_last();\n+            [[fallthrough]];\n+        }\n+        case shift:\n+        {\n+            // Deselect last selected, select UTXO group at next index instead\n+            if (curr_selection.empty()) {\n+                next_op = operations::done;\n+                break; // Search finished\n+            }\n+            utxo_pool_index = curr_selection.back() + 1;\n+            deselect_last();\n+            [[fallthrough]];\n+        }\n+        case add:\n+        {\n+            if (utxo_pool_index > 0\n+                    && (curr_selection.empty() || curr_selection.back() != utxo_pool_index - 1)\n+                    && utxo_pool.at(utxo_pool_index - 1).GetSelectionAmount() == utxo_pool.at(utxo_pool_index).GetSelectionAmount()\n+                    && utxo_pool.at(utxo_pool_index - 1).fee == utxo_pool.at(utxo_pool_index).fee) {\n+                if (utxo_pool_index < utxo_pool.size() - 1) {\n+                    // Skip if previous UTXO is equivalent and unselected\n+                    next_op = operations::add;\n+                    ++utxo_pool_index;\n+                    break;\n+                } else {\n+                    // \"Skipping\" end of branch: SHIFT instead\n+                    next_op = operations::shift;\n+                    break;\n+                }\n+            }\n+            // Select next UTXO\n+            OutputGroup& utxo = utxo_pool.at(utxo_pool_index);\n+            curr_amount += utxo.GetSelectionAmount();\n+            curr_weight += utxo.m_weight;\n+            curr_selection.push_back(utxo_pool_index);\n+            next_op = operations::add;\n+\n+            // Depending on evaluation of current selection, ADD next, SHIFT latest, or CUT latest and shift prior",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445277299",
      "id" : 1445277299,
      "in_reply_to_id" : 1438428556,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WJS5z",
      "original_commit_id" : "a7e3ad5efe6be7d662803779429a254d825da9dd",
      "original_line" : 338,
      "original_position" : 179,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1800970305,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445277299/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-08T21:14:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445277299",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Mea culpa. Fixed the linter issue.\r\n\r\nReady for review",
      "created_at" : "2024-01-08T22:59:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1881954408",
      "id" : 1881954408,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585wLFho",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1881954408/reactions"
      },
      "updated_at" : "2024-01-08T22:59:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1881954408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Added missing test title in overview of CoinGrinder tests",
      "created_at" : "2024-01-09T00:31:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1882055933",
      "id" : 1882055933,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585wLeT9",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1882055933/reactions"
      },
      "updated_at" : "2024-01-09T00:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1882055933",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445611288"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445611288"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I believe this condition is always true (since it's inside a `while (... && should_shift)`).",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-09T04:23:36Z",
      "diff_hunk" : "@@ -338,17 +339,37 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n             should_shift  = true;\n         }\n \n-        if (should_shift) {\n-            // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n-            if (curr_selection.empty()) {\n-                // Exhausted search space before running into attempt limit\n-                result.SetSelectionsEvaluated(curr_try);\n-                result.SetAlgoCompleted(true);\n-                break;\n+        while (!is_done && should_shift) {\n+            if (should_shift) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445611288",
      "id" : 1445611288,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WKkcY",
      "original_commit_id" : "8858f4988002d62cd8cc56db91909b4fdc733a22",
      "original_line" : 343,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1810381270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445611288/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-09T04:50:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445611288",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445616402"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445616402"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this `std::ceil` is doing anything. The `/` operator is an integer division here, which rounds down. Applying `std::ceil` to that just converts it to a floating point number. I don't think this is incorrect, as rounding down is just more conservative, but it's probably not what you intend.\r\n\r\nTo compute $\\lceil \\frac{a}{b} \\rceil$, you can use `(a+b-1)/b`. \r\n\r\n~~Also: I don't think `best_selection.empty()` is possible at this point; a UTXO was just added.~~ EDIT: I was confusing `best_selection` with `curr_selection`.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-09T04:35:23Z",
      "diff_hunk" : "@@ -336,6 +337,9 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n                 best_selection_weight = curr_weight;\n                 best_selection_amount = curr_amount;\n             }\n+        } else if (!best_selection.empty() && curr_weight + min_tail_weight[curr_selection.back()] * std::ceil((selection_target + change_target - curr_amount) / utxo_pool[curr_selection.back()].GetSelectionAmount()) > best_selection_weight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445616402",
      "id" : 1445616402,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WKlsS",
      "original_commit_id" : "840beb3f8fa61ca1f8ce791738eab71a4924f8de",
      "original_line" : 340,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1810381270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445616402/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-09T14:27:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445616402",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445618541"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445618541"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You're using `curr_selection.back()` several times in the evaluation logic here; would it make sense to have a `auto added_utxo = next_utxo++;` variable in the select logic, and then use `added_utxo` everywhere instead of `curr_selection.back()`? That makes it also clearer that you don't need to test for `curr_selection.empty()`.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-09T04:40:19Z",
      "diff_hunk" : "@@ -292,7 +297,10 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n         ++curr_try;\n \n         // EVALUATE current selection, default to EXPLORING the inclusion branch further, else do exactly one SHIFT or CUT.\n-        if (curr_weight > max_weight) {\n+        if (curr_amount + lookahead[curr_selection.back()] < selection_target + change_target) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445618541",
      "id" : 1445618541,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WKmNt",
      "original_commit_id" : "191a6e4d10accdb7390283f46cd23525e928aec3",
      "original_line" : 300,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1810381270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445618541/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-09T04:50:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445618541",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445619181"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445619181"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since the exploring will always happen (after SHIFT/CUT, possible), perhaps formulate it as \"EVALUATE current selection to see whether we can SHIFT or CUT the current selection before EXPLORING further\"?",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-09T04:41:41Z",
      "diff_hunk" : "@@ -292,7 +297,10 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n         ++curr_try;\n \n         // EVALUATE current selection, default to EXPLORING the inclusion branch further, else do exactly one SHIFT or CUT.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445619181",
      "id" : 1445619181,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WKmXt",
      "original_commit_id" : "191a6e4d10accdb7390283f46cd23525e928aec3",
      "original_line" : 299,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1810381270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445619181/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-09T04:50:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445619181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445622061"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445622061"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think it's impossible that `next_utxo = 0` here (it was set to `curr_selection.back() + 1` above, and the loop only increments it).\r\n\r\n---\r\n\r\nVery nit: when this loop starts, `should_shift` will always be false, and it can only become true by reaching the `else` branch below. I think it can be simplified to:\r\n\r\n```c++\r\nwhile (...\r\n        && utxo_pool[next_utxo - 1].fee == utxo_pool[next_utxo],fee) {\r\n    if (next_utxo >= utxo_pool.size() - 1) {\r\n        // Reached end of UTXO pool skipping clones: SHIFT instead\r\n        should_shift = true;\r\n        break;\r\n    }\r\n    // Skip clone: previous UTXO is equivalent and unselected\r\n    ++next_utxo;\r\n}\r\n```\r\n\r\n",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-09T04:47:49Z",
      "diff_hunk" : "@@ -338,17 +339,37 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n             should_shift  = true;\n         }\n \n-        if (should_shift) {\n-            // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n-            if (curr_selection.empty()) {\n-                // Exhausted search space before running into attempt limit\n-                result.SetSelectionsEvaluated(curr_try);\n-                result.SetAlgoCompleted(true);\n-                break;\n+        while (!is_done && should_shift) {\n+            if (should_shift) {\n+                // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n+                if (curr_selection.empty()) {\n+                    // Exhausted search space before running into attempt limit\n+                    is_done = true;\n+                    result.SetSelectionsEvaluated(curr_try);\n+                    result.SetAlgoCompleted(true);\n+                    break;\n+                }\n+                next_utxo = curr_selection.back() + 1;\n+                deselect_last();\n+                should_shift  = false;\n+            }\n+\n+            // After SHIFTing to an omission branch, the `next_utxo` might have the same value and same weight as the\n+            // UTXO we just omitted (i.e. it is a \"clone\"). If so, selecting `next_utxo` would produce an equivalent\n+            // selection as one we previously evaluated. In that case, increment `next_utxo` until we find a UTXO with a\n+            // differing amount or weight.\n+            while (!should_shift && next_utxo > 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1445622061",
      "id" : 1445622061,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WKnEt",
      "original_commit_id" : "8858f4988002d62cd8cc56db91909b4fdc733a22",
      "original_line" : 361,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1810381270,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445622061/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-09T04:56:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1445622061",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1446094975"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446094975"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I went with\r\n\r\n```// EVALUATE current selection: check for solutions and determine whether we can CUT or SHIFT before EXPLORING further```",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-09T13:33:48Z",
      "diff_hunk" : "@@ -292,7 +297,10 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n         ++curr_try;\n \n         // EVALUATE current selection, default to EXPLORING the inclusion branch further, else do exactly one SHIFT or CUT.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1446094975",
      "id" : 1446094975,
      "in_reply_to_id" : 1445619181,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WMah_",
      "original_commit_id" : "191a6e4d10accdb7390283f46cd23525e928aec3",
      "original_line" : 299,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1811161257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446094975/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-09T19:18:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446094975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1446141597"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446141597"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good idea.\r\n\r\nIâve added ```auto curr_tail = curr_selection.back();``` to reference that instead throughout the evaluation block. ",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-09T14:15:00Z",
      "diff_hunk" : "@@ -292,7 +297,10 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n         ++curr_try;\n \n         // EVALUATE current selection, default to EXPLORING the inclusion branch further, else do exactly one SHIFT or CUT.\n-        if (curr_weight > max_weight) {\n+        if (curr_amount + lookahead[curr_selection.back()] < selection_target + change_target) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1446141597",
      "id" : 1446141597,
      "in_reply_to_id" : 1445618541,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WMl6d",
      "original_commit_id" : "191a6e4d10accdb7390283f46cd23525e928aec3",
      "original_line" : 300,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1811161257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446141597/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-09T19:18:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446141597",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1446151655"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446151655"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ah, oops. Yes of course.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-09T14:22:59Z",
      "diff_hunk" : "@@ -338,17 +339,37 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n             should_shift  = true;\n         }\n \n-        if (should_shift) {\n-            // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n-            if (curr_selection.empty()) {\n-                // Exhausted search space before running into attempt limit\n-                result.SetSelectionsEvaluated(curr_try);\n-                result.SetAlgoCompleted(true);\n-                break;\n+        while (!is_done && should_shift) {\n+            if (should_shift) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1446151655",
      "id" : 1446151655,
      "in_reply_to_id" : 1445611288,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WMoXn",
      "original_commit_id" : "8858f4988002d62cd8cc56db91909b4fdc733a22",
      "original_line" : 343,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1811161257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446151655/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-09T19:18:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446151655",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1446186725"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446186725"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, I did some hard staring at this while-loop. I restructured it to use a `break` as you suggested, and was able to reduce the loopâs condition to:\r\n\r\n```diff\r\n-            while (!should_shift && next_utxo > 0\r\n-                    && (curr_selection.empty() || curr_selection.back() != next_utxo - 1)\r\n-                    && utxo_pool[next_utxo - 1].GetSelectionAmount() == utxo_pool[next_utxo].GetSelectionAmount()\r\n+            while (utxo_pool[next_utxo - 1].GetSelectionAmount() == utxo_pool[next_utxo].GetSelectionAmount()\r\n                     && utxo_pool[next_utxo - 1].fee == utxo_pool[next_utxo].fee) {\r\n-                if (next_utxo < utxo_pool.size() - 1) {\r\n-                    // Skip clone: previous UTXO is equivalent and unselected\r\n-                    ++next_utxo;\r\n-                } else {\r\n+                if (next_utxo >= utxo_pool.size() - 1) {\r\n                     // Reached end of UTXO pool skipping clones: SHIFT instead\r\n                     should_shift = true;\r\n+                    break;\r\n                 }\r\n+                // Skip clone: previous UTXO is equivalent and unselected\r\n+                ++next_utxo;\r\n             }\r\n         }\r\n```\r\nOriginally, when I introduced clone skipping, I missed that it could only occur after a SHIFT, so there were some unnecessary checks here. Clearly `next_utxo` has to be greater than 0, since it was just incremented in the SHIFT. We also donât have to check whether the `current_selection.back()` is the last element of the UTXO pool, we would have cut if that were the case. So, we only have to check for clones.\r\n\r\nIâm actually just realizing that I might also be able to drop the `fee` comparison. We already break ties between UTXOs of the same selection amount in favor of less weight, so the preceding UTXO must always have the same fee or a lower fee. While a UTXO with a greater fee (i.e. greater weight) and the same selection amount would not strictly be a clone, it can only lead to a worse input set than the predecessor that we have already evaluated. Gonna ponder and test, will perhaps fix up later today.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-09T14:48:33Z",
      "diff_hunk" : "@@ -338,17 +339,37 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n             should_shift  = true;\n         }\n \n-        if (should_shift) {\n-            // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n-            if (curr_selection.empty()) {\n-                // Exhausted search space before running into attempt limit\n-                result.SetSelectionsEvaluated(curr_try);\n-                result.SetAlgoCompleted(true);\n-                break;\n+        while (!is_done && should_shift) {\n+            if (should_shift) {\n+                // Set `next_utxo` to one after last selected, then deselect last selected UTXO\n+                if (curr_selection.empty()) {\n+                    // Exhausted search space before running into attempt limit\n+                    is_done = true;\n+                    result.SetSelectionsEvaluated(curr_try);\n+                    result.SetAlgoCompleted(true);\n+                    break;\n+                }\n+                next_utxo = curr_selection.back() + 1;\n+                deselect_last();\n+                should_shift  = false;\n+            }\n+\n+            // After SHIFTing to an omission branch, the `next_utxo` might have the same value and same weight as the\n+            // UTXO we just omitted (i.e. it is a \"clone\"). If so, selecting `next_utxo` would produce an equivalent\n+            // selection as one we previously evaluated. In that case, increment `next_utxo` until we find a UTXO with a\n+            // differing amount or weight.\n+            while (!should_shift && next_utxo > 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1446186725",
      "id" : 1446186725,
      "in_reply_to_id" : 1445622061,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WMw7l",
      "original_commit_id" : "8858f4988002d62cd8cc56db91909b4fdc733a22",
      "original_line" : 361,
      "original_position" : 41,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1811161257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446186725/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-09T19:18:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446186725",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1446479218"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446479218"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, ~~Iâve adopted your proposed change.~~\r\nAfter more discussion, I realized why this is not correct and dropped the `std::ceil(â¦)` from my prior version.\r\n\r\nFor context on the `!best_selection.empty())`: we need to check whether we have found any solution so far, as we would otherwise no longer trigger the \"max weight exceeded\" failure message.",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-09T18:51:30Z",
      "diff_hunk" : "@@ -336,6 +337,9 @@ util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, c\n                 best_selection_weight = curr_weight;\n                 best_selection_amount = curr_amount;\n             }\n+        } else if (!best_selection.empty() && curr_weight + min_tail_weight[curr_selection.back()] * std::ceil((selection_target + change_target - curr_amount) / utxo_pool[curr_selection.back()].GetSelectionAmount()) > best_selection_weight) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1446479218",
      "id" : 1446479218,
      "in_reply_to_id" : 1445616402,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585WN4Vy",
      "original_commit_id" : "840beb3f8fa61ca1f8ce791738eab71a4924f8de",
      "original_line" : 340,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : null,
      "pull_request_review_id" : 1811161257,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446479218/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-09T19:29:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1446479218",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20315937460</sub>",
      "created_at" : "2024-01-09T21:33:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1883832925",
      "id" : 1883832925,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585wSQJd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1883832925/reactions"
      },
      "updated_at" : "2024-01-09T21:33:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1883832925",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1448210370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1448210370"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n     *                             reach the target. We continue with the direct successor of our `next_utxo` for the\r\n```",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-11T02:26:53Z",
      "diff_hunk" : "@@ -188,6 +188,168 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * Coin Grinder is a DFS-based algorithm that deterministically searches for the minimum-weight input set to fund the\n+ * transaction. The algorithm is similar to the Branch and Bound algorithm, but will produce a transaction _with_ a\n+ * change output instead of a changeless transaction.\n+ *\n+ * @param std::vector<OutputGroup>& utxo_pool The UTXOs that we are choosing from. These UTXOs will be sorted in\n+ *        descending order by effective value, with lower waste preferred as a tie-breaker. (We can think of an output\n+ *        group with multiple as a heavier UTXO with the combined amount here.)\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without considering change.\n+ * @param const CAmount& change_target The minimum budget for creating a change output, by which we increase the selection_target.\n+ * @param int max_weight The maximum permitted weight for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n+    for (const OutputGroup& utxo : utxo_pool) {\n+        // Assert UTXOs with negative effective value have been filtered\n+        assert(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n+    }\n+    if (total_available < selection_target + change_target) {\n+        // Insufficient funds\n+        return util::Error();\n+    }\n+\n+    // CoinGrinder tracks selection via the indices of the currently selected UTXOs\n+    std::vector<size_t> best_selection;\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = std::numeric_limits<int>::max();\n+    bool max_tx_weight_exceeded = false;\n+\n+    std::vector<size_t> curr_selection;\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+    size_t next_utxo = 0; // Index of the next UTXO to consider\n+\n+    /*\n+     * You can think of the current selection as a vector of booleans that has decided inclusion or exclusion of all\n+     * UTXOs before `next_utxo`. When we consider the next UTXO, we extend this hypothetical boolean vector either with\n+     * a true value if the UTXO is included or a false value if it is omitted. The equivalent state is stored more\n+     * compactly as the list of indices of the included UTXOs and the `next_utxo` index.\n+     *\n+     * We can never find a new solution by deselecting a UTXO, because we then revisit a previously evaluated\n+     * selection. Therefore, we only need to check whether we found a new solution _after adding_ a new UTXO.\n+     *\n+     * Each iteration of CoinGrinder starts by selecting the `next_utxo` and evaluating the current selection. We\n+     * use three state transactions to progress from the current selection to the next promising selection:\n+     *\n+     * - EXPLORE inclusion branch: We do not have sufficient funds yet and the lookahead promises sufficient funds to\n+     *                             reach the target. We continue with the direct successor as our `next_utxo` for the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1448210370",
      "id" : 1448210370,
      "line" : 294,
      "node_id" : "PRRC_kwDOABII585WUe_C",
      "original_commit_id" : "e38c150f6dff886c470ba993c1725112c1ee5093",
      "original_line" : 244,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 135,
      "pull_request_review_id" : 1814544499,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1448210370/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T02:39:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1448210370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1448211928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1448211928"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n            // Success, adding more weight cannot be better: SHIFT\r\n```",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-11T02:30:02Z",
      "diff_hunk" : "@@ -188,6 +188,168 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * Coin Grinder is a DFS-based algorithm that deterministically searches for the minimum-weight input set to fund the\n+ * transaction. The algorithm is similar to the Branch and Bound algorithm, but will produce a transaction _with_ a\n+ * change output instead of a changeless transaction.\n+ *\n+ * @param std::vector<OutputGroup>& utxo_pool The UTXOs that we are choosing from. These UTXOs will be sorted in\n+ *        descending order by effective value, with lower waste preferred as a tie-breaker. (We can think of an output\n+ *        group with multiple as a heavier UTXO with the combined amount here.)\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without considering change.\n+ * @param const CAmount& change_target The minimum budget for creating a change output, by which we increase the selection_target.\n+ * @param int max_weight The maximum permitted weight for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n+    for (const OutputGroup& utxo : utxo_pool) {\n+        // Assert UTXOs with negative effective value have been filtered\n+        assert(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n+    }\n+    if (total_available < selection_target + change_target) {\n+        // Insufficient funds\n+        return util::Error();\n+    }\n+\n+    // CoinGrinder tracks selection via the indices of the currently selected UTXOs\n+    std::vector<size_t> best_selection;\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = std::numeric_limits<int>::max();\n+    bool max_tx_weight_exceeded = false;\n+\n+    std::vector<size_t> curr_selection;\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+    size_t next_utxo = 0; // Index of the next UTXO to consider\n+\n+    /*\n+     * You can think of the current selection as a vector of booleans that has decided inclusion or exclusion of all\n+     * UTXOs before `next_utxo`. When we consider the next UTXO, we extend this hypothetical boolean vector either with\n+     * a true value if the UTXO is included or a false value if it is omitted. The equivalent state is stored more\n+     * compactly as the list of indices of the included UTXOs and the `next_utxo` index.\n+     *\n+     * We can never find a new solution by deselecting a UTXO, because we then revisit a previously evaluated\n+     * selection. Therefore, we only need to check whether we found a new solution _after adding_ a new UTXO.\n+     *\n+     * Each iteration of CoinGrinder starts by selecting the `next_utxo` and evaluating the current selection. We\n+     * use three state transactions to progress from the current selection to the next promising selection:\n+     *\n+     * - EXPLORE inclusion branch: We do not have sufficient funds yet and the lookahead promises sufficient funds to\n+     *                             reach the target. We continue with the direct successor as our `next_utxo` for the\n+     *                             following iteration.\n+     *\n+     *                             Example:\n+     *                                 Current Selection: {0, 5, 7}\n+     *                                 Evaluation: EXPLORE, next_utxo: 8\n+     *                                 Next Selection: {0, 5, 7, 8}\n+     *\n+     * - SHIFT to omission branch: Adding more UTXOs to the current selection cannot produce a solution that is better\n+     *                             than the current best, e.g. the best weight is exceeded or the current selection has\n+     *                             already surpassed the target.\n+     *                             We designate our `next_utxo` the one after our last selected, then deselected the\n+     *                             last selected.\n+     *\n+     *                             Example:\n+     *                                 Current Selection: {0, 5, 7}\n+     *                                 Evaluation: SHIFT, next_utxo: 8, omit last selected: {0, 5}\n+     *                                 Next Selection: {0, 5, 8}\n+     *\n+     * - CUT entire subtree:       We have exhausted the inclusion branch for the penultimately selected UTXO, both the\n+     *                             inclusion and the omission branch of the current prefix are barren. E.g. we have\n+     *                             reached the end of the UTXO pool, or current selection and lookahead do not add up to\n+     *                             target, so neither further EXPLORING nor SHIFTING can find any solutions.\n+     *                             We designate our `next_utxo` the one after our penultimate selected, then deselect\n+     *                             both the last and penultimate selected.\n+     *\n+     *                             Example:\n+     *                                 Current Selection: {0, 5, 7}\n+     *                                 Evaluation: CUT, next_utxo: 6, omit two last selected: {0}\n+     *                                 Next Selection: {0, 6}\n+     */\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection.pop_back();\n+    };\n+\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount >= selection_target + change_target) {\n+            // Potential solution, adding more weight cannot be better: SHIFT",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1448211928",
      "id" : 1448211928,
      "line" : 361,
      "node_id" : "PRRC_kwDOABII585WUfXY",
      "original_commit_id" : "e38c150f6dff886c470ba993c1725112c1ee5093",
      "original_line" : 300,
      "original_position" : 122,
      "original_start_line" : null,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 202,
      "pull_request_review_id" : 1814544499,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1448211928/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T02:39:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1448211928",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1449406274"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449406274"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In e38c150f6dff886c470ba993c1725112c1ee5093 \"coinselection: Add CoinGrinder algorithm \":\r\n\r\nShouldn't the comment be updated in the previous commit? ",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-11T21:19:10Z",
      "diff_hunk" : "@@ -25,7 +25,7 @@ static util::Result<SelectionResult> ErrorMaxWeightExceeded()\n                          \"Please try sending a smaller amount or manually consolidating your wallet's UTXOs\")};\n }\n \n-// Descending order comparator\n+// Sort by descending (effective) value prefer lower waste on tie",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1449406274",
      "id" : 1449406274,
      "line" : 28,
      "node_id" : "PRRC_kwDOABII585WZC9C",
      "original_commit_id" : "e38c150f6dff886c470ba993c1725112c1ee5093",
      "original_line" : 28,
      "original_position" : 5,
      "original_start_line" : 28,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 5,
      "pull_request_review_id" : 1816719303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449406274/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 28,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2024-01-11T22:28:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449406274",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1449421239"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449421239"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In e38c150f6dff886c470ba993c1725112c1ee5093 \"coinselection: Add CoinGrinder algorithm\":\r\n\r\nThe comment describing `m_min_change_target` in `CoinSelectionParams` should be updated, because currently it describes this variable as being used in Knapsack solver. ",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-11T21:31:39Z",
      "diff_hunk" : "@@ -709,6 +709,13 @@ util::Result<SelectionResult> ChooseSelectionResult(interfaces::Chain& chain, co\n         results.push_back(*knapsack_result);\n     } else append_error(knapsack_result);\n \n+    if (coin_selection_params.m_effective_feerate > CFeeRate{3 * coin_selection_params.m_long_term_feerate}) { // Minimize input set for feerates of at least 3ÃLTFRE (default: 30â¯á¹©/vB+)\n+        if (auto cg_result{CoinGrinder(groups.positive_group, nTargetValue, coin_selection_params.m_min_change_target, max_inputs_weight)}) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1449421239",
      "id" : 1449421239,
      "line" : 713,
      "node_id" : "PRRC_kwDOABII585WZGm3",
      "original_commit_id" : "e38c150f6dff886c470ba993c1725112c1ee5093",
      "original_line" : 713,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 5,
      "pull_request_review_id" : 1816719303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449421239/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-11T22:28:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449421239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1449443744"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449443744"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In e38c150f6dff886c470ba993c1725112c1ee5093 \"coinselection: Add CoinGrinder algorithm\":\r\n\r\nWhy do the current and selection amounts matter if they would both result in change? Shouldn't the best selection only be updated if the current selection's waste is less than the best selection's waste?",
      "commit_id" : "b595172016461ef83e7759b05b40fc7b2138a8f6",
      "created_at" : "2024-01-11T21:57:09Z",
      "diff_hunk" : "@@ -188,6 +188,168 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     return result;\n }\n \n+/*\n+ * Coin Grinder is a DFS-based algorithm that deterministically searches for the minimum-weight input set to fund the\n+ * transaction. The algorithm is similar to the Branch and Bound algorithm, but will produce a transaction _with_ a\n+ * change output instead of a changeless transaction.\n+ *\n+ * @param std::vector<OutputGroup>& utxo_pool The UTXOs that we are choosing from. These UTXOs will be sorted in\n+ *        descending order by effective value, with lower waste preferred as a tie-breaker. (We can think of an output\n+ *        group with multiple as a heavier UTXO with the combined amount here.)\n+ * @param const CAmount& selection_target This is the minimum amount that we need for the transaction without considering change.\n+ * @param const CAmount& change_target The minimum budget for creating a change output, by which we increase the selection_target.\n+ * @param int max_weight The maximum permitted weight for the input set.\n+ * @returns The result of this coin selection algorithm, or std::nullopt\n+ */\n+util::Result<SelectionResult> CoinGrinder(std::vector<OutputGroup>& utxo_pool, const CAmount& selection_target, CAmount change_target, int max_weight)\n+{\n+    std::sort(utxo_pool.begin(), utxo_pool.end(), descending);\n+\n+    // Check that there are sufficient funds\n+    CAmount total_available = 0;\n+    for (const OutputGroup& utxo : utxo_pool) {\n+        // Assert UTXOs with negative effective value have been filtered\n+        assert(utxo.GetSelectionAmount() > 0);\n+        total_available += utxo.GetSelectionAmount();\n+    }\n+    if (total_available < selection_target + change_target) {\n+        // Insufficient funds\n+        return util::Error();\n+    }\n+\n+    // CoinGrinder tracks selection via the indices of the currently selected UTXOs\n+    std::vector<size_t> best_selection;\n+    CAmount best_selection_amount = MAX_MONEY;\n+    int best_selection_weight = std::numeric_limits<int>::max();\n+    bool max_tx_weight_exceeded = false;\n+\n+    std::vector<size_t> curr_selection;\n+    CAmount curr_amount = 0;\n+    int curr_weight = 0;\n+    size_t next_utxo = 0; // Index of the next UTXO to consider\n+\n+    /*\n+     * You can think of the current selection as a vector of booleans that has decided inclusion or exclusion of all\n+     * UTXOs before `next_utxo`. When we consider the next UTXO, we extend this hypothetical boolean vector either with\n+     * a true value if the UTXO is included or a false value if it is omitted. The equivalent state is stored more\n+     * compactly as the list of indices of the included UTXOs and the `next_utxo` index.\n+     *\n+     * We can never find a new solution by deselecting a UTXO, because we then revisit a previously evaluated\n+     * selection. Therefore, we only need to check whether we found a new solution _after adding_ a new UTXO.\n+     *\n+     * Each iteration of CoinGrinder starts by selecting the `next_utxo` and evaluating the current selection. We\n+     * use three state transactions to progress from the current selection to the next promising selection:\n+     *\n+     * - EXPLORE inclusion branch: We do not have sufficient funds yet and the lookahead promises sufficient funds to\n+     *                             reach the target. We continue with the direct successor as our `next_utxo` for the\n+     *                             following iteration.\n+     *\n+     *                             Example:\n+     *                                 Current Selection: {0, 5, 7}\n+     *                                 Evaluation: EXPLORE, next_utxo: 8\n+     *                                 Next Selection: {0, 5, 7, 8}\n+     *\n+     * - SHIFT to omission branch: Adding more UTXOs to the current selection cannot produce a solution that is better\n+     *                             than the current best, e.g. the best weight is exceeded or the current selection has\n+     *                             already surpassed the target.\n+     *                             We designate our `next_utxo` the one after our last selected, then deselected the\n+     *                             last selected.\n+     *\n+     *                             Example:\n+     *                                 Current Selection: {0, 5, 7}\n+     *                                 Evaluation: SHIFT, next_utxo: 8, omit last selected: {0, 5}\n+     *                                 Next Selection: {0, 5, 8}\n+     *\n+     * - CUT entire subtree:       We have exhausted the inclusion branch for the penultimately selected UTXO, both the\n+     *                             inclusion and the omission branch of the current prefix are barren. E.g. we have\n+     *                             reached the end of the UTXO pool, or current selection and lookahead do not add up to\n+     *                             target, so neither further EXPLORING nor SHIFTING can find any solutions.\n+     *                             We designate our `next_utxo` the one after our penultimate selected, then deselect\n+     *                             both the last and penultimate selected.\n+     *\n+     *                             Example:\n+     *                                 Current Selection: {0, 5, 7}\n+     *                                 Evaluation: CUT, next_utxo: 6, omit two last selected: {0}\n+     *                                 Next Selection: {0, 6}\n+     */\n+    auto deselect_last = [&]() {\n+        OutputGroup& utxo = utxo_pool[curr_selection.back()];\n+        curr_amount -= utxo.GetSelectionAmount();\n+        curr_weight -= utxo.m_weight;\n+        curr_selection.pop_back();\n+    };\n+\n+    SelectionResult result(selection_target, SelectionAlgorithm::CG);\n+    size_t curr_try = 0;\n+    while (true) {\n+        bool should_shift{false}, should_cut{false};\n+        // Select `next_utxo`\n+        OutputGroup& utxo = utxo_pool[next_utxo];\n+        curr_amount += utxo.GetSelectionAmount();\n+        curr_weight += utxo.m_weight;\n+        curr_selection.push_back(next_utxo);\n+        ++next_utxo;\n+        ++curr_try;\n+\n+        // EVALUATE current selection: check for solutions and see whether we can CUT or SHIFT before EXPLORING further\n+        if (curr_weight > max_weight) {\n+            // max_weight exceeded: SHIFT\n+            max_tx_weight_exceeded = true;\n+            should_shift  = true;\n+        } else if (curr_amount >= selection_target + change_target) {\n+            // Potential solution, adding more weight cannot be better: SHIFT\n+            should_shift  = true;\n+            if (curr_weight < best_selection_weight || curr_amount < best_selection_amount) {\n+                best_selection = curr_selection;\n+                best_selection_weight = curr_weight;\n+                best_selection_amount = curr_amount;\n+            }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#discussion_r1449443744",
      "id" : 1449443744,
      "line" : 367,
      "node_id" : "PRRC_kwDOABII585WZMGg",
      "original_commit_id" : "e38c150f6dff886c470ba993c1725112c1ee5093",
      "original_line" : 306,
      "original_position" : 128,
      "original_start_line" : 302,
      "path" : "src/wallet/coinselection.cpp",
      "position" : 208,
      "pull_request_review_id" : 1816719303,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27877",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449443744/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 363,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2024-01-11T22:28:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1449443744",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/20430984764</sub>",
      "created_at" : "2024-01-12T16:38:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1889619610",
      "id" : 1889619610,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585woU6a",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889619610/reactions"
      },
      "updated_at" : "2024-01-12T16:38:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889619610",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Iâve added another fuzz target that validates the output of CoinGrinder against a bruteforce search for the smallest weight input set.",
      "created_at" : "2024-01-12T19:59:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1889878218",
      "id" : 1889878218,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585wpUDK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889878218/reactions"
      },
      "updated_at" : "2024-01-12T19:59:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1889878218",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "SFFO is such pain in the neck.",
      "created_at" : "2024-01-12T21:58:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1890013810",
      "id" : 1890013810,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585wp1Jy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1890013810/reactions"
      },
      "updated_at" : "2024-01-12T21:58:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1890013810",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed bug discovered with the optimality fuzz test: [opt: Skip over barren combinations of tiny UTXOs](https://github.com/bitcoin/bitcoin/pull/27877/commits/80bcee5c09fb68366645d6be62fdeab4bb3ec6f3), incorrectly was set to cut, but this could be premature in case that the last selected UTXO was heavier than later UTXOs in the pool.",
      "created_at" : "2024-01-12T23:12:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1890125580",
      "id" : 1890125580,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585wqQcM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1890125580/reactions"
      },
      "updated_at" : "2024-01-12T23:12:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1890125580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "CI failure is unrelated, see https://github.com/bitcoin/bitcoin/pull/29243",
      "created_at" : "2024-01-13T01:56:53Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1890248185",
      "id" : 1890248185,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585wquX5",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1890248185/reactions"
      },
      "updated_at" : "2024-01-13T01:56:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1890248185",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased on fix for CI issue",
      "created_at" : "2024-01-15T14:11:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27877#issuecomment-1892249295",
      "id" : 1892249295,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27877",
      "node_id" : "IC_kwDOABII585wyW7P",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1892249295/reactions"
      },
      "updated_at" : "2024-01-15T14:11:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1892249295",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   }
]

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/24128).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [achow101](https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1908951226) |\n| Concept ACK | [w0xlt](https://github.com/bitcoin/bitcoin/pull/24128#pullrequestreview-860319215), [0xB10C](https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1091839902) |\n| Stale ACK | [darosior](https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1087534889), [chris-belcher](https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1091428035) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2022-01-22T20:34:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1019353666",
      "id" : 1019353666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII5848whpC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1019353666/reactions"
      },
      "updated_at" : "2024-01-24T21:32:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1019353666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Please review https://github.com/bitcoin/bitcoin/pull/24136  first, while this stays in Draft",
      "created_at" : "2022-01-24T09:22:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1019885303",
      "id" : 1019885303,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII5848yjb3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1019885303/reactions"
      },
      "updated_at" : "2022-01-24T09:22:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1019885303",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r796564941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/796564941"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "please convert this to a c++11 style functional cast",
      "commit_id" : "e0a3bf98b57fc36db60311f65793c16fdfee2452",
      "created_at" : "2022-02-01T12:52:59Z",
      "diff_hunk" : "@@ -609,23 +618,77 @@ static uint32_t GetLocktimeForNewTransaction(interfaces::Chain& chain, const uin\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        locktime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (GetRandInt(10) == 0)\n-            locktime = std::max(0, (int)locktime - GetRandInt(100));\n+        bool locktime_based{false};\n+        for (const auto& in : inputs) {\n+            std::vector<std::vector<uint8_t>> dummy;\n+            const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+            // Use locktime if any nSequence is out-of-range or any input isn't taproot\n+            if (1 > in.m_depth || in.m_depth > 65535 || in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                locktime_based = true;\n+                break;\n+            }\n+        }\n+        if (locktime_based || GetRandInt(2) == 0) {\n+            tx.nLockTime = block_height;\n+\n+            // Secondly occasionally randomly pick a nLockTime even further back, so\n+            // that transactions that are delayed after signing for whatever reason,\n+            // e.g. high-latency mix networks and some CoinJoin implementations, have\n+            // better privacy.\n+            if (GetRandInt(10) == 0) {\n+                tx.nLockTime = std::max(0, (int)tx.nLockTime - GetRandInt(100));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r796564941",
      "id" : 796564941,
      "line" : 654,
      "node_id" : "PRRC_kwDOABII584vep3N",
      "original_commit_id" : "e0a3bf98b57fc36db60311f65793c16fdfee2452",
      "original_line" : 654,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 80,
      "pull_request_review_id" : 869085466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/796564941/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-01T12:54:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/796564941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6443210?v=4",
         "events_url" : "https://api.github.com/users/PastaPastaPasta/events{/privacy}",
         "followers_url" : "https://api.github.com/users/PastaPastaPasta/followers",
         "following_url" : "https://api.github.com/users/PastaPastaPasta/following{/other_user}",
         "gists_url" : "https://api.github.com/users/PastaPastaPasta/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/PastaPastaPasta",
         "id" : 6443210,
         "login" : "PastaPastaPasta",
         "node_id" : "MDQ6VXNlcjY0NDMyMTA=",
         "organizations_url" : "https://api.github.com/users/PastaPastaPasta/orgs",
         "received_events_url" : "https://api.github.com/users/PastaPastaPasta/received_events",
         "repos_url" : "https://api.github.com/users/PastaPastaPasta/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/PastaPastaPasta/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/PastaPastaPasta/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/PastaPastaPasta"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r796596221"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/796596221"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Seems unrelated to this pull request, but done in https://github.com/bitcoin/bitcoin/pull/24225",
      "commit_id" : "c00fd82f6ea522429e7961af014405d4c3011b53",
      "created_at" : "2022-02-01T13:30:13Z",
      "diff_hunk" : "@@ -609,23 +618,77 @@ static uint32_t GetLocktimeForNewTransaction(interfaces::Chain& chain, const uin\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        locktime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (GetRandInt(10) == 0)\n-            locktime = std::max(0, (int)locktime - GetRandInt(100));\n+        bool locktime_based{false};\n+        for (const auto& in : inputs) {\n+            std::vector<std::vector<uint8_t>> dummy;\n+            const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+            // Use locktime if any nSequence is out-of-range or any input isn't taproot\n+            if (1 > in.m_depth || in.m_depth > 65535 || in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                locktime_based = true;\n+                break;\n+            }\n+        }\n+        if (locktime_based || GetRandInt(2) == 0) {\n+            tx.nLockTime = block_height;\n+\n+            // Secondly occasionally randomly pick a nLockTime even further back, so\n+            // that transactions that are delayed after signing for whatever reason,\n+            // e.g. high-latency mix networks and some CoinJoin implementations, have\n+            // better privacy.\n+            if (GetRandInt(10) == 0) {\n+                tx.nLockTime = std::max(0, (int)tx.nLockTime - GetRandInt(100));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r796596221",
      "id" : 796596221,
      "in_reply_to_id" : 796564941,
      "line" : 657,
      "node_id" : "PRRC_kwDOABII584vexf9",
      "original_commit_id" : "e0a3bf98b57fc36db60311f65793c16fdfee2452",
      "original_line" : 657,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 83,
      "pull_request_review_id" : 869129599,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/796596221/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-02-01T13:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/796596221",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Please review https://github.com/bitcoin/bitcoin/pull/24225 first, while this stays in Draft",
      "created_at" : "2022-02-01T13:30:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1026846034",
      "id" : 1026846034,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII5849NG1S",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1026846034/reactions"
      },
      "updated_at" : "2022-02-01T13:30:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1026846034",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Please review https://github.com/bitcoin/bitcoin/pull/24091 first while this stays in draft",
      "created_at" : "2022-03-16T14:17:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1069179489",
      "id" : 1069179489,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII584_umJh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069179489/reactions"
      },
      "updated_at" : "2022-03-16T14:17:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1069179489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-23T18:49:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1076700424",
      "id" : 1076700424,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585ALSUI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076700424/reactions"
      },
      "updated_at" : "2022-03-23T18:49:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1076700424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-03-24T22:17:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1078434724",
      "id" : 1078434724,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585AR5uk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078434724/reactions"
      },
      "updated_at" : "2022-03-24T22:17:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078434724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This is now open for review",
      "created_at" : "2022-03-25T12:50:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1078998404",
      "id" : 1078998404,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585AUDWE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078998404/reactions"
      },
      "updated_at" : "2022-03-25T12:50:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1078998404",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r838760681"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838760681"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: since you already haveÂ `rng_fast` you could use it instead of re-creating a context with `GetRandInt`. (Here and elsewhere in this function.)",
      "commit_id" : "fa2066fd1272b857501f996267052b4f64a04b29",
      "created_at" : "2022-03-30T16:47:52Z",
      "diff_hunk" : "@@ -615,15 +625,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }};\n+        if (locktime_based() || GetRandInt(2) == 0) {\n+            tx.nLockTime = block_height;\n+\n+            // Secondly occasionally randomly pick a nLockTime even further back, so\n+            // that transactions that are delayed after signing for whatever reason,\n+            // e.g. high-latency mix networks and some CoinJoin implementations, have\n+            // better privacy.\n+            if (rng_fast.randrange(10) == 0) {\n+                tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+            }\n+        } else { // sequence based\n+            tx.nLockTime = 0;\n+            const auto i_input{GetRandInt(tx.vin.size())};\n+            CTxIn& in{tx.vin.at(i_input)};\n+            in.nSequence = inputs.at(i_input).depth;\n+            if (GetRandInt(10) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r838760681",
      "id" : 838760681,
      "line" : 677,
      "node_id" : "PRRC_kwDOABII584x_njp",
      "original_commit_id" : "fa2066fd1272b857501f996267052b4f64a04b29",
      "original_line" : 677,
      "original_position" : 98,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 98,
      "pull_request_review_id" : 926432309,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838760681/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-03-30T17:47:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838760681",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r838787057"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838787057"
         }
      },
      "author_association" : "MEMBER",
      "body" : "It has a specific usecase for Taproot, but what is the rationale for disabling it for non-(pure-)Taproot transactions? The \"created by Bitcoin Core wallet\" fingerprint?",
      "commit_id" : "fa2066fd1272b857501f996267052b4f64a04b29",
      "created_at" : "2022-03-30T17:17:29Z",
      "diff_hunk" : "@@ -615,15 +625,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r838787057",
      "id" : 838787057,
      "line" : 658,
      "node_id" : "PRRC_kwDOABII584x_t_x",
      "original_commit_id" : "fa2066fd1272b857501f996267052b4f64a04b29",
      "original_line" : 658,
      "original_position" : 79,
      "original_start_line" : 653,
      "path" : "src/wallet/spend.cpp",
      "position" : 79,
      "pull_request_review_id" : 926432309,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838787057/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 653,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-30T17:47:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/838787057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r839827974"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/839827974"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I can't say for sure, since I am not the author of BIP 326, but I presume:\r\n\r\n* Any protocol that relies on sequence values in \"legacy\" key-only spends may be encouraged to upgrade to taproot.\r\n* Any new \"population\" of txs that have the same fingerprint will reduce the privacy for themselves and everyone else. Though, if such a population already exists, I can see the reason for Bitcoin Core to mix itself into that population.\r\n\r\nSo I guess the question is whether such a protocol exists and is unlikely to use/upgrade to taproot?",
      "commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "created_at" : "2022-03-31T16:52:14Z",
      "diff_hunk" : "@@ -615,15 +625,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r839827974",
      "id" : 839827974,
      "in_reply_to_id" : 838787057,
      "line" : 663,
      "node_id" : "PRRC_kwDOABII584yDsIG",
      "original_commit_id" : "fa2066fd1272b857501f996267052b4f64a04b29",
      "original_line" : 663,
      "original_position" : 79,
      "original_start_line" : 653,
      "path" : "src/wallet/spend.cpp",
      "position" : 79,
      "pull_request_review_id" : 927906694,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/839827974/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 658,
      "start_side" : "RIGHT",
      "updated_at" : "2022-03-31T16:52:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/839827974",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "re-ACK fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "created_at" : "2022-04-04T13:08:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1087534889",
      "id" : 1087534889,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585A0ncp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087534889/reactions"
      },
      "updated_at" : "2022-04-04T13:08:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1087534889",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r844146594"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844146594"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "As the author of bip326, yes, I was thinking along the lines of @MarcoFalke's second point. Changing the behaviour of legacy transactions of which there is already a large population would reduce privacy. It's best to leave legacy transactions unchanged. Also non-taproot outputs cannot (easily) be used to create point-time-locked-contracts so the \"privacy cloak\" they create is useless, it would never be used.",
      "commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "created_at" : "2022-04-06T16:24:03Z",
      "diff_hunk" : "@@ -615,15 +625,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r844146594",
      "id" : 844146594,
      "in_reply_to_id" : 838787057,
      "line" : 663,
      "node_id" : "PRRC_kwDOABII584yUKei",
      "original_commit_id" : "fa2066fd1272b857501f996267052b4f64a04b29",
      "original_line" : 663,
      "original_position" : 79,
      "original_start_line" : 653,
      "path" : "src/wallet/spend.cpp",
      "position" : 79,
      "pull_request_review_id" : 933769676,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844146594/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 658,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-06T16:30:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844146594",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8398185?v=4",
         "events_url" : "https://api.github.com/users/chris-belcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/chris-belcher/followers",
         "following_url" : "https://api.github.com/users/chris-belcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/chris-belcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/chris-belcher",
         "id" : 8398185,
         "login" : "chris-belcher",
         "node_id" : "MDQ6VXNlcjgzOTgxODU=",
         "organizations_url" : "https://api.github.com/users/chris-belcher/orgs",
         "received_events_url" : "https://api.github.com/users/chris-belcher/received_events",
         "repos_url" : "https://api.github.com/users/chris-belcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/chris-belcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/chris-belcher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r844758976"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844758976"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think a protocol that uses plain non-taproot keys with just plain pre-signed transactions and sequence based locktimes could still benefit from Bitcoin Core cloaking non-taproot inputs, no? Though, as they only use plain keys they might as well upgrade to taproot to get the taproot-specific cloak.",
      "commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "created_at" : "2022-04-07T06:40:21Z",
      "diff_hunk" : "@@ -615,15 +625,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r844758976",
      "id" : 844758976,
      "in_reply_to_id" : 838787057,
      "line" : 663,
      "node_id" : "PRRC_kwDOABII584yWf_A",
      "original_commit_id" : "fa2066fd1272b857501f996267052b4f64a04b29",
      "original_line" : 663,
      "original_position" : 79,
      "original_start_line" : 653,
      "path" : "src/wallet/spend.cpp",
      "position" : 79,
      "pull_request_review_id" : 934549856,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844758976/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 658,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-07T06:40:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844758976",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r844916838"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844916838"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think that kind of protocol is possible. A point lock requires taproot. Why would someone use nsequence-based locktimes when they can't have some kind of point-lock?",
      "commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "created_at" : "2022-04-07T09:25:21Z",
      "diff_hunk" : "@@ -615,15 +625,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r844916838",
      "id" : 844916838,
      "in_reply_to_id" : 838787057,
      "line" : 663,
      "node_id" : "PRRC_kwDOABII584yXGhm",
      "original_commit_id" : "fa2066fd1272b857501f996267052b4f64a04b29",
      "original_line" : 663,
      "original_position" : 79,
      "original_start_line" : 653,
      "path" : "src/wallet/spend.cpp",
      "position" : 79,
      "pull_request_review_id" : 934755979,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844916838/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 658,
      "start_side" : "RIGHT",
      "updated_at" : "2022-04-07T09:25:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/844916838",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8398185?v=4",
         "events_url" : "https://api.github.com/users/chris-belcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/chris-belcher/followers",
         "following_url" : "https://api.github.com/users/chris-belcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/chris-belcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/chris-belcher",
         "id" : 8398185,
         "login" : "chris-belcher",
         "node_id" : "MDQ6VXNlcjgzOTgxODU=",
         "organizations_url" : "https://api.github.com/users/chris-belcher/orgs",
         "received_events_url" : "https://api.github.com/users/chris-belcher/received_events",
         "repos_url" : "https://api.github.com/users/chris-belcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/chris-belcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/chris-belcher"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I've reviewed the code and it looks fine.\r\n\r\nI compiled this branch and in regtest mode I created many taproot UTXOs which I spent. For each one I looked at the decoded transaction and confirmed that it sometimes sets the sequence number and sometimes sets the locktime, which is the correct behaviour.\r\n\r\ntACK https://github.com/bitcoin/bitcoin/pull/24128/commits/fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "created_at" : "2022-04-07T09:33:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1091428035",
      "id" : 1091428035,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585BDd7D",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091428035/reactions"
      },
      "updated_at" : "2022-04-07T09:33:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091428035",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8398185?v=4",
         "events_url" : "https://api.github.com/users/chris-belcher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/chris-belcher/followers",
         "following_url" : "https://api.github.com/users/chris-belcher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/chris-belcher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/chris-belcher",
         "id" : 8398185,
         "login" : "chris-belcher",
         "node_id" : "MDQ6VXNlcjgzOTgxODU=",
         "organizations_url" : "https://api.github.com/users/chris-belcher/orgs",
         "received_events_url" : "https://api.github.com/users/chris-belcher/received_events",
         "repos_url" : "https://api.github.com/users/chris-belcher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/chris-belcher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/chris-belcher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/chris-belcher"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK. I'm putting this on my to-review list.",
      "created_at" : "2022-04-07T14:52:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1091839902",
      "id" : 1091839902,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585BFCee",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091839902/reactions"
      },
      "updated_at" : "2022-04-07T14:52:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1091839902",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r867757540"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867757540"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Forgot to reply to this comment earlier. Chris, nSequence-based locktimes are useful for anti-fee sniping for presigned transactions (as you can't use nLockTime-based protection for those, use an input with an nSequence set when bumping the fees).\r\nI don't think this is a justification for cloaking non-Taproot inputs here. By the time the cloak is realistically available, they would probably use Taproot and otherwise they should. They have an incentive to upgrade anyways, as fee-bumping with Taproot inputs is more efficient.",
      "commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "created_at" : "2022-05-09T08:24:38Z",
      "diff_hunk" : "@@ -615,15 +625,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r867757540",
      "id" : 867757540,
      "in_reply_to_id" : 838787057,
      "line" : 663,
      "node_id" : "PRRC_kwDOABII584zuO3k",
      "original_commit_id" : "fa2066fd1272b857501f996267052b4f64a04b29",
      "original_line" : 663,
      "original_position" : 79,
      "original_start_line" : 653,
      "path" : "src/wallet/spend.cpp",
      "position" : 79,
      "pull_request_review_id" : 965770410,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867757540/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 658,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-09T08:24:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/867757540",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r877548757"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877548757"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit:\r\n\r\nUse `randbool`\r\n\r\n```suggestion\r\n        if (locktime_based() || rng_fast.randbool()) {\r\n```\r\n\r\nAlso, why not have the random bool be part of `locktime_based`?",
      "commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "created_at" : "2022-05-19T21:17:49Z",
      "diff_hunk" : "@@ -620,15 +630,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }};\n+        if (locktime_based() || rng_fast.randrange(2) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r877548757",
      "id" : 877548757,
      "line" : 667,
      "node_id" : "PRRC_kwDOABII5840TlTV",
      "original_commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "original_line" : 667,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 83,
      "pull_request_review_id" : 979274513,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877548757/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-05-19T21:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877548757",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r877555927"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877555927"
         }
      },
      "author_association" : "MEMBER",
      "body" : "There could be some unexpected behavior here when users set their own sequence numbers.\r\n\r\nIf a user set their own sequence, we would not want to clobber it as that could have negative effects on their payment. So we should avoid changing the sequence on any inputs that use a non-default sequence number.\r\n\r\nHowever, `DiscourageFeeSniping` is called by `CreateTransactionInternal` which does not actually set (or know about) user defined sequences. User defined sequences are handled externally in `FundTransaction` where the it actually retains the `CTxIn`s of the transaction to fund and then adds the inputs that `CreateTransaction` chooses.\r\n\r\nSo user defined sequences actually end up in the transaction and we lose the anti-fee-sniping that we wanted.\r\n\r\nI think the correct way to do this is to make `CreateTransactionInternal` aware of user defined sequences and set them in the transaction it is creating. Then here in `DiscrouageFeeSniping`, we can check just choose randomly among the inputs that have default sequences.\r\n\r\nHowever, what should we do if the user sets a default sequence explicitly? Should we respect that and avoid randomly selecting those inputs? Additionally, even if a user did set a default sequence explicitly, `fundrawtransaction` would not know because it takes a raw transaction which has sequences that `createrawtransaction` may have set using defaults.",
      "commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "created_at" : "2022-05-19T21:29:48Z",
      "diff_hunk" : "@@ -620,15 +630,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }};\n+        if (locktime_based() || rng_fast.randrange(2) == 0) {\n+            tx.nLockTime = block_height;\n+\n+            // Secondly occasionally randomly pick a nLockTime even further back, so\n+            // that transactions that are delayed after signing for whatever reason,\n+            // e.g. high-latency mix networks and some CoinJoin implementations, have\n+            // better privacy.\n+            if (rng_fast.randrange(10) == 0) {\n+                tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+            }\n+        } else { // sequence based\n+            tx.nLockTime = 0;\n+            const auto i_input{rng_fast.randrange(tx.vin.size())};\n+            CTxIn& in{tx.vin.at(i_input)};\n+            in.nSequence = inputs.at(i_input).depth;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r877555927",
      "id" : 877555927,
      "line" : 681,
      "node_id" : "PRRC_kwDOABII5840TnDX",
      "original_commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "original_line" : 681,
      "original_position" : 97,
      "original_start_line" : 679,
      "path" : "src/wallet/spend.cpp",
      "position" : 97,
      "pull_request_review_id" : 979274513,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877555927/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 679,
      "start_side" : "RIGHT",
      "updated_at" : "2022-05-19T21:31:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/877555927",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r886735641"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886735641"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think we should never fiddle with user chosen sequence numbers, even if they happen to be \"default\". I also think this is the way that createrawtransaction/createpsbt works (it wouldn't set locktime nonzero unless the user asked for it and it wouldn't set sequence in violation of the `replaceable` boolean option unless the user asked for it).\r\n\r\nIf you are asking to extend fee sniping to createrawtransaction/createpsbt, I think this should be done in a separate pull request.\r\n\r\nThe sequence numbers in CreateTransactionInternal solely depend on `const bool use_rbf`, so I think the changes here are both safe and sane.",
      "commit_id" : "fa2dd2f19fadb41b7927a7bd5b1a30657496a2d9",
      "created_at" : "2022-06-01T12:17:16Z",
      "diff_hunk" : "@@ -620,15 +630,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }};\n+        if (locktime_based() || rng_fast.randrange(2) == 0) {\n+            tx.nLockTime = block_height;\n+\n+            // Secondly occasionally randomly pick a nLockTime even further back, so\n+            // that transactions that are delayed after signing for whatever reason,\n+            // e.g. high-latency mix networks and some CoinJoin implementations, have\n+            // better privacy.\n+            if (rng_fast.randrange(10) == 0) {\n+                tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+            }\n+        } else { // sequence based\n+            tx.nLockTime = 0;\n+            const auto i_input{rng_fast.randrange(tx.vin.size())};\n+            CTxIn& in{tx.vin.at(i_input)};\n+            in.nSequence = inputs.at(i_input).depth;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r886735641",
      "id" : 886735641,
      "in_reply_to_id" : 877555927,
      "line" : 691,
      "node_id" : "PRRC_kwDOABII58402oMZ",
      "original_commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "original_line" : 691,
      "original_position" : 97,
      "original_start_line" : 679,
      "path" : "src/wallet/spend.cpp",
      "position" : 98,
      "pull_request_review_id" : 991870231,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886735641/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 689,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-01T12:17:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886735641",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r886736899"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886736899"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yeah, it can be moved inside, as all early returns are `true` and the final return is the only one with `false`.",
      "commit_id" : "fa2dd2f19fadb41b7927a7bd5b1a30657496a2d9",
      "created_at" : "2022-06-01T12:18:46Z",
      "diff_hunk" : "@@ -620,15 +630,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }};\n+        if (locktime_based() || rng_fast.randrange(2) == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r886736899",
      "id" : 886736899,
      "in_reply_to_id" : 877548757,
      "line" : null,
      "node_id" : "PRRC_kwDOABII58402ogD",
      "original_commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "original_line" : 667,
      "original_position" : 83,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : null,
      "pull_request_review_id" : 991872045,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886736899/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-06-01T12:18:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886736899",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r886962452"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886962452"
         }
      },
      "author_association" : "MEMBER",
      "body" : "At the very least I think this ends up applying anti-fee-sniping inconsistently.\r\n\r\nThe current behavior is that we never apply anti-fee-sniping to transactions funded with `fundrawtransaction` and `walletcreatefundedpsbt` as the locktime provided by the user (or the default of 0) is always used regardless of `DiscourageFeeSniping`.\r\n\r\nWith this PR, if `DiscourageFeeSniping` randomly chose a preset input, then we would discard the sequence it applies to that input and use the user provided sequence (or the default).\r\n\r\nHowever if `DiscourageFeeSniping` chooses an input that coin selection chose, then the sequence it applies would be used and the transaction would end up using sequence based anti-fee-sniping.\r\n\r\nSo the only results if a user uses `fundrawtransaction` or `walletcreatefundedpsbt` are sequence based anti-fee-sniping or no anti-fee-sniping. This could be a potential fingerprint. Thus we may want to disable anti-fee-sniping whenever `fundrawtransaction` or `walletcreatefundedpsbt` are used, at least until we are able to provide sequences and locktimes to `CreateTransactionInternal` (which I am currently working on).",
      "commit_id" : "fa2dd2f19fadb41b7927a7bd5b1a30657496a2d9",
      "created_at" : "2022-06-01T15:45:01Z",
      "diff_hunk" : "@@ -620,15 +630,59 @@ static void DiscourageFeeSniping(CMutableTransaction& tx, FastRandomContext& rng\n     // enough, that fee sniping isn't a problem yet, but by implementing a fix\n     // now we ensure code won't be written that makes assumptions about\n     // nLockTime that preclude a fix later.\n+    //\n+    // nSequence-based\n+    // ---------------\n+    //\n+    // If all inputs in the tx spend taproot coins, use nSequence to discourage\n+    // fee-sniping. This creates a \"privacy cloak\" for txs that use taproot\n+    // key-path spends (BIP326).\n+    //\n+    // Compared to nLockTime-based anti-fee-sniping, this may be minimally less\n+    // effective, as nSequence only allows relative locks. If all inputs of the\n+    // tx can be moved backward in the chain, this tx can be as well. Though,\n+    // this should be fine given that 10% of txs have their locktime randomly\n+    // reduced to a past block. Also, sequence-based locking will only be used\n+    // if every sequence is at least 1.\n     if (IsCurrentForAntiFeeSniping(chain, block_hash)) {\n-        tx.nLockTime = block_height;\n-\n-        // Secondly occasionally randomly pick a nLockTime even further back, so\n-        // that transactions that are delayed after signing for whatever reason,\n-        // e.g. high-latency mix networks and some CoinJoin implementations, have\n-        // better privacy.\n-        if (rng_fast.randrange(10) == 0) {\n-            tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+        auto locktime_based{[&] {\n+            if (!SignalsOptInRBF(CTransaction{tx})) {\n+                // Use locktime if the tx inputs do not opt-in to RBF\n+                return true;\n+            }\n+            for (const auto& in : inputs) {\n+                if (in.depth < 1 || uint64_t(in.depth) > MAX_BLOCK_SEQ) {\n+                    // Use locktime if any depth is out-of-range\n+                    return true;\n+                }\n+                std::vector<std::vector<uint8_t>> dummy;\n+                const TxoutType in_type{Solver(in.txout.scriptPubKey, dummy)};\n+                // Use locktime if any input isn't taproot\n+                if (in_type != TxoutType::WITNESS_V1_TAPROOT) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }};\n+        if (locktime_based() || rng_fast.randrange(2) == 0) {\n+            tx.nLockTime = block_height;\n+\n+            // Secondly occasionally randomly pick a nLockTime even further back, so\n+            // that transactions that are delayed after signing for whatever reason,\n+            // e.g. high-latency mix networks and some CoinJoin implementations, have\n+            // better privacy.\n+            if (rng_fast.randrange(10) == 0) {\n+                tx.nLockTime = std::max(0, int(tx.nLockTime) - int(rng_fast.randrange(100)));\n+            }\n+        } else { // sequence based\n+            tx.nLockTime = 0;\n+            const auto i_input{rng_fast.randrange(tx.vin.size())};\n+            CTxIn& in{tx.vin.at(i_input)};\n+            in.nSequence = inputs.at(i_input).depth;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#discussion_r886962452",
      "id" : 886962452,
      "in_reply_to_id" : 877555927,
      "line" : 691,
      "node_id" : "PRRC_kwDOABII58403fkU",
      "original_commit_id" : "fa8cfae8b82a36ae598e1956d16d2d65ac8df44c",
      "original_line" : 691,
      "original_position" : 97,
      "original_start_line" : 679,
      "path" : "src/wallet/spend.cpp",
      "position" : 98,
      "pull_request_review_id" : 992197699,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/24128",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886962452/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 689,
      "start_side" : "RIGHT",
      "updated_at" : "2022-06-01T15:45:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/886962452",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "People interested in seeing this move forward may be interested in giving https://github.com/bitcoin/bitcoin/pull/25273 a look. It was recently rebased and reviewed twice.",
      "created_at" : "2023-03-23T11:36:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1481033569",
      "id" : 1481033569,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585YRsdh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1481033569/reactions"
      },
      "updated_at" : "2023-03-23T11:36:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1481033569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased (trivial)",
      "created_at" : "2023-08-18T10:29:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1683706701",
      "id" : 1683706701,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585kW1NN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1683706701/reactions"
      },
      "updated_at" : "2023-08-18T10:29:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1683706701",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-12-11T17:20:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1850522797",
      "id" : 1850522797,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585uTLyt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850522797/reactions"
      },
      "updated_at" : "2023-12-11T17:20:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850522797",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "rebased",
      "created_at" : "2024-01-15T11:53:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1892024499",
      "id" : 1892024499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585wxgCz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1892024499/reactions"
      },
      "updated_at" : "2024-01-15T11:53:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1892024499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK fa08291375ea00cfacd52956bcac7468824a0bf4\r\n\r\nWith #25273 now merged, I believe this now applies the anti-fee-sniping consistently. It won't apply it to any transactions that are created by calling `FundTransaction` (that should only affect `fundrawtransaction` and `walletcreatefundedpsbt`) since those transactions always have preset sequences. But that can be improved in the future and this will at least behave consistently.",
      "created_at" : "2024-01-24T21:32:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/24128#issuecomment-1908951226",
      "id" : 1908951226,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/24128",
      "node_id" : "IC_kwDOABII585xyEi6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908951226/reactions"
      },
      "updated_at" : "2024-01-24T21:32:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908951226",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   }
]

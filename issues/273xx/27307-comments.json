[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/27307).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n* [#27286](https://github.com/bitcoin/bitcoin/pull/27286) (wallet: Keep track of the wallet's own transaction outputs in memory by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-03-22T21:30:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1480287022",
      "id" : 1480287022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27307",
      "node_id" : "IC_kwDOABII585YO2Mu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1480287022/reactions"
      },
      "updated_at" : "2023-11-14T07:57:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1480287022",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-27T19:04:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1565654555",
      "id" : 1565654555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27307",
      "node_id" : "IC_kwDOABII585dUf4b",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1565654555/reactions"
      },
      "updated_at" : "2023-05-27T19:04:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1565654555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1244653007"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244653007"
         }
      },
      "author_association" : "NONE",
      "body" : "What do you think of renaming the `TxStateConflicted` struct to `TxStateBlockConflicted`, since that one is used for block conflicts and there is now a difference here between block and mempool conflicts?",
      "commit_id" : "0538ad7d4cfddb5a377f879cbf221b2b028c264a",
      "created_at" : "2023-06-28T04:26:28Z",
      "diff_hunk" : "@@ -315,7 +321,9 @@ class CWalletTx\n     template<typename T> T* state() { return std::get_if<T>(&m_state); }\n \n     bool isAbandoned() const { return state<TxStateInactive>() && state<TxStateInactive>()->abandoned; }\n-    bool isConflicted() const { return state<TxStateConflicted>(); }\n+    bool isConflicted() const { return state<TxStateConflicted>() || state<TxStateMempoolConflicted>(); }\n+    bool isMempoolConflicted() const { return state<TxStateMempoolConflicted>(); }\n+    bool isBlockConflicted() const { return state<TxStateConflicted>(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1244653007",
      "id" : 1244653007,
      "line" : 326,
      "node_id" : "PRRC_kwDOABII585KL-XP",
      "original_commit_id" : "0538ad7d4cfddb5a377f879cbf221b2b028c264a",
      "original_line" : 326,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/wallet/transaction.h",
      "position" : 43,
      "pull_request_review_id" : 1502236845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244653007/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T04:27:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1244653007",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/11140095?v=4",
         "events_url" : "https://api.github.com/users/evansmj/events{/privacy}",
         "followers_url" : "https://api.github.com/users/evansmj/followers",
         "following_url" : "https://api.github.com/users/evansmj/following{/other_user}",
         "gists_url" : "https://api.github.com/users/evansmj/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/evansmj",
         "id" : 11140095,
         "login" : "evansmj",
         "node_id" : "MDQ6VXNlcjExMTQwMDk1",
         "organizations_url" : "https://api.github.com/users/evansmj/orgs",
         "received_events_url" : "https://api.github.com/users/evansmj/received_events",
         "repos_url" : "https://api.github.com/users/evansmj/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/evansmj/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/evansmj/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/evansmj"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1245286239"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245286239"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "That makes sense, I'll do that using a [scripted diff.](https://github.com/bitcoin/bitcoin/blob/d6ee03507f39223889a5f039c4db7204ddfb91d5/doc/developer-notes.md#scripted-diffs)",
      "commit_id" : "0538ad7d4cfddb5a377f879cbf221b2b028c264a",
      "created_at" : "2023-06-28T14:15:18Z",
      "diff_hunk" : "@@ -315,7 +321,9 @@ class CWalletTx\n     template<typename T> T* state() { return std::get_if<T>(&m_state); }\n \n     bool isAbandoned() const { return state<TxStateInactive>() && state<TxStateInactive>()->abandoned; }\n-    bool isConflicted() const { return state<TxStateConflicted>(); }\n+    bool isConflicted() const { return state<TxStateConflicted>() || state<TxStateMempoolConflicted>(); }\n+    bool isMempoolConflicted() const { return state<TxStateMempoolConflicted>(); }\n+    bool isBlockConflicted() const { return state<TxStateConflicted>(); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1245286239",
      "id" : 1245286239,
      "in_reply_to_id" : 1244653007,
      "line" : 326,
      "node_id" : "PRRC_kwDOABII585KOY9f",
      "original_commit_id" : "0538ad7d4cfddb5a377f879cbf221b2b028c264a",
      "original_line" : 326,
      "original_position" : 43,
      "original_start_line" : null,
      "path" : "src/wallet/transaction.h",
      "position" : 43,
      "pull_request_review_id" : 1503214745,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245286239/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-28T14:15:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1245286239",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1270411973"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270411973"
         }
      },
      "author_association" : "MEMBER",
      "body" : "https://cirrus-ci.com/task/6496120092753920?logs=ci#L3132\r\n\r\n```\r\n test  2023-07-17T05:13:02.641000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 131, in main\r\n                                       self.run_test()\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_conflicts.py\", line 34, in run_test\r\n                                       self.test_mempool_and_block_conflicts()\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_conflicts.py\", line 219, in test_mempool_and_block_conflicts\r\n                                       assert_equal(len(alice.getrawmempool()), 0)\r\n                                     File \"/tmp/cirrus-ci-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/util.py\", line 57, in assert_equal\r\n                                       raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\r\n                                   AssertionError: not(1 == 0)",
      "commit_id" : "20d58f2554ba5cad1e6385a0f2d87b3750581442",
      "created_at" : "2023-07-21T08:46:08Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        # alice has all 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1270411973",
      "id" : 1270411973,
      "line" : 219,
      "node_id" : "PRRC_kwDOABII585LuPLF",
      "original_commit_id" : "42412c592e01960e77972321f1f6999342cb0c6c",
      "original_line" : 219,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 111,
      "pull_request_review_id" : 1540742589,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270411973/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-21T08:46:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1270411973",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1271448113"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271448113"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed",
      "commit_id" : "20d58f2554ba5cad1e6385a0f2d87b3750581442",
      "created_at" : "2023-07-23T13:24:51Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        # alice has all 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1271448113",
      "id" : 1271448113,
      "in_reply_to_id" : 1270411973,
      "line" : 219,
      "node_id" : "PRRC_kwDOABII585LyMIx",
      "original_commit_id" : "42412c592e01960e77972321f1f6999342cb0c6c",
      "original_line" : 219,
      "original_position" : 111,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 111,
      "pull_request_review_id" : 1542251974,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271448113/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-23T13:24:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1271448113",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-10-17T19:42:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1767055383",
      "id" : 1767055383,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27307",
      "node_id" : "IC_kwDOABII585pUyAX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1767055383/reactions"
      },
      "updated_at" : "2023-10-17T19:42:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1767055383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1382141691"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382141691"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 770a73c66a48434fa48f594709dbbf5831dc1d5d \"wallet: track mempool conflicts\"\r\n\r\nnit: `snake_case` for member variables.\r\n\r\nAdditionally, this is tracking these conflicts at the `CWallet` level. However I wonder if it might be better to track it on a transaction level, i.e. have `CWalletTx` have the set of txids.",
      "commit_id" : "a29849740becd62175a450b9c227bd7bfafe8a86",
      "created_at" : "2023-11-03T19:52:41Z",
      "diff_hunk" : "@@ -337,6 +337,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     void AddToSpends(const COutPoint& outpoint, const uint256& wtxid, WalletBatch* batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void AddToSpends(const CWalletTx& wtx, WalletBatch* batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n+    // Map of wtx hash to a set of mempool conflict hashes\n+    std::map<uint256, std::set<uint256>> MempoolConflicts GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1382141691",
      "id" : 1382141691,
      "line" : 341,
      "node_id" : "PRRC_kwDOABII585SYc77",
      "original_commit_id" : "770a73c66a48434fa48f594709dbbf5831dc1d5d",
      "original_line" : 341,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : 5,
      "pull_request_review_id" : 1713437792,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382141691/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-03T20:11:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382141691",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1382482637"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382482637"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree it is better to track conflicts on a transaction level. I've implemented it this way now and it looks much better. ",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-04T23:48:44Z",
      "diff_hunk" : "@@ -337,6 +337,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     void AddToSpends(const COutPoint& outpoint, const uint256& wtxid, WalletBatch* batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void AddToSpends(const CWalletTx& wtx, WalletBatch* batch = nullptr) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n+    // Map of wtx hash to a set of mempool conflict hashes\n+    std::map<uint256, std::set<uint256>> MempoolConflicts GUARDED_BY(cs_wallet);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1382482637",
      "id" : 1382482637,
      "in_reply_to_id" : 1382141691,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585SZwLN",
      "original_commit_id" : "770a73c66a48434fa48f594709dbbf5831dc1d5d",
      "original_line" : 341,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.h",
      "position" : null,
      "pull_request_review_id" : 1713887444,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382482637/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-04T23:48:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1382482637",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1383974021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383974021"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\"\r\n\r\nnit: When doing separate test cases like this, we should also use different wallets to prevent state from one test cases from effecting another. So this should be making its own wallets once again.",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-06T20:53:41Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1383974021",
      "id" : 1383974021,
      "line" : 184,
      "node_id" : "PRRC_kwDOABII585SfcSF",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 184,
      "original_position" : 76,
      "original_start_line" : 182,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 76,
      "pull_request_review_id" : 1716221992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383974021/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 182,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-06T21:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383974021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1383975379"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383975379"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\"\r\n\r\nnit: No need to make another wallet for the receiver, just use the default wallet.",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-06T20:54:52Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1383975379",
      "id" : 1383975379,
      "line" : 137,
      "node_id" : "PRRC_kwDOABII585SfcnT",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 137,
      "original_position" : 29,
      "original_start_line" : 136,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 29,
      "pull_request_review_id" : 1716221992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383975379/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 136,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-06T21:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1383975379",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384017154"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384017154"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 28a7e883c2f9249213fddbe24948ec5bb90b0fad \"wallet: track mempool conflicts\"\r\n\r\nIt's not clear to me that this change has any effect.",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-06T21:30:10Z",
      "diff_hunk" : "@@ -1482,8 +1545,8 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n \n     // Scan block\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n-        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});\n         transactionRemovedFromMempool(block.data->vtx[index], MemPoolRemovalReason::BLOCK);\n+        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384017154",
      "id" : 1384017154,
      "line" : 1549,
      "node_id" : "PRRC_kwDOABII585Sfm0C",
      "original_commit_id" : "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "original_line" : 1549,
      "original_position" : 92,
      "original_start_line" : 1485,
      "path" : "src/wallet/wallet.cpp",
      "position" : 129,
      "pull_request_review_id" : 1716221992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384017154/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1486,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2023-11-06T21:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384017154",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384024252"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384024252"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\"\r\n\r\nThis can be compressed into one line using the `send` RPC.\r\n\r\n```suggestion\r\n        raw_tx1 = alice.send(outputs=[{bob.getnewaddress(): 24.9999}], inputs=[unspents[0]], add_to_wallet=False)[\"hex\"]\r\n```",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-06T21:36:36Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384024252",
      "id" : 1384024252,
      "line" : 194,
      "node_id" : "PRRC_kwDOABII585Sfoi8",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 194,
      "original_position" : 86,
      "original_start_line" : 193,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 86,
      "pull_request_review_id" : 1716221992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384024252/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 193,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-06T21:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384024252",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384032166"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384032166"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\"\r\n\r\nIt would be useful to have a comment that explains that 11 blocks are mined so that when they are invalidated, `tx2_conflict` does not get put back into the mempool.",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-06T21:39:23Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 3)\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # bob broadcasts tx_1 conflict\n+        tx1_conflict = bob.sendrawtransaction(tx1_conflict)\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 2)\n+\n+        assert tx2 in bob.getrawmempool()\n+        assert tx1_conflict in bob.getrawmempool()\n+\n+        assert_equal(bob.gettransaction(tx1)[\"mempoolconflicts\"], [tx1_conflict])\n+        assert_equal(bob.gettransaction(tx2)[\"mempoolconflicts\"], [])\n+        assert_equal(bob.gettransaction(tx3)[\"mempoolconflicts\"], [tx1_conflict])\n+\n+        # check that tx3 is now conflicted, so the output from tx2 can now be spent\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"24.99990000\"))\n+\n+        # we will be disconnecting this block in the future\n+        tx2_conflict = alice.sendrawtransaction(tx2_conflict)\n+        assert_equal(len(alice.getrawmempool()), 1)\n+        blk = self.generate(self.nodes[0], 11, sync_fun=self.no_op)[0]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384032166",
      "id" : 1384032166,
      "line" : 242,
      "node_id" : "PRRC_kwDOABII585Sfqem",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 242,
      "original_position" : 134,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 134,
      "pull_request_review_id" : 1716221992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384032166/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-06T21:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384032166",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384035046"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384035046"
         }
      },
      "author_association" : "MEMBER",
      "body" : "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\"\r\n\r\nThis isn't actually necessary since `listunspent` has these fields already and the extra ones are just ignored.",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-06T21:39:51Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1384035046",
      "id" : 1384035046,
      "line" : 143,
      "node_id" : "PRRC_kwDOABII585SfrLm",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 143,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 35,
      "pull_request_review_id" : 1716221992,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384035046/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-06T21:39:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1384035046",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1385015371"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385015371"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think before this was to fix a bug, but I fixed that bug in a different way. Regardless, doesn't it make more sense to run `transactionRemovedFromMempool` before syncing the transaction as confirmed? ",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-07T14:33:44Z",
      "diff_hunk" : "@@ -1482,8 +1545,8 @@ void CWallet::blockConnected(ChainstateRole role, const interfaces::BlockInfo& b\n \n     // Scan block\n     for (size_t index = 0; index < block.data->vtx.size(); index++) {\n-        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});\n         transactionRemovedFromMempool(block.data->vtx[index], MemPoolRemovalReason::BLOCK);\n+        SyncTransaction(block.data->vtx[index], TxStateConfirmed{block.hash, block.height, static_cast<int>(index)});",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1385015371",
      "id" : 1385015371,
      "in_reply_to_id" : 1384017154,
      "line" : 1549,
      "node_id" : "PRRC_kwDOABII585SjahL",
      "original_commit_id" : "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "original_line" : 1549,
      "original_position" : 92,
      "original_start_line" : 1485,
      "path" : "src/wallet/wallet.cpp",
      "position" : 129,
      "pull_request_review_id" : 1717849509,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385015371/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 1486,
      "start_side" : "LEFT",
      "subject_type" : "line",
      "updated_at" : "2023-11-07T14:33:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1385015371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-11-07T18:29:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1799468182",
      "id" : 1799468182,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27307",
      "node_id" : "IC_kwDOABII585rQbSW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1799468182/reactions"
      },
      "updated_at" : "2023-11-07T18:29:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1799468182",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1387276842"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1387276842"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 5107e4e730a150068c5a214020a6393d2ba33aa8 \"wallet: use CWalletTx member functions to determine tx state\":\r\n\r\nWhile I see why `TxStateConflicted` would be excluded here, it is not quite obvious to me why your replacement is equivalent. Could you perhaps expand a bit on this in a comment or the commit message?",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-08T22:40:26Z",
      "diff_hunk" : "@@ -752,8 +752,7 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            if (mit->second.isConfirmed() || mit->second.InMempool() || (mit->second.isInactive() && !mit->second.isAbandoned()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1387276842",
      "id" : 1387276842,
      "line" : 755,
      "node_id" : "PRRC_kwDOABII585SsCoq",
      "original_commit_id" : "5107e4e730a150068c5a214020a6393d2ba33aa8",
      "original_line" : 755,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 6,
      "pull_request_review_id" : 1721396961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1387276842/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-09T20:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1387276842",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1387279137"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1387279137"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 920f16c9a11d167444f509a9fd2f0244f1f635eb \"scripted-diff: wallet: s/TxStateConflicted/TxStateBlockConflicted\":\r\n\r\nI was considering whether there might be a way to better express that the transaction is in conflict with a confirmed transaction. How about:\r\n\r\n```suggestion\r\n        wtx.state<TxStateConfirmedConflict>() ? wtx.state<TxStateConfirmedConflict>()->conflicting_block_height :\r\n```",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-08T22:43:49Z",
      "diff_hunk" : "@@ -91,7 +91,7 @@ WalletTxStatus MakeWalletTxStatus(const CWallet& wallet, const CWalletTx& wtx)\n     WalletTxStatus result;\n     result.block_height =\n         wtx.state<TxStateConfirmed>() ? wtx.state<TxStateConfirmed>()->confirmed_block_height :\n-        wtx.state<TxStateConflicted>() ? wtx.state<TxStateConflicted>()->conflicting_block_height :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1387279137",
      "id" : 1387279137,
      "line" : 94,
      "node_id" : "PRRC_kwDOABII585SsDMh",
      "original_commit_id" : "920f16c9a11d167444f509a9fd2f0244f1f635eb",
      "original_line" : 94,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/interfaces.cpp",
      "position" : 4,
      "pull_request_review_id" : 1721396961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1387279137/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-09T20:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1387279137",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388493685"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388493685"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 28a7e883c2f9249213fddbe24948ec5bb90b0fad \"wallet: track mempool conflicts\":\r\n\r\nNote to self and other reviewers: `TxSpends` is an `unordered_multimap` which permits multiple entries to have the same key, and `equal_range(â¦)` returns the range of iterators that match the given key denominated in first iterator to first iterator after the range.",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-09T19:30:10Z",
      "diff_hunk" : "@@ -1426,6 +1426,36 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     if (it != mapWallet.end()) {\n         RefreshMempoolStatus(it->second, chain());\n     }\n+\n+    const uint256& conflict_hash = tx->GetHash();\n+\n+    for (const CTxIn& tx_in : tx->vin) {\n+        // If the wallet contains no transactions that spend the same prevout, continue\n+        if (mapTxSpends.count(tx_in.prevout) == 0) continue;\n+\n+        std::pair<TxSpends::const_iterator, TxSpends::const_iterator> range;\n+        range = mapTxSpends.equal_range(tx_in.prevout);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388493685",
      "id" : 1388493685,
      "line" : 1437,
      "node_id" : "PRRC_kwDOABII585Swrt1",
      "original_commit_id" : "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "original_line" : 1437,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 58,
      "pull_request_review_id" : 1721396961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388493685/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-09T20:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388493685",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388510399"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388510399"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 28a7e883c2f9249213fddbe24948ec5bb90b0fad \"wallet: track mempool conflicts\":\r\nCould you perhaps explain what the purpose of mining ten blocks here is?",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-09T19:47:32Z",
      "diff_hunk" : "@@ -232,7 +232,9 @@ def run_test(self):\n         balance = newbalance\n \n         # Invalidate the block with the double spend. B & C's 10 BTC outputs should no longer be available\n-        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+        blk = self.nodes[0].getbestblockhash()\n+        self.generate(self.nodes[1], 10)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388510399",
      "id" : 1388510399,
      "line" : 236,
      "node_id" : "PRRC_kwDOABII585Swvy_",
      "original_commit_id" : "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "original_line" : 236,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : 6,
      "pull_request_review_id" : 1721396961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388510399/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-09T20:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388510399",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388531074"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388531074"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\":\r\nItâs a bit confusing that you take an input `tx1` here which is the 'hex' string of the raw transaction, but then assign the resulting 'txid' back to `tx1`.",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-09T20:08:36Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388531074",
      "id" : 1388531074,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585Sw02C",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 155,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 47,
      "pull_request_review_id" : 1721396961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388531074/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-09T20:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388531074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388532260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388532260"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\":\r\nSince `tx2` replaced `tx1`, why would `unspents[0]` be considered spent here?",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-09T20:09:50Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388532260",
      "id" : 1388532260,
      "line" : 174,
      "node_id" : "PRRC_kwDOABII585Sw1Ik",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 174,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 66,
      "pull_request_review_id" : 1721396961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388532260/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-09T20:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388532260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388533849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388533849"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yeah, this could be a problem if you only run one of the tests separately instead of the whole suite. Then that test would fail, since itâs setup depends on the prior test having been run before.",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-09T20:11:36Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388533849",
      "id" : 1388533849,
      "in_reply_to_id" : 1383974021,
      "line" : 184,
      "node_id" : "PRRC_kwDOABII585Sw1hZ",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 184,
      "original_position" : 76,
      "original_start_line" : 182,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 76,
      "pull_request_review_id" : 1721396961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388533849/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 182,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-09T20:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388533849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388545575"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388545575"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\":\r\nIâm having trouble keeping track of all the things going on here. Perhaps you could add in these comments which transactions each node now knows about",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-09T20:24:58Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388545575",
      "id" : 1388545575,
      "line" : 218,
      "node_id" : "PRRC_kwDOABII585Sw4Yn",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 218,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 110,
      "pull_request_review_id" : 1721396961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388545575/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-09T20:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388545575",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388547724"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388547724"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In 003efbbe45079c4416810a025b2bc372559dff15 \"test: Add tests for wallet mempool conflicts\":\r\n`tx1_conflict` should displace `tx1`, but why does Bob not have 3 again now? Shouldnât Bob know about `tx1`, `tx2`, and `tx3` before, and then `tx1_conflict`, `tx2`, and `tx3` after?",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-09T20:27:27Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 3)\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # bob broadcasts tx_1 conflict\n+        tx1_conflict = bob.sendrawtransaction(tx1_conflict)\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1388547724",
      "id" : 1388547724,
      "line" : 227,
      "node_id" : "PRRC_kwDOABII585Sw46M",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 227,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 119,
      "pull_request_review_id" : 1721396961,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388547724/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-09T20:33:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1388547724",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4060799?v=4",
         "events_url" : "https://api.github.com/users/murchandamus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/murchandamus/followers",
         "following_url" : "https://api.github.com/users/murchandamus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/murchandamus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/murchandamus",
         "id" : 4060799,
         "login" : "murchandamus",
         "node_id" : "MDQ6VXNlcjQwNjA3OTk=",
         "organizations_url" : "https://api.github.com/users/murchandamus/orgs",
         "received_events_url" : "https://api.github.com/users/murchandamus/received_events",
         "repos_url" : "https://api.github.com/users/murchandamus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/murchandamus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/murchandamus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/murchandamus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1389968548"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389968548"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`depth > 0  || (depth == 0 && !mit->second.isAbandoned())` is saying that the spending transaction should be confirmed, or: must not be (block) conflicted, and it must not be abandoned, for the corresponding output to be considered spent. \r\n\r\n`mit->second.isConfirmed() || mit->second.InMempool() || (mit->second.isInactive() && !mit->second.isAbandoned())`  is saying that the spending transaction should be confirmed, or in the mempool, or: must be inactive and not abandoned for the corresponding output to be considered spent. \r\n\r\nIn this context, saying that a transaction must not be conflicted is logically equivalent to saying that the transaction must be inactive and not abandoned. I will add a comment to clarify this.",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-10T22:05:56Z",
      "diff_hunk" : "@@ -752,8 +752,7 @@ bool CWallet::IsSpent(const COutPoint& outpoint) const\n         const uint256& wtxid = it->second;\n         const auto mit = mapWallet.find(wtxid);\n         if (mit != mapWallet.end()) {\n-            int depth = GetTxDepthInMainChain(mit->second);\n-            if (depth > 0  || (depth == 0 && !mit->second.isAbandoned()))\n+            if (mit->second.isConfirmed() || mit->second.InMempool() || (mit->second.isInactive() && !mit->second.isAbandoned()))",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1389968548",
      "id" : 1389968548,
      "in_reply_to_id" : 1387276842,
      "line" : 755,
      "node_id" : "PRRC_kwDOABII585S2Tyk",
      "original_commit_id" : "5107e4e730a150068c5a214020a6393d2ba33aa8",
      "original_line" : 755,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "src/wallet/wallet.cpp",
      "position" : 6,
      "pull_request_review_id" : 1725717976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389968548/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-10T22:05:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389968548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1389995261"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389995261"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Because `tx3` replaced `tx2`, so `tx1` is now `TxStateInactive` instead of `TxStateMempoolConflicted`, making `unspents[0]` spent.",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-10T22:49:45Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1389995261",
      "id" : 1389995261,
      "in_reply_to_id" : 1388532260,
      "line" : 174,
      "node_id" : "PRRC_kwDOABII585S2aT9",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 174,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 66,
      "pull_request_review_id" : 1725756150,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389995261/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-10T22:49:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389995261",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390055024"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390055024"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "These two things are not technically equivalent, because `send` creates a change output here, which results in intermittent failures for the rest of the test. Is there any way to tell `send` not to create a change output? ",
      "commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "created_at" : "2023-11-11T00:20:26Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390055024",
      "id" : 1390055024,
      "in_reply_to_id" : 1384024252,
      "line" : 194,
      "node_id" : "PRRC_kwDOABII585S2o5w",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 194,
      "original_position" : 86,
      "original_start_line" : 193,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 86,
      "pull_request_review_id" : 1725836363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390055024/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 193,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-11T00:20:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390055024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390071466"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390071466"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that `TxStateBlockConflicted` and `TxStateMempoolConflicted` are a bit more clear, because with something like `TxStateUnconfirmedConflict` instead of `TxStateMempoolConflicted`, it is unclear whether the conflict is in the mempool, or just hasn't been broadcasted yet. Additionally, I felt that it was more uniform with the other transaction states to be describing the state of the transaction instead of the state of a conflict. Eg. `TxStateBlockConflicted` indicates that the transaction is block-conflicted, and similarly `TxStateConfirmed` indicates that the transaction is confirmed. On the other hand, `TxStateConfirmedConflict` indicates the state of the conflict. \r\n\r\nThat being said, if you or others think that `TxStateConfirmedConflict` or something similar is better, I would be open to changing it. ",
      "commit_id" : "4d7524a563aa8ef8c075ce337e985a2d1aaeddd6",
      "created_at" : "2023-11-11T01:00:10Z",
      "diff_hunk" : "@@ -91,7 +91,7 @@ WalletTxStatus MakeWalletTxStatus(const CWallet& wallet, const CWalletTx& wtx)\n     WalletTxStatus result;\n     result.block_height =\n         wtx.state<TxStateConfirmed>() ? wtx.state<TxStateConfirmed>()->confirmed_block_height :\n-        wtx.state<TxStateConflicted>() ? wtx.state<TxStateConflicted>()->conflicting_block_height :",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390071466",
      "id" : 1390071466,
      "in_reply_to_id" : 1387279137,
      "line" : 94,
      "node_id" : "PRRC_kwDOABII585S2s6q",
      "original_commit_id" : "920f16c9a11d167444f509a9fd2f0244f1f635eb",
      "original_line" : 94,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/wallet/interfaces.cpp",
      "position" : 4,
      "pull_request_review_id" : 1725860719,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390071466/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-11T01:00:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390071466",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128297"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128297"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "19bb5842562582d831bc4af4d03e3671455bbcdd",
      "created_at" : "2023-11-11T04:47:28Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128297",
      "id" : 1390128297,
      "in_reply_to_id" : 1383974021,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S26yp",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 184,
      "original_position" : 76,
      "original_start_line" : 182,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1725941221,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128297/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-11T04:47:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128297",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128370"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128370"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done",
      "commit_id" : "19bb5842562582d831bc4af4d03e3671455bbcdd",
      "created_at" : "2023-11-11T04:47:54Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128370",
      "id" : 1390128370,
      "in_reply_to_id" : 1383975379,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S26zy",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 137,
      "original_position" : 29,
      "original_start_line" : 136,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1725941259,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128370/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-11T04:47:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128370",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128432"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128432"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've added a comment.",
      "commit_id" : "19bb5842562582d831bc4af4d03e3671455bbcdd",
      "created_at" : "2023-11-11T04:48:17Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 3)\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # bob broadcasts tx_1 conflict\n+        tx1_conflict = bob.sendrawtransaction(tx1_conflict)\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 2)\n+\n+        assert tx2 in bob.getrawmempool()\n+        assert tx1_conflict in bob.getrawmempool()\n+\n+        assert_equal(bob.gettransaction(tx1)[\"mempoolconflicts\"], [tx1_conflict])\n+        assert_equal(bob.gettransaction(tx2)[\"mempoolconflicts\"], [])\n+        assert_equal(bob.gettransaction(tx3)[\"mempoolconflicts\"], [tx1_conflict])\n+\n+        # check that tx3 is now conflicted, so the output from tx2 can now be spent\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"24.99990000\"))\n+\n+        # we will be disconnecting this block in the future\n+        tx2_conflict = alice.sendrawtransaction(tx2_conflict)\n+        assert_equal(len(alice.getrawmempool()), 1)\n+        blk = self.generate(self.nodes[0], 11, sync_fun=self.no_op)[0]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128432",
      "id" : 1390128432,
      "in_reply_to_id" : 1384032166,
      "line" : 248,
      "node_id" : "PRRC_kwDOABII585S260w",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 248,
      "original_position" : 134,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : 140,
      "pull_request_review_id" : 1725941363,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128432/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-11T04:48:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128432",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128566"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128566"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed",
      "commit_id" : "19bb5842562582d831bc4af4d03e3671455bbcdd",
      "created_at" : "2023-11-11T04:48:34Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390128566",
      "id" : 1390128566,
      "in_reply_to_id" : 1384035046,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S2622",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 143,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1725941466,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128566/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-11T04:48:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390128566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390129010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390129010"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've added this comment explaining why 10 blocks need to be mined:\r\n```\r\n# mine 10 blocks so that when the blk is invalidated, the transactions are not\r\n# returned to the mempool\r\n```",
      "commit_id" : "19bb5842562582d831bc4af4d03e3671455bbcdd",
      "created_at" : "2023-11-11T04:51:25Z",
      "diff_hunk" : "@@ -232,7 +232,9 @@ def run_test(self):\n         balance = newbalance\n \n         # Invalidate the block with the double spend. B & C's 10 BTC outputs should no longer be available\n-        self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())\n+        blk = self.nodes[0].getbestblockhash()\n+        self.generate(self.nodes[1], 10)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390129010",
      "id" : 1390129010,
      "in_reply_to_id" : 1388510399,
      "line" : 238,
      "node_id" : "PRRC_kwDOABII585S269y",
      "original_commit_id" : "28a7e883c2f9249213fddbe24948ec5bb90b0fad",
      "original_line" : 238,
      "original_position" : 6,
      "original_start_line" : null,
      "path" : "test/functional/wallet_abandonconflict.py",
      "position" : 8,
      "pull_request_review_id" : 1725942031,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390129010/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-11T04:51:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390129010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390129173"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390129173"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I've replaced `tx1` with `tx1_txid` here and for all other instances of this.",
      "commit_id" : "19bb5842562582d831bc4af4d03e3671455bbcdd",
      "created_at" : "2023-11-11T04:53:01Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1390129173",
      "id" : 1390129173,
      "in_reply_to_id" : 1388531074,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S27AV",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 155,
      "original_position" : 47,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1725942421,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390129173/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-11T04:53:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1390129173",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased and addressed most of the review comments (thanks @achow101 and @murchandamus). I will address the remaining comments soon. ",
      "created_at" : "2023-11-11T04:58:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1806687648",
      "id" : 1806687648,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27307",
      "node_id" : "IC_kwDOABII585rr92g",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1806687648/reactions"
      },
      "updated_at" : "2023-11-11T04:58:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1806687648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1393623761"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393623761"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "`tx1_conflict` also displaces `tx3` because `tx3` spends `tx1`, so it is also considered mempool-conflicted. So instead `tx1_conflict` and `tx2` are the only transactions left in the mempool. I've added a comment indicating this. ",
      "commit_id" : "22778ac98f1bcb695de8ccf0b02fe9ebe39b01aa",
      "created_at" : "2023-11-15T04:35:51Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 3)\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99900000\"))\n+\n+        # bob broadcasts tx_1 conflict\n+        tx1_conflict = bob.sendrawtransaction(tx1_conflict)\n+        assert_equal(len(alice.getrawmempool()), 0)\n+        assert_equal(len(bob.getrawmempool()), 2)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1393623761",
      "id" : 1393623761,
      "in_reply_to_id" : 1388547724,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585TEQLR",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 231,
      "original_position" : 119,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1731223899,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393623761/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-15T04:35:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393623761",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1393624485"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393624485"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I agree that it gets a bit confusing, so I've added a lot more comments. ",
      "commit_id" : "22778ac98f1bcb695de8ccf0b02fe9ebe39b01aa",
      "created_at" : "2023-11-15T04:37:43Z",
      "diff_hunk" : "@@ -123,5 +129,148 @@ def run_test(self):\n         assert_equal(former_conflicted[\"confirmations\"], 1)\n         assert_equal(former_conflicted[\"blockheight\"], 217)\n \n+    def test_mempool_conflict(self):\n+        self.nodes[0].createwallet(\"alice\")\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+\n+        self.nodes[1].createwallet(\"bob\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.generatetoaddress(self.nodes[0], COINBASE_MATURITY + 3, alice.getnewaddress())\n+\n+        self.log.info(\"Test a scenario where a transaction has a mempool conflict\")\n+\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+        assert_equal(len(unspents), 3)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[1]], outputs=[{bob.getnewaddress() : 49.9999}])\n+        tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1], unspents[2]], outputs=[{bob.getnewaddress() : 49.99}])\n+        tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{bob.getnewaddress() : 24.9899}])\n+        tx3 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        tx1 = alice.sendrawtransaction(tx1)\n+\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[2][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        tx2 = alice.sendrawtransaction(tx2)\n+\n+        # Check that the 0th unspent is now available because the transaction spending it has been replaced in the mempool\n+        assert_equal(alice.listunspent()[0][\"txid\"], unspents[0][\"txid\"])\n+        assert_equal(alice.getbalance(), 25)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [tx2])\n+\n+        self.log.info(\"Test scenario where a mempool conflict is removed\")\n+\n+        tx3 = alice.sendrawtransaction(tx3)\n+\n+        assert_equal(alice.gettransaction(tx1)[\"mempoolconflicts\"], [])\n+\n+        # now all of alice's outputs should be considered spent\n+        assert_equal(alice.listunspent(), [])\n+        assert_equal(alice.getbalance(), 0)\n+\n+        alice.sendrawtransaction(alice.gettransaction(tx1)['hex'])\n+        self.generate(self.nodes[0], 3)\n+        assert_equal(alice.getbalance(), 75)\n+\n+    def test_mempool_and_block_conflicts(self):\n+        alice = self.nodes[0].get_wallet_rpc(\"alice\")\n+        bob = self.nodes[1].get_wallet_rpc(\"bob\")\n+\n+        self.log.info(\"Test a scenario where a transaction has both a block conflict and a mempool conflict\")\n+        unspents = [{\"txid\" : element[\"txid\"], \"vout\" : element[\"vout\"]} for element in alice.listunspent()]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], 0)\n+\n+        self.disconnect_nodes(0, 1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0]], outputs=[{bob.getnewaddress() : 24.99999}])\n+        raw_tx1 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx1 = bob.sendrawtransaction(raw_tx1)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[0], unspents[2]], outputs=[{alice.getnewaddress() : 49.999}])\n+        tx1_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[2]], outputs=[{alice.getnewaddress() : 24.99}])\n+        tx1_conflict_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{bob.getnewaddress() : 24.9999}])\n+        raw_tx2 = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx2 = bob.sendrawtransaction(raw_tx2)\n+\n+        raw_tx = alice.createrawtransaction(inputs=[unspents[1]], outputs=[{alice.getnewaddress() : 24.9999}])\n+        tx2_conflict = alice.signrawtransactionwithwallet(raw_tx)['hex']\n+\n+        bob_unspents = [{\"txid\" : element, \"vout\" : 0} for element in [tx1, tx2]]\n+\n+        assert_equal(bob.getbalances()[\"mine\"][\"untrusted_pending\"], Decimal(\"49.99989000\"))\n+\n+        raw_tx = bob.createrawtransaction(inputs=[bob_unspents[0], bob_unspents[1]], outputs=[{bob.getnewaddress() : 49.999}])\n+        raw_tx3 = bob.signrawtransactionwithwallet(raw_tx)['hex']\n+        tx3 = bob.sendrawtransaction(raw_tx3)\n+\n+        # alice has 0 txs, bob has 3",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#discussion_r1393624485",
      "id" : 1393624485,
      "in_reply_to_id" : 1388545575,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585TEQWl",
      "original_commit_id" : "003efbbe45079c4416810a025b2bc372559dff15",
      "original_line" : 218,
      "original_position" : 110,
      "original_start_line" : null,
      "path" : "test/functional/wallet_conflicts.py",
      "position" : null,
      "pull_request_review_id" : 1731225048,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27307",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393624485/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-15T04:37:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1393624485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I have addressed the remaining questions, the only changes are the addition of comments to the functional test. ",
      "created_at" : "2023-11-15T04:40:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27307#issuecomment-1811798648",
      "id" : 1811798648,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27307",
      "node_id" : "IC_kwDOABII585r_dp4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1811798648/reactions"
      },
      "updated_at" : "2023-11-15T04:40:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1811798648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/75942586?v=4",
         "events_url" : "https://api.github.com/users/ishaanam/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ishaanam/followers",
         "following_url" : "https://api.github.com/users/ishaanam/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ishaanam/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ishaanam",
         "id" : 75942586,
         "login" : "ishaanam",
         "node_id" : "MDQ6VXNlcjc1OTQyNTg2",
         "organizations_url" : "https://api.github.com/users/ishaanam/orgs",
         "received_events_url" : "https://api.github.com/users/ishaanam/received_events",
         "repos_url" : "https://api.github.com/users/ishaanam/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ishaanam/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ishaanam/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ishaanam"
      }
   }
]

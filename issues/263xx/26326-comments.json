[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/26326).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1282508125), [pablomartin4btc](https://github.com/bitcoin/bitcoin/pull/26326#pullrequestreview-1221545403) |\n| Approach ACK | [hernanmarino](https://github.com/bitcoin/bitcoin/pull/26326#pullrequestreview-1221322158) |\n| Stale ACK | [furszy](https://github.com/bitcoin/bitcoin/pull/26326#pullrequestreview-1692572017) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28912](https://github.com/bitcoin/bitcoin/pull/28912) (refactor: VectorWriter and SpanReader without nVersion by maflcko)\n* [#28892](https://github.com/bitcoin/bitcoin/pull/28892) (refactor: P2P transport without serialize version and type by maflcko)\n* [#28451](https://github.com/bitcoin/bitcoin/pull/28451) (refactor: Remove unused SER_DISK, SER_NETWORK, SER_GETHASH by maflcko)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-10-17T18:24:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1281297117",
      "id" : 1281297117,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585MXwrd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1281297117/reactions"
      },
      "updated_at" : "2023-11-27T17:59:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1281297117",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK\r\n\r\nI would suggest that you rebase this PR on top of #26316 (if there is a dependency) and then maybe also mark this PR as a draft until the base is merged.",
      "created_at" : "2022-10-18T14:42:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1282508125",
      "id" : 1282508125,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585McYVd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1282508125/reactions"
      },
      "updated_at" : "2022-10-18T14:42:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1282508125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't think #26316 is necessary anymore. We can simply remove files that are still on disk like in https://github.com/bitcoin/bitcoin/pull/26533.",
      "created_at" : "2022-11-18T16:11:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1320230668",
      "id" : 1320230668,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585OsR8M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1320230668/reactions"
      },
      "updated_at" : "2022-11-18T16:11:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1320230668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043171470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043171470"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think this can happen. MAX_BLOCKTXN_DEPTH is 10, so could keep the assert or at least make it a error log category +  Assume(false)?",
      "commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "created_at" : "2022-12-08T10:12:31Z",
      "diff_hunk" : "@@ -3843,23 +3853,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             return;\n         }\n \n+        const CBlockIndex *pindex;\n+        bool is_above_blocktxn_depth;\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n             if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n                 LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n                 return;\n             }\n \n-            if (pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH) {\n-                CBlock block;\n-                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-                assert(ret);\n-\n-                SendBlockTransactions(pfrom, *peer, block, req);\n+            is_above_blocktxn_depth = pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH;\n+        }\n+        if (is_above_blocktxn_depth) {\n+            CBlock block;\n+            if (!ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus())) {\n+                LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043171470",
      "id" : 1043171470,
      "line" : 3872,
      "node_id" : "PRRC_kwDOABII584-LYiO",
      "original_commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "original_line" : 3872,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 145,
      "pull_request_review_id" : 1209810566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043171470/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-08T10:14:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043171470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043174483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043174483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\nbool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CBlockIndex& block, const CMessageHeader::MessageStartChars& message_start);\r\n```\r\n\r\nshouldn't the `*` be a `&`, like before? (`nullptr` is not accepted)",
      "commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "created_at" : "2022-12-08T10:14:10Z",
      "diff_hunk" : "@@ -211,7 +211,7 @@ void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune);\n /** Functions for disk access for blocks */\n bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::Params& consensusParams);\n bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams);\n-bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatFilePos& pos, const CMessageHeader::MessageStartChars& message_start);\n+bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CBlockIndex* pindex, const CMessageHeader::MessageStartChars& message_start);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043174483",
      "id" : 1043174483,
      "line" : 214,
      "node_id" : "PRRC_kwDOABII584-LZRT",
      "original_commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "original_line" : 214,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.h",
      "position" : 5,
      "pull_request_review_id" : 1209810566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043174483/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-08T10:14:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043174483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043370044"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043370044"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could it not happen in regtest or unit tests?",
      "commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "created_at" : "2022-12-08T13:45:35Z",
      "diff_hunk" : "@@ -3843,23 +3853,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             return;\n         }\n \n+        const CBlockIndex *pindex;\n+        bool is_above_blocktxn_depth;\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n             if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n                 LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n                 return;\n             }\n \n-            if (pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH) {\n-                CBlock block;\n-                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-                assert(ret);\n-\n-                SendBlockTransactions(pfrom, *peer, block, req);\n+            is_above_blocktxn_depth = pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH;\n+        }\n+        if (is_above_blocktxn_depth) {\n+            CBlock block;\n+            if (!ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus())) {\n+                LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043370044",
      "id" : 1043370044,
      "in_reply_to_id" : 1043171470,
      "line" : 3872,
      "node_id" : "PRRC_kwDOABII584-MJA8",
      "original_commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "original_line" : 3872,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 145,
      "pull_request_review_id" : 1210104773,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043370044/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-08T13:46:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043370044",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043386616"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043386616"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Not sure, but it seems fine to crash in tests if they violate assumptions",
      "commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "created_at" : "2022-12-08T14:01:02Z",
      "diff_hunk" : "@@ -3843,23 +3853,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             return;\n         }\n \n+        const CBlockIndex *pindex;\n+        bool is_above_blocktxn_depth;\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n             if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n                 LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n                 return;\n             }\n \n-            if (pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH) {\n-                CBlock block;\n-                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-                assert(ret);\n-\n-                SendBlockTransactions(pfrom, *peer, block, req);\n+            is_above_blocktxn_depth = pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH;\n+        }\n+        if (is_above_blocktxn_depth) {\n+            CBlock block;\n+            if (!ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus())) {\n+                LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043386616",
      "id" : 1043386616,
      "in_reply_to_id" : 1043171470,
      "line" : 3872,
      "node_id" : "PRRC_kwDOABII584-MND4",
      "original_commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "original_line" : 3872,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 145,
      "pull_request_review_id" : 1210128758,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043386616/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-08T14:01:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043386616",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043453779"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043453779"
         }
      },
      "author_association" : "MEMBER",
      "body" : "See `MIN_BLOCKS_TO_KEEP`, which is also enforced in regtest",
      "commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "created_at" : "2022-12-08T15:01:43Z",
      "diff_hunk" : "@@ -3843,23 +3853,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             return;\n         }\n \n+        const CBlockIndex *pindex;\n+        bool is_above_blocktxn_depth;\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n             if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n                 LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n                 return;\n             }\n \n-            if (pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH) {\n-                CBlock block;\n-                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-                assert(ret);\n-\n-                SendBlockTransactions(pfrom, *peer, block, req);\n+            is_above_blocktxn_depth = pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH;\n+        }\n+        if (is_above_blocktxn_depth) {\n+            CBlock block;\n+            if (!ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus())) {\n+                LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043453779",
      "id" : 1043453779,
      "in_reply_to_id" : 1043171470,
      "line" : 3872,
      "node_id" : "PRRC_kwDOABII584-MddT",
      "original_commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "original_line" : 3872,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 145,
      "pull_request_review_id" : 1210230749,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043453779/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-08T15:01:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1043453779",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Cool. Can someone add a \"needs benchmark\" label?",
      "created_at" : "2022-12-08T16:11:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1342960866",
      "id" : 1342960866,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585QC_Ti",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1342960866/reactions"
      },
      "updated_at" : "2022-12-08T16:11:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1342960866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/73197?v=4",
         "events_url" : "https://api.github.com/users/jamesob/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jamesob/followers",
         "following_url" : "https://api.github.com/users/jamesob/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jamesob/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jamesob",
         "id" : 73197,
         "login" : "jamesob",
         "node_id" : "MDQ6VXNlcjczMTk3",
         "organizations_url" : "https://api.github.com/users/jamesob/orgs",
         "received_events_url" : "https://api.github.com/users/jamesob/received_events",
         "repos_url" : "https://api.github.com/users/jamesob/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jamesob/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jamesob"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Can someone add a \"needs benchmark\" label?\r\n\r\nWhat kind of benchmark would be appropriate here? AFAICT message processing is done on a single thread, so this patch wouldn't speed up handling requests. It would free up other threads that are waiting on the lock as the message processing thread does lengthy disk IO.",
      "created_at" : "2022-12-08T17:14:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1343040568",
      "id" : 1343040568,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585QDSw4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1343040568/reactions"
      },
      "updated_at" : "2022-12-08T17:14:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1343040568",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I wrote a tool to allow benchmarking the affected code paths https://github.com/andrewtoth/spam_block_reqs. I ran it on block 768022 using 5000 requests for each of the four paths on both this branch and master. For example:\r\n```\r\ncargo run --release -- -r block-transactions -b 000000000000000000064b1c6e9606714fd4a96d6ff877e4a93b170d86361e28 -n 5000\r\n```\r\n\r\nI did not benchmark the `MSG_FILTERED_BLOCK` path because it isn't supported in `rust-bitcoin`, however there isn't anything in that path that requires taking the lock other than the shared code for the other paths.\r\n\r\nResults show no regression:\r\n| Request Type | master (cb32328d1b80d0ccd6eb9532bd8fe4e0a4de385e) | branch |\r\n| -------------------- |-------------------------------------------------------------------------------------|------------|\r\n| witness-block | 22.6s | 22.3s |\r\n| compact-block | 60.9s | 59.1s |\r\n| block-transactions | 58.5s | 59.0s |\r\n| legacy-block | 77.7s | 77.4s |\r\n\r\nHowever, while running the spam-blocks tool using a very high number of requests so it would not complete, I ran a benchmark with ApacheBench requesting 2000 headers from block 750k 1000 times on a single core using REST.\r\n```\r\nab -n 1000 -c 1 \"http://127.0.0.1:8332/rest/headers/0000000000000000000592a974b1b9f087cb77628bb4a097d5c2c11b3476a58e.bin?count=2000\"\r\n```\r\n\r\nThe mean response times for fetching headers while running the spam-blocks tool for each request-type is below:\r\n\r\n| Request Type | master (cb32328d1b80d0ccd6eb9532bd8fe4e0a4de385e) | branch |\r\n|-|-|-|\r\n| witness-block | 14ms | 1ms |\r\n| compact-block | 19ms | 1ms |\r\n| block-transactions | 19ms | 1ms |\r\n| legacy-block | 42ms | 1ms |\r\n\r\nSo it seems like this definitely improves responsiveness for any other threads that need to acquire a lock to `cs_main`.\r\n",
      "created_at" : "2022-12-19T03:47:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1357047817",
      "id" : 1357047817,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585Q4ugJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1357047817/reactions"
      },
      "updated_at" : "2022-12-20T03:04:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1357047817",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1051770260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1051770260"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Removed touching this file.",
      "commit_id" : "135e01faf5693655454e8cdbe0bcc3374b8491c6",
      "created_at" : "2022-12-19T03:49:38Z",
      "diff_hunk" : "@@ -211,7 +211,7 @@ void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune);\n /** Functions for disk access for blocks */\n bool ReadBlockFromDisk(CBlock& block, const FlatFilePos& pos, const Consensus::Params& consensusParams);\n bool ReadBlockFromDisk(CBlock& block, const CBlockIndex* pindex, const Consensus::Params& consensusParams);\n-bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const FlatFilePos& pos, const CMessageHeader::MessageStartChars& message_start);\n+bool ReadRawBlockFromDisk(std::vector<uint8_t>& block, const CBlockIndex* pindex, const CMessageHeader::MessageStartChars& message_start);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1051770260",
      "id" : 1051770260,
      "in_reply_to_id" : 1043174483,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-sL2U",
      "original_commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "original_line" : 214,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/node/blockstorage.h",
      "position" : null,
      "pull_request_review_id" : 1222237058,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1051770260/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-19T03:49:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1051770260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1051770627"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1051770627"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated this to keep the assert. Also changed it to take `FlatFilePos` in `ReadBlockFromDisk` so it doesn't have to reacquire the lock again after releasing it.",
      "commit_id" : "135e01faf5693655454e8cdbe0bcc3374b8491c6",
      "created_at" : "2022-12-19T03:50:50Z",
      "diff_hunk" : "@@ -3843,23 +3853,28 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             return;\n         }\n \n+        const CBlockIndex *pindex;\n+        bool is_above_blocktxn_depth;\n         {\n             LOCK(cs_main);\n \n-            const CBlockIndex* pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n+            pindex = m_chainman.m_blockman.LookupBlockIndex(req.blockhash);\n             if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n                 LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n                 return;\n             }\n \n-            if (pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH) {\n-                CBlock block;\n-                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-                assert(ret);\n-\n-                SendBlockTransactions(pfrom, *peer, block, req);\n+            is_above_blocktxn_depth = pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH;\n+        }\n+        if (is_above_blocktxn_depth) {\n+            CBlock block;\n+            if (!ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus())) {\n+                LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1051770627",
      "id" : 1051770627,
      "in_reply_to_id" : 1043171470,
      "line" : null,
      "node_id" : "PRRC_kwDOABII584-sL8D",
      "original_commit_id" : "351e5873ab80a3db8a84ac1d1e54730c6d96bb53",
      "original_line" : 3872,
      "original_position" : 145,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1222237467,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1051770627/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-12-19T03:50:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1051770627",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Moved all whitespace only scope changes to separate commit to make it easier to review.",
      "created_at" : "2022-12-19T14:30:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1357757407",
      "id" : 1357757407,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585Q7bvf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1357757407/reactions"
      },
      "updated_at" : "2022-12-19T14:30:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1357757407",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1120049535"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120049535"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What about this assertion? Couldn't `ReadBlockFromDisk` return false if the block is not on disk anymore?",
      "commit_id" : "b630e5dc16acd2a7a247f2c5b399bb5627e51f3a",
      "created_at" : "2023-02-28T13:16:42Z",
      "diff_hunk" : "@@ -3855,15 +3867,19 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH) {\n-                CBlock block;\n-                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-                assert(ret);\n-\n-                SendBlockTransactions(pfrom, *peer, block, req);\n-                return;\n+                block_pos = pindex->GetBlockPos();\n             }\n         }\n \n+        if (!block_pos.IsNull()) {\n+            CBlock block;\n+            bool ret = ReadBlockFromDisk(block, block_pos, m_chainparams.GetConsensus());\n+            assert(ret);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1120049535",
      "id" : 1120049535,
      "line" : 3877,
      "node_id" : "PRRC_kwDOABII585Cwpl_",
      "original_commit_id" : "b630e5dc16acd2a7a247f2c5b399bb5627e51f3a",
      "original_line" : 3877,
      "original_position" : 146,
      "original_start_line" : 3876,
      "path" : "src/net_processing.cpp",
      "position" : 146,
      "pull_request_review_id" : 1317559618,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120049535/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 3876,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-28T13:16:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120049535",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1120198609"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120198609"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "See https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1043171470. Blocks below `MAX_BLOCKTXN_DEPTH` can't be pruned, so we should retain the current behavior if this read fails.",
      "commit_id" : "b630e5dc16acd2a7a247f2c5b399bb5627e51f3a",
      "created_at" : "2023-02-28T14:55:52Z",
      "diff_hunk" : "@@ -3855,15 +3867,19 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH) {\n-                CBlock block;\n-                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-                assert(ret);\n-\n-                SendBlockTransactions(pfrom, *peer, block, req);\n-                return;\n+                block_pos = pindex->GetBlockPos();\n             }\n         }\n \n+        if (!block_pos.IsNull()) {\n+            CBlock block;\n+            bool ret = ReadBlockFromDisk(block, block_pos, m_chainparams.GetConsensus());\n+            assert(ret);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1120198609",
      "id" : 1120198609,
      "in_reply_to_id" : 1120049535,
      "line" : 3877,
      "node_id" : "PRRC_kwDOABII585CxN_R",
      "original_commit_id" : "b630e5dc16acd2a7a247f2c5b399bb5627e51f3a",
      "original_line" : 3877,
      "original_position" : 146,
      "original_start_line" : 3876,
      "path" : "src/net_processing.cpp",
      "position" : 146,
      "pull_request_review_id" : 1317803075,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120198609/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 3876,
      "start_side" : "RIGHT",
      "updated_at" : "2023-02-28T14:55:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1120198609",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-11T10:32:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1543747546",
      "id" : 1543747546,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585cA7fa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1543747546/reactions"
      },
      "updated_at" : "2023-05-11T10:32:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1543747546",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1283443148"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283443148"
         }
      },
      "author_association" : "MEMBER",
      "body" : "tiny nit: would be good to add a jump line here.",
      "commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "created_at" : "2023-08-03T16:25:37Z",
      "diff_hunk" : "@@ -2205,23 +2210,29 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1283443148",
      "id" : 1283443148,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mf8nM",
      "original_commit_id" : "3e93e6b75618bfbbe68b03bb14d4cf82583f93eb",
      "original_line" : 2296,
      "original_position" : 42,
      "original_start_line" : 2215,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1561461768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283443148/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-08-03T16:36:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283443148",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1283446866"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283446866"
         }
      },
      "author_association" : "MEMBER",
      "body" : "tiny nit: would be good to initialize the variable to nullptr and false.",
      "commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "created_at" : "2023-08-03T16:29:05Z",
      "diff_hunk" : "@@ -2172,16 +2172,20 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         }\n     }\n \n+    const CBlockIndex* pindex;\n+    const CBlockIndex* tip;\n+    bool can_direct_fetch;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1283446866",
      "id" : 1283446866,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Mf9hS",
      "original_commit_id" : "3e93e6b75618bfbbe68b03bb14d4cf82583f93eb",
      "original_line" : 2171,
      "original_position" : 6,
      "original_start_line" : 2175,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1561461768,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283446866/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-08-03T16:36:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1283446866",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-08-07T10:20:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1667592529",
      "id" : 1667592529,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585jZXFR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667592529/reactions"
      },
      "updated_at" : "2023-08-07T10:20:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1667592529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@furszy thank you for the review. Sorry I forgot to address your nits on this rebase. Will do them if I have to rebase again.",
      "created_at" : "2023-08-07T14:56:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1668030656",
      "id" : 1668030656,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585jbCDA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1668030656/reactions"
      },
      "updated_at" : "2023-08-07T14:56:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1668030656",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1371400906"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371400906"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Last commit: Not sure. This looks like a p2p protocol change?",
      "commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "created_at" : "2023-10-25T08:58:20Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1371400906",
      "id" : 1371400906,
      "line" : 2315,
      "node_id" : "PRRC_kwDOABII585RverK",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 66,
      "pull_request_review_id" : 1696754182,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371400906/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-25T08:58:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1371400906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1373992000"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1373992000"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Last commit: Not sure. This looks like a p2p protocol change?\r\n\r\nFor the local node, this change means that the node will continue functional instead of crashing. \r\nWhich I think is good. The node shouldn't crash because it received a p2p message that cannot answer.\r\n\r\nFor the remote peer, this means that the connection will remain active for ~10 more minutes until the block request times out and the peer closes the socket.\r\nWhich isn't the best, but it is how we currently handle unanswered block requests.\r\n\r\nAre you seeing something else?",
      "commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "created_at" : "2023-10-27T01:53:32Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1373992000",
      "id" : 1373992000,
      "in_reply_to_id" : 1371400906,
      "line" : 2315,
      "node_id" : "PRRC_kwDOABII585R5XRA",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 66,
      "pull_request_review_id" : 1700883678,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1373992000/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-27T01:55:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1373992000",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1374222977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374222977"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> For the local node, this change means that the node will continue functional instead of crashing.\r\n\r\nThe node wouldn't crash here, because cs_main was being held, so no pruning could happen in-between.\r\n\r\nMy point is that it would be good to explain behavior changes, especially if they are p2p protocol changes. Hiding this under a \"reduce cs_main\" commit, which appears like a refactor doesn't seem ideal.",
      "commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "created_at" : "2023-10-27T08:11:30Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1374222977",
      "id" : 1374222977,
      "in_reply_to_id" : 1371400906,
      "line" : 2315,
      "node_id" : "PRRC_kwDOABII585R6PqB",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 66,
      "pull_request_review_id" : 1701227329,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374222977/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-27T08:11:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374222977",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1374609852"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374609852"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> > For the local node, this change means that the node will continue functional instead of crashing.\r\n> \r\n> The node wouldn't crash here, because cs_main was being held, so no pruning could happen in-between.\r\n\r\nCould also be that the requested block data is not on disk or not accessible for the time this happen. Something external to our software.\r\n\r\nStill, removing the external cause from the equation. The only diff here is that we allow a tiny extra pruning window in-between the index lookup and the block data read.\r\nBecause, we currently return early if the block is pruned [here](https://github.com/bitcoin/bitcoin/blob/e789b30b2565c8bdbf48a45f2c5a7b92e5d61d25/src/net_processing.cpp#L2285), without logging anything. And after this PR, we could either return early on the no logging line (if the block is already pruned) or log \"Cannot load block from disk. It was likely pruned before we could read it\" if the block was pruned right after the index lookup.\r\n\r\nBut this is all internal to the node, I'm not seeing any p2p protocol change.\r\n\r\nMaybe @andrewtoth could take this to the PR description?",
      "commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "created_at" : "2023-10-27T13:45:24Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1374609852",
      "id" : 1374609852,
      "in_reply_to_id" : 1371400906,
      "line" : 2315,
      "node_id" : "PRRC_kwDOABII585R7uG8",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 66,
      "pull_request_review_id" : 1701839105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374609852/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-27T13:46:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374609852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1374627260"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374627260"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> > > For the local node, this change means that the node will continue functional instead of crashing.\r\n> > \r\n> > \r\n> > The node wouldn't crash here, because cs_main was being held, so no pruning could happen in-between.\r\n> \r\n> Could also be that the requested block data is not on disk or not accessible for the time this happen. Something external to our software.\r\n\r\nIf your datadir was corrupted from outside, I think a crash is acceptable. You likely wouldn't be able to re-org or otherwise stay in consensus anyway.\r\n\r\n> I'm not seeing any p2p protocol change.\r\n\r\nMaybe \"protocol change\" was the wrong word? I guess \"behavior change\" may be better?",
      "commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "created_at" : "2023-10-27T13:59:34Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1374627260",
      "id" : 1374627260,
      "in_reply_to_id" : 1371400906,
      "line" : 2315,
      "node_id" : "PRRC_kwDOABII585R7yW8",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 66,
      "pull_request_review_id" : 1701867384,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374627260/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-27T13:59:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374627260",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1374669201"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374669201"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> If your datadir was corrupted from outside, I think a crash is acceptable. You likely wouldn't be able to re-org or otherwise stay in consensus anyway.\r\n\r\nYou know; if the block in conflict is old enough, then the node should be \"mostly\" ok. The problem would be on new peers performing IBD, which would disconnect from the node for the lack of response. \r\n\r\n> > I'm not seeing any p2p protocol change.\r\n> \r\n> Maybe \"protocol change\" was the wrong word? I guess \"behavior change\" may be better?\r\n\r\nSounds good.\r\n",
      "commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "created_at" : "2023-10-27T14:32:11Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1374669201",
      "id" : 1374669201,
      "in_reply_to_id" : 1371400906,
      "line" : 2315,
      "node_id" : "PRRC_kwDOABII585R78mR",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 66,
      "pull_request_review_id" : 1701942538,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374669201/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-27T14:32:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1374669201",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1375490358"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375490358"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "If a block is pruned before we lock cs_main, this function returns early. This behavior is not changed in this PR.\r\n\r\nIf a block is not pruned before we lock cs_main, previously we are guaranteed to send the block to the peer.\r\n\r\nThis PR changes this to have a short window after unlocking cs_main but before opening the fd that if the block is pruned and unlinked from another thread, then this function also returns early.\r\n\r\nI think we all agree this is not a p2p protocol change? I also believe I documented this behavior change in the PR description and in the debug logs.\r\n",
      "commit_id" : "e9d22d609661a43cfd91af3036dbe04c1bc7db78",
      "created_at" : "2023-10-29T18:22:11Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1375490358",
      "id" : 1375490358,
      "in_reply_to_id" : 1371400906,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585R_FE2",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1703017102,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375490358/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-29T18:39:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375490358",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1375492179"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375492179"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "So the other behavior change is that if we fail to read a block for reasons other than being pruned, previously the node would crash. Now we will log the failure and continue.\r\n\r\n> If your datadir was corrupted from outside, I think a crash is acceptable. You likely wouldn't be able to re-org or otherwise stay in consensus anyway.\r\n\r\nI suppose if the read fails, we can retake cs_main and check if the block was pruned out from under us. If so, we log and continue, otherwise we can keep crashing on an assert? Do we really want to keep crashing here if we fail to read a block? I'm not sure.",
      "commit_id" : "e9d22d609661a43cfd91af3036dbe04c1bc7db78",
      "created_at" : "2023-10-29T18:35:17Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1375492179",
      "id" : 1375492179,
      "in_reply_to_id" : 1371400906,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585R_FhT",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1703018674,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375492179/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-29T18:35:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375492179",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1375494479"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375494479"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> if the read fails, we can retake cs_main and check if the block was pruned out from under us. If so, we log and continue, otherwise we can keep crashing on an assert\r\n\r\n@maflcko I updated the code to do this. Thus I don't think there is any behavior change.\r\nIf the block requested is pruned, we return early before and after this PR. If the block requested is unpruned and we fail to read it, we will crash before and after this PR.",
      "commit_id" : "e9d22d609661a43cfd91af3036dbe04c1bc7db78",
      "created_at" : "2023-10-29T18:53:19Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1375494479",
      "id" : 1375494479,
      "in_reply_to_id" : 1371400906,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585R_GFP",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1703020711,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375494479/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-29T18:53:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375494479",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1375804985"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375804985"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah sorry for being unclear. I am not asking to add back the assert. Just adding the comment from https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1375490358 to the commit description would be great.\r\n\r\nHowever, I wonder what the point is of forcing the remote peer into a 10 minute delay+disconnect. Why not disconnect immediately? Also, if the remote has set a permission flag to avoid the disconnect (not sure if this exists), I wonder what the correct behavior would be.",
      "commit_id" : "fdb6346ece9dfbd884522984ab0dad9c299017cc",
      "created_at" : "2023-10-30T08:05:10Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1375804985",
      "id" : 1375804985,
      "in_reply_to_id" : 1371400906,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585SAR45",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1703470786,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375804985/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-30T08:05:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1375804985",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1381776328"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381776328"
         }
      },
      "author_association" : "MEMBER",
      "body" : ">  I am not asking to add back the assert.\r\n\r\n+1 on not re-adding the assert.\r\n\r\n> However, I wonder what the point is of forcing the remote peer into a 10 minute delay+disconnect. Why not disconnect immediately? Also, if the remote has set a permission flag to avoid the disconnect (not sure if this exists), I wonder what the correct behavior would be.\r\n\r\nIf the remote peer has a permission flag to avoid the disconnection, maybe it could respond with a `NOTFOUND` message? Same as we do with tx getdata requests.\r\nBut probably better to discuss this in a follow-up or in an issue?",
      "commit_id" : "fdb6346ece9dfbd884522984ab0dad9c299017cc",
      "created_at" : "2023-11-03T14:31:37Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1381776328",
      "id" : 1381776328,
      "in_reply_to_id" : 1371400906,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585SXDvI",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2315,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : null,
      "pull_request_review_id" : 1712806590,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381776328/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-03T14:32:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1381776328",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5377650?v=4",
         "events_url" : "https://api.github.com/users/furszy/events{/privacy}",
         "followers_url" : "https://api.github.com/users/furszy/followers",
         "following_url" : "https://api.github.com/users/furszy/following{/other_user}",
         "gists_url" : "https://api.github.com/users/furszy/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/furszy",
         "id" : 5377650,
         "login" : "furszy",
         "node_id" : "MDQ6VXNlcjUzNzc2NTA=",
         "organizations_url" : "https://api.github.com/users/furszy/orgs",
         "received_events_url" : "https://api.github.com/users/furszy/received_events",
         "repos_url" : "https://api.github.com/users/furszy/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/furszy/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/furszy/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/furszy"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-11-28T12:44:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#issuecomment-1829770074",
      "id" : 1829770074,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26326",
      "node_id" : "IC_kwDOABII585tEBNa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1829770074/reactions"
      },
      "updated_at" : "2023-11-28T12:44:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1829770074",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1408566843"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408566843"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated to log and return instead of hitting an assert. Also updated the commit description to clarify this behavior.\r\n\r\n> However, I wonder what the point is of forcing the remote peer into a 10 minute delay+disconnect. Why not disconnect immediately?\r\n\r\nWe could, but I think this is very unlikely to occur in practice. We already disconnect above on line 2293 if we are past the NODE_NETWORK_LIMITED_MIN_BLOCKS threshold, which is MIN_BLOCKS_TO_KEEP (288) so we won't prune below that anyways.",
      "commit_id" : "1027339f636fc8b7cd6a7f79c5c2afb591fbeaee",
      "created_at" : "2023-11-29T00:12:32Z",
      "diff_hunk" : "@@ -2284,23 +2289,30 @@ void PeerManagerImpl::ProcessGetBlockData(CNode& pfrom, Peer& peer, const CInv&\n         if (!(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             return;\n         }\n+        can_direct_fetch = CanDirectFetch();\n+        block_pos = pindex->GetBlockPos();\n+    }\n+\n+    const CNetMsgMaker msgMaker(pfrom.GetCommonVersion());\n     std::shared_ptr<const CBlock> pblock;\n     if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n         pblock = a_recent_block;\n     } else if (inv.IsMsgWitnessBlk()) {\n         // Fast-path: in this case it is possible to serve the block directly from disk,\n         // as the network format matches the format on disk\n         std::vector<uint8_t> block_data;\n-        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, pindex->GetBlockPos())) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadRawBlockFromDisk(block_data, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;\n         }\n         m_connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, Span{block_data}));\n         // Don't set pblock as we've sent the block\n     } else {\n         // Send block from disk\n         std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n-        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, *pindex)) {\n-            assert(!\"cannot load block from disk\");\n+        if (!m_chainman.m_blockman.ReadBlockFromDisk(*pblockRead, block_pos)) {\n+            LogPrint(BCLog::NET, \"Cannot load block from disk. It was likely pruned before we could read it.\\n\");\n+            return;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1408566843",
      "id" : 1408566843,
      "in_reply_to_id" : 1371400906,
      "line" : 2323,
      "node_id" : "PRRC_kwDOABII585T9QY7",
      "original_commit_id" : "fae1fd61801a3a604ef92ad25a0c82433b10ba6c",
      "original_line" : 2323,
      "original_position" : 66,
      "original_start_line" : null,
      "path" : "src/net_processing.cpp",
      "position" : 99,
      "pull_request_review_id" : 1754172483,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408566843/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-29T00:12:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1408566843",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/237213?v=4",
         "events_url" : "https://api.github.com/users/andrewtoth/events{/privacy}",
         "followers_url" : "https://api.github.com/users/andrewtoth/followers",
         "following_url" : "https://api.github.com/users/andrewtoth/following{/other_user}",
         "gists_url" : "https://api.github.com/users/andrewtoth/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/andrewtoth",
         "id" : 237213,
         "login" : "andrewtoth",
         "node_id" : "MDQ6VXNlcjIzNzIxMw==",
         "organizations_url" : "https://api.github.com/users/andrewtoth/orgs",
         "received_events_url" : "https://api.github.com/users/andrewtoth/received_events",
         "repos_url" : "https://api.github.com/users/andrewtoth/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/andrewtoth/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/andrewtoth/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/andrewtoth"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1429274748"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1429274748"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Worth adding a comment here, it's not immediate that this assertion would never fail because `MAX_BLOCKTXN_DEPTH < MIN_BLOCKS_TO_KEEP`.",
      "commit_id" : "1027339f636fc8b7cd6a7f79c5c2afb591fbeaee",
      "created_at" : "2023-12-17T21:10:30Z",
      "diff_hunk" : "@@ -4054,15 +4067,19 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n             }\n \n             if (pindex->nHeight >= m_chainman.ActiveChain().Height() - MAX_BLOCKTXN_DEPTH) {\n-                CBlock block;\n-                const bool ret{m_chainman.m_blockman.ReadBlockFromDisk(block, *pindex)};\n-                assert(ret);\n-\n-                SendBlockTransactions(pfrom, *peer, block, req);\n-                return;\n+                block_pos = pindex->GetBlockPos();\n             }\n         }\n \n+        if (!block_pos.IsNull()) {\n+            CBlock block;\n+            const bool ret{m_chainman.m_blockman.ReadBlockFromDisk(block, block_pos)};\n+            assert(ret);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26326#discussion_r1429274748",
      "id" : 1429274748,
      "line" : 4077,
      "node_id" : "PRRC_kwDOABII585VMQB8",
      "original_commit_id" : "1027339f636fc8b7cd6a7f79c5c2afb591fbeaee",
      "original_line" : 4077,
      "original_position" : 146,
      "original_start_line" : 4074,
      "path" : "src/net_processing.cpp",
      "position" : 146,
      "pull_request_review_id" : 1785519393,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26326",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1429274748/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 4074,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-17T21:42:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1429274748",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   }
]

[
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r974957888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974957888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Let's specify what exactly it protects us from?\r\n1. Them not giving us anything\r\n2. Them giving us a lot of fake addrs (I assume our addrman will bucket them together and we won't have to go through every single of them, according to `GetNewBucket`)",
      "commit_id" : "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "created_at" : "2022-09-20T07:00:11Z",
      "diff_hunk" : "@@ -1544,6 +1544,25 @@ void CConnman::ThreadAddressSeed()\n             seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for(size_t addr_pos = 0; addr_pos < 10; addr_pos++) {\n+                if(addr_pos >= seed_addrs.size()) {\n+                    break;\n+                }\n+                AddAddrFetch(seed_addrs.at(addr_pos).ToString());\n+            }\n+            // Give AddrFetch peers some time to provide us with addresses\n+            // before adding the fixed seeds to AddrMan\n+            if (!interruptNet.sleep_for(std::chrono::minutes(2))) {\n+                return;\n+            }\n+            // As an additional precaution against malicious fixed seeds, add all",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r974957888",
      "id" : 974957888,
      "line" : 1564,
      "node_id" : "PRRC_kwDOABII5846HK1A",
      "original_commit_id" : "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "original_line" : 1564,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 21,
      "pull_request_review_id" : 1113243242,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974957888/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-20T07:00:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974957888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r974959786"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974959786"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nits according to developer notes:\r\n1. ++xyz is better than xyz++ :P\r\n2. one space right after `for` and `if`",
      "commit_id" : "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "created_at" : "2022-09-20T07:02:34Z",
      "diff_hunk" : "@@ -1544,6 +1544,25 @@ void CConnman::ThreadAddressSeed()\n             seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for(size_t addr_pos = 0; addr_pos < 10; addr_pos++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r974959786",
      "id" : 974959786,
      "line" : 1553,
      "node_id" : "PRRC_kwDOABII5846HLSq",
      "original_commit_id" : "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "original_line" : 1553,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 10,
      "pull_request_review_id" : 1113246051,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974959786/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-20T07:02:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/974959786",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\nThe motivation makes perfect sense and it's indeed an improvement.",
      "created_at" : "2022-09-20T07:03:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1251927533",
      "id" : 1251927533,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585KnuXt",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1251927533/reactions"
      },
      "updated_at" : "2022-09-20T07:03:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1251927533",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK, will review",
      "created_at" : "2022-09-20T09:50:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1252111532",
      "id" : 1252111532,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585KobSs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1252111532/reactions"
      },
      "updated_at" : "2022-09-20T09:50:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1252111532",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r975556612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975556612"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, and 3. them just not being not online. I changed the comment to reflect this better.",
      "commit_id" : "9b09fc79cdc02378dac0e73bb22bbee8b06ec354",
      "created_at" : "2022-09-20T16:00:27Z",
      "diff_hunk" : "@@ -1544,6 +1544,25 @@ void CConnman::ThreadAddressSeed()\n             seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for(size_t addr_pos = 0; addr_pos < 10; addr_pos++) {\n+                if(addr_pos >= seed_addrs.size()) {\n+                    break;\n+                }\n+                AddAddrFetch(seed_addrs.at(addr_pos).ToString());\n+            }\n+            // Give AddrFetch peers some time to provide us with addresses\n+            // before adding the fixed seeds to AddrMan\n+            if (!interruptNet.sleep_for(std::chrono::minutes(2))) {\n+                return;\n+            }\n+            // As an additional precaution against malicious fixed seeds, add all",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r975556612",
      "id" : 975556612,
      "in_reply_to_id" : 974957888,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5846JdAE",
      "original_commit_id" : "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "original_line" : 1564,
      "original_position" : 21,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1114101955,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975556612/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-20T16:00:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975556612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r975556829"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975556829"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Fixed,  thanks!",
      "commit_id" : "9b09fc79cdc02378dac0e73bb22bbee8b06ec354",
      "created_at" : "2022-09-20T16:00:39Z",
      "diff_hunk" : "@@ -1544,6 +1544,25 @@ void CConnman::ThreadAddressSeed()\n             seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for(size_t addr_pos = 0; addr_pos < 10; addr_pos++) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r975556829",
      "id" : 975556829,
      "in_reply_to_id" : 974959786,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5846JdDd",
      "original_commit_id" : "3c74b6cb2532894c03011d3a7f402eb32634d99d",
      "original_line" : 1553,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1114102294,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975556829/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-20T16:00:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/975556829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976268930"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976268930"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can you just inline `GetBoolArg` here? You do update this variable later, but i think the updated version is not used at all?",
      "commit_id" : "9b09fc79cdc02378dac0e73bb22bbee8b06ec354",
      "created_at" : "2022-09-21T09:18:16Z",
      "diff_hunk" : "@@ -1502,6 +1503,57 @@ void CConnman::ThreadAddressSeed()\n     else{\n         LogPrintf(\"DNS seeding disabled\\n\");\n     }\n+    // Fixed seeds\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+\n+    if (!add_fixed_seeds) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976268930",
      "id" : 976268930,
      "line" : 1509,
      "node_id" : "PRRC_kwDOABII5846MK6C",
      "original_commit_id" : "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "original_line" : 1509,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 15,
      "pull_request_review_id" : 1115074705,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976268930/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-21T09:18:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976268930",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976269612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976269612"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: remove space before `addrman`",
      "commit_id" : "9b09fc79cdc02378dac0e73bb22bbee8b06ec354",
      "created_at" : "2022-09-21T09:18:56Z",
      "diff_hunk" : "@@ -1502,6 +1503,57 @@ void CConnman::ThreadAddressSeed()\n     else{\n         LogPrintf(\"DNS seeding disabled\\n\");\n     }\n+    // Fixed seeds\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+\n+    if (!add_fixed_seeds) {\n+        LogPrintf(\"Fixed seeds are disabled\\n\");\n+        return;\n+    }\n+    while ( addrman.size() == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976269612",
      "id" : 976269612,
      "line" : 1513,
      "node_id" : "PRRC_kwDOABII5846MLEs",
      "original_commit_id" : "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "original_line" : 1513,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 19,
      "pull_request_review_id" : 1115075669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976269612/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-21T09:18:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976269612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976275010"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976275010"
         }
      },
      "author_association" : "MEMBER",
      "body" : "(Friendly tip, one can avoid nitty formatting issues by running clang format on commits before pushing, see `/contrib/devtools/clang-format-diff.py` for details.)",
      "commit_id" : "9b09fc79cdc02378dac0e73bb22bbee8b06ec354",
      "created_at" : "2022-09-21T09:23:53Z",
      "diff_hunk" : "@@ -1502,6 +1503,57 @@ void CConnman::ThreadAddressSeed()\n     else{\n         LogPrintf(\"DNS seeding disabled\\n\");\n     }\n+    // Fixed seeds\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+\n+    if (!add_fixed_seeds) {\n+        LogPrintf(\"Fixed seeds are disabled\\n\");\n+        return;\n+    }\n+    while ( addrman.size() == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976275010",
      "id" : 976275010,
      "in_reply_to_id" : 976269612,
      "line" : 1513,
      "node_id" : "PRRC_kwDOABII5846MMZC",
      "original_commit_id" : "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "original_line" : 1513,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 19,
      "pull_request_review_id" : 1115083348,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976275010/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-21T09:23:53Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976275010",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976928808"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976928808"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good catch! It was needed in `ThreadOpenConnections`, but no longer after the move.",
      "commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "created_at" : "2022-09-21T19:50:54Z",
      "diff_hunk" : "@@ -1502,6 +1503,57 @@ void CConnman::ThreadAddressSeed()\n     else{\n         LogPrintf(\"DNS seeding disabled\\n\");\n     }\n+    // Fixed seeds\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+\n+    if (!add_fixed_seeds) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976928808",
      "id" : 976928808,
      "in_reply_to_id" : 976268930,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5846OsAo",
      "original_commit_id" : "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "original_line" : 1509,
      "original_position" : 15,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1116010640,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976928808/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-21T19:50:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976928808",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976929544"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976929544"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done, thanks!",
      "commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "created_at" : "2022-09-21T19:51:55Z",
      "diff_hunk" : "@@ -1502,6 +1503,57 @@ void CConnman::ThreadAddressSeed()\n     else{\n         LogPrintf(\"DNS seeding disabled\\n\");\n     }\n+    // Fixed seeds\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+\n+    if (!add_fixed_seeds) {\n+        LogPrintf(\"Fixed seeds are disabled\\n\");\n+        return;\n+    }\n+    while ( addrman.size() == 0) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r976929544",
      "id" : 976929544,
      "in_reply_to_id" : 976269612,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5846OsMI",
      "original_commit_id" : "3c370ba61527c5c99afb045b12ef9bccdf85cefa",
      "original_line" : 1513,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1116011775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976929544/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-21T19:51:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/976929544",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[9b09fc7 ](https://github.com/bitcoin/bitcoin/commit/9b09fc79cdc02378dac0e73bb22bbee8b06ec354)to e438878:\r\nAddressed review feedback, small doc change.",
      "created_at" : "2022-09-21T19:52:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1254157937",
      "id" : 1254157937,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585KwO5x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1254157937/reactions"
      },
      "updated_at" : "2022-09-21T19:52:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1254157937",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-09-22T14:03:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1255072246",
      "id" : 1255072246,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585KzuH2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255072246/reactions"
      },
      "updated_at" : "2022-09-22T14:03:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255072246",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/26114).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [brunoerg](https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1255072246), [Rspigler](https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1256825836), [dergoegge](https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1602291372), [jonatack](https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1622588498), [darosior](https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1775115427) |\n| Stale ACK | [naumenkogs](https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1689753481) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2022-09-23T03:29:57Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1255764588",
      "id" : 1255764588,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585K2XJs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255764588/reactions"
      },
      "updated_at" : "2023-10-23T12:46:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255764588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK e4388787870ac2b42903cde47152e4735eb1be86",
      "created_at" : "2022-09-23T08:13:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1255918210",
      "id" : 1255918210,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585K28qC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255918210/reactions"
      },
      "updated_at" : "2022-09-23T08:13:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1255918210",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r978406018"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978406018"
         }
      },
      "author_association" : "MEMBER",
      "body" : "5989fc1bf861aa2777f2515ddc9281569d2d87b4 naming nit, mind making this variable name more specific so that grepping on it returns clearer results? for example:\r\n\r\n```diff\r\n@@ -1393,8 +1393,8 @@ void CConnman::ThreadAddressSeed()\r\n-    const bool dnsseed{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};\r\n-    if (dnsseed) {\r\n+    const bool dns_seeds_requested{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};\r\n+    if (dns_seeds_requested) {\r\n@@ -1521,7 +1521,7 @@ void CConnman::ThreadAddressSeed()\r\n-        if (!add_fixed_seeds_now && !dnsseed) {\r\n+        if (!add_fixed_seeds_now && !dns_seeds_requested) {\r\n```\r\n\r\n```bash\r\n$ git grep dns_seeds_requested\r\nsrc/net.cpp:1396:    const bool dns_seeds_requested{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};\r\nsrc/net.cpp:1397:    if (dns_seeds_requested) {\r\nsrc/net.cpp:1524:        if (!add_fixed_seeds_now && !dns_seeds_requested) {\r\n```\r\n",
      "commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "created_at" : "2022-09-23T08:45:28Z",
      "diff_hunk" : "@@ -1388,114 +1388,189 @@ void CConnman::WakeMessageHandler()\n     condMsgProc.notify_one();\n }\n \n-void CConnman::ThreadDNSAddressSeed()\n+void CConnman::ThreadAddressSeed()\n {\n-    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_DNS_SEED);\n+    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_ADDR_SEED);\n     FastRandomContext rng;\n-    std::vector<std::string> seeds = Params().DNSSeeds();\n-    Shuffle(seeds.begin(), seeds.end(), rng);\n-    int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n-    int found = 0;\n-\n-    if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n-        // When -forcednsseed is provided, query all.\n-        seeds_right_now = seeds.size();\n-    } else if (addrman.size() == 0) {\n-        // If we have no known peers, query all.\n-        // This will occur on the first run, or if peers.dat has been\n-        // deleted.\n-        seeds_right_now = seeds.size();\n-    }\n-\n-    // goal: only query DNS seed if address need is acute\n-    // * If we have a reasonable number of peers in addrman, spend\n-    //   some time trying them first. This improves user privacy by\n-    //   creating fewer identifying DNS requests, reduces trust by\n-    //   giving seeds less influence on the network topology, and\n-    //   reduces traffic to the seeds.\n-    // * When querying DNS seeds query a few at once, this ensures\n-    //   that we don't give DNS seeds the ability to eclipse nodes\n-    //   that query them.\n-    // * If we continue having problems, eventually query all the\n-    //   DNS seeds, and if that fails too, also try the fixed seeds.\n-    //   (done in ThreadOpenConnections)\n-    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n-\n-    for (const std::string& seed : seeds) {\n-        if (seeds_right_now == 0) {\n-            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n-\n-            if (addrman.size() > 0) {\n-                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n-                std::chrono::seconds to_wait = seeds_wait_time;\n-                while (to_wait.count() > 0) {\n-                    // if sleeping for the MANY_PEERS interval, wake up\n-                    // early to see if we have enough peers and can stop\n-                    // this thread entirely freeing up its resources\n-                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n-                    if (!interruptNet.sleep_for(w)) return;\n-                    to_wait -= w;\n-\n-                    int nRelevant = 0;\n-                    {\n-                        LOCK(m_nodes_mutex);\n-                        for (const CNode* pnode : m_nodes) {\n-                            if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+    auto start = GetTime<std::chrono::microseconds>();\n+    const bool dnsseed{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r978406018",
      "id" : 978406018,
      "line" : 1396,
      "node_id" : "PRRC_kwDOABII5846UUqC",
      "original_commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "original_line" : 1396,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 60,
      "pull_request_review_id" : 1118112669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978406018/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-23T09:14:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978406018",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r978421894"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978421894"
         }
      },
      "author_association" : "MEMBER",
      "body" : " fc1a3719b0cd733985b1e6d9234819823c3bfab8 It looks like this thread safety annotation added here can be correspondingly removed from `ThreadOpenConnections()`, as it no longer accesses `m_added_nodes`.\r\n\r\n```diff\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -888,7 +888,7 @@ private:\r\n-    void ThreadOpenConnections(std::vector<std::string> connect) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_added_nodes_mutex, !m_nodes_mutex);\r\n+    void ThreadOpenConnections(std::vector<std::string> connect) EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_nodes_mutex);\r\n```\r\n",
      "commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "created_at" : "2022-09-23T09:04:44Z",
      "diff_hunk" : "@@ -939,7 +939,7 @@ class CConnman\n     void SocketHandlerListening(const Sock::EventsPerSock& events_per_sock);\n \n     void ThreadSocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\n-    void ThreadDNSAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_nodes_mutex);\n+    void ThreadAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_added_nodes_mutex, !m_nodes_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r978421894",
      "id" : 978421894,
      "line" : 942,
      "node_id" : "PRRC_kwDOABII5846UYiG",
      "original_commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "original_line" : 942,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 5,
      "pull_request_review_id" : 1118112669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978421894/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-23T09:14:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978421894",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r978426592"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978426592"
         }
      },
      "author_association" : "MEMBER",
      "body" : " e4388787870ac2b42903cde47152e4735eb1be8 it might be helpful to explain/document the magic value of 10, similar to the commit message",
      "commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "created_at" : "2022-09-23T09:10:52Z",
      "diff_hunk" : "@@ -1388,114 +1388,189 @@ void CConnman::WakeMessageHandler()\n     condMsgProc.notify_one();\n }\n \n-void CConnman::ThreadDNSAddressSeed()\n+void CConnman::ThreadAddressSeed()\n {\n-    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_DNS_SEED);\n+    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_ADDR_SEED);\n     FastRandomContext rng;\n-    std::vector<std::string> seeds = Params().DNSSeeds();\n-    Shuffle(seeds.begin(), seeds.end(), rng);\n-    int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n-    int found = 0;\n-\n-    if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n-        // When -forcednsseed is provided, query all.\n-        seeds_right_now = seeds.size();\n-    } else if (addrman.size() == 0) {\n-        // If we have no known peers, query all.\n-        // This will occur on the first run, or if peers.dat has been\n-        // deleted.\n-        seeds_right_now = seeds.size();\n-    }\n-\n-    // goal: only query DNS seed if address need is acute\n-    // * If we have a reasonable number of peers in addrman, spend\n-    //   some time trying them first. This improves user privacy by\n-    //   creating fewer identifying DNS requests, reduces trust by\n-    //   giving seeds less influence on the network topology, and\n-    //   reduces traffic to the seeds.\n-    // * When querying DNS seeds query a few at once, this ensures\n-    //   that we don't give DNS seeds the ability to eclipse nodes\n-    //   that query them.\n-    // * If we continue having problems, eventually query all the\n-    //   DNS seeds, and if that fails too, also try the fixed seeds.\n-    //   (done in ThreadOpenConnections)\n-    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n-\n-    for (const std::string& seed : seeds) {\n-        if (seeds_right_now == 0) {\n-            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n-\n-            if (addrman.size() > 0) {\n-                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n-                std::chrono::seconds to_wait = seeds_wait_time;\n-                while (to_wait.count() > 0) {\n-                    // if sleeping for the MANY_PEERS interval, wake up\n-                    // early to see if we have enough peers and can stop\n-                    // this thread entirely freeing up its resources\n-                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n-                    if (!interruptNet.sleep_for(w)) return;\n-                    to_wait -= w;\n-\n-                    int nRelevant = 0;\n-                    {\n-                        LOCK(m_nodes_mutex);\n-                        for (const CNode* pnode : m_nodes) {\n-                            if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+    auto start = GetTime<std::chrono::microseconds>();\n+    const bool dnsseed{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};\n+    if (dnsseed) {\n+        std::vector<std::string> seeds = Params().DNSSeeds();\n+        Shuffle(seeds.begin(), seeds.end(), rng);\n+        int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n+        int found = 0;\n+\n+        if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n+            // When -forcednsseed is provided, query all.\n+            seeds_right_now = seeds.size();\n+        } else if (addrman.size() == 0) {\n+            // If we have no known peers, query all.\n+            // This will occur on the first run, or if peers.dat has been\n+            // deleted.\n+            seeds_right_now = seeds.size();\n+        }\n+\n+        // goal: only query DNS seed if address need is acute\n+        // * If we have a reasonable number of peers in addrman, spend\n+        //   some time trying them first. This improves user privacy by\n+        //   creating fewer identifying DNS requests, reduces trust by\n+        //   giving seeds less influence on the network topology, and\n+        //   reduces traffic to the seeds.\n+        // * When querying DNS seeds query a few at once, this ensures\n+        //   that we don't give DNS seeds the ability to eclipse nodes\n+        //   that query them.\n+        // * If we continue having problems, eventually query all the\n+        //   DNS seeds, and if that fails too, also try the fixed seeds.\n+        //   (done in ThreadOpenConnections)\n+        const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n+        for (const std::string& seed : seeds) {\n+            if (seeds_right_now == 0) {\n+                seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n+\n+                if (addrman.size() > 0) {\n+                    LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+                    std::chrono::seconds to_wait = seeds_wait_time;\n+                    while (to_wait.count() > 0) {\n+                        // if sleeping for the MANY_PEERS interval, wake up\n+                        // early to see if we have enough peers and can stop\n+                        // this thread entirely freeing up its resources\n+                        std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n+                        if (!interruptNet.sleep_for(w)) return;\n+                        to_wait -= w;\n+\n+                        int nRelevant = 0;\n+                        {\n+                            LOCK(m_nodes_mutex);\n+                            for (const CNode* pnode : m_nodes) {\n+                                if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+                            }\n                         }\n-                    }\n-                    if (nRelevant >= 2) {\n-                        if (found > 0) {\n-                            LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n-                            LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n-                        } else {\n-                            LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                        if (nRelevant >= 2) {\n+                            if (found > 0) {\n+                                LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+                                LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n+                            } else {\n+                                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                            }\n+                            return;\n                         }\n-                        return;\n                     }\n                 }\n             }\n-        }\n \n-        if (interruptNet) return;\n+            if (interruptNet) return;\n \n-        // hold off on querying seeds if P2P network deactivated\n-        if (!fNetworkActive) {\n-            LogPrintf(\"Waiting for network to be reactivated before querying DNS seeds.\\n\");\n-            do {\n-                if (!interruptNet.sleep_for(std::chrono::seconds{1})) return;\n-            } while (!fNetworkActive);\n+            // hold off on querying seeds if P2P network deactivated\n+            if (!fNetworkActive) {\n+                LogPrintf(\"Waiting for network to be reactivated before querying DNS seeds.\\n\");\n+                do {\n+                    if (!interruptNet.sleep_for(std::chrono::seconds{1})) return;\n+                } while (!fNetworkActive);\n+            }\n+\n+            LogPrintf(\"Loading addresses from DNS seed %s\\n\", seed);\n+            if (HaveNameProxy()) {\n+                AddAddrFetch(seed);\n+            } else {\n+                std::vector<CNetAddr> vIPs;\n+                std::vector<CAddress> vAdd;\n+                ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n+                std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\n+                CNetAddr resolveSource;\n+                if (!resolveSource.SetInternal(host)) {\n+                    continue;\n+                }\n+                unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n+                if (LookupHost(host, vIPs, nMaxIPs, true)) {\n+                    for (const CNetAddr& ip : vIPs) {\n+                        CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n+                        addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\n+                        vAdd.push_back(addr);\n+                        found++;\n+                    }\n+                    addrman.Add(vAdd, resolveSource);\n+                } else {\n+                    // We now avoid directly using results from DNS Seeds which do not support service bit filtering,\n+                    // instead using them as a addrfetch to get nodes with our desired service bits.\n+                    AddAddrFetch(seed);\n+                }\n+            }\n+            --seeds_right_now;\n         }\n+        LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+    } else {\n+        LogPrintf(\"DNS seeding disabled\\n\");\n+    }\n \n-        LogPrintf(\"Loading addresses from DNS seed %s\\n\", seed);\n-        if (HaveNameProxy()) {\n-            AddAddrFetch(seed);\n-        } else {\n-            std::vector<CNetAddr> vIPs;\n-            std::vector<CAddress> vAdd;\n-            ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n-            std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\n-            CNetAddr resolveSource;\n-            if (!resolveSource.SetInternal(host)) {\n-                continue;\n+    // Process fixed seeds\n+    if (!gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS)) {\n+        LogPrintf(\"Fixed seeds are disabled\\n\");\n+        return;\n+    }\n+    while (addrman.size() == 0) {\n+        // When the node starts with an empty peers.dat, there are a few other sources of peers before\n+        // we fallback on to fixed seeds: -dnsseed, -seednode, -addnode\n+        // If none of those are available, we fallback on to fixed seeds immediately, else we allow\n+        // 60 seconds for any of those sources to populate addrman.\n+        bool add_fixed_seeds_now = false;\n+        // It is cheapest to check if enough time has passed first.\n+        if (GetTime<std::chrono::seconds>() > start + std::chrono::minutes{1}) {\n+            add_fixed_seeds_now = true;\n+            LogPrintf(\"Adding fixed seeds as 60 seconds have passed and addrman is empty\\n\");\n+        }\n+\n+        // Checking !dnsseed is cheaper before locking 2 mutexes.\n+        if (!add_fixed_seeds_now && !dnsseed) {\n+            LOCK2(m_addr_fetches_mutex, m_added_nodes_mutex);\n+            if (m_addr_fetches.empty() && m_added_nodes.empty()) {\n+                add_fixed_seeds_now = true;\n+                LogPrintf(\"Adding fixed seeds as -dnsseed=0 (or IPv4/IPv6 connections are disabled via -onlynet), -addnode is not provided and all -seednode(s) attempted\\n\");\n             }\n-            unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n-            if (LookupHost(host, vIPs, nMaxIPs, true)) {\n-                for (const CNetAddr& ip : vIPs) {\n-                    CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\n-                    vAdd.push_back(addr);\n-                    found++;\n+        }\n+\n+        if (add_fixed_seeds_now) {\n+            std::vector<CAddress> seed_addrs{ConvertSeeds(Params().FixedSeeds())};\n+            // We will not make outgoing connections to peers that are unreachable\n+            // (e.g. because of -onlynet configuration).\n+            // Therefore, we do not add them to addrman in the first place.\n+            // Note that if you change -onlynet setting from one network to another,\n+            // peers.dat will contain only peers of unreachable networks and\n+            // manual intervention will be needed (either delete peers.dat after\n+            // configuration change or manually add some reachable peer using addnode),\n+            // see <https://github.com/bitcoin/bitcoin/issues/26035> for details.\n+            seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n+                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n+                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r978426592",
      "id" : 978426592,
      "line" : 1551,
      "node_id" : "PRRC_kwDOABII5846UZrg",
      "original_commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "original_line" : 1551,
      "original_position" : 249,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 249,
      "pull_request_review_id" : 1118112669,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978426592/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-09-23T09:14:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/978426592",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-09-24T01:18:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1256825836",
      "id" : 1256825836,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585K6aPs",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1256825836/reactions"
      },
      "updated_at" : "2022-09-24T01:18:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1256825836",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/24482484?v=4",
         "events_url" : "https://api.github.com/users/Rspigler/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Rspigler/followers",
         "following_url" : "https://api.github.com/users/Rspigler/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Rspigler/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Rspigler",
         "id" : 24482484,
         "login" : "Rspigler",
         "node_id" : "MDQ6VXNlcjI0NDgyNDg0",
         "organizations_url" : "https://api.github.com/users/Rspigler/orgs",
         "received_events_url" : "https://api.github.com/users/Rspigler/received_events",
         "repos_url" : "https://api.github.com/users/Rspigler/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Rspigler/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Rspigler"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r980109087"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109087"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "renamed to `dns_seeds_requested` as suggested",
      "commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "created_at" : "2022-09-26T14:30:20Z",
      "diff_hunk" : "@@ -1388,114 +1388,189 @@ void CConnman::WakeMessageHandler()\n     condMsgProc.notify_one();\n }\n \n-void CConnman::ThreadDNSAddressSeed()\n+void CConnman::ThreadAddressSeed()\n {\n-    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_DNS_SEED);\n+    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_ADDR_SEED);\n     FastRandomContext rng;\n-    std::vector<std::string> seeds = Params().DNSSeeds();\n-    Shuffle(seeds.begin(), seeds.end(), rng);\n-    int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n-    int found = 0;\n-\n-    if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n-        // When -forcednsseed is provided, query all.\n-        seeds_right_now = seeds.size();\n-    } else if (addrman.size() == 0) {\n-        // If we have no known peers, query all.\n-        // This will occur on the first run, or if peers.dat has been\n-        // deleted.\n-        seeds_right_now = seeds.size();\n-    }\n-\n-    // goal: only query DNS seed if address need is acute\n-    // * If we have a reasonable number of peers in addrman, spend\n-    //   some time trying them first. This improves user privacy by\n-    //   creating fewer identifying DNS requests, reduces trust by\n-    //   giving seeds less influence on the network topology, and\n-    //   reduces traffic to the seeds.\n-    // * When querying DNS seeds query a few at once, this ensures\n-    //   that we don't give DNS seeds the ability to eclipse nodes\n-    //   that query them.\n-    // * If we continue having problems, eventually query all the\n-    //   DNS seeds, and if that fails too, also try the fixed seeds.\n-    //   (done in ThreadOpenConnections)\n-    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n-\n-    for (const std::string& seed : seeds) {\n-        if (seeds_right_now == 0) {\n-            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n-\n-            if (addrman.size() > 0) {\n-                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n-                std::chrono::seconds to_wait = seeds_wait_time;\n-                while (to_wait.count() > 0) {\n-                    // if sleeping for the MANY_PEERS interval, wake up\n-                    // early to see if we have enough peers and can stop\n-                    // this thread entirely freeing up its resources\n-                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n-                    if (!interruptNet.sleep_for(w)) return;\n-                    to_wait -= w;\n-\n-                    int nRelevant = 0;\n-                    {\n-                        LOCK(m_nodes_mutex);\n-                        for (const CNode* pnode : m_nodes) {\n-                            if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+    auto start = GetTime<std::chrono::microseconds>();\n+    const bool dnsseed{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r980109087",
      "id" : 980109087,
      "in_reply_to_id" : 978406018,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5846a0cf",
      "original_commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "original_line" : 1396,
      "original_position" : 60,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1120340172,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109087/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2022-09-26T14:30:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109087",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r980109357"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109357"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done, thanks!",
      "commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "created_at" : "2022-09-26T14:30:33Z",
      "diff_hunk" : "@@ -939,7 +939,7 @@ class CConnman\n     void SocketHandlerListening(const Sock::EventsPerSock& events_per_sock);\n \n     void ThreadSocketHandler() EXCLUSIVE_LOCKS_REQUIRED(!m_total_bytes_sent_mutex, !mutexMsgProc);\n-    void ThreadDNSAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_nodes_mutex);\n+    void ThreadAddressSeed() EXCLUSIVE_LOCKS_REQUIRED(!m_addr_fetches_mutex, !m_added_nodes_mutex, !m_nodes_mutex);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r980109357",
      "id" : 980109357,
      "in_reply_to_id" : 978421894,
      "line" : 972,
      "node_id" : "PRRC_kwDOABII5846a0gt",
      "original_commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "original_line" : 972,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/net.h",
      "position" : 14,
      "pull_request_review_id" : 1120340567,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109357/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2022-09-26T14:30:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109357",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r980109523"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109523"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Done.",
      "commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "created_at" : "2022-09-26T14:30:43Z",
      "diff_hunk" : "@@ -1388,114 +1388,189 @@ void CConnman::WakeMessageHandler()\n     condMsgProc.notify_one();\n }\n \n-void CConnman::ThreadDNSAddressSeed()\n+void CConnman::ThreadAddressSeed()\n {\n-    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_DNS_SEED);\n+    SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_ADDR_SEED);\n     FastRandomContext rng;\n-    std::vector<std::string> seeds = Params().DNSSeeds();\n-    Shuffle(seeds.begin(), seeds.end(), rng);\n-    int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n-    int found = 0;\n-\n-    if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n-        // When -forcednsseed is provided, query all.\n-        seeds_right_now = seeds.size();\n-    } else if (addrman.size() == 0) {\n-        // If we have no known peers, query all.\n-        // This will occur on the first run, or if peers.dat has been\n-        // deleted.\n-        seeds_right_now = seeds.size();\n-    }\n-\n-    // goal: only query DNS seed if address need is acute\n-    // * If we have a reasonable number of peers in addrman, spend\n-    //   some time trying them first. This improves user privacy by\n-    //   creating fewer identifying DNS requests, reduces trust by\n-    //   giving seeds less influence on the network topology, and\n-    //   reduces traffic to the seeds.\n-    // * When querying DNS seeds query a few at once, this ensures\n-    //   that we don't give DNS seeds the ability to eclipse nodes\n-    //   that query them.\n-    // * If we continue having problems, eventually query all the\n-    //   DNS seeds, and if that fails too, also try the fixed seeds.\n-    //   (done in ThreadOpenConnections)\n-    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n-\n-    for (const std::string& seed : seeds) {\n-        if (seeds_right_now == 0) {\n-            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n-\n-            if (addrman.size() > 0) {\n-                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n-                std::chrono::seconds to_wait = seeds_wait_time;\n-                while (to_wait.count() > 0) {\n-                    // if sleeping for the MANY_PEERS interval, wake up\n-                    // early to see if we have enough peers and can stop\n-                    // this thread entirely freeing up its resources\n-                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n-                    if (!interruptNet.sleep_for(w)) return;\n-                    to_wait -= w;\n-\n-                    int nRelevant = 0;\n-                    {\n-                        LOCK(m_nodes_mutex);\n-                        for (const CNode* pnode : m_nodes) {\n-                            if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+    auto start = GetTime<std::chrono::microseconds>();\n+    const bool dnsseed{gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)};\n+    if (dnsseed) {\n+        std::vector<std::string> seeds = Params().DNSSeeds();\n+        Shuffle(seeds.begin(), seeds.end(), rng);\n+        int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n+        int found = 0;\n+\n+        if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n+            // When -forcednsseed is provided, query all.\n+            seeds_right_now = seeds.size();\n+        } else if (addrman.size() == 0) {\n+            // If we have no known peers, query all.\n+            // This will occur on the first run, or if peers.dat has been\n+            // deleted.\n+            seeds_right_now = seeds.size();\n+        }\n+\n+        // goal: only query DNS seed if address need is acute\n+        // * If we have a reasonable number of peers in addrman, spend\n+        //   some time trying them first. This improves user privacy by\n+        //   creating fewer identifying DNS requests, reduces trust by\n+        //   giving seeds less influence on the network topology, and\n+        //   reduces traffic to the seeds.\n+        // * When querying DNS seeds query a few at once, this ensures\n+        //   that we don't give DNS seeds the ability to eclipse nodes\n+        //   that query them.\n+        // * If we continue having problems, eventually query all the\n+        //   DNS seeds, and if that fails too, also try the fixed seeds.\n+        //   (done in ThreadOpenConnections)\n+        const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n+\n+        for (const std::string& seed : seeds) {\n+            if (seeds_right_now == 0) {\n+                seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n+\n+                if (addrman.size() > 0) {\n+                    LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n+                    std::chrono::seconds to_wait = seeds_wait_time;\n+                    while (to_wait.count() > 0) {\n+                        // if sleeping for the MANY_PEERS interval, wake up\n+                        // early to see if we have enough peers and can stop\n+                        // this thread entirely freeing up its resources\n+                        std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n+                        if (!interruptNet.sleep_for(w)) return;\n+                        to_wait -= w;\n+\n+                        int nRelevant = 0;\n+                        {\n+                            LOCK(m_nodes_mutex);\n+                            for (const CNode* pnode : m_nodes) {\n+                                if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+                            }\n                         }\n-                    }\n-                    if (nRelevant >= 2) {\n-                        if (found > 0) {\n-                            LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n-                            LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n-                        } else {\n-                            LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                        if (nRelevant >= 2) {\n+                            if (found > 0) {\n+                                LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+                                LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\n+                            } else {\n+                                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\n+                            }\n+                            return;\n                         }\n-                        return;\n                     }\n                 }\n             }\n-        }\n \n-        if (interruptNet) return;\n+            if (interruptNet) return;\n \n-        // hold off on querying seeds if P2P network deactivated\n-        if (!fNetworkActive) {\n-            LogPrintf(\"Waiting for network to be reactivated before querying DNS seeds.\\n\");\n-            do {\n-                if (!interruptNet.sleep_for(std::chrono::seconds{1})) return;\n-            } while (!fNetworkActive);\n+            // hold off on querying seeds if P2P network deactivated\n+            if (!fNetworkActive) {\n+                LogPrintf(\"Waiting for network to be reactivated before querying DNS seeds.\\n\");\n+                do {\n+                    if (!interruptNet.sleep_for(std::chrono::seconds{1})) return;\n+                } while (!fNetworkActive);\n+            }\n+\n+            LogPrintf(\"Loading addresses from DNS seed %s\\n\", seed);\n+            if (HaveNameProxy()) {\n+                AddAddrFetch(seed);\n+            } else {\n+                std::vector<CNetAddr> vIPs;\n+                std::vector<CAddress> vAdd;\n+                ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n+                std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\n+                CNetAddr resolveSource;\n+                if (!resolveSource.SetInternal(host)) {\n+                    continue;\n+                }\n+                unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n+                if (LookupHost(host, vIPs, nMaxIPs, true)) {\n+                    for (const CNetAddr& ip : vIPs) {\n+                        CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n+                        addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\n+                        vAdd.push_back(addr);\n+                        found++;\n+                    }\n+                    addrman.Add(vAdd, resolveSource);\n+                } else {\n+                    // We now avoid directly using results from DNS Seeds which do not support service bit filtering,\n+                    // instead using them as a addrfetch to get nodes with our desired service bits.\n+                    AddAddrFetch(seed);\n+                }\n+            }\n+            --seeds_right_now;\n         }\n+        LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n+    } else {\n+        LogPrintf(\"DNS seeding disabled\\n\");\n+    }\n \n-        LogPrintf(\"Loading addresses from DNS seed %s\\n\", seed);\n-        if (HaveNameProxy()) {\n-            AddAddrFetch(seed);\n-        } else {\n-            std::vector<CNetAddr> vIPs;\n-            std::vector<CAddress> vAdd;\n-            ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n-            std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\n-            CNetAddr resolveSource;\n-            if (!resolveSource.SetInternal(host)) {\n-                continue;\n+    // Process fixed seeds\n+    if (!gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS)) {\n+        LogPrintf(\"Fixed seeds are disabled\\n\");\n+        return;\n+    }\n+    while (addrman.size() == 0) {\n+        // When the node starts with an empty peers.dat, there are a few other sources of peers before\n+        // we fallback on to fixed seeds: -dnsseed, -seednode, -addnode\n+        // If none of those are available, we fallback on to fixed seeds immediately, else we allow\n+        // 60 seconds for any of those sources to populate addrman.\n+        bool add_fixed_seeds_now = false;\n+        // It is cheapest to check if enough time has passed first.\n+        if (GetTime<std::chrono::seconds>() > start + std::chrono::minutes{1}) {\n+            add_fixed_seeds_now = true;\n+            LogPrintf(\"Adding fixed seeds as 60 seconds have passed and addrman is empty\\n\");\n+        }\n+\n+        // Checking !dnsseed is cheaper before locking 2 mutexes.\n+        if (!add_fixed_seeds_now && !dnsseed) {\n+            LOCK2(m_addr_fetches_mutex, m_added_nodes_mutex);\n+            if (m_addr_fetches.empty() && m_added_nodes.empty()) {\n+                add_fixed_seeds_now = true;\n+                LogPrintf(\"Adding fixed seeds as -dnsseed=0 (or IPv4/IPv6 connections are disabled via -onlynet), -addnode is not provided and all -seednode(s) attempted\\n\");\n             }\n-            unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\n-            if (LookupHost(host, vIPs, nMaxIPs, true)) {\n-                for (const CNetAddr& ip : vIPs) {\n-                    CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\n-                    addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\n-                    vAdd.push_back(addr);\n-                    found++;\n+        }\n+\n+        if (add_fixed_seeds_now) {\n+            std::vector<CAddress> seed_addrs{ConvertSeeds(Params().FixedSeeds())};\n+            // We will not make outgoing connections to peers that are unreachable\n+            // (e.g. because of -onlynet configuration).\n+            // Therefore, we do not add them to addrman in the first place.\n+            // Note that if you change -onlynet setting from one network to another,\n+            // peers.dat will contain only peers of unreachable networks and\n+            // manual intervention will be needed (either delete peers.dat after\n+            // configuration change or manually add some reachable peer using addnode),\n+            // see <https://github.com/bitcoin/bitcoin/issues/26035> for details.\n+            seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n+                                            [](const CAddress& addr) { return !IsReachable(addr); }),\n+                             seed_addrs.end());\n+            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+            // Make AddrFetch connections to fixed seeds first. This reduces the\n+            // load on the fixed seeds that would otherwise be serving blocks for\n+            // many new peers requiring IBD.\n+            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+            for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r980109523",
      "id" : 980109523,
      "in_reply_to_id" : 978426592,
      "line" : null,
      "node_id" : "PRRC_kwDOABII5846a0jT",
      "original_commit_id" : "e4388787870ac2b42903cde47152e4735eb1be86",
      "original_line" : 1565,
      "original_position" : 249,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1120340854,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109523/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2022-09-26T14:30:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/980109523",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[e438878 ](https://github.com/bitcoin/bitcoin/commit/e4388787870ac2b42903cde47152e4735eb1be86)to [7e95f8f](https://github.com/bitcoin/bitcoin/commit/7e95f8f6bb0e06b0676db3da05b2a55a011c9668):\r\n\r\nAddressed review feedback by @jonatack (thanks!).\r\n\r\nOne additional refactor I thought about but wasn't sure if it is worth it, is moving most of the logic currently inside `ThreadAddressSeed` into their own functions (`ProcessDNSSeeds()` and `ProcessFixedSeeds()`).",
      "created_at" : "2022-09-26T14:35:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1258137351",
      "id" : 1258137351,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585K_acH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1258137351/reactions"
      },
      "updated_at" : "2022-09-26T14:35:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1258137351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "utACK 7e95f8f6bb0e06b0676db3da05b2a55a011c9668",
      "created_at" : "2022-10-03T08:55:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1265134894",
      "id" : 1265134894,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585LaG0u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265134894/reactions"
      },
      "updated_at" : "2022-10-03T08:55:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265134894",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> One additional refactor I thought about but wasn't sure if it is worth it, is moving most of the logic currently inside ThreadAddressSeed into their own functions (ProcessDNSSeeds() and ProcessFixedSeeds()).\r\n\r\nI would very much appreciate that. As I started reviewing this PR, the first thing I did (before reading this comment actually) was see if I could refactor this function into something a bit more easily digestible just as  a PoC. Below the diff for a very rough suggestion which probably suffers from incompleteness, poor naming, etc. Compiles fine but I do get some warnings re `warning: calling function 'AddAddrFetch' requires negative capability '!m_addr_fetches_mutex' [-Wthread-safety-analysis]` that I haven't resolved in this PoC.\r\n\r\n<details>\r\n<summary>git diff</summary>\r\n\r\n```diff\r\ndiff --git a/src/net.cpp b/src/net.cpp\r\nindex 925334db1..f4d475315 100644\r\n--- a/src/net.cpp\r\n+++ b/src/net.cpp\r\n@@ -1388,6 +1388,132 @@ void CConnman::WakeMessageHandler()\r\n     condMsgProc.notify_one();\r\n }\r\n \r\n+void CConnman::WaitForDNSSeeding(int already_found)\r\n+{\r\n+    const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\r\n+    LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\r\n+    std::chrono::seconds to_wait = seeds_wait_time;\r\n+    while (to_wait.count() > 0) {\r\n+        // if sleeping for the MANY_PEERS interval, wake up\r\n+        // early to see if we have enough peers and can stop\r\n+        // this thread entirely freeing up its resources\r\n+        std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\r\n+        if (!interruptNet.sleep_for(w)) return;\r\n+        to_wait -= w;\r\n+\r\n+        int nRelevant = 0;\r\n+        {\r\n+            LOCK(m_nodes_mutex);\r\n+            for (const CNode* pnode : m_nodes) {\r\n+                if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\r\n+            }\r\n+        }\r\n+        if (nRelevant >= 2) {\r\n+            if (already_found > 0) {\r\n+                LogPrintf(\"%d addresses found from DNS seeds\\n\", already_found);\r\n+                LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\r\n+            } else {\r\n+                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\r\n+            }\r\n+            return;\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+bool CConnman::AddFixedSeeds()\r\n+{\r\n+    std::vector<CAddress> seed_addrs{ConvertSeeds(Params().FixedSeeds())};\r\n+    // We will not make outgoing connections to peers that are unreachable\r\n+    // (e.g. because of -onlynet configuration).\r\n+    // Therefore, we do not add them to addrman in the first place.\r\n+    // Note that if you change -onlynet setting from one network to another,\r\n+    // peers.dat will contain only peers of unreachable networks and\r\n+    // manual intervention will be needed (either delete peers.dat after\r\n+    // configuration change or manually add some reachable peer using addnode),\r\n+    // see <https://github.com/bitcoin/bitcoin/issues/26035> for details.\r\n+    seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\r\n+                                    [](const CAddress& addr) { return !IsReachable(addr); }),\r\n+                        seed_addrs.end());\r\n+    Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\r\n+\r\n+    // Make AddrFetch connections to fixed seeds first. This reduces the\r\n+    // load on the fixed seeds that would otherwise be serving blocks for\r\n+    // many new peers requiring IBD. Try this with multiple fixed seeds for\r\n+    // a better diversity of received addrs and because some may be offline.\r\n+    LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\r\n+    for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {\r\n+        if (addr_pos >= seed_addrs.size()) {\r\n+            break;\r\n+        }\r\n+        AddAddrFetch(seed_addrs.at(addr_pos).ToString());\r\n+    }\r\n+    // Give AddrFetch peers some time to provide us with addresses\r\n+    // before adding the fixed seeds to AddrMan\r\n+    if (!interruptNet.sleep_for(std::chrono::minutes(2))) {\r\n+        return false;\r\n+    }\r\n+    // The fixed seeds queried in the previous steps might have been offline,\r\n+    // failed to send us any addresses or sent us fake ones. Therefore,\r\n+    // we now add all reachable fixed seeds to AddrMan as a fallback.\r\n+    CNetAddr local;\r\n+    local.SetInternal(\"fixedseeds\");\r\n+    addrman.Add(seed_addrs, local);\r\n+    LogPrintf(\"Added %d fixed seeds from reachable networks.\\n\", seed_addrs.size());\r\n+    return true;\r\n+}\r\n+\r\n+bool CConnman::ShouldAddFixedSeedsNow(std::chrono::microseconds start, bool dns_seeds_requested)\r\n+{\r\n+    // When the node starts with an empty peers.dat, there are a few other sources of peers before\r\n+    // we fallback on to fixed seeds: -dnsseed, -seednode, -addnode\r\n+    // If none of those are available, we fallback on to fixed seeds immediately, else we allow\r\n+    // 60 seconds for any of those sources to populate addrman.\r\n+    // It is cheapest to check if enough time has passed first.\r\n+    if (GetTime<std::chrono::seconds>() > start + std::chrono::minutes{1}) {\r\n+        LogPrintf(\"Adding fixed seeds as 60 seconds have passed and addrman is empty\\n\");\r\n+        return true;\r\n+    }\r\n+\r\n+    // Checking !dnsseed is cheaper before locking 2 mutexes.\r\n+    if (!dns_seeds_requested) {\r\n+        LOCK2(m_addr_fetches_mutex, m_added_nodes_mutex);\r\n+        if (m_addr_fetches.empty() && m_added_nodes.empty()) {\r\n+            LogPrintf(\"Adding fixed seeds as -dnsseed=0 (or IPv4/IPv6 connections are disabled via -onlynet), -addnode is not provided and all -seednode(s) attempted\\n\");\r\n+            return true;\r\n+        }\r\n+    }\r\n+    return false;\r\n+}\r\n+\r\n+int CConnman::AddAddressesFromSeed(const std::string& seed, FastRandomContext& rng)\r\n+{\r\n+    std::vector<CNetAddr> vIPs;\r\n+    std::vector<CAddress> vAdd;\r\n+    ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\r\n+    std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\r\n+    CNetAddr resolveSource;\r\n+    if (!resolveSource.SetInternal(host)) {\r\n+        return 0;\r\n+    }\r\n+    unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\r\n+    int found{0};\r\n+    if (LookupHost(host, vIPs, nMaxIPs, true)) {\r\n+        for (const CNetAddr& ip : vIPs) {\r\n+            CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\r\n+            addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\r\n+            vAdd.push_back(addr);\r\n+            found++;\r\n+        }\r\n+        addrman.Add(vAdd, resolveSource);\r\n+    } else {\r\n+        // We now avoid directly using results from DNS Seeds which do not support service bit filtering,\r\n+        // instead using them as a addrfetch to get nodes with our desired service bits.\r\n+        AddAddrFetch(seed);\r\n+    }\r\n+\r\n+    return found;\r\n+}\r\n+\r\n void CConnman::ThreadAddressSeed()\r\n {\r\n     SetSyscallSandboxPolicy(SyscallSandboxPolicy::INITIALIZATION_ADDR_SEED);\r\n@@ -1422,40 +1548,13 @@ void CConnman::ThreadAddressSeed()\r\n         // * If we continue having problems, eventually query all the\r\n         //   DNS seeds, and if that fails too, also try the fixed seeds.\r\n         //   (done in ThreadOpenConnections)\r\n-        const std::chrono::seconds seeds_wait_time = (addrman.size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\r\n \r\n         for (const std::string& seed : seeds) {\r\n             if (seeds_right_now == 0) {\r\n                 seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\r\n \r\n                 if (addrman.size() > 0) {\r\n-                    LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\r\n-                    std::chrono::seconds to_wait = seeds_wait_time;\r\n-                    while (to_wait.count() > 0) {\r\n-                        // if sleeping for the MANY_PEERS interval, wake up\r\n-                        // early to see if we have enough peers and can stop\r\n-                        // this thread entirely freeing up its resources\r\n-                        std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\r\n-                        if (!interruptNet.sleep_for(w)) return;\r\n-                        to_wait -= w;\r\n-\r\n-                        int nRelevant = 0;\r\n-                        {\r\n-                            LOCK(m_nodes_mutex);\r\n-                            for (const CNode* pnode : m_nodes) {\r\n-                                if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\r\n-                            }\r\n-                        }\r\n-                        if (nRelevant >= 2) {\r\n-                            if (found > 0) {\r\n-                                LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\r\n-                                LogPrintf(\"P2P peers available. Finished DNS seeding.\\n\");\r\n-                            } else {\r\n-                                LogPrintf(\"P2P peers available. Skipped DNS seeding.\\n\");\r\n-                            }\r\n-                            return;\r\n-                        }\r\n-                    }\r\n+                    WaitForDNSSeeding(found);\r\n                 }\r\n             }\r\n \r\n@@ -1473,28 +1572,7 @@ void CConnman::ThreadAddressSeed()\r\n             if (HaveNameProxy()) {\r\n                 AddAddrFetch(seed);\r\n             } else {\r\n-                std::vector<CNetAddr> vIPs;\r\n-                std::vector<CAddress> vAdd;\r\n-                ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\r\n-                std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\r\n-                CNetAddr resolveSource;\r\n-                if (!resolveSource.SetInternal(host)) {\r\n-                    continue;\r\n-                }\r\n-                unsigned int nMaxIPs = 256; // Limits number of IPs learned from a DNS seed\r\n-                if (LookupHost(host, vIPs, nMaxIPs, true)) {\r\n-                    for (const CNetAddr& ip : vIPs) {\r\n-                        CAddress addr = CAddress(CService(ip, Params().GetDefaultPort()), requiredServiceBits);\r\n-                        addr.nTime = rng.rand_uniform_delay(Now<NodeSeconds>() - 3 * 24h, -4 * 24h); // use a random age between 3 and 7 days old\r\n-                        vAdd.push_back(addr);\r\n-                        found++;\r\n-                    }\r\n-                    addrman.Add(vAdd, resolveSource);\r\n-                } else {\r\n-                    // We now avoid directly using results from DNS Seeds which do not support service bit filtering,\r\n-                    // instead using them as a addrfetch to get nodes with our desired service bits.\r\n-                    AddAddrFetch(seed);\r\n-                }\r\n+                found += AddAddressesFromSeed(seed, rng);\r\n             }\r\n             --seeds_right_now;\r\n         }\r\n@@ -1509,65 +1587,11 @@ void CConnman::ThreadAddressSeed()\r\n         return;\r\n     }\r\n     while (addrman.size() == 0) {\r\n-        // When the node starts with an empty peers.dat, there are a few other sources of peers before\r\n-        // we fallback on to fixed seeds: -dnsseed, -seednode, -addnode\r\n-        // If none of those are available, we fallback on to fixed seeds immediately, else we allow\r\n-        // 60 seconds for any of those sources to populate addrman.\r\n-        bool add_fixed_seeds_now = false;\r\n-        // It is cheapest to check if enough time has passed first.\r\n-        if (GetTime<std::chrono::seconds>() > start + std::chrono::minutes{1}) {\r\n-            add_fixed_seeds_now = true;\r\n-            LogPrintf(\"Adding fixed seeds as 60 seconds have passed and addrman is empty\\n\");\r\n-        }\r\n-\r\n-        // Checking !dnsseed is cheaper before locking 2 mutexes.\r\n-        if (!add_fixed_seeds_now && !dns_seeds_requested) {\r\n-            LOCK2(m_addr_fetches_mutex, m_added_nodes_mutex);\r\n-            if (m_addr_fetches.empty() && m_added_nodes.empty()) {\r\n-                add_fixed_seeds_now = true;\r\n-                LogPrintf(\"Adding fixed seeds as -dnsseed=0 (or IPv4/IPv6 connections are disabled via -onlynet), -addnode is not provided and all -seednode(s) attempted\\n\");\r\n-            }\r\n-        }\r\n+        auto add_fixed_seeds_now{ShouldAddFixedSeedsNow(start, dns_seeds_requested)};\r\n \r\n         if (add_fixed_seeds_now) {\r\n-            std::vector<CAddress> seed_addrs{ConvertSeeds(Params().FixedSeeds())};\r\n-            // We will not make outgoing connections to peers that are unreachable\r\n-            // (e.g. because of -onlynet configuration).\r\n-            // Therefore, we do not add them to addrman in the first place.\r\n-            // Note that if you change -onlynet setting from one network to another,\r\n-            // peers.dat will contain only peers of unreachable networks and\r\n-            // manual intervention will be needed (either delete peers.dat after\r\n-            // configuration change or manually add some reachable peer using addnode),\r\n-            // see <https://github.com/bitcoin/bitcoin/issues/26035> for details.\r\n-            seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\r\n-                                            [](const CAddress& addr) { return !IsReachable(addr); }),\r\n-                             seed_addrs.end());\r\n-            Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\r\n-\r\n-            // Make AddrFetch connections to fixed seeds first. This reduces the\r\n-            // load on the fixed seeds that would otherwise be serving blocks for\r\n-            // many new peers requiring IBD. Try this with multiple fixed seeds for\r\n-            // a better diversity of received addrs and because some may be offline.\r\n-            LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\r\n-            for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {\r\n-                if (addr_pos >= seed_addrs.size()) {\r\n-                    break;\r\n-                }\r\n-                AddAddrFetch(seed_addrs.at(addr_pos).ToString());\r\n-            }\r\n-            // Give AddrFetch peers some time to provide us with addresses\r\n-            // before adding the fixed seeds to AddrMan\r\n-            if (!interruptNet.sleep_for(std::chrono::minutes(2))) {\r\n-                return;\r\n-            }\r\n-            // The fixed seeds queried in the previous steps might have been offline,\r\n-            // failed to send us any addresses or sent us fake ones. Therefore,\r\n-            // we now add all reachable fixed seeds to AddrMan as a fallback.\r\n-            CNetAddr local;\r\n-            local.SetInternal(\"fixedseeds\");\r\n-            addrman.Add(seed_addrs, local);\r\n-            LogPrintf(\"Added %d fixed seeds from reachable networks.\\n\", seed_addrs.size());\r\n-            break;\r\n+            if (AddFixedSeeds()) break;\r\n+            return;  // interrupted\r\n         }\r\n         if (!interruptNet.sleep_for(std::chrono::milliseconds(500)))\r\n             return;\r\ndiff --git a/src/net.h b/src/net.h\r\nindex 1a92392fd..1fec113af 100644\r\n--- a/src/net.h\r\n+++ b/src/net.h\r\n@@ -694,6 +694,12 @@ public:\r\n         bool m_i2p_accept_incoming;\r\n     };\r\n \r\n+    void WaitForDNSSeeding(int already_found);\r\n+    int AddAddressesFromSeed(const std::string& seed, FastRandomContext& rng);\r\n+    bool ShouldAddFixedSeedsNow(std::chrono::microseconds start, bool dns_seeds_requested);\r\n+    bool AddFixedSeeds();\r\n+\r\n+\r\n     void Init(const Options& connOptions) EXCLUSIVE_LOCKS_REQUIRED(!m_added_nodes_mutex, !m_total_bytes_sent_mutex)\r\n     {\r\n         AssertLockNotHeld(m_total_bytes_sent_mutex);\r\n```\r\n</details>",
      "created_at" : "2022-10-05T17:00:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1268694465",
      "id" : 1268694465,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585Lnr3B",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1268694465/reactions"
      },
      "updated_at" : "2022-10-05T17:00:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1268694465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/69010457?v=4",
         "events_url" : "https://api.github.com/users/stickies-v/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stickies-v/followers",
         "following_url" : "https://api.github.com/users/stickies-v/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stickies-v/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stickies-v",
         "id" : 69010457,
         "login" : "stickies-v",
         "node_id" : "MDQ6VXNlcjY5MDEwNDU3",
         "organizations_url" : "https://api.github.com/users/stickies-v/orgs",
         "received_events_url" : "https://api.github.com/users/stickies-v/received_events",
         "repos_url" : "https://api.github.com/users/stickies-v/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stickies-v/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stickies-v/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stickies-v"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : ">One additional refactor I thought about but wasn't sure if it is worth it, is moving most of the logic currently inside ThreadAddressSeed \r\n> I would very much appreciate that. As I started reviewing this PR, the first thing I did (before reading this comment actually) was see if I could refactor this function into something a bit more easily digestible just as a PoC. (...)\r\n\r\nAwesome, I'll get to that soon! \r\n",
      "created_at" : "2022-10-12T23:21:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1276831278",
      "id" : 1276831278,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585MGuYu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276831278/reactions"
      },
      "updated_at" : "2022-10-12T23:21:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1276831278",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "While implementing and testing the `ThreadAddressSeed` code organization changes, I ran into a small issue/ behavior change caused by the movement of the fixed seeding into another thread - I need to analyze this closer, marking as Draft for now.",
      "created_at" : "2022-10-19T18:37:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1284422586",
      "id" : 1284422586,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585Mjru6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284422586/reactions"
      },
      "updated_at" : "2022-10-19T18:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1284422586",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-01-31T22:55:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1411182622",
      "id" : 1411182622,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585UHPAe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1411182622/reactions"
      },
      "updated_at" : "2023-01-31T22:55:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1411182622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased and added a refactor to split up `ThreadAddressSeed` into separate functions for DNS and fixed seeds - I will keep in draft a bit longer, until the issue below is resolved.\r\n\r\n> While implementing and testing the `ThreadAddressSeed` code organization changes, I ran into a small issue/ behavior change caused by the movement of the fixed seeding into another thread - I need to analyze this closer, marking as Draft for now.\r\n\r\nThe issue was that if one chooses `-seednode=X`, the idea is to use the peer X for seeding, and not dns seeds or fixed seeds. However, currently there is a \"race\" between using this seednode and fixed seeds, because as soon as we make a connection to the seednode, we won't wait until we have receive addrs from it, but start adding fixed seeds right away (and connecting to them / getting addrs from them might be faster). \r\nMoving the fixed seeds out of ThreadOpenConnection would have changed the timing of this race slightly.\r\n\r\nHowever, I think that the current behavior is also not great in the first place and will open a separate PR to give the seednode some time before reverting to fixed seeds, so that this PR doesn't change behavior.",
      "created_at" : "2023-04-20T22:01:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1516996244",
      "id" : 1516996244,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585aa4aU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1516996244/reactions"
      },
      "updated_at" : "2023-04-20T22:01:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1516996244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2023-06-22T09:12:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1602291372",
      "id" : 1602291372,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585fgQas",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1602291372/reactions"
      },
      "updated_at" : "2023-06-22T09:12:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1602291372",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-06-23T22:12:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1605046991",
      "id" : 1605046991,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585fqxLP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1605046991/reactions"
      },
      "updated_at" : "2023-06-23T22:12:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1605046991",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated and rebased due to multiple conflicts - in particular #27577 got merged which should've fixed the problem mentioned above. I intend to move this out of draft in a few days after some manual testing / possible CI fixes.",
      "created_at" : "2023-06-28T18:41:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1611903953",
      "id" : 1611903953,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585gE7PR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1611903953/reactions"
      },
      "updated_at" : "2023-06-28T18:41:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1611903953",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Did some more manual testing and it worked as intended for me - moved out of draft!",
      "created_at" : "2023-07-05T21:51:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1622575068",
      "id" : 1622575068,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585gtofc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1622575068/reactions"
      },
      "updated_at" : "2023-07-05T21:51:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1622575068",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, will have a look at this (and merged https://github.com/bitcoin/bitcoin/pull/27577 soon).",
      "created_at" : "2023-07-05T22:03:11Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1622588498",
      "id" : 1622588498,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585gtrxS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1622588498/reactions"
      },
      "updated_at" : "2023-07-05T22:03:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1622588498",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/2415484?v=4",
         "events_url" : "https://api.github.com/users/jonatack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jonatack/followers",
         "following_url" : "https://api.github.com/users/jonatack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jonatack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jonatack",
         "id" : 2415484,
         "login" : "jonatack",
         "node_id" : "MDQ6VXNlcjI0MTU0ODQ=",
         "organizations_url" : "https://api.github.com/users/jonatack/orgs",
         "received_events_url" : "https://api.github.com/users/jonatack/received_events",
         "repos_url" : "https://api.github.com/users/jonatack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jonatack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jonatack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1274659835"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1274659835"
         }
      },
      "author_association" : "MEMBER",
      "body" : "3d06fa372c963a0957f54fe80a0ff3462cdb3a2d\r\nnit: might want to rename the file too :)",
      "commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "created_at" : "2023-07-26T09:25:09Z",
      "diff_hunk" : "@@ -2,7 +2,7 @@\n # Copyright (c) 2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\"\"\"Test ThreadAddressSeed logic for querying DNS seeds.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1274659835",
      "id" : 1274659835,
      "line" : 5,
      "node_id" : "PRRC_kwDOABII585L-cP7",
      "original_commit_id" : "3d06fa372c963a0957f54fe80a0ff3462cdb3a2d",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 5,
      "pull_request_review_id" : 1547249496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1274659835/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-27T09:48:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1274659835",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1276031483"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276031483"
         }
      },
      "author_association" : "MEMBER",
      "body" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad\r\n\r\nDoesn't this substantially change the observations of a user? If they get unlucky with the 10 seeds and gets stuck for 2 minutes, which was not the case before?\r\n\r\nMaybe worth expanding a log `this might take up to 2 minutes.` or something. Ideally we won't wait anymore once we realize all those attempts failed already, but that might be difficult to code.",
      "commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "created_at" : "2023-07-27T09:46:47Z",
      "diff_hunk" : "@@ -1548,6 +1548,27 @@ void CConnman::QueryFixedSeeds(std::chrono::microseconds start)\n                 seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                                 [&fixed_seed_networks](const CAddress& addr) { return fixed_seed_networks.count(addr.GetNetwork()) == 0; }),\n                                  seed_addrs.end());\n+                Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+                // Make AddrFetch connections to fixed seeds first. This reduces the\n+                // load on the fixed seeds that would otherwise be serving blocks for\n+                // many new peers requiring IBD. Try this with multiple fixed seeds for\n+                // a better diversity of received addrs and because some may be offline.\n+                LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+                for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {\n+                    if (addr_pos >= seed_addrs.size()) {\n+                        break;\n+                    }\n+                    AddAddrFetch(seed_addrs.at(addr_pos).ToStringAddr());\n+                }\n+                // Give AddrFetch peers some time to provide us with addresses\n+                // before adding the fixed seeds to AddrMan\n+                if (!interruptNet.sleep_for(std::chrono::minutes(2))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1276031483",
      "id" : 1276031483,
      "line" : 1566,
      "node_id" : "PRRC_kwDOABII585MDrH7",
      "original_commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "original_line" : 1566,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 67,
      "pull_request_review_id" : 1547249496,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276031483/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-27T09:48:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276031483",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1276818293"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276818293"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it still makes sense because the functional test only covers the dns seed logic.",
      "commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "created_at" : "2023-07-27T21:03:10Z",
      "diff_hunk" : "@@ -2,7 +2,7 @@\n # Copyright (c) 2021 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\"\"\"Test ThreadDNSAddressSeed logic for querying DNS seeds.\"\"\"\n+\"\"\"Test ThreadAddressSeed logic for querying DNS seeds.\"\"\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1276818293",
      "id" : 1276818293,
      "in_reply_to_id" : 1274659835,
      "line" : 5,
      "node_id" : "PRRC_kwDOABII585MGrN1",
      "original_commit_id" : "3d06fa372c963a0957f54fe80a0ff3462cdb3a2d",
      "original_line" : 5,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "test/functional/p2p_dns_seeds.py",
      "position" : 5,
      "pull_request_review_id" : 1550778863,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276818293/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-27T21:03:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276818293",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1276824800"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276824800"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that usually it shouldn't substantially change the observations of a user, because 10 is a pretty high number and if all of those fail, we either have rally bad fixed seeds, or have a connectivity problem. I'll add a log entry with the next push though.\r\nAlso, I'll do some test runs to gather some statistics whether we might want to reduce this to 1 minute...",
      "commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "created_at" : "2023-07-27T21:09:20Z",
      "diff_hunk" : "@@ -1548,6 +1548,27 @@ void CConnman::QueryFixedSeeds(std::chrono::microseconds start)\n                 seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                                 [&fixed_seed_networks](const CAddress& addr) { return fixed_seed_networks.count(addr.GetNetwork()) == 0; }),\n                                  seed_addrs.end());\n+                Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+                // Make AddrFetch connections to fixed seeds first. This reduces the\n+                // load on the fixed seeds that would otherwise be serving blocks for\n+                // many new peers requiring IBD. Try this with multiple fixed seeds for\n+                // a better diversity of received addrs and because some may be offline.\n+                LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+                for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {\n+                    if (addr_pos >= seed_addrs.size()) {\n+                        break;\n+                    }\n+                    AddAddrFetch(seed_addrs.at(addr_pos).ToStringAddr());\n+                }\n+                // Give AddrFetch peers some time to provide us with addresses\n+                // before adding the fixed seeds to AddrMan\n+                if (!interruptNet.sleep_for(std::chrono::minutes(2))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1276824800",
      "id" : 1276824800,
      "in_reply_to_id" : 1276031483,
      "line" : 1566,
      "node_id" : "PRRC_kwDOABII585MGszg",
      "original_commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "original_line" : 1566,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 67,
      "pull_request_review_id" : 1550792991,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276824800/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-27T21:09:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1276824800",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-08-06T17:48:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1666931942",
      "id" : 1666931942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585jW1zm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666931942/reactions"
      },
      "updated_at" : "2023-08-06T17:48:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1666931942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[30b0f57 ](https://github.com/bitcoin/bitcoin/commit/30b0f57b19eddd47fa137d0c20ae39174b54dbad)to [17028c1](https://github.com/bitcoin/bitcoin/commit/17028c1fec3f109b139e5e23f535c86f5a1ac2a4):\r\nRebased, expanded log entry with `this might take up to 2 minutes`",
      "created_at" : "2023-08-18T15:22:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1684075929",
      "id" : 1684075929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585kYPWZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1684075929/reactions"
      },
      "updated_at" : "2023-08-18T15:22:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1684075929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1298579606"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298579606"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "added the log.",
      "commit_id" : "17028c1fec3f109b139e5e23f535c86f5a1ac2a4",
      "created_at" : "2023-08-18T15:22:31Z",
      "diff_hunk" : "@@ -1548,6 +1548,27 @@ void CConnman::QueryFixedSeeds(std::chrono::microseconds start)\n                 seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                                 [&fixed_seed_networks](const CAddress& addr) { return fixed_seed_networks.count(addr.GetNetwork()) == 0; }),\n                                  seed_addrs.end());\n+                Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+                // Make AddrFetch connections to fixed seeds first. This reduces the\n+                // load on the fixed seeds that would otherwise be serving blocks for\n+                // many new peers requiring IBD. Try this with multiple fixed seeds for\n+                // a better diversity of received addrs and because some may be offline.\n+                LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+                for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {\n+                    if (addr_pos >= seed_addrs.size()) {\n+                        break;\n+                    }\n+                    AddAddrFetch(seed_addrs.at(addr_pos).ToStringAddr());\n+                }\n+                // Give AddrFetch peers some time to provide us with addresses\n+                // before adding the fixed seeds to AddrMan\n+                if (!interruptNet.sleep_for(std::chrono::minutes(2))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1298579606",
      "id" : 1298579606,
      "in_reply_to_id" : 1276031483,
      "line" : 1566,
      "node_id" : "PRRC_kwDOABII585NZsCW",
      "original_commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "original_line" : 1566,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 67,
      "pull_request_review_id" : 1584776503,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298579606/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-18T15:22:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1298579606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1302845742"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302845742"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: the log might use a variable `2`, so that it's defined in a single place.",
      "commit_id" : "17028c1fec3f109b139e5e23f535c86f5a1ac2a4",
      "created_at" : "2023-08-23T10:56:18Z",
      "diff_hunk" : "@@ -1548,6 +1548,27 @@ void CConnman::QueryFixedSeeds(std::chrono::microseconds start)\n                 seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                                 [&fixed_seed_networks](const CAddress& addr) { return fixed_seed_networks.count(addr.GetNetwork()) == 0; }),\n                                  seed_addrs.end());\n+                Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+                // Make AddrFetch connections to fixed seeds first. This reduces the\n+                // load on the fixed seeds that would otherwise be serving blocks for\n+                // many new peers requiring IBD. Try this with multiple fixed seeds for\n+                // a better diversity of received addrs and because some may be offline.\n+                LogPrintf(\"Initiating AddrFetch connections to fixed seeds.\\n\");\n+                for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {\n+                    if (addr_pos >= seed_addrs.size()) {\n+                        break;\n+                    }\n+                    AddAddrFetch(seed_addrs.at(addr_pos).ToStringAddr());\n+                }\n+                // Give AddrFetch peers some time to provide us with addresses\n+                // before adding the fixed seeds to AddrMan\n+                if (!interruptNet.sleep_for(std::chrono::minutes(2))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1302845742",
      "id" : 1302845742,
      "in_reply_to_id" : 1276031483,
      "line" : 1566,
      "node_id" : "PRRC_kwDOABII585Np9ku",
      "original_commit_id" : "30b0f57b19eddd47fa137d0c20ae39174b54dbad",
      "original_line" : 1566,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 67,
      "pull_request_review_id" : 1591325818,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302845742/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T10:56:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302845742",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1302846290"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302846290"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8b1f718211b19fcf59b933c0cae7e237309913ad\r\n\r\nNothing is queried in this function, so why does it have this name?",
      "commit_id" : "17028c1fec3f109b139e5e23f535c86f5a1ac2a4",
      "created_at" : "2023-08-23T10:56:47Z",
      "diff_hunk" : "@@ -1509,13 +1509,73 @@ void CConnman::QueryDNSSeeds()\n     LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n }\n \n+void CConnman::QueryFixedSeeds(std::chrono::microseconds start)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1302846290",
      "id" : 1302846290,
      "line" : 1512,
      "node_id" : "PRRC_kwDOABII585Np9tS",
      "original_commit_id" : "8b1f718211b19fcf59b933c0cae7e237309913ad",
      "original_line" : 1512,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 13,
      "pull_request_review_id" : 1591327150,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302846290/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T10:56:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302846290",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1302847187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302847187"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Ah sure it's done in the next commit. Maybe a commit message could mention it, or an in-code todo deleted in the next commit :)",
      "commit_id" : "17028c1fec3f109b139e5e23f535c86f5a1ac2a4",
      "created_at" : "2023-08-23T10:57:43Z",
      "diff_hunk" : "@@ -1509,13 +1509,73 @@ void CConnman::QueryDNSSeeds()\n     LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n }\n \n+void CConnman::QueryFixedSeeds(std::chrono::microseconds start)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1302847187",
      "id" : 1302847187,
      "in_reply_to_id" : 1302846290,
      "line" : 1512,
      "node_id" : "PRRC_kwDOABII585Np97T",
      "original_commit_id" : "8b1f718211b19fcf59b933c0cae7e237309913ad",
      "original_line" : 1512,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 13,
      "pull_request_review_id" : 1591328835,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302847187/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-08-23T10:57:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1302847187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "ACK 17028c1fec3f109b139e5e23f535c86f5a1ac2a4",
      "created_at" : "2023-08-23T10:58:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1689753481",
      "id" : 1689753481,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585kt5eJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1689753481/reactions"
      },
      "updated_at" : "2023-08-23T10:58:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1689753481",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-09-14T10:45:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1719213709",
      "id" : 1719213709,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585meR6N",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1719213709/reactions"
      },
      "updated_at" : "2023-09-14T10:45:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1719213709",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[17028c1 ](https://github.com/bitcoin/bitcoin/commit/17028c1fec3f109b139e5e23f535c86f5a1ac2a4)to [10aa6d3](https://github.com/bitcoin/bitcoin/commit/10aa6d32f70844e64e62946bd757792b98641596): rebased\r\n\r\n[10aa6d3 ](https://github.com/bitcoin/bitcoin/commit/10aa6d32f70844e64e62946bd757792b98641596)to [fbbe25e](https://github.com/bitcoin/bitcoin/commit/fbbe25e6fa6e57dfa93b56ee5b72c5c9779f8ef6): changed name of `QueryFixedSeeds` to `ProcessFixedSeeds`",
      "created_at" : "2023-09-25T21:33:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1734494287",
      "id" : 1734494287,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585nYkhP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1734494287/reactions"
      },
      "updated_at" : "2023-09-25T21:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1734494287",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1336413023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336413023"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I will rename it to `ProcessFixedSeeds()` (I did it mostly so that it sounds similar to `QueryDNSSeeds`):\r\nEven with the last commit, we don't actually query the fixed seeds in this function or thread, we just add them to `m_addr_fetches`, and ThreadOpenConnection will make the actual addrfetch connections that could be described as \"querying\".",
      "commit_id" : "fbbe25e6fa6e57dfa93b56ee5b72c5c9779f8ef6",
      "created_at" : "2023-09-25T21:38:12Z",
      "diff_hunk" : "@@ -1509,13 +1509,73 @@ void CConnman::QueryDNSSeeds()\n     LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n }\n \n+void CConnman::QueryFixedSeeds(std::chrono::microseconds start)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1336413023",
      "id" : 1336413023,
      "in_reply_to_id" : 1302846290,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PqAtf",
      "original_commit_id" : "8b1f718211b19fcf59b933c0cae7e237309913ad",
      "original_line" : 2291,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1643025402,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336413023/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-25T21:38:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1336413023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-10-03T10:34:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1744692529",
      "id" : 1744692529,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585n_eUx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1744692529/reactions"
      },
      "updated_at" : "2023-10-03T10:34:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1744692529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[fbbe25e ](https://github.com/bitcoin/bitcoin/commit/fbbe25e6fa6e57dfa93b56ee5b72c5c9779f8ef6)to [06cdad4](https://github.com/bitcoin/bitcoin/commit/06cdad46fb93f9cbe5badd6d3f53ebbd14299bae): rebased",
      "created_at" : "2023-10-03T17:51:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1745451343",
      "id" : 1745451343,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585oCXlP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1745451343/reactions"
      },
      "updated_at" : "2023-10-03T17:51:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1745451343",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2023-10-23T12:46:23Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1775115427",
      "id" : 1775115427,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585pzhyj",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1775115427/reactions"
      },
      "updated_at" : "2023-10-23T12:46:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1775115427",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "[06cdad4 ](https://github.com/bitcoin/bitcoin/commit/06cdad46fb93f9cbe5badd6d3f53ebbd14299bae)to [00e5986](https://github.com/bitcoin/bitcoin/commit/00e5986d20b7a3497682e69605f2bc3471549c84):\r\n- added missing `return` to `ProcessFixedSeeds()` in case where we already have addrs for all networks (thanks @stratospher for pointing me towards it)\r\n- added a commit to remove `add_fixed_seeds` from `ProcessFixedSeeds()`, since the entire function is gated on this anyway.\r\n\r\n[00e5986 ](https://github.com/bitcoin/bitcoin/commit/00e5986d20b7a3497682e69605f2bc3471549c84)to [dfd635b](https://github.com/bitcoin/bitcoin/commit/dfd635bcc9b3f3615cabe115af302df33efba6a1): Rebased due to silent conflict with #28895 ",
      "created_at" : "2023-12-18T19:42:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#issuecomment-1861447165",
      "id" : 1861447165,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26114",
      "node_id" : "IC_kwDOABII585u8239",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1861447165/reactions"
      },
      "updated_at" : "2023-12-18T19:55:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1861447165",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1430982146"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430982146"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "7cc4633: could also update the doc comments to `Load addresses of peers from the DNS and from fixed seeds.`",
      "commit_id" : "dfd635bcc9b3f3615cabe115af302df33efba6a1",
      "created_at" : "2023-12-19T06:40:32Z",
      "diff_hunk" : "@@ -652,7 +652,7 @@ Threads\n     : Application level message handling (sending and receiving). Almost\n     all net_processing and validation logic runs on this thread.\n \n-  - [ThreadDNSAddressSeed (`b-dnsseed`)](https://doxygen.bitcoincore.org/class_c_connman.html#aa7c6970ed98a4a7bafbc071d24897d13)\n+  - [ThreadAddressSeed (`b-addrseed`)](https://doxygen.bitcoincore.org/class_c_connman.html#aa7c6970ed98a4a7bafbc071d24897d13)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1430982146",
      "id" : 1430982146,
      "line" : 655,
      "node_id" : "PRRC_kwDOABII585VSw4C",
      "original_commit_id" : "7cc4633a86cad9dee6d9790550793995dcc3d129",
      "original_line" : 655,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "doc/developer-notes.md",
      "position" : 5,
      "pull_request_review_id" : 1788195228,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430982146/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-19T07:12:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430982146",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1430984088"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430984088"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "611923e: we could remove this fixed seed logic handled in `ThreadOpenConnections` comment.",
      "commit_id" : "dfd635bcc9b3f3615cabe115af302df33efba6a1",
      "created_at" : "2023-12-19T06:43:24Z",
      "diff_hunk" : "@@ -2192,113 +2192,117 @@ void CConnman::WakeMessageHandler()\n void CConnman::ThreadAddressSeed()\n {\n     FastRandomContext rng;\n-    std::vector<std::string> seeds = m_params.DNSSeeds();\n-    Shuffle(seeds.begin(), seeds.end(), rng);\n-    int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n-    int found = 0;\n-\n-    if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n-        // When -forcednsseed is provided, query all.\n-        seeds_right_now = seeds.size();\n-    } else if (addrman.Size() == 0) {\n-        // If we have no known peers, query all.\n-        // This will occur on the first run, or if peers.dat has been\n-        // deleted.\n-        seeds_right_now = seeds.size();\n-    }\n-\n-    // goal: only query DNS seed if address need is acute\n-    // * If we have a reasonable number of peers in addrman, spend\n-    //   some time trying them first. This improves user privacy by\n-    //   creating fewer identifying DNS requests, reduces trust by\n-    //   giving seeds less influence on the network topology, and\n-    //   reduces traffic to the seeds.\n-    // * When querying DNS seeds query a few at once, this ensures\n-    //   that we don't give DNS seeds the ability to eclipse nodes\n-    //   that query them.\n-    // * If we continue having problems, eventually query all the\n-    //   DNS seeds, and if that fails too, also try the fixed seeds.\n-    //   (done in ThreadOpenConnections)\n-    const std::chrono::seconds seeds_wait_time = (addrman.Size() >= DNSSEEDS_DELAY_PEER_THRESHOLD ? DNSSEEDS_DELAY_MANY_PEERS : DNSSEEDS_DELAY_FEW_PEERS);\n-\n-    for (const std::string& seed : seeds) {\n-        if (seeds_right_now == 0) {\n-            seeds_right_now += DNSSEEDS_TO_QUERY_AT_ONCE;\n-\n-            if (addrman.Size() > 0) {\n-                LogPrintf(\"Waiting %d seconds before querying DNS seeds.\\n\", seeds_wait_time.count());\n-                std::chrono::seconds to_wait = seeds_wait_time;\n-                while (to_wait.count() > 0) {\n-                    // if sleeping for the MANY_PEERS interval, wake up\n-                    // early to see if we have enough peers and can stop\n-                    // this thread entirely freeing up its resources\n-                    std::chrono::seconds w = std::min(DNSSEEDS_DELAY_FEW_PEERS, to_wait);\n-                    if (!interruptNet.sleep_for(w)) return;\n-                    to_wait -= w;\n-\n-                    int nRelevant = 0;\n-                    {\n-                        LOCK(m_nodes_mutex);\n-                        for (const CNode* pnode : m_nodes) {\n-                            if (pnode->fSuccessfullyConnected && pnode->IsFullOutboundConn()) ++nRelevant;\n+    if (gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED)) {\n+        std::vector<std::string> seeds = m_params.DNSSeeds();\n+        Shuffle(seeds.begin(), seeds.end(), rng);\n+        int seeds_right_now = 0; // Number of seeds left before testing if we have enough connections\n+        int found = 0;\n+\n+        if (gArgs.GetBoolArg(\"-forcednsseed\", DEFAULT_FORCEDNSSEED)) {\n+            // When -forcednsseed is provided, query all.\n+            seeds_right_now = seeds.size();\n+        } else if (addrman.Size() == 0) {\n+            // If we have no known peers, query all.\n+            // This will occur on the first run, or if peers.dat has been\n+            // deleted.\n+            seeds_right_now = seeds.size();\n+        }\n+\n+        // goal: only query DNS seed if address need is acute\n+        // * If we have a reasonable number of peers in addrman, spend\n+        //   some time trying them first. This improves user privacy by\n+        //   creating fewer identifying DNS requests, reduces trust by\n+        //   giving seeds less influence on the network topology, and\n+        //   reduces traffic to the seeds.\n+        // * When querying DNS seeds query a few at once, this ensures\n+        //   that we don't give DNS seeds the ability to eclipse nodes\n+        //   that query them.\n+        // * If we continue having problems, eventually query all the\n+        //   DNS seeds, and if that fails too, also try the fixed seeds.\n+        //   (done in ThreadOpenConnections)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1430984088",
      "id" : 1430984088,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585VSxWY",
      "original_commit_id" : "611923ef6df8127c8234f1f39263526982b3f5f7",
      "original_line" : 2222,
      "original_position" : 80,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : null,
      "pull_request_review_id" : 1788195228,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430984088/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-19T07:12:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430984088",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
         "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
         "followers_url" : "https://api.github.com/users/stratospher/followers",
         "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
         "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/stratospher",
         "id" : 44024636,
         "login" : "stratospher",
         "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
         "organizations_url" : "https://api.github.com/users/stratospher/orgs",
         "received_events_url" : "https://api.github.com/users/stratospher/received_events",
         "repos_url" : "https://api.github.com/users/stratospher/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/stratospher"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1434899330"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434899330"
         }
      },
      "author_association" : "MEMBER",
      "body" : "8d8e0b796dabba601742a9585237be5892c5f05a\r\n\r\nmaybe expand `for every reachable network`",
      "commit_id" : "dfd635bcc9b3f3615cabe115af302df33efba6a1",
      "created_at" : "2023-12-22T09:47:20Z",
      "diff_hunk" : "@@ -2301,13 +2301,78 @@ void CConnman::QueryDNSSeeds()\n     LogPrintf(\"%d addresses found from DNS seeds\\n\", found);\n }\n \n+void CConnman::ProcessFixedSeeds(std::chrono::microseconds start)\n+{\n+    const bool dnsseed = gArgs.GetBoolArg(\"-dnsseed\", DEFAULT_DNSSEED);\n+    bool add_fixed_seeds = gArgs.GetBoolArg(\"-fixedseeds\", DEFAULT_FIXEDSEEDS);\n+    const bool use_seednodes{gArgs.IsArgSet(\"-seednode\")};\n+\n+    while (!interruptNet) {\n+        const std::unordered_set<Network> fixed_seed_networks{GetReachableEmptyNetworks()};\n+        if (add_fixed_seeds && !fixed_seed_networks.empty()) {\n+            // When the node starts with an empty peers.dat, there are a few other sources of peers before\n+            // we fallback on to fixed seeds: -dnsseed, -seednode, -addnode\n+            // If none of those are available, we fallback on to fixed seeds immediately, else we allow\n+            // 60 seconds for any of those sources to populate addrman.\n+            bool add_fixed_seeds_now = false;\n+            // It is cheapest to check if enough time has passed first.\n+            if (GetTime<std::chrono::seconds>() > start + std::chrono::minutes{1}) {\n+                add_fixed_seeds_now = true;\n+                LogPrintf(\"Adding fixed seeds as 60 seconds have passed and addrman is empty for at least one reachable network\\n\");\n+            }\n+\n+            // Perform cheap checks before locking a mutex.\n+            else if (!dnsseed && !use_seednodes) {\n+                LOCK(m_added_nodes_mutex);\n+                if (m_added_node_params.empty()) {\n+                    add_fixed_seeds_now = true;\n+                    LogPrintf(\"Adding fixed seeds as -dnsseed=0 (or IPv4/IPv6 connections are disabled via -onlynet) and neither -addnode nor -seednode are provided\\n\");\n+                }\n+            }\n+\n+            if (add_fixed_seeds_now) {\n+                std::vector<CAddress> seed_addrs{ConvertSeeds(m_params.FixedSeeds())};\n+                // We will not make outgoing connections to peers that are unreachable\n+                // (e.g. because of -onlynet configuration).\n+                // Therefore, we do not add them to addrman in the first place.\n+                // In case previously unreachable networks become reachable\n+                // (e.g. in case of -onlynet changes by the user), fixed seeds will\n+                // be loaded only for networks for which we have no addresses.\n+                seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n+                                                [&fixed_seed_networks](const CAddress& addr) { return fixed_seed_networks.count(addr.GetNetwork()) == 0; }),\n+                                 seed_addrs.end());\n+                CNetAddr local;\n+                local.SetInternal(\"fixedseeds\");\n+                addrman.Add(seed_addrs, local);\n+                add_fixed_seeds = false;\n+                LogPrintf(\"Added %d fixed seeds from reachable networks.\\n\", seed_addrs.size());\n+                return;\n+            }\n+            if (!interruptNet.sleep_for(std::chrono::milliseconds(500))) {\n+                return;\n+            }\n+        }\n+        else {\n+            LogPrint(BCLog::NET, \"No fixed seeds were added (sufficient addresses available).\\n\");",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1434899330",
      "id" : 1434899330,
      "line" : 2375,
      "node_id" : "PRRC_kwDOABII585VhtOC",
      "original_commit_id" : "8d8e0b796dabba601742a9585237be5892c5f05a",
      "original_line" : 2356,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 84,
      "pull_request_review_id" : 1794234984,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434899330/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-22T09:47:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434899330",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1434903032"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434903032"
         }
      },
      "author_association" : "MEMBER",
      "body" : "dfd635bcc9b3f3615cabe115af302df33efba6a1\r\n\r\nnit: The first sentence talks about `might`, while the second makes a reader think this is unconditionally a fallback (which is not true). I'd suggest aligning the two",
      "commit_id" : "dfd635bcc9b3f3615cabe115af302df33efba6a1",
      "created_at" : "2023-12-22T09:52:07Z",
      "diff_hunk" : "@@ -2340,6 +2340,27 @@ void CConnman::ProcessFixedSeeds(std::chrono::microseconds start)\n                 seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                                 [&fixed_seed_networks](const CAddress& addr) { return fixed_seed_networks.count(addr.GetNetwork()) == 0; }),\n                                  seed_addrs.end());\n+                Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+                // Make AddrFetch connections to fixed seeds first. This reduces the\n+                // load on the fixed seeds that would otherwise be serving blocks for\n+                // many new peers requiring IBD. Try this with multiple fixed seeds for\n+                // a better diversity of received addrs and because some may be offline.\n+                LogPrintf(\"Initiating AddrFetch connections to fixed seeds. This might take up to 2 minutes.\\n\");\n+                for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {\n+                    if (addr_pos >= seed_addrs.size()) {\n+                        break;\n+                    }\n+                    AddAddrFetch(seed_addrs.at(addr_pos).ToStringAddr());\n+                }\n+                // Give AddrFetch peers some time to provide us with addresses\n+                // before adding the fixed seeds to AddrMan\n+                if (!interruptNet.sleep_for(std::chrono::minutes(2))) {\n+                    return;\n+                }\n+                // The fixed seeds queried in the previous steps might have been offline,\n+                // failed to send us any addresses or sent us fake ones. Therefore,\n+                // we now add all reachable fixed seeds to AddrMan as a fallback.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1434903032",
      "id" : 1434903032,
      "line" : 2363,
      "node_id" : "PRRC_kwDOABII585VhuH4",
      "original_commit_id" : "dfd635bcc9b3f3615cabe115af302df33efba6a1",
      "original_line" : 2363,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 24,
      "pull_request_review_id" : 1794241279,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434903032/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-22T09:52:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1434903032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1435262125"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435262125"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I don't quite follow: The fixed seeds will eventually be added to addrman as a fallback unconditionally, both in the case where we got sufficient addresses from addrfetch peers and in the case where that didn't work for some reason.",
      "commit_id" : "dfd635bcc9b3f3615cabe115af302df33efba6a1",
      "created_at" : "2023-12-22T18:11:11Z",
      "diff_hunk" : "@@ -2340,6 +2340,27 @@ void CConnman::ProcessFixedSeeds(std::chrono::microseconds start)\n                 seed_addrs.erase(std::remove_if(seed_addrs.begin(), seed_addrs.end(),\n                                                 [&fixed_seed_networks](const CAddress& addr) { return fixed_seed_networks.count(addr.GetNetwork()) == 0; }),\n                                  seed_addrs.end());\n+                Shuffle(seed_addrs.begin(), seed_addrs.end(), FastRandomContext());\n+\n+                // Make AddrFetch connections to fixed seeds first. This reduces the\n+                // load on the fixed seeds that would otherwise be serving blocks for\n+                // many new peers requiring IBD. Try this with multiple fixed seeds for\n+                // a better diversity of received addrs and because some may be offline.\n+                LogPrintf(\"Initiating AddrFetch connections to fixed seeds. This might take up to 2 minutes.\\n\");\n+                for (size_t addr_pos = 0; addr_pos < 10; ++addr_pos) {\n+                    if (addr_pos >= seed_addrs.size()) {\n+                        break;\n+                    }\n+                    AddAddrFetch(seed_addrs.at(addr_pos).ToStringAddr());\n+                }\n+                // Give AddrFetch peers some time to provide us with addresses\n+                // before adding the fixed seeds to AddrMan\n+                if (!interruptNet.sleep_for(std::chrono::minutes(2))) {\n+                    return;\n+                }\n+                // The fixed seeds queried in the previous steps might have been offline,\n+                // failed to send us any addresses or sent us fake ones. Therefore,\n+                // we now add all reachable fixed seeds to AddrMan as a fallback.",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26114#discussion_r1435262125",
      "id" : 1435262125,
      "in_reply_to_id" : 1434903032,
      "line" : 2363,
      "node_id" : "PRRC_kwDOABII585VjFyt",
      "original_commit_id" : "dfd635bcc9b3f3615cabe115af302df33efba6a1",
      "original_line" : 2363,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/net.cpp",
      "position" : 24,
      "pull_request_review_id" : 1794804724,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26114",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435262125/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-22T18:11:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1435262125",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   }
]

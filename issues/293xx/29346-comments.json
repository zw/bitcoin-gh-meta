[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29346).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29419](https://github.com/bitcoin/bitcoin/pull/29419) (log: deduplicate category names and improve logging.cpp by vasild)\n* [#29415](https://github.com/bitcoin/bitcoin/pull/29415) (Broadcast own transactions only via short-lived Tor or I2P connections by vasild)\n* [#29015](https://github.com/bitcoin/bitcoin/pull/29015) (kernel: Streamline util library by ryanofsky)\n* [#26697](https://github.com/bitcoin/bitcoin/pull/26697) (logging: use bitset for categories by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-01-29T16:14:54Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1915046817",
      "id" : 1915046817,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29346",
      "node_id" : "IC_kwDOABII585yJUuh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915046817/reactions"
      },
      "updated_at" : "2024-02-11T23:22:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915046817",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1472497733"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472497733"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can't serialize a non-fixed-size vector as a span. This will lead to errors when deserializing. For example, a default constructed empty vector, serialized, can not be serialized into a vector which has been resized to 64 bytes.",
      "commit_id" : "4bb5f770a56e685fd5d0f1697c46008e16d48285",
      "created_at" : "2024-01-31T08:57:57Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1472497733",
      "id" : 1472497733,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585XxIhF",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 77,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 77,
      "pull_request_review_id" : 1853197747,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472497733/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-01-31T08:57:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1472497733",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474470023"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474470023"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any suggested reading to wrap my head around this serialisation / bytes / span stuff?",
      "commit_id" : "4bb5f770a56e685fd5d0f1697c46008e16d48285",
      "created_at" : "2024-02-01T13:28:25Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474470023",
      "id" : 1474470023,
      "in_reply_to_id" : 1472497733,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585X4qCH",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 77,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 77,
      "pull_request_review_id" : 1856491032,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474470023/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T13:28:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474470023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474513906"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474513906"
         }
      },
      "author_association" : "MEMBER",
      "body" : "A `std::byte` is serialized no different than an `uint8_t`. (https://en.cppreference.com/w/cpp/types/byte)\r\n\r\nA span holds a pointer and a size. It points to memory outside of itself. For example, a string_view (special kind of span) creates a view on a pre-existing string (string literal or std::string).\r\n\r\nWhen serializing a span in Bitcoin Core, the size is not written. Thus, the size of the pointed-to memory must be exactly equal every time at runtime. How you achieve that the memory is always the same length, or whether a span is the right choice, depends on the context.",
      "commit_id" : "4bb5f770a56e685fd5d0f1697c46008e16d48285",
      "created_at" : "2024-02-01T13:55:18Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474513906",
      "id" : 1474513906,
      "in_reply_to_id" : 1472497733,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585X40vy",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 77,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 77,
      "pull_request_review_id" : 1856557365,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474513906/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T13:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474513906",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474518715"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474518715"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Possible solutions can be:\r\n\r\n* Remove the `Sv2SignatureNoiseMessage` default constructor and/or check that the size of m_sig is properly initialized\r\n* Use a `std::array` instead\r\n* Serialize as `std::vector` instead\r\n\r\n",
      "commit_id" : "4bb5f770a56e685fd5d0f1697c46008e16d48285",
      "created_at" : "2024-02-01T13:58:09Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474518715",
      "id" : 1474518715,
      "in_reply_to_id" : 1472497733,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585X4167",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 77,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 77,
      "pull_request_review_id" : 1856565092,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474518715/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T13:58:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474518715",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474609984"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474609984"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Since `m_sig` is always 64 bytes, I changed it to `std::array`.",
      "commit_id" : "4bb5f770a56e685fd5d0f1697c46008e16d48285",
      "created_at" : "2024-02-01T14:53:07Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474609984",
      "id" : 1474609984,
      "in_reply_to_id" : 1472497733,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585X5MNA",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 77,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 77,
      "pull_request_review_id" : 1856710697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474609984/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T14:53:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474609984",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474641091"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474641091"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You don't need a `Make*ByteSpan` when the underlying data is already bytes. Also, you don't need `Span` at all, when the object is an array. (arrays as well have their size not serialized)",
      "commit_id" : "4bb5f770a56e685fd5d0f1697c46008e16d48285",
      "created_at" : "2024-02-01T15:14:25Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474641091",
      "id" : 1474641091,
      "in_reply_to_id" : 1472497733,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585X5TzD",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 77,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 77,
      "pull_request_review_id" : 1856764776,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474641091/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T15:14:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474641091",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474705042"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474705042"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If I drop `MakeByteSpan()` the compiler complains:\r\n\r\n```\r\n./common/sv2_noise.h:68:17: error: no viable conversion from 'const std::array<unsigned char, SCHNORR_SIGNATURE_SIZE>' to 'Span<const value_type>' (aka 'Span<const std::byte>')\r\n        s.write(m_sig);\r\n```",
      "commit_id" : "4bb5f770a56e685fd5d0f1697c46008e16d48285",
      "created_at" : "2024-02-01T15:59:14Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474705042",
      "id" : 1474705042,
      "in_reply_to_id" : 1472497733,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585X5jaS",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 77,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 77,
      "pull_request_review_id" : 1856871978,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474705042/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T15:59:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474705042",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474796055"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474796055"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Yes, you'd need to make it an array of std::byte.",
      "commit_id" : "4bb5f770a56e685fd5d0f1697c46008e16d48285",
      "created_at" : "2024-02-01T16:56:32Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474796055",
      "id" : 1474796055,
      "in_reply_to_id" : 1472497733,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585X55oX",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 77,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 77,
      "pull_request_review_id" : 1857020952,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474796055/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T16:56:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474796055",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474833093"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474833093"
         }
      },
      "author_association" : "MEMBER",
      "body" : "The member function `write` is the low-level interface for stream-like classes to accept a span of bytes. Normally, it shouldn't be used in common code, only internally in serialization.\r\n\r\nIf you want to serialize an object in Bitcoin Core, you can use the `<<` operator to write and `>>` to read.",
      "commit_id" : "e612cb5f00ff57522083ecb08a64dad9e59920cb",
      "created_at" : "2024-02-01T17:20:09Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474833093",
      "id" : 1474833093,
      "in_reply_to_id" : 1472497733,
      "line" : 66,
      "node_id" : "PRRC_kwDOABII585X6CrF",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 66,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 66,
      "pull_request_review_id" : 1857086231,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474833093/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T17:20:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474833093",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I moved the static constants into classes and renamed them a bit. Expanded the fuzzer to send multiple messages back and forth (like the BIP324 fuzzer).\r\n\r\nI dropped the 1 hour wiggle room in certificate timestamps, because it adds complexity and I don't expect this to cause any issues in practice. A self-signed certificate is generated when the TemplateProvider loads, which is unlikely the same second someone connects to it.\r\n\r\nThe fuzzer found a bug where I forgot to defragment messages larger than the chunk size. Since the Template Provider generally only _sends_ large messages, this (probably) wasn't caught in testing.\r\n\r\n`DecryptAndHash` was broken in a way that my initial tests didn't catch (not sure why), nor interoperability tests because this iniator-side function is only used in test code. But I managed to break something in the ensuing refactor, will clean it up later...\r\n\r\n[it's currently in a broken state, second ECDH handshake gives different result, maybe due to bad memory management]",
      "created_at" : "2024-02-01T18:53:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1922011219",
      "id" : 1922011219,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29346",
      "node_id" : "IC_kwDOABII585yj5BT",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1922011219/reactions"
      },
      "updated_at" : "2024-02-01T19:04:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1922011219",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474980968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474980968"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'll look into replace `write` with `>>`.\r\n\r\nNot sure if it's worth changing `m_sig` from `std::array<unsigned char>` to `std::array<std::byte>`. It's only used by `VerifySchnorr` and `SignSchnorr` which want a `Span<unsigned char>`, so whether we cast it here or there doesn't matter?",
      "commit_id" : "e612cb5f00ff57522083ecb08a64dad9e59920cb",
      "created_at" : "2024-02-01T19:00:33Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1474980968",
      "id" : 1474980968,
      "in_reply_to_id" : 1472497733,
      "line" : 66,
      "node_id" : "PRRC_kwDOABII585X6mxo",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 66,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 66,
      "pull_request_review_id" : 1857343625,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474980968/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-01T19:00:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1474980968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1475695984"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475695984"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I'll look into replace `write` with `>>`.\r\n\r\n`>>` means reading. You may want to try `<<`, if you want to write an object.",
      "commit_id" : "e612cb5f00ff57522083ecb08a64dad9e59920cb",
      "created_at" : "2024-02-02T08:00:48Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1475695984",
      "id" : 1475695984,
      "in_reply_to_id" : 1472497733,
      "line" : 66,
      "node_id" : "PRRC_kwDOABII585X9VVw",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 66,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 66,
      "pull_request_review_id" : 1858606575,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475695984/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-02T08:00:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475695984",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1475854412"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475854412"
         }
      },
      "author_association" : "MEMBER",
      "body" : "` << m_sig` works fine, so `m_sig` can live happily as a `std::array<unsigned char`",
      "commit_id" : "e612cb5f00ff57522083ecb08a64dad9e59920cb",
      "created_at" : "2024-02-02T10:20:27Z",
      "diff_hunk" : "@@ -0,0 +1,283 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_COMMON_SV2_NOISE_H\n+#define BITCOIN_COMMON_SV2_NOISE_H\n+\n+#include <compat/compat.h>\n+#include <key.h>\n+#include <pubkey.h>\n+#include <random.h>\n+#include <streams.h>\n+#include <uint256.h>\n+\n+/** The Noise Protocol Framework\n+ *  https://noiseprotocol.org/noise.html\n+ *  Revision 38, 2018-07-11\n+ *\n+ *  Stratum v2 handshake and cipher specification:\n+ *  https://github.com/stratum-mining/sv2-spec/blob/main/04-Protocol-Security.md\n+ */\n+\n+static constexpr size_t POLY1305_TAGLEN{16};\n+static constexpr size_t KEY_SIZE = 32;\n+static constexpr size_t ELLSWIFT_KEY_SIZE = 64;\n+static constexpr size_t ECDH_OUTPUT_SIZE = 32;\n+/** Section 3: All Noise messages are less than or equal to 65535 bytes in length. */\n+static constexpr size_t NOISE_MAX_CHUNK_SIZE = 65535;\n+/** Sv2 spec 4.5.2 */\n+static constexpr size_t SIGNATURE_NOISE_MESSAGE_SIZE = 2 + 4 + 4 + 64;\n+static constexpr size_t HANDSHAKE_STEP2_SIZE = ELLSWIFT_KEY_SIZE + ELLSWIFT_KEY_SIZE +\n+                                               POLY1305_TAGLEN + SIGNATURE_NOISE_MESSAGE_SIZE + POLY1305_TAGLEN;\n+static constexpr size_t SV2_CERTIFICATE_GRACE_PERIOD = 3600;\n+\n+// Sha256 hash of the ascii encoding - \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+// This is the first step required when setting up the chaining key.\n+const std::vector<uint8_t> PROTOCOL_NAME_HASH = {\n+    27, 97, 156, 90, 248, 120, 254, 68, 34, 119, 45, 129, 209, 41, 152, 82,\n+    26, 137, 97, 115, 62, 44, 177, 60, 145, 24, 250, 214, 68, 188, 1, 128};\n+\n+// The double hash of protocol name \"Noise_NX_EllSwiftXonly_ChaChaPoly_SHA256\".\n+static std::vector<uint8_t> PROTOCOL_NAME_DOUBLE_HASH = {60, 102, 112, 143, 69, 248, 185, 34, 53, 193, 3, 46, 250, 104, 70, 171,\n+                                                         139, 103, 55, 191, 199, 9, 77, 179, 99, 170, 7, 240, 219, 36, 226, 71};\n+\n+/** Simple certificate for the static key signed by the authority key.\n+ * See 4.5.2 and 4.5.3 of the Stratum v2 spec.\n+ */\n+class Sv2SignatureNoiseMessage\n+{\n+private:\n+    uint16_t m_version = 0;\n+    uint32_t m_valid_from = 0;\n+    uint32_t m_valid_to = 0;\n+    std::vector<unsigned char> m_sig;\n+\n+    uint256 GetHash();\n+    void SignSchnorr(const CKey& authority_key, Span<unsigned char> sig);\n+\n+public:\n+    Sv2SignatureNoiseMessage() = default;\n+    Sv2SignatureNoiseMessage(uint16_t version, uint32_t valid_from, uint32_t valid_to, const XOnlyPubKey& static_key, const CKey& authority_key);\n+\n+    /* The certificate serializes pubkeys in x-only format, not EllSwift. */\n+    XOnlyPubKey m_static_key = {};\n+\n+    [[nodiscard]] bool Validate(XOnlyPubKey authority_key);\n+\n+    template <typename Stream>\n+    // The static_key is signed for, but not serialized.\n+    void Serialize(Stream& s) const\n+    {\n+        s << m_version\n+          << m_valid_from\n+          << m_valid_to;\n+\n+        s.write(MakeByteSpan(m_sig));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#discussion_r1475854412",
      "id" : 1475854412,
      "in_reply_to_id" : 1472497733,
      "line" : 66,
      "node_id" : "PRRC_kwDOABII585X98BM",
      "original_commit_id" : "a392a4c2f3be7d2751502adc887802a24f0f6898",
      "original_line" : 66,
      "original_position" : 76,
      "original_start_line" : null,
      "path" : "src/common/sv2_noise.h",
      "position" : 66,
      "pull_request_review_id" : 1858879817,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29346",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475854412/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-02T10:20:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1475854412",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Alright, code is back in working state. I dropped a bunch of spurious `Make*ByteSpan` (mostly by switching remaining uses of `uint8_t` to `std::byte`).\r\n\r\nAlso switched to the new logging convention, mostly `LogTrace()`. Also expanded the fuzzer to mess with bytes during the handshake.\r\n\r\n(fuzzing for a few hours now, will submit a draft corpus if it doesn't find anything)",
      "created_at" : "2024-02-02T11:47:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1923648187",
      "id" : 1923648187,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29346",
      "node_id" : "IC_kwDOABII585yqIq7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1923648187/reactions"
      },
      "updated_at" : "2024-02-02T12:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1923648187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This latest push improves support for mock time (which the parent PR needs). It's still using the deprecated `GetTime`, but it's not clear to me what to replace it with.\r\n\r\nIt also changes the protocol name to `Noise_NX_Secp256k1+EllSwift_ChaChaPoly_SHA256` (https://github.com/stratum-mining/sv2-spec/pull/66#discussion_r1483090409).",
      "created_at" : "2024-02-09T09:37:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1935603779",
      "id" : 1935603779,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29346",
      "node_id" : "IC_kwDOABII585zXvhD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935603779/reactions"
      },
      "updated_at" : "2024-02-09T09:37:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935603779",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Updated and simplified the description to account for the new parent PR. I'm leaving this in draft status pending ~two merges~ one merge on the SRI side; that way the whole thing is easier to test.",
      "created_at" : "2024-02-14T11:47:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1943613979",
      "id" : 1943613979,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29346",
      "node_id" : "IC_kwDOABII585z2TIb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1943613979/reactions"
      },
      "updated_at" : "2024-02-14T18:14:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1943613979",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Possibly relevant: the test introduced here, and not modified later, failed at least once in the parent PR: https://github.com/bitcoin/bitcoin/pull/29432#issuecomment-1948481906\r\n\r\nCI run: https://github.com/bitcoin/bitcoin/runs/21654131515",
      "created_at" : "2024-02-16T19:29:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29346#issuecomment-1949200230",
      "id" : 1949200230,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29346",
      "node_id" : "IC_kwDOABII5850Lm9m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1949200230/reactions"
      },
      "updated_at" : "2024-02-16T19:31:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1949200230",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   }
]

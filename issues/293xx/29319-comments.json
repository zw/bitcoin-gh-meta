[
   {
      "author_association" : "MEMBER",
      "body" : "cc: @TheBlueMatt @rustyrussell @Roasbeef @t-bast ",
      "created_at" : "2024-01-25T16:19:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1910540024",
      "id" : 1910540024,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585x4Ib4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1910540024/reactions"
      },
      "updated_at" : "2024-01-25T16:19:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1910540024",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "i think there is @petertodd âs https://petertodd.org/2024/one-shot-replace-by-fee-rate to weigh as a pinning solution.\r\nsounds to me slightly more robust than v3 policy as no malleability in the fee-bumping mechanism.\r\nhowever the dynamic N replace-by-feerate window might be a mess for miners mempools.\r\nwhatever the solution (v3 or replace-by-feerate), i believe you will still have exploitable asymmetries for L2s. ",
      "created_at" : "2024-01-25T22:13:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1911085188",
      "id" : 1911085188,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585x6NiE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911085188/reactions"
      },
      "updated_at" : "2024-01-25T22:13:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911085188",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sdaftuar \r\n\r\n> bounded in size to at most 1000 vbytes, if the child of an unconfirmed (and therefore v3) parent\r\n\r\nThis is insufficient to fix pinning in comparison to existing solutions: https://petertodd.org/2023/v3-txs-pinning-vulnerability\r\n\r\nFor example, at the moment the transaction fee required to get into the next block is about 23sat/vB, while the minimum relay fee of a typical mempool is 20sat/vB. So an attacker who simply did a straightforward pinning attack on an ephemeral anchor spend could force the defender to spend an additional:\r\n\r\n    20sat/vB * 1000vB = 20,000sat = $8 USD\r\n\r\njust to get their transaction mined, at almost no cost to themselves. We need a better solution than that. One obvious one would be to make the 1000vB limit much smaller, eg the same size as a 2-in, 1 out, anchor spend. A Replace-by-Fee-Rate carveout for this specific case is another potential solution. (and as @ariard mentions, replace-by-fee-rate in general is a solution; IIUC one-shot replace-by-fee-rate will be quite a bit easier to implement with the cluster mempool work)",
      "created_at" : "2024-01-26T00:11:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1911201292",
      "id" : 1911201292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585x6p4M",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911201292/reactions"
      },
      "updated_at" : "2024-01-26T00:11:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911201292",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@ariard \r\n\r\n> however the dynamic N replace-by-feerate window might be a mess for miners mempools.\r\n\r\nCan you give a bit more detail on what challenges you think that'll pose?",
      "created_at" : "2024-01-26T00:14:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1911204636",
      "id" : 1911204636,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585x6qsc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911204636/reactions"
      },
      "updated_at" : "2024-01-26T00:14:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911204636",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ariard @petertodd The discussion you are having is not related to this topic, can you please take it to another thread?",
      "created_at" : "2024-01-26T00:15:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1911205244",
      "id" : 1911205244,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585x6q18",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911205244/reactions"
      },
      "updated_at" : "2024-01-26T00:15:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911205244",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sdaftuar As you said, \"Opening an issue for high-level discussion\".\r\n\r\nWhether or not V3 achieves its goals is definitely a high level discussion that needs to be resolved here. I showed that V3 does not, as attackers can still cause defenders to pay significant amounts of money in response to pinning attacks, and that the way we intend to use V3 with ephemeral anchors is quite possibly *worse* than the status quo as anyone can be the attacker. I also provided a simple fix, and some less simple fixes.\r\n\r\n@ariard has also been discussing similar high-level design considerations separately.\r\n\r\nThese are all items appropriate for high-level discussion to make sure the design of cluster mempool/V3 is correct and worth implementing (and in this case, I gave an argument that cluster mempool may be worthwhile without V3).",
      "created_at" : "2024-01-26T00:25:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1911215494",
      "id" : 1911215494,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585x6tWG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911215494/reactions"
      },
      "updated_at" : "2024-01-26T00:25:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911215494",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "This topic is about the CPFP carveout rule, which cannot be supported in the cluster mempool design.  My goal is to establish whether a particular set of policy rules would be a suitable replacement for carveout.  You and ariard are discussing pinning more generally, and I infer from your prior comments that you think CPFP is a mistaken idea to begin with.  So I assume that means you don't believe that dropping the CPFP carveout rule should be a big deal either, is that a fair statement?\r\n\r\nThat is fine with me, and I'll take it as a concept ACK from you that you don't think the cluster mempool efforts need to be gated on worrying about the effects of CPFP carveout.  However, I believe that there are users of the CPFP carveout policy that the software supports today, and I'd like to hear from **them** about this topic before proposing that we drop support.\r\n\r\nTake detailed discussions of pinning vectors and potential solutions elsewhere.",
      "created_at" : "2024-01-26T00:41:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1911228975",
      "id" : 1911228975,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585x6wov",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911228975/reactions"
      },
      "updated_at" : "2024-01-26T00:41:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911228975",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> However, doing so would eliminate the ability to batch-CPFP several unconfirmed commitment transactions at once (although this isn't reliable anyway today, since the carveout protections don't apply to this case, but perhaps this sometimes works fine and is more efficient).\n\nI believe this is something that needs to be addressed at some point in v3 transaction, but because, as you note, it is not reliable today, waiting to address it until later send acceptable. The only requirement here, then, would be that any v3-auto-tx-type-match logic allow standard rules for transactions which otherwise match but which have in-mempool ancestors.\n\n> It's not clear to me if that final step -- of imbuing transactions with v3 policy, rather than requiring explicit opt-in -- is needed before we move further forward with cluster \nmempool\n\nIf the outcome is to break existing software's use of the carve-out, then I think it's prudent to wait until that software has updated and channels have had a chance to migrate before moving forward. There's plenty of problems with lightning, but making anchor channel confirmation even less reliable (even in the honest case) seems like a bad outcome. Admittedly these cases are likely very rare (it requires one peer broadcasting then going offline while the other peer tries to get things confirmed), but certainly not impossible.\n\n> or even if doing so would be acceptable to the broader community, but I think we could entertain that idea as a way to assist the LN project with migration and to decouple progress in this project from upgrade timelines in that one.\n\nIt certainly seems like the simplest way forward, especially if we have to figure out some 0conf solution for v3 transactions, which could further delay any lightning switchover.",
      "created_at" : "2024-01-26T02:30:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1911313822",
      "id" : 1911313822,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585x7FWe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911313822/reactions"
      },
      "updated_at" : "2024-01-26T02:30:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911313822",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> > However, doing so would eliminate the ability to batch-CPFP several unconfirmed commitment transactions at once (although this isn't reliable anyway today, since the carveout protections don't apply to this case, but perhaps this sometimes works fine and is more efficient).\r\n> \r\n> I believe this is something that needs to be addressed at some point in v3 transaction, but because, as you note, it is not reliable today, waiting to address it until later send acceptable. The only requirement here, then, would be that any v3-auto-tx-type-match logic allow standard rules for transactions which otherwise match but which have in-mempool ancestors.\r\n\r\nI think that pattern-matching / imbuing v3 is doable (that sounds like a concept ack for v3?). Assuming sibling eviction in v3, so far, it seems like it applies nicely to existing commitment transactions without any modifications. On the LN side, the requirement is no other unconfirmed inputs in the child, implying no batching.\r\n\r\nIIRC during the meeting, people said that LND (cc @roasbeef) are the only ones who do batching?\r\n\r\nSupporting batched bumping is definitely a goal, and was originally part of the v3 design until we [realized](https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1320295394) it created a pinning problem and couldn't support it.\r\n\r\nSince we're on the topic of not breaking the usage of past features, though, batched CPFP and CPFP Carve Out have always been mutually exclusive. The extra descendant is given a ancestor limit of 2, which means it cannot be CPFPing more than one parent (see [code](https://github.com/bitcoin/bitcoin/blob/ac923e70e7cec603abd207f104dbabfe675d59b2/src/validation.cpp#L936) and [proposal](https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2018-November/016518.html)). That suggests that there can't be any transactions that are relying on both features simultaneously, so supporting such transactions shouldn't be a blocker for cluster mempool.\r\n(^I know I don't have to explain this to you but wanted to write this explanation somewhere).\r\n\r\n\r\n\r\n",
      "created_at" : "2024-01-26T09:02:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1911702787",
      "id" : 1911702787,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585x8kUD",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911702787/reactions"
      },
      "updated_at" : "2024-01-26T09:50:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1911702787",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I think that pattern-matching / imbuing v3 is doable (that sounds like a concept ack for v3?). Assuming sibling eviction in v3, so far, it seems like it applies nicely to existing commitment transactions without any modifications. On the LN side, the requirement is no other unconfirmed inputs in the child, implying no batching.\r\n\r\nYes, though as I mention above I do think we may need to figure out a few additional specific details around v3 (eg how do we handle 0conf ln channels? I need to make a delving post to discuss this) before its a clear answer. Of course a v3 that simply was implicitly not v3 if it has unconfirmed ancestors would also address this, as long as we can expand the scope later (and presumably lightning may not use v3 until that point).\r\n\r\n> IIRC during the meeting, people said that LND (cc @Roasbeef) are the only ones who do batching?\r\n\r\nThat's my understanding. I believe our API allows it, but it'd take some work on downstream users to build it, mostly we just need to update our docs to explicitly forbid it.",
      "created_at" : "2024-01-26T20:12:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1912632386",
      "id" : 1912632386,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yAHRC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1912632386/reactions"
      },
      "updated_at" : "2024-01-26T20:12:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1912632386",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> (eg how do we handle 0conf ln channels? I need to make a delving post to discuss this) \r\n\r\nI'd be curious to see your delvingbitcoin post around that, as I believe this shouldn't be too much of an issue (but let's discuss it on a dedicated post instead of here).\r\n\r\n> I think that pattern-matching / imbuing v3 is doable (that sounds like a concept ack for v3?). Assuming sibling eviction in v3, so far, it seems like it applies nicely to existing commitment transactions without any modifications. On the LN side, the requirement is no other unconfirmed inputs in the child, implying no batching.\r\n\r\nConcept ACK on our side here, we don't have any code that would break due to the implicit enrolling of existing commitment transactions to v3 (we don't batch anchor-spends for both security and simplicity reasons).\r\n\r\n> Supporting batched bumping is definitely a goal, and was originally part of the v3 design until we https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1320295394 it created a pinning problem and couldn't support it.\r\n\r\nI'm wondering if that would really be hard to support? It seems to me that sibling eviction rules could efficiently handle the 1-child-multiple-parent cases, but I may be missing something. I thought that the rules could be:\r\n\r\n- a v3 unconfirmed transaction may have multiple unconfirmed v3 parents (but is limited by the 1000 vbytes threshold)\r\n- a v3 unconfirmed transaction may have at most one unconfirmed child\r\n- a v3 transaction that has unconfirmed parents cannot have unconfirmed children\r\n\r\nThose rules ensure that we have at most two generations of unconfirmed v3 txs in a package. When evaluating sibling eviction, it's thus easy to figure out the replaced package, it only consists of the sibling with all of its unconfirmed parents. We can then apply package RBF rules (not the current RBF rules though) to efficiently replace this, and it should be easier to evaluate whether it's more incentive compatible?\r\n\r\nIt does require different package RBF rules than BIP 125 though:\r\n\r\n- we mustn't apply BIP 125 rules 2 and 3\r\n- rule 4 should probably be replaced by an increase in total package feerate\r\n\r\nThis is probably much more complex than the current sibling eviction proposal, and I may be missing important details as well, so feel free to ignore!",
      "created_at" : "2024-01-29T11:43:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1914523198",
      "id" : 1914523198,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yHU4-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914523198/reactions"
      },
      "updated_at" : "2024-01-29T11:43:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1914523198",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Thanks @t-bast and @TheBlueMatt for chiming in here.\r\n\r\n> It does require different package RBF rules than BIP 125 though:\r\n>\r\n> * we mustn't apply BIP 125 rules 2 and 3\r\n\r\nRelaxing rule 3 is the main issue, in my view, as it stems from concerns around both incentive compatibility (which I explore in my cluster mempool post [here](https://delvingbitcoin.org/t/an-overview-of-the-cluster-mempool-proposal/393#rbf-can-now-be-made-incentive-compatible-for-miners-11)) and anti-DoS protections against free relay.  At any rate I'm not aware of any proposals that are fully-baked enough to point to as part of a currently foreseeable path forward (and we can take discussion of any particular proposals that people are interested in analyzing to another thread).\r\n\r\n@TheBlueMatt @t-bast Since you both seem to be on-board with the idea of imbuing commitment transactions with v3 semantics, can you advise on where you think we should start with identifying such transactions?  What I have understood so far is that we want to only consider transactions with no in-mempool ancestors, which have exactly two 330-satoshi outputs (did I get that number right?). Do you have more criteria we should be looking at?  It seems like a good next step would be for someone to code up something that tries to capture what you are talking about, and try to verify on historical data that it wouldn't catch anything it shouldn't.\r\n\r\n\r\n",
      "created_at" : "2024-01-29T19:59:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1915460898",
      "id" : 1915460898,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yK50i",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915460898/reactions"
      },
      "updated_at" : "2024-01-29T19:59:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915460898",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Looking at my code, I see `version: 2`, `lock_time: (0x20 << 8*3) | (random_garbage & 0xffffff)`,\r\none segwit non-wrapped input with `sequence: (0x80 << 8*3) | (random_garbage & 0xffffff)`, outputs sorted first by value, then by script_pubkey. There should always be at least one (sometimes two or more) outputs of exactly 330 sats and all outputs should be P2WSH. There may be one or two things I didn't catch, but that's pretty specific, I imagine.",
      "created_at" : "2024-01-29T22:14:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1915669008",
      "id" : 1915669008,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yLsoQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915669008/reactions"
      },
      "updated_at" : "2024-01-29T22:15:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1915669008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/649246?v=4",
         "events_url" : "https://api.github.com/users/TheBlueMatt/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheBlueMatt/followers",
         "following_url" : "https://api.github.com/users/TheBlueMatt/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheBlueMatt",
         "id" : 649246,
         "login" : "TheBlueMatt",
         "node_id" : "MDQ6VXNlcjY0OTI0Ng==",
         "organizations_url" : "https://api.github.com/users/TheBlueMatt/orgs",
         "received_events_url" : "https://api.github.com/users/TheBlueMatt/received_events",
         "repos_url" : "https://api.github.com/users/TheBlueMatt/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheBlueMatt/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheBlueMatt"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Another approach that may be simpler is to imbue with v3 semantics only once one of the anchor output is being spent in the mempool (because if none are spent, there's basically nothing to do). This way we can pattern match on the anchor output script which is very specific:\r\n\r\n```\r\nOP_PUSHDATA(<some_public_key>) OP_CHECKSIG OP_IFDUP OP_NOTIF OP_16 OP_CHECKSEQUENCEVERIFY OP_ENDIF\r\n```\r\n\r\nI think that this approach shouldn't generate any false positive. Once such an anchor transaction is identified, we would imbue its parent from the input that matches that script with v3 semantics.",
      "created_at" : "2024-01-30T06:32:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1916166471",
      "id" : 1916166471,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yNmFH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916166471/reactions"
      },
      "updated_at" : "2024-01-30T06:32:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916166471",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/31281497?v=4",
         "events_url" : "https://api.github.com/users/t-bast/events{/privacy}",
         "followers_url" : "https://api.github.com/users/t-bast/followers",
         "following_url" : "https://api.github.com/users/t-bast/following{/other_user}",
         "gists_url" : "https://api.github.com/users/t-bast/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/t-bast",
         "id" : 31281497,
         "login" : "t-bast",
         "node_id" : "MDQ6VXNlcjMxMjgxNDk3",
         "organizations_url" : "https://api.github.com/users/t-bast/orgs",
         "received_events_url" : "https://api.github.com/users/t-bast/received_events",
         "repos_url" : "https://api.github.com/users/t-bast/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/t-bast/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/t-bast/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/t-bast"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "@sdaftuar \r\n\r\n> So I assume that means you don't believe that dropping the CPFP carveout rule should be a big deal either, is that a fair statement?\r\n\r\nNo, that's not a fair statement. While I have my reservations about CPFP, the fact is we've shipped a lot of Lightining implementations that rely on the CPFP carveout for safety and we have to continue to provide that functionality for the forseeable future. Indeed, this complexity is one reason why I'm dubious about rushing into the half-baked V3 proposal, as the complexity of it will simply have to live on in mempool policy for a long time to come if we adopt it.\r\n\r\nSee: https://petertodd.org/2023/v3-transactions-review#recommendations\r\n\r\nI did not suggest that we get rid of CPFP in my V3 transactions review. Even though I recommended against shipping V3, I even said that we should try to ship package relay to make existing anchor/CPFP-using Lightning implementations less broken.",
      "created_at" : "2024-01-30T09:07:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1916377490",
      "id" : 1916377490,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yOZmS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916377490/reactions"
      },
      "updated_at" : "2024-01-30T09:07:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916377490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> I think that this approach shouldn't generate any false positive. Once such an anchor transaction is identified, we would imbue its parent from the input that matches that script with v3 semantics.\r\n\r\nReminder we probably have to be aware of simple taproot channels, or we should just move fast enough to get CPFP carveout replaced via v3+sibling eviction, then only focus on imbuing segwitv0 channels? We'll likely need @Roasbeef to weigh in",
      "created_at" : "2024-01-30T13:18:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1916831473",
      "id" : 1916831473,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yQIbx",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916831473/reactions"
      },
      "updated_at" : "2024-01-30T13:18:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1916831473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Please help me figure out why this transaction is not confirmed?8f62acf0f0ddc3e38db2e8ec2755f4e54aa5bf616d685e2f3361155fc9d44125",
      "created_at" : "2024-01-30T20:12:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1917814292",
      "id" : 1917814292,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yT4YU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1917814292/reactions"
      },
      "updated_at" : "2024-01-30T20:12:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1917814292",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/158217006?v=4",
         "events_url" : "https://api.github.com/users/Wwwwwwuuuuu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Wwwwwwuuuuu/followers",
         "following_url" : "https://api.github.com/users/Wwwwwwuuuuu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Wwwwwwuuuuu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Wwwwwwuuuuu",
         "id" : 158217006,
         "login" : "Wwwwwwuuuuu",
         "node_id" : "U_kgDOCW4zLg",
         "organizations_url" : "https://api.github.com/users/Wwwwwwuuuuu/orgs",
         "received_events_url" : "https://api.github.com/users/Wwwwwwuuuuu/received_events",
         "repos_url" : "https://api.github.com/users/Wwwwwwuuuuu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Wwwwwwuuuuu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Wwwwwwuuuuu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Wwwwwwuuuuu"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@petertodd \r\n\r\n> Can you give a bit more detail on what challenges you think that'll pose?\r\n\r\nfrom my memory: \"How this new replacement rule would behave if you have a parent in the\r\n\"replace-by-feerate\" half but the child is in the \"replace-by-fee\" one ?â see the conversation here: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019839.html\r\nin past conversations we have assumed a âstaticâ N blocks worth of mempool, unclear to me with your proposal if dynamic.\r\ni wonder about threshold effect and it could be exploited by pinning adversaries\r\n\r\n@sdaftuar\r\n\r\n> \"This topic is about the CPFP carveout rule, which cannot be supported in the cluster mempool design. My goal is to\r\n> establish whether a particular set of policy rules would be a suitable replacement for carveout.â\r\n\r\ni donât understand why removing the carve out has to be technically linked with v3 deployment.\r\nyou can break carve-out today by broadcasting one of the 2 latest valid commitment tx in lightning full node mempool.\r\nand the other state on the tx-relay network. end of the game. so it can be removed in my mind without talking about v3.\r\n\r\nsrly which LN implementation has implemented âblindâ broadcast on counterparty state ? canât remember LDK doing it.\r\n\r\n> and that in the meantime we should simply use some other unique markers to identify those commitment transactions,\r\n\r\nside-note, a generic mechanism in core to retro-actively apply policy rules semantics to pre-signed states good thing\r\nwould be great for emergency security deployment, where interactivity with lightning counterparty canât be assumed.\r\ngave thoughts on it a year ago on one of the V3 PR: https://github.com/bitcoin/bitcoin/pull/25038#issuecomment-1405944407\r\n",
      "created_at" : "2024-02-01T21:28:30Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1922277580",
      "id" : 1922277580,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yk6DM",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1922277580/reactions"
      },
      "updated_at" : "2024-02-01T21:28:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1922277580",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @petertodd\r\n> \r\n> > Can you give a bit more detail on what challenges you think that'll pose?\r\n> \r\n> from my memory: \"How this new replacement rule would behave if you have a parent in the \"replace-by-feerate\" half but the child is in the \"replace-by-fee\" one ?â see the conversation here: https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2022-January/019839.html in past conversations we have assumed a âstaticâ N blocks worth of mempool, unclear to me with your proposal if dynamic. i wonder about threshold effect and it could be exploited by pinning adversaries\r\n\r\nMy proposal is dynamic, as I mention in the [Pure Replace-By-Fee-Rate](https://petertodd.org/2024/one-shot-replace-by-fee-rate#pure-replace-by-fee-rate) section: \"In a rising fee-rate environment, the one-shot policy may degrade to pure replace-by-fee-rate.\"\r\n\r\nNot sure what you mean by \"threshold effect\". So long as the N block threshold isn't too large, transactions that don't quite reach the threshold have a decent chance of getting mined eventually. Similarly, since the threshold is dynamic, it's likely that the threshold will reduce at some point, allowing a fee-bump will put it over the threshold.\r\n\r\nI've already implemented one-shot replace-by-fee-rate in a sense with the pure-replace-by-fee-rate implementation in Libre Relay: it has N=0, so replacement is always possible. That might not always be strictly incentive compatible for miners. But it's not that far off. I'd estimate roughly 30 nodes are running it at the moment; hopefully I'll convince a miner to run it too once more people get confident that it doesn't introduce new, effective, DoS attacks.\r\n\r\n> > \"This topic is about the CPFP carveout rule, which cannot be supported in the cluster mempool design. My goal is to\r\n> > establish whether a particular set of policy rules would be a suitable replacement for carveout.â\r\n> \r\n> i donât understand why removing the carve out has to be technically linked with v3 deployment. you can break carve-out today by broadcasting one of the 2 latest valid commitment tx in lightning full node mempool. and the other state on the tx-relay network. end of the game. so it can be removed in my mind without talking about v3.\r\n\r\nTo be clear, you're assuming the attacker is connected to the LN node's mempool directly, correct?\r\n\r\nThat's an obvious security risk. I know for a fact that many large LN nodes do not make their Bitcoin nodes publicly accessible to avoid attacks like this (of course, many don't even make their LN nodes publicly accessible).",
      "created_at" : "2024-02-02T06:52:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1923061666",
      "id" : 1923061666,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yn5ei",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1923061666/reactions"
      },
      "updated_at" : "2024-02-02T06:52:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1923061666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7042?v=4",
         "events_url" : "https://api.github.com/users/petertodd/events{/privacy}",
         "followers_url" : "https://api.github.com/users/petertodd/followers",
         "following_url" : "https://api.github.com/users/petertodd/following{/other_user}",
         "gists_url" : "https://api.github.com/users/petertodd/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/petertodd",
         "id" : 7042,
         "login" : "petertodd",
         "node_id" : "MDQ6VXNlcjcwNDI=",
         "organizations_url" : "https://api.github.com/users/petertodd/orgs",
         "received_events_url" : "https://api.github.com/users/petertodd/received_events",
         "repos_url" : "https://api.github.com/users/petertodd/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/petertodd/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/petertodd"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> i donât understand why removing the carve out has to be technically linked with v3 deployment.\r\n> you can break carve-out today by broadcasting one of the 2 latest valid commitment tx in lightning full node mempool.\r\nand the other state on the tx-relay network. end of the game. so it can be removed in my mind without talking about v3.\r\n\r\nIt looks like removal of CPFP carve out is not a concern for you; you just don't think v3 is a good idea. If that's the case, there is no need to post general criticisms of v3 here. See #28948 description for a list of threads dedicated to discussing v3.\r\n\r\n> My proposal is dynamic, as I mention in the [Pure Replace-By-Fee-Rate](https://petertodd.org/2024/one-shot-replace-by-fee-rate#pure-replace-by-fee-rate) section: \"In a rising fee-rate environment, the one-shot policy may degrade to pure replace-by-fee-rate.\"\r\n\r\nUnless your alternative proposal is relevant to CPFP carve out removal and/or cluster mempool, it is off topic here. Again, there are separate threads that are more appropriate.",
      "created_at" : "2024-02-02T10:32:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1923524891",
      "id" : 1923524891,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585ypqkb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1923524891/reactions"
      },
      "updated_at" : "2024-02-02T10:32:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1923524891",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Not sure what you mean by \"threshold effect\". So long as the N block threshold isn't too large, transactions that don't quite reach the threshold have a decent chance of getting mined eventually. Similarly, since the threshold is dynamic, it's likely that the threshold will reduce at some point, allowing a fee-bump will put it over the threshold.\r\n\r\nMy understanding of the proposal is the following. We introduce a dynamic N block threshold, where everything inside the threshold is replace-by-feerate, everything under is replace-by-fee as of today. The âdynamism\" trigger is scheduled on the mempool congestion rate (?) yet to be defined.\r\n\r\nI think you might have threshold effect where the parent commitment tx is in the replace-by-fee mempool group segment and a high-fee CPFP arrives qualifying the whole package  to be reconsidered in the replace-by-feerate mempool group segment. Reconsideration might be computationally expensive. Interested to have a look on the implementation in Libre Relay if already available.\r\n\r\n> To be clear, you're assuming the attacker is connected to the LN node's mempool directly, correct?\r\n\r\nYou can trigger a off-chain force-close and have the honest node auto-partitioning itself. So not necessarily. \r\n\r\n> That's an obvious security risk. I know for a fact that many large LN nodes do not make their Bitcoin nodes publicly accessible to avoid attacks like this (of course, many don't even make their LN nodes publicly accessible).\r\n\r\nIf youâre running a malicious reachable public node and non-listening Bitcoin nodes connect to you for tx-relay easy to cross-layer map (cf. time-dilation attack paper for more on cross-layer mapping).\r\n\r\nHere a test illustrating a network-topology-aware (NTA) pinning https://github.com/ariard/bitcoin/commit/84e12b87b29637a26e8a9bb4c494ffc7206d3777\r\n\r\nThose types of advanced pinning are low-key known among some devs since https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2020-June/018011.html\r\n\r\nedited: to answer PT on the negative on the lack of necessary tx-relay connection for NTA pinning",
      "created_at" : "2024-02-05T02:52:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1926138008",
      "id" : 1926138008,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yzoiY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1926138008/reactions"
      },
      "updated_at" : "2024-02-05T02:55:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1926138008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> It looks like removal of CPFP carve out is not a concern for you; you just don't think v3 is a good idea. If that's the case, there is no need to post general criticisms of v3 here. See https://github.com/bitcoin/bitcoin/pull/28948 description for a list of threads dedicated to discussing v3.\r\n\r\nI would appreciate a more gently online communication tone from someone  I spent time sharing a lot of information (cf. my old gist [âMitigating Tx-Relay Jamming for Time-Sensitive Contract Protocolsâ](https://gist.github.com/ariard/7e509bf2c81ea8049fd0c67978c521af)) on all those issues  circa 2020 / 2021. Thanks.\r\n\r\n> Unless your alternative proposal is relevant to CPFP carve out removal and/or cluster mempool, it is off topic here. Again, there are separate threads that are more appropriate.\r\n\r\nYes there are zero-to-minimal security benefits provided by the CPFP carve out as LN implementations as an adversary can nullify the carve-out with NTA pinnings - today. And Iâll bet that half of the LN implementations have not implemented broadcast-CPFP-on-remote counterparty commitment transaction.\r\n\r\nIn my reasonable opinion, the CPFP carve-out can be deprecated *now* without necessity of introducing V3 transaction policy as a preliminary step. I think all non-lightning use-cases can upgrades their own protocol transaction format in the same way than lightning to introduce a single CPFP with two script path branches.",
      "created_at" : "2024-02-05T03:11:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1926157308",
      "id" : 1926157308,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585yztP8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1926157308/reactions"
      },
      "updated_at" : "2024-02-05T03:11:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1926157308",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Using a datalogging and replaying system that I have, I did some analysis of what the effect the idea of imbuing LN commitment transaction spends with v3 semantics would have had in 2023.  My writeup of that is here: https://delvingbitcoin.org/t/analysis-of-attempting-to-imbue-ln-commitment-transaction-spends-with-v3-semantics/527",
      "created_at" : "2024-02-07T16:48:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1932465965",
      "id" : 1932465965,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585zLxct",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1932465965/reactions"
      },
      "updated_at" : "2024-02-07T16:48:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1932465965",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "So carve-out was introduced back by #15681 with motivation to allow one extra single ancestor tx.\r\nAfter testing https://github.com/bitcoin/bitcoin/commit/6337b978e77a4e1f93bb009958db7c9a619323df you can always replace a long-chain of transactions with a higher-fee candidate. Carve-out is already broken today due to NTA pinning.\r\nLN devs can upgrade to have a single output on each commitment with one branch for each counterparty.\r\nAt least this should conserve the same level of robustness for non-adversarial env (synchronous broadcast of commitments)\r\n\r\n> Using a datalogging and replaying system that I have, I did some analysis of what the effect the idea of imbuing LN commitment transaction spends with v3 semantics would have had in 2023.\r\n\r\nUnclear to me what is the hypothesis this analysis aims to corroborate or invalidate.\r\nIâm understanding as âassume all v3 semantics are opt-in by all LN commitment transaction owners and see success/failureâ.\r\nFor high number of batch CPFP spending LN commitment transactions, it's already unsafe. (depends `max_accepted_htlcs)\r\nSo it can be okay to be more restrictive actually in the deployment of any imbuance mechanism for LN transactions.\r\n(not endorsing v3 - just pointing out that some analyzed LN traffic sounds intrinsically unsafe at first sight).",
      "created_at" : "2024-02-08T22:54:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1935060892",
      "id" : 1935060892,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585zVq-c",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935060892/reactions"
      },
      "updated_at" : "2024-02-08T22:54:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935060892",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ariard I agree that this would be simpler if there is just 1 anchor output (see also @instagibbs' proposal for ephemeral anchors, fwiw).  But (a) that is not up to this project to decide; (b) you still need some kind of pinning solution if a too-large spend is created (which v3 provides -- while no other workable proposals have been put forward); and (c) even then it sounds like it would take LN some time to coordinate an upgrade to a 1-anchor system (whether EA or 2 branches of a single script, or whatever else could be on the table).\r\n\r\nAs a developer on this project, I think we should generally strive to not break downstream users' applications unnecessarily.  I also don't want this project to be blocked waiting on users to upgrade to a better way of doing things; the sense I got from the LN spec developers is that coordinated upgrades take time, which seems reasonable to me on its face.\r\n\r\nI believe that we have work in progress to mitigate many (most?) of the pinning scenarios that have been discussed in recent years.  However it is a significant amount of work, and each piece requires careful review -- so it is a challenge to present a complete solution all at once (though @glozow and @instagibbs have both done great work to try to demonstrate large pieces of these ideas at various times).  Pinning is also not the only thing we are trying to solve -- in my view it's far from the most important problem we face -- so some pieces of the pinning solution should rightfully be blocked on us solving bigger problems, such as making RBF incentive compatible, and making mining and eviction use the same transaction score metric (so that we don't evict things we might want to mine).\r\n\r\nOverall, I think at some point we need to pick a path forward and get it done. The steps I've described above (v3, v3-sibling-eviction, and imbuing LN commitment transaction spends with v3 semantics) are close to ready at this point and would immediately address the pinning problem that carveout currently solves, without having to wait for LN developers to upgrade their systems. If we don't go down that path, then we're either breaking users or blocked until they upgrade their spec -- both bad options in my view.  \r\n\r\nIf you have alternate work to share to address the variety of problems that have been discussed, please feel free to open PRs and try to get review for an alternative roadmap. ",
      "created_at" : "2024-02-08T23:35:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1935097759",
      "id" : 1935097759,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585zVz-f",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935097759/reactions"
      },
      "updated_at" : "2024-02-08T23:35:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1935097759",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7463573?v=4",
         "events_url" : "https://api.github.com/users/sdaftuar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sdaftuar/followers",
         "following_url" : "https://api.github.com/users/sdaftuar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sdaftuar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sdaftuar",
         "id" : 7463573,
         "login" : "sdaftuar",
         "node_id" : "MDQ6VXNlcjc0NjM1NzM=",
         "organizations_url" : "https://api.github.com/users/sdaftuar/orgs",
         "received_events_url" : "https://api.github.com/users/sdaftuar/received_events",
         "repos_url" : "https://api.github.com/users/sdaftuar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sdaftuar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sdaftuar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@sdaftuar While I'm sharing your opinion on the lack of necessity to not break downstream usersâs applications unnecessarily, I think you're missing my present observation on the lack of current benefit of the 2 anchor outputs on LN commitment transactions. As my test demonstrate just above, in the occurence of an adversarial scenario, the abibility to CPFPcon a counterparty commitment transaction can be neutralized by broadcasting one of the 2 commitment states in the target mempool. In the occurence of hazardous scenario (e.g concurrent unilateral force-closure), network mempools might be partitioned with propagation of the asymmetric states, and the fee-bumping CPFP can't propagate as expected. As said above, the carve-out mechanism is broken since its initial implementation in 2019, as its security benefits have not been analyzed correctly at that time â to be fair we're far more knowledgeable on this area now that we used to be.\r\n\r\nBeyond, I'm very doubtful broadcasting a CPFP on a counterparty commitment transaction is _currently_ implemented by all LN implementations, at the very least I can't remember it's done by LDK or CLN. It might be implemented by Eclair or LND, yet I would very doubtul again they broadcast a CPFP on the latest 2 valid counterparty commitment transaction (allowed during the CS - RAA phase). So I believe that current carve-out mechanism can be deprecated today as it's useless without package relay, and it's not even implemented and deployed correctly by LN implementations. They can upragade directly to one of the alternative (e.g 2 branches of a single script).\r\n\r\nOn the pinning mitigations, it turns out v3 is very far to address all the pinning scenarios known since years (e.g NTA pinning originally described in 2020) and it still offers significant exploitation areas with currently selected parameters and child coverage only approach. This is very uncertain that actually constraining the child only solve long-term pinning, and that an approach like replace-by-feerate isn't more accurate to solve NTA-like class of pinning as it's removing package malleability. On the EA idea itself, it turns out it might alter badly miners incentives as its own author has recognized himself. We're doing safety-first engineering and going for a short-sighted solution only makes the problem worst on the long-term as we're increasing re-deployment cost of any newer and more efficient pinning mitigation.\r\n\r\nI do share the sentiment that we shouldn't be rightfully blocked on coming to consensus on a pinning solution and be rightfully blocked on solving bigger problems, and yes I recognize that RBF incentive compatibility is a serious issue, as we all figure out during the initial deployment of `mempoolfullrbf`. However I'm yet to understand why solving pinning and deploying cluster have to be linked together ? In my mind they're orthogonal and there is no need to commit and \"package\" them on a single roadmap. If there is any substantial technical issue why they should be linked together, thanks to clarify.\r\n\r\nCalling to âship-forwardâ and get stuff it done, on its own justification intrinsically, appears in my eyes as sign of âprocess fatigueâ. In the current case of such phenomena, we shall take time to build a stronger technical consensus, an engineering mindset you have yourself advocated in the past (cf. [Taproot activation](https://medium.com/@sdaftuar/on-taproot-activation-and-consensus-changes-in-bitcoin-5b3453e91c4e)).\r\n\r\nThe path forward in my opinion is still have to LN developers uprading their systems in a non-coordinated fashion on the question of carve-out output, while we can still make progress in parallel on solving RBF incentive compatibility. In the present state of deployed codebases, there is no need to \"point-lock\" the issues.",
      "created_at" : "2024-02-22T18:31:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/29319#issuecomment-1960028293",
      "id" : 1960028293,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29319",
      "node_id" : "IC_kwDOABII585006iF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1960028293/reactions"
      },
      "updated_at" : "2024-02-22T18:31:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1960028293",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/23310655?v=4",
         "events_url" : "https://api.github.com/users/ariard/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ariard/followers",
         "following_url" : "https://api.github.com/users/ariard/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ariard/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ariard",
         "id" : 23310655,
         "login" : "ariard",
         "node_id" : "MDQ6VXNlcjIzMzEwNjU1",
         "organizations_url" : "https://api.github.com/users/ariard/orgs",
         "received_events_url" : "https://api.github.com/users/ariard/received_events",
         "repos_url" : "https://api.github.com/users/ariard/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ariard/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ariard/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ariard"
      }
   }
]

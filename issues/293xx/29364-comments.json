[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29364).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [epiccurious](https://github.com/bitcoin/bitcoin/pull/29364#issuecomment-1922599794) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2024-02-01T15:48:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29364#issuecomment-1921633106",
      "id" : 1921633106,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29364",
      "node_id" : "IC_kwDOABII585yictS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1921633106/reactions"
      },
      "updated_at" : "2024-02-02T01:04:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1921633106",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Tested ACK. Passed the functional test runner.",
      "created_at" : "2024-02-02T01:04:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29364#issuecomment-1922599794",
      "id" : 1922599794,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29364",
      "node_id" : "IC_kwDOABII585ymIty",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1922599794/reactions"
      },
      "updated_at" : "2024-02-02T01:04:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1922599794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/109078515?v=4",
         "events_url" : "https://api.github.com/users/epiccurious/events{/privacy}",
         "followers_url" : "https://api.github.com/users/epiccurious/followers",
         "following_url" : "https://api.github.com/users/epiccurious/following{/other_user}",
         "gists_url" : "https://api.github.com/users/epiccurious/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/epiccurious",
         "id" : 109078515,
         "login" : "epiccurious",
         "node_id" : "U_kgDOBoBn8w",
         "organizations_url" : "https://api.github.com/users/epiccurious/orgs",
         "received_events_url" : "https://api.github.com/users/epiccurious/received_events",
         "repos_url" : "https://api.github.com/users/epiccurious/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/epiccurious/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/epiccurious/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/epiccurious"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@knst can you explain or cite a reference as to why these calls are no longer beneficial? I would expect the implementation of `reserve` to be relative to the supplied allocator. Is it because size change is inexpensive with a reserved page via `LockedPoolManager`?",
      "created_at" : "2024-02-02T17:03:46Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29364#issuecomment-1924287646",
      "id" : 1924287646,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29364",
      "node_id" : "IC_kwDOABII585yskye",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924287646/reactions"
      },
      "updated_at" : "2024-02-02T17:04:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924287646",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "@Empact \r\n\r\nIn the original 2011 implementation, a regular std::string was used for the passphrase:\r\n```\r\ncommit b7bcaf940d27fa8cfe89422943fbeaab7a350930\r\nAuthor: Wladimir J. van der Laan <laanwj@gmail.com>\r\nDate:   Wed Aug 24 22:07:26 2011 +0200\r\n\r\n    Wallet encryption part 2: ask passphrase when needed, add menu options\r\ndiff --git a/src/qt/askpassphrasedialog.cpp b/src/qt/askpassphrasedialog.cpp\r\nnew file mode 100644\r\nindex 0000000000..a297513a62\r\n--- /dev/null\r\n+++ b/src/qt/askpassphrasedialog.cpp\r\n....\r\n    std::string oldpass, newpass1, newpass2;\r\n    // TODO: mlock memory / munlock on return so they will not be swapped out, really need \"mlockedstring\" wrapper class to do this safely\r\n    oldpass.reserve(MAX_PASSPHRASE_SIZE);\r\n    newpass1.reserve(MAX_PASSPHRASE_SIZE);\r\n    newpass2.reserve(MAX_PASSPHRASE_SIZE);\r\n....\r\n```\r\n\r\nReserving memory ensured that the memory would not be reallocated inside `std::string` when the content changed. This helped implement a crucial feature: we could zero out the memory before freeing it, ensuring that if the memory were reallocated to another object, the application would crash in a dump or something similar would happenâinstead of the passphrase, there would be zeroes. To ensure that `std::string` always worked with the same memory region (allowing it to be zeroed), reserve was called.\r\n\r\nLater on, `std::string` was replaced with `SecureString` (which is still a `std::string` but uses a special allocator). We no longer need to worry about reallocation inside `SecureString`, because all memory is allocated by a special allocator that handles all cleaning, ensuring that the secret bytes of the passphrase would never leak out of this object.\r\nHere's safety memory cleaning in deallocation (whatever how many times std::string allocated/deallocated memory -- all memory would be \"cleansed\"): https://github.com/bitcoin/bitcoin/blob/master/src/support/allocators/secure.h#L39\r\nhttps://github.com/bitcoin/bitcoin/blob/master/src/support/cleanse.h#L11-L13\r\n\r\n**Summarizing: the use of reserve has been introduced years ago not for optimization purposes, but to ensure the safety of the user's passphrase. This concern is no longer necessary with the introduction of `SecureString`.**\r\n",
      "created_at" : "2024-02-02T17:26:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29364#issuecomment-1924351566",
      "id" : 1924351566,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29364",
      "node_id" : "IC_kwDOABII585ys0ZO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924351566/reactions"
      },
      "updated_at" : "2024-02-02T17:26:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924351566",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/545784?v=4",
         "events_url" : "https://api.github.com/users/knst/events{/privacy}",
         "followers_url" : "https://api.github.com/users/knst/followers",
         "following_url" : "https://api.github.com/users/knst/following{/other_user}",
         "gists_url" : "https://api.github.com/users/knst/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/knst",
         "id" : 545784,
         "login" : "knst",
         "node_id" : "MDQ6VXNlcjU0NTc4NA==",
         "organizations_url" : "https://api.github.com/users/knst/orgs",
         "received_events_url" : "https://api.github.com/users/knst/received_events",
         "repos_url" : "https://api.github.com/users/knst/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/knst/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/knst/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/knst"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Is it not worthwhile to prevent reallocation if we can, even if there is not a data disclosure risk with this allocator?",
      "created_at" : "2024-02-07T12:22:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29364#issuecomment-1931936133",
      "id" : 1931936133,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29364",
      "node_id" : "IC_kwDOABII585zJwGF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1931936133/reactions"
      },
      "updated_at" : "2024-02-07T12:22:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1931936133",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5470?v=4",
         "events_url" : "https://api.github.com/users/Empact/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Empact/followers",
         "following_url" : "https://api.github.com/users/Empact/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Empact/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Empact",
         "id" : 5470,
         "login" : "Empact",
         "node_id" : "MDQ6VXNlcjU0NzA=",
         "organizations_url" : "https://api.github.com/users/Empact/orgs",
         "received_events_url" : "https://api.github.com/users/Empact/received_events",
         "repos_url" : "https://api.github.com/users/Empact/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Empact/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Empact/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Empact"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> Is it not worthwhile to prevent reallocation if we can\r\n\r\n@Empact I added one more commit which adds `const` and changes way of initialization of SecureString - there were not any re-allocations, but now that's enforced by const.\r\n\r\nExcept `wallet/rpc/wallet.cpp` - there's also no reallocations, objects are not changed, but code readability would be worsened if I add there `const`.",
      "created_at" : "2024-02-08T14:52:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29364#issuecomment-1934284747",
      "id" : 1934284747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29364",
      "node_id" : "IC_kwDOABII585zStfL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1934284747/reactions"
      },
      "updated_at" : "2024-02-08T14:52:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1934284747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/545784?v=4",
         "events_url" : "https://api.github.com/users/knst/events{/privacy}",
         "followers_url" : "https://api.github.com/users/knst/followers",
         "following_url" : "https://api.github.com/users/knst/following{/other_user}",
         "gists_url" : "https://api.github.com/users/knst/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/knst",
         "id" : 545784,
         "login" : "knst",
         "node_id" : "MDQ6VXNlcjU0NTc4NA==",
         "organizations_url" : "https://api.github.com/users/knst/orgs",
         "received_events_url" : "https://api.github.com/users/knst/received_events",
         "repos_url" : "https://api.github.com/users/knst/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/knst/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/knst/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/knst"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "> code readability would be worsened if I add there const\n\nSeems like adding a const here would be worthwhile. Can you elaborate on the worsened code readability?",
      "created_at" : "2024-02-11T02:13:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29364#issuecomment-1937395487",
      "id" : 1937395487,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29364",
      "node_id" : "IC_kwDOABII585zek8f",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937395487/reactions"
      },
      "updated_at" : "2024-02-11T02:13:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937395487",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/109078515?v=4",
         "events_url" : "https://api.github.com/users/epiccurious/events{/privacy}",
         "followers_url" : "https://api.github.com/users/epiccurious/followers",
         "following_url" : "https://api.github.com/users/epiccurious/following{/other_user}",
         "gists_url" : "https://api.github.com/users/epiccurious/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/epiccurious",
         "id" : 109078515,
         "login" : "epiccurious",
         "node_id" : "U_kgDOBoBn8w",
         "organizations_url" : "https://api.github.com/users/epiccurious/orgs",
         "received_events_url" : "https://api.github.com/users/epiccurious/received_events",
         "repos_url" : "https://api.github.com/users/epiccurious/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/epiccurious/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/epiccurious/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/epiccurious"
      }
   }
]

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29370).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [fjahr](https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954438224) |\n| Stale ACK | [maflcko](https://github.com/bitcoin/bitcoin/pull/29370#pullrequestreview-1895813376), [mzumsande](https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1969573251) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29478](https://github.com/bitcoin/bitcoin/pull/29478) (test: Test new header sync behavior in loadtxoutsetinfo by fjahr)\n* [#28608](https://github.com/bitcoin/bitcoin/pull/28608) (assumeutxo state and locking cleanup by ryanofsky)\n* [#28339](https://github.com/bitcoin/bitcoin/pull/28339) (validation: improve performance of CheckBlockIndex by mzumsande)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2024-02-02T16:18:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1924196872",
      "id" : 1924196872,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII585ysOoI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924196872/reactions"
      },
      "updated_at" : "2024-02-29T21:26:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924196872",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Backwards compatibility code in LoadBlockIndex to override `nTx == 1` values set by previous code when they are fake (when ` (pindex->nStatus & BLOCK_VALID_MASK) < BLOCK_VALID_TRANSACTIONS`)\r\n\r\nNot sure. This can only happen on test-chains, so I think it would be cleaner to just require the developers, if there are any, to finish their background sync, or to wipe their chainstate, or the blocksdir, or the whole test data dir.",
      "created_at" : "2024-02-02T16:47:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1924254747",
      "id" : 1924254747,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII585yscwb",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924254747/reactions"
      },
      "updated_at" : "2024-02-02T16:47:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924254747",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--85328a0da195eb286784d51f73fa0af9-->\n\nð§ At least one of the CI tasks failed. Make sure to run all tests locally, according to the\ndocumentation.\n\nPossibly this is due to a silent merge conflict (the changes in this pull request being\nincompatible with the current code in the target branch). If so, make sure to rebase on the latest\ncommit of the target branch.\n\nLeave a comment here, if you need help tracking down a confusing failure.\n\n<sub>Debug: https://github.com/bitcoin/bitcoin/runs/21160915955</sub>",
      "created_at" : "2024-02-02T17:16:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1924315726",
      "id" : 1924315726,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII585ysrpO",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924315726/reactions"
      },
      "updated_at" : "2024-02-02T17:16:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924315726",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Not sure. This can only happen on test-chains, so I think it would be cleaner to just require the developers, if there are any, to finish their background sync, or to wipe their chainstate, or the blocksdir, or the whole test data dir.\r\n\r\nIt makes sense that having backwards compatibility may not be worth it, but I don't see why test chains would set `nTx` to a real value without also setting BLOCK_VALID_TRANSACTIONS. It seems like we should be able to use BLOCK_VALID_TRANSACTIONS to know if nTx is real or fake, as long as we are checking for BLOCK_VALID_TRANSACTIONS, directly, and not using the IsValid() helper which is also influenced by BLOCK_FAILED flags.\r\n\r\n---\r\n\r\nUpdated 4c70d993e3ac0e9b7923eded51826fe1faa2d004 -> a3228f02f69e28960f7da76054965c916e781f27 ([`pr/nofake.1`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.1) -> [`pr/nofake.2`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.1..pr/nofake.2)) to fix broken validation_block_tests due to a buggy check, also making some minor cleanups",
      "created_at" : "2024-02-02T18:44:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1924479030",
      "id" : 1924479030,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII585ytTg2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924479030/reactions"
      },
      "updated_at" : "2024-02-02T18:44:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1924479030",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477981888"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477981888"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to touch this LOC?",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T10:39:14Z",
      "diff_hunk" : "@@ -168,21 +169,18 @@ class CBlockIndex\n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n     arith_uint256 nChainWork{};\n \n-    //! Number of transactions in this block.\n+    //! Number of transactions in this block. This will be nonzero if the block\n+    //! reached the VALID_TRANSACTIONS validity level, and zero otherwise.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n     //! Note: this value is faked during UTXO snapshot load to ensure that\n     //! LoadBlockIndex() will load index entries for blocks that we lack data for.\n     //! @sa ActivateSnapshot\n     unsigned int nTx{0};\n \n     //! (memory only) Number of transactions in the chain up to and including this block.\n-    //! This value will be non-zero only if and only if transactions for this block and all its parents are available.\n-    //! Change to 64-bit type before 2024 (assuming worst case of 60 byte transactions).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477981888",
      "id" : 1477981888,
      "line" : 180,
      "node_id" : "PRRC_kwDOABII585YGDbA",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 180,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 67,
      "pull_request_review_id" : 1862394105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477981888/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T11:12:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477981888",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477996772"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477996772"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n            index->nChainTx = 0;\r\n```\r\n\r\nisn't this always true? Maybe you meant to type `-` instead of `<`?\r\n\r\nIn any case, the test seems to be passing either way, so this is \"dead\" code, similar to a code comment.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T10:51:34Z",
      "diff_hunk" : "@@ -465,6 +465,12 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n         // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+            index->nTx = 0;\n+            // Keep nChainTx for the snapshot base since it is part of the\n+            // snapshot metadata. Reset it for other blocks this is simulating\n+            // not having been downloaded yet.\n+            if (i < last_assumed_valid_idx == 1) index->nChainTx = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477996772",
      "id" : 1477996772,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585YGHDk",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 472,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1862394105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477996772/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T11:12:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477996772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477998490"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to change the sequence id? I think this isn't changed in `loadtxoutset` either?",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T10:53:08Z",
      "diff_hunk" : "@@ -91,13 +91,10 @@ CreateAndActivateUTXOSnapshot(\n             // these blocks instead\n             CBlockIndex *pindex = orig_tip;\n             while (pindex && pindex != chain.m_chain.Tip()) {\n-                pindex->nStatus &= ~BLOCK_HAVE_DATA;\n-                pindex->nStatus &= ~BLOCK_HAVE_UNDO;\n-                // We have to set the ASSUMED_VALID flag, because otherwise it\n-                // would not be possible to have a block index entry without HAVE_DATA\n-                // and with nTx > 0 (since we aren't setting the pruned flag);\n-                // see CheckBlockIndex().\n-                pindex->nStatus |= BLOCK_ASSUMED_VALID;\n+                pindex->nStatus = BlockStatus::BLOCK_VALID_TREE;\n+                pindex->nTx = 0;\n+                pindex->nChainTx = 0;\n+                pindex->nSequenceId = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998490",
      "id" : 1477998490,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII585YGHea",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 103,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/test/util/chainstate.h",
      "position" : 20,
      "pull_request_review_id" : 1862394105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477998490/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T11:12:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477998490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998941"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477998941"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same (sequence id)",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T10:53:33Z",
      "diff_hunk" : "@@ -465,6 +465,12 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n         // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+            index->nTx = 0;\n+            // Keep nChainTx for the snapshot base since it is part of the\n+            // snapshot metadata. Reset it for other blocks this is simulating\n+            // not having been downloaded yet.\n+            if (i < last_assumed_valid_idx == 1) index->nChainTx = 0;\n+            index->nSequenceId = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998941",
      "id" : 1477998941,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585YGHld",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 473,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1862394105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477998941/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T11:12:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1477998941",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478006900"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478006900"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is removing the validity check intended?",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T11:00:32Z",
      "diff_hunk" : "@@ -4577,15 +4577,7 @@ bool ChainstateManager::LoadBlockIndex()\n \n         for (CBlockIndex* pindex : vSortedByHeight) {\n             if (m_interrupt) return false;\n-            // If we have an assumeutxo-based chainstate, then the snapshot\n-            // block will be a candidate for the tip, but it may not be\n-            // VALID_TRANSACTIONS (eg if we haven't yet downloaded the block),\n-            // so we special-case the snapshot block as a potential candidate\n-            // here.\n-            if (pindex == GetSnapshotBaseBlock() ||\n-                    (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478006900",
      "id" : 1478006900,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585YGJh0",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 4586,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1862394105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478006900/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T11:12:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478006900",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478018977"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478018977"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Can this be further limited to only mark the snap_block if it has ASSUMED_VALID set? Otherwise, nodes which never used loadtxoutset will assume that some block is a \"snapshot block\", even though they never used that feature.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T11:11:04Z",
      "diff_hunk" : "@@ -4903,36 +4890,23 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n-            // Assumed-valid blocks should connect to the main chain.\n-            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n-        }\n+        // There there should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        const bool snap_block = pindex == GetSnapshotBaseBlock();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478018977",
      "id" : 1478018977,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585YGMeh",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 4907,
      "original_position" : 91,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1862394105,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478018977/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T11:12:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478018977",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478022794"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478022794"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Any reason to remove this check?",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T11:14:35Z",
      "diff_hunk" : "@@ -4903,36 +4890,23 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n-            // Assumed-valid blocks should connect to the main chain.\n-            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478022794",
      "id" : 1478022794,
      "line" : 4927,
      "node_id" : "PRRC_kwDOABII585YGNaK",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 4927,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 70,
      "pull_request_review_id" : 1862459885,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478022794/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T11:14:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478022794",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Also, it would be good to include the test to ensure the crash no longer happens.\r\n\r\nhttps://github.com/bitcoin/bitcoin/issues/29261#issuecomment-1918947945",
      "created_at" : "2024-02-05T15:00:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1927200215",
      "id" : 1927200215,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII585y3r3X",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927200215/reactions"
      },
      "updated_at" : "2024-02-05T15:00:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927200215",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478549351"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478549351"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477981888\r\n\r\n> Any reason to touch this LOC?\r\n\r\nNo, will restore. I only meant to update the comments around it.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T16:40:57Z",
      "diff_hunk" : "@@ -168,21 +169,18 @@ class CBlockIndex\n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n     arith_uint256 nChainWork{};\n \n-    //! Number of transactions in this block.\n+    //! Number of transactions in this block. This will be nonzero if the block\n+    //! reached the VALID_TRANSACTIONS validity level, and zero otherwise.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n     //! Note: this value is faked during UTXO snapshot load to ensure that\n     //! LoadBlockIndex() will load index entries for blocks that we lack data for.\n     //! @sa ActivateSnapshot\n     unsigned int nTx{0};\n \n     //! (memory only) Number of transactions in the chain up to and including this block.\n-    //! This value will be non-zero only if and only if transactions for this block and all its parents are available.\n-    //! Change to 64-bit type before 2024 (assuming worst case of 60 byte transactions).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478549351",
      "id" : 1478549351,
      "in_reply_to_id" : 1477981888,
      "line" : 180,
      "node_id" : "PRRC_kwDOABII585YIN9n",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 180,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 67,
      "pull_request_review_id" : 1863282117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478549351/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T17:24:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478549351",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478561706"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478561706"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998490\r\n\r\n> Any reason to change the sequence id? I think this isn't changed in `loadtxoutset` either?\r\n\r\nI'll double check and add a comment. I think this might be needed to satisfy an assert that ensures nChainTx is set if nSequenceId is set, since these are both set when a block is received and all blocks before it have also been received.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T16:43:34Z",
      "diff_hunk" : "@@ -91,13 +91,10 @@ CreateAndActivateUTXOSnapshot(\n             // these blocks instead\n             CBlockIndex *pindex = orig_tip;\n             while (pindex && pindex != chain.m_chain.Tip()) {\n-                pindex->nStatus &= ~BLOCK_HAVE_DATA;\n-                pindex->nStatus &= ~BLOCK_HAVE_UNDO;\n-                // We have to set the ASSUMED_VALID flag, because otherwise it\n-                // would not be possible to have a block index entry without HAVE_DATA\n-                // and with nTx > 0 (since we aren't setting the pruned flag);\n-                // see CheckBlockIndex().\n-                pindex->nStatus |= BLOCK_ASSUMED_VALID;\n+                pindex->nStatus = BlockStatus::BLOCK_VALID_TREE;\n+                pindex->nTx = 0;\n+                pindex->nChainTx = 0;\n+                pindex->nSequenceId = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478561706",
      "id" : 1478561706,
      "in_reply_to_id" : 1477998490,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII585YIQ-q",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 103,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/test/util/chainstate.h",
      "position" : 20,
      "pull_request_review_id" : 1863282117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478561706/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T17:24:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478561706",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478567668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478567668"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477996772\r\n\r\n> isn't this always true? Maybe you meant to type `-` instead of `<`?\r\n> \r\n> In any case, the test seems to be passing either way, so this is \"dead\" code, similar to a code comment.\r\n\r\nI think it was supposed to be i < last_assumed_valid_idx - 1, to preserve nChainTx in the snapshot block, and only set nChainTx to 0 before the snapshot block, so the test matches what happens in reality. But it does seem like this is not necessary so will simplify.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T16:47:16Z",
      "diff_hunk" : "@@ -465,6 +465,12 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n         // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+            index->nTx = 0;\n+            // Keep nChainTx for the snapshot base since it is part of the\n+            // snapshot metadata. Reset it for other blocks this is simulating\n+            // not having been downloaded yet.\n+            if (i < last_assumed_valid_idx == 1) index->nChainTx = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478567668",
      "id" : 1478567668,
      "in_reply_to_id" : 1477996772,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585YISb0",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 472,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1863282117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478567668/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T17:24:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478567668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478584012"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478584012"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478006900\r\n\r\n> Is removing the validity check intended?\r\n\r\nIt was intended, but on second thought it is probably better to add back. The reason for removing it is that the block reaching VALID_TRANSACTIONS level is not really significant, because what is actually needed is for the block and all its ancestors back to the snapshot block or genesis block to reach VALID_TRANACTIONS level, and HaveNumChainTxs() is the direct and efficient way to check for that.\r\n\r\nBut it should still be useful to call the IsValid() function because it additionally checks for BLOCK_FAILED flags. So it would be good to add back to avoid changing behavior, and be more efficient if there are invalid blocks.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T16:59:53Z",
      "diff_hunk" : "@@ -4577,15 +4577,7 @@ bool ChainstateManager::LoadBlockIndex()\n \n         for (CBlockIndex* pindex : vSortedByHeight) {\n             if (m_interrupt) return false;\n-            // If we have an assumeutxo-based chainstate, then the snapshot\n-            // block will be a candidate for the tip, but it may not be\n-            // VALID_TRANSACTIONS (eg if we haven't yet downloaded the block),\n-            // so we special-case the snapshot block as a potential candidate\n-            // here.\n-            if (pindex == GetSnapshotBaseBlock() ||\n-                    (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478584012",
      "id" : 1478584012,
      "in_reply_to_id" : 1478006900,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585YIWbM",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 4586,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1863282117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478584012/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T17:24:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478584012",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478594492"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478594492"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478022794\r\n\r\n> Any reason to remove this check?\r\n\r\nNo, good catch, I'll add it back. I was thinking it wasn't really related to the other checks here, and trying to eliminate unnecessary uses of BLOCK_ASSUMED_VALID / IsAssumedValid in general. But as long as we have the assumed valid flag, might as well check this.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T17:08:36Z",
      "diff_hunk" : "@@ -4903,36 +4890,23 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n-            // Assumed-valid blocks should connect to the main chain.\n-            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478594492",
      "id" : 1478594492,
      "in_reply_to_id" : 1478022794,
      "line" : 4927,
      "node_id" : "PRRC_kwDOABII585YIY-8",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 4927,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 70,
      "pull_request_review_id" : 1863282117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478594492/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T17:24:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478594492",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478604893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478604893"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478018977\r\n\r\n> Can this be further limited to only mark the snap_block if it has ASSUMED_VALID set? Otherwise, nodes which never used loadtxoutset will assume that some block is a \"snapshot block\", even though they never used that feature.\r\n\r\nI'm pretty sure I can do that, but it should not change anything. If loadtxoutset is not used, GetSnapshotBaseBlock will return null and snap_block should already be false. The only case where the suggestion would change the checks performed (when GetSnapshotBaseBlock() == pindex && !pindex->IsAssumedValid()) is the case where background chain has been downloaded and fully validated, and the snapshot block loses it's assumed_valid flag after it become validated. In that case, none of the snap_block conditions will ever be reached. Whether a snapshot block is still considered a snapshot block after the snapshot is validated is just a semantic question.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T17:17:43Z",
      "diff_hunk" : "@@ -4903,36 +4890,23 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n-            // Assumed-valid blocks should connect to the main chain.\n-            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n-        }\n+        // There there should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        const bool snap_block = pindex == GetSnapshotBaseBlock();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478604893",
      "id" : 1478604893,
      "in_reply_to_id" : 1478018977,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585YIbhd",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 4907,
      "original_position" : 91,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1863282117,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478604893/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T17:24:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478604893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478757569"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478757569"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998490\r\n\r\nAdded a comment. It is necessary to set nSequenceId to avoid an assert failure in CheckBlockIndex. I think it's also a reasonable thing to do to make the block look like it was never received.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T19:03:01Z",
      "diff_hunk" : "@@ -91,13 +91,10 @@ CreateAndActivateUTXOSnapshot(\n             // these blocks instead\n             CBlockIndex *pindex = orig_tip;\n             while (pindex && pindex != chain.m_chain.Tip()) {\n-                pindex->nStatus &= ~BLOCK_HAVE_DATA;\n-                pindex->nStatus &= ~BLOCK_HAVE_UNDO;\n-                // We have to set the ASSUMED_VALID flag, because otherwise it\n-                // would not be possible to have a block index entry without HAVE_DATA\n-                // and with nTx > 0 (since we aren't setting the pruned flag);\n-                // see CheckBlockIndex().\n-                pindex->nStatus |= BLOCK_ASSUMED_VALID;\n+                pindex->nStatus = BlockStatus::BLOCK_VALID_TREE;\n+                pindex->nTx = 0;\n+                pindex->nChainTx = 0;\n+                pindex->nSequenceId = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478757569",
      "id" : 1478757569,
      "in_reply_to_id" : 1477998490,
      "line" : 103,
      "node_id" : "PRRC_kwDOABII585YJAzB",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 103,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/test/util/chainstate.h",
      "position" : 20,
      "pull_request_review_id" : 1863598337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478757569/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T22:29:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478757569",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478766159"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478766159"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477996772\r\n\r\nThanks, removed this",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T19:12:18Z",
      "diff_hunk" : "@@ -465,6 +465,12 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n         // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+            index->nTx = 0;\n+            // Keep nChainTx for the snapshot base since it is part of the\n+            // snapshot metadata. Reset it for other blocks this is simulating\n+            // not having been downloaded yet.\n+            if (i < last_assumed_valid_idx == 1) index->nChainTx = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478766159",
      "id" : 1478766159,
      "in_reply_to_id" : 1477996772,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585YJC5P",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 472,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1863598337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478766159/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T22:29:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478766159",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478766291"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478766291"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477998941\r\n\r\n> Same (sequence id)\r\n\r\nThanks, removed this",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T19:12:26Z",
      "diff_hunk" : "@@ -465,6 +465,12 @@ BOOST_FIXTURE_TEST_CASE(chainstatemanager_loadblockindex, TestChain100Setup)\n         // Blocks with heights in range [91, 110] are marked ASSUMED_VALID\n         if (i < last_assumed_valid_idx && i >= assumed_valid_start_idx) {\n             index->nStatus = BlockStatus::BLOCK_VALID_TREE | BlockStatus::BLOCK_ASSUMED_VALID;\n+            index->nTx = 0;\n+            // Keep nChainTx for the snapshot base since it is part of the\n+            // snapshot metadata. Reset it for other blocks this is simulating\n+            // not having been downloaded yet.\n+            if (i < last_assumed_valid_idx == 1) index->nChainTx = 0;\n+            index->nSequenceId = 0;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478766291",
      "id" : 1478766291,
      "in_reply_to_id" : 1477998941,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585YJC7T",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 473,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/test/validation_chainstatemanager_tests.cpp",
      "position" : null,
      "pull_request_review_id" : 1863598337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478766291/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T22:29:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478766291",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478776687"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478776687"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478006900\r\n\r\nThanks, reverted this",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T19:23:17Z",
      "diff_hunk" : "@@ -4577,15 +4577,7 @@ bool ChainstateManager::LoadBlockIndex()\n \n         for (CBlockIndex* pindex : vSortedByHeight) {\n             if (m_interrupt) return false;\n-            // If we have an assumeutxo-based chainstate, then the snapshot\n-            // block will be a candidate for the tip, but it may not be\n-            // VALID_TRANSACTIONS (eg if we haven't yet downloaded the block),\n-            // so we special-case the snapshot block as a potential candidate\n-            // here.\n-            if (pindex == GetSnapshotBaseBlock() ||\n-                    (pindex->IsValid(BLOCK_VALID_TRANSACTIONS) &&",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478776687",
      "id" : 1478776687,
      "in_reply_to_id" : 1478006900,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585YJFdv",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 4586,
      "original_position" : 10,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1863598337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478776687/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T22:29:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478776687",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478943273"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478943273"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1477981888\r\n\r\nThanks, restored this line",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T21:46:40Z",
      "diff_hunk" : "@@ -168,21 +169,18 @@ class CBlockIndex\n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n     arith_uint256 nChainWork{};\n \n-    //! Number of transactions in this block.\n+    //! Number of transactions in this block. This will be nonzero if the block\n+    //! reached the VALID_TRANSACTIONS validity level, and zero otherwise.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n     //! Note: this value is faked during UTXO snapshot load to ensure that\n     //! LoadBlockIndex() will load index entries for blocks that we lack data for.\n     //! @sa ActivateSnapshot\n     unsigned int nTx{0};\n \n     //! (memory only) Number of transactions in the chain up to and including this block.\n-    //! This value will be non-zero only if and only if transactions for this block and all its parents are available.\n-    //! Change to 64-bit type before 2024 (assuming worst case of 60 byte transactions).",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478943273",
      "id" : 1478943273,
      "in_reply_to_id" : 1477981888,
      "line" : 180,
      "node_id" : "PRRC_kwDOABII585YJuIp",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 180,
      "original_position" : 25,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 67,
      "pull_request_review_id" : 1863598337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478943273/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T22:29:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478943273",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478947294"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478947294"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478022794\r\n\r\nRestored this check",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-05T21:51:28Z",
      "diff_hunk" : "@@ -4903,36 +4890,23 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n-        if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n-            // Assumed-valid blocks should connect to the main chain.\n-            assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1478947294",
      "id" : 1478947294,
      "in_reply_to_id" : 1478022794,
      "line" : 4927,
      "node_id" : "PRRC_kwDOABII585YJvHe",
      "original_commit_id" : "a3228f02f69e28960f7da76054965c916e781f27",
      "original_line" : 4927,
      "original_position" : 78,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 70,
      "pull_request_review_id" : 1863598337,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478947294/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-05T22:29:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1478947294",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479169504"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479169504"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Would `GuessVerificationProgress` lose accuracy with the removal or was the comment wrong?",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-06T03:07:51Z",
      "diff_hunk" : "@@ -5531,14 +5536,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = AFTER_GENESIS_START; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n-        // Fake nTx so that LoadBlockIndex() loads assumed-valid CBlockIndex\n-        // entries (among other things)\n-        if (!index->nTx) {\n-            index->nTx = 1;\n-        }\n-        // Fake nChainTx so that GuessVerificationProgress reports accurately",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479169504",
      "id" : 1479169504,
      "line" : 5539,
      "node_id" : "PRRC_kwDOABII585YKlXg",
      "original_commit_id" : "59a8ca9333d2a618c989fb9c4cc7276068f658c7",
      "original_line" : 5539,
      "original_position" : 176,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 197,
      "pull_request_review_id" : 1864200241,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479169504/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-06T03:08:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479169504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479427801"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479427801"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think the comment was wrong, or do you have a code path where nChainTx is read when it was wrong (previously) or is unset (now)?\r\n\r\nGenerally, `GuessVerificationProgress` is only called to estimate the IBD progress at the tip, in which case nChainTx is set to the correct value. It is also used to guess rescan progress, which is not possible for blocks outside the active chain or blocks that have data missing, so nChainTx should be correct there as well.\r\n\r\nunrelated to this pull: Maybe an `Assume(nchaintx)` can be added to `GuessVerificationProgress`?",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-06T09:01:17Z",
      "diff_hunk" : "@@ -5531,14 +5536,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = AFTER_GENESIS_START; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n-        // Fake nTx so that LoadBlockIndex() loads assumed-valid CBlockIndex\n-        // entries (among other things)\n-        if (!index->nTx) {\n-            index->nTx = 1;\n-        }\n-        // Fake nChainTx so that GuessVerificationProgress reports accurately",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479427801",
      "id" : 1479427801,
      "in_reply_to_id" : 1479169504,
      "line" : 5539,
      "node_id" : "PRRC_kwDOABII585YLkbZ",
      "original_commit_id" : "59a8ca9333d2a618c989fb9c4cc7276068f658c7",
      "original_line" : 5539,
      "original_position" : 176,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 197,
      "pull_request_review_id" : 1864604493,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479427801/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-06T09:01:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479427801",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479428612"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479428612"
         }
      },
      "author_association" : "MEMBER",
      "body" : "unrelated to this pull: May be better to throw here, instead of returning wrong data, but this can be done in a follow-up.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-06T09:02:02Z",
      "diff_hunk" : "@@ -199,6 +199,34 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx values in the starting block\n+        # before loading the snapshot, the first block after it, the last block\n+        # before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 0)\n+\n+        # After loading the snapshot, check nChainTx values indirectly, by using the\n+        # getchaintxstats RPC, which returns differences of nChainTx values\n+        # between two blocks at the beginning and end of a specified window.\n+\n+        # nChainTx of the snapshot block should be SNAPSHOT_BASE_HEIGHT+1\n+        # because every block has one transaction. nChainTx of the previous\n+        # block should be 0. Confirm expected difference of these values.\n+        stats = n1.getchaintxstats(nblocks=1, blockhash=snapshot_hash)\n+        assert_equal(stats[\"window_tx_count\"], SNAPSHOT_BASE_HEIGHT+1)\n+\n+        # nChainTx of all blocks after START_HEIGHT and before\n+        # SNAPSHOT_BASE_HEIGHT should be 0. Confirm expected difference at\n+        # beginning and end of this window.\n+        stats = n1.getchaintxstats(nblocks=SNAPSHOT_BASE_HEIGHT-START_HEIGHT-2, blockhash=snapshot_prev_hash)\n+        assert_equal(stats[\"window_tx_count\"], 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479428612",
      "id" : 1479428612,
      "line" : 228,
      "node_id" : "PRRC_kwDOABII585YLkoE",
      "original_commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "original_line" : 228,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/feature_assumeutxo.py",
      "position" : 30,
      "pull_request_review_id" : 1864605869,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479428612/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-06T09:02:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1479428612",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Needs rebase",
      "created_at" : "2024-02-06T09:04:07Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1929064411",
      "id" : 1929064411,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII585y-y_b",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1929064411/reactions"
      },
      "updated_at" : "2024-02-06T09:04:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1929064411",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1480436573"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1480436573"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> do you have a code path where nChainTx is read when it was wrong (previously) or is unset (now)\r\n\r\nno, I never understood how the fake `nChainTx` values would help with guessing progress, but also wasn't 100% sure.",
      "commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "created_at" : "2024-02-06T19:27:10Z",
      "diff_hunk" : "@@ -5531,14 +5536,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = AFTER_GENESIS_START; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n-        // Fake nTx so that LoadBlockIndex() loads assumed-valid CBlockIndex\n-        // entries (among other things)\n-        if (!index->nTx) {\n-            index->nTx = 1;\n-        }\n-        // Fake nChainTx so that GuessVerificationProgress reports accurately",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1480436573",
      "id" : 1480436573,
      "in_reply_to_id" : 1479169504,
      "line" : 5539,
      "node_id" : "PRRC_kwDOABII585YPatd",
      "original_commit_id" : "59a8ca9333d2a618c989fb9c4cc7276068f658c7",
      "original_line" : 5539,
      "original_position" : 176,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 197,
      "pull_request_review_id" : 1866151418,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1480436573/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-06T19:27:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1480436573",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Needs rebase\r\n\r\nYes, thanks for recognizing the CI failures.\r\n\r\nRebased 603a92c9881ed78e29f15c48121ce8bf35d30837 -> 3f0b8607f549b27e9bb0cc8b189252a5cd954a36 ([`pr/nofake.4`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.4) -> [`pr/nofake.5`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.5), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.4-rebase..pr/nofake.5)) with test fixes needed after silent conflict with #29354",
      "created_at" : "2024-02-07T01:07:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1931061991",
      "id" : 1931061991,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII585zGarn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1931061991/reactions"
      },
      "updated_at" : "2024-02-07T01:07:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1931061991",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Could include the test https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1927200215 , or did you want to leave that for later?",
      "created_at" : "2024-02-07T08:25:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1931513793",
      "id" : 1931513793,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII585zII_B",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 1,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1931513793/reactions"
      },
      "updated_at" : "2024-02-07T08:25:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1931513793",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1931513793\r\n\r\n> Could include the test [#29370 (comment)](https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1927200215) , or did you want to leave that for later?\r\n\r\nI had just forgotten about this. Added the test now, and fixed another bug uncovered by the test (forgetting to reset pindexFirstNeverProcessed after moving upwards from the snapshot block).\r\n\r\nUpdated 3f0b8607f549b27e9bb0cc8b189252a5cd954a36 -> 2f4e7e8dc82adb60a339211cdc15408b5a6919ce ([`pr/nofake.5`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.5) -> [`pr/nofake.6`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.5..pr/nofake.6)) adding maflcko's test\r\n",
      "created_at" : "2024-02-07T19:19:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1932712410",
      "id" : 1932712410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII585zMtna",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1932712410/reactions"
      },
      "updated_at" : "2024-02-07T19:19:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1932712410",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483275071"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483275071"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1479169504\r\n\r\n> unrelated to this pull: Maybe an `Assume(nchaintx)` can be added to `GuessVerificationProgress`?\r\n\r\nI went ahead and added this in a separate commit\r\n",
      "commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "created_at" : "2024-02-08T16:35:39Z",
      "diff_hunk" : "@@ -5531,14 +5536,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n     for (int i = AFTER_GENESIS_START; i <= snapshot_chainstate.m_chain.Height(); ++i) {\n         index = snapshot_chainstate.m_chain[i];\n \n-        // Fake nTx so that LoadBlockIndex() loads assumed-valid CBlockIndex\n-        // entries (among other things)\n-        if (!index->nTx) {\n-            index->nTx = 1;\n-        }\n-        // Fake nChainTx so that GuessVerificationProgress reports accurately",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483275071",
      "id" : 1483275071,
      "in_reply_to_id" : 1479169504,
      "line" : 5538,
      "node_id" : "PRRC_kwDOABII585YaPs_",
      "original_commit_id" : "59a8ca9333d2a618c989fb9c4cc7276068f658c7",
      "original_line" : 5538,
      "original_position" : 176,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 214,
      "pull_request_review_id" : 1870720275,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483275071/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-08T16:48:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483275071",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483625151"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483625151"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why check these values indirectly instead of directly (field `txcount`)?",
      "commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "created_at" : "2024-02-08T21:42:57Z",
      "diff_hunk" : "@@ -205,6 +208,35 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx values in the starting block\n+        # before loading the snapshot, the first block after it, the last block\n+        # before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 1)\n+\n+        # After loading the snapshot, check nChainTx values indirectly, by using the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483625151",
      "id" : 1483625151,
      "line" : 231,
      "node_id" : "PRRC_kwDOABII585YblK_",
      "original_commit_id" : "d2bbe427d33400ce75e812f667787fb943eacb3c",
      "original_line" : 223,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/feature_assumeutxo.py",
      "position" : 48,
      "pull_request_review_id" : 1871315375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483625151/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T19:13:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483625151",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483671675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483671675"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "comment can be removed, it's no longer faked.",
      "commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "created_at" : "2024-02-08T22:40:29Z",
      "diff_hunk" : "@@ -173,21 +177,19 @@ class CBlockIndex\n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n     arith_uint256 nChainWork{};\n \n-    //! Number of transactions in this block.\n+    //! Number of transactions in this block. This will be nonzero if the block\n+    //! reached the VALID_TRANSACTIONS level, and zero otherwise.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n     //! Note: this value is faked during UTXO snapshot load to ensure that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483671675",
      "id" : 1483671675,
      "line" : 170,
      "node_id" : "PRRC_kwDOABII585Ybwh7",
      "original_commit_id" : "207a171769a662421c5490f6f3ddca9098ae3e78",
      "original_line" : 183,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 57,
      "pull_request_review_id" : 1871315375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483671675/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T19:13:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1483671675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484705186"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484705186"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is it necessary to keep a placeholder / would just removing it break something? I'm asking beacuse as far as I can see, the `enum BlockStatus` is only used in `IsValid` / `RaiseValidity`, but not for `nStatus`, which is a `uint32_t`.",
      "commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "created_at" : "2024-02-09T19:07:57Z",
      "diff_hunk" : "@@ -128,21 +128,8 @@ enum BlockStatus : uint32_t {\n \n     BLOCK_OPT_WITNESS        =   128, //!< block data in blk*.dat was received with a witness-enforcing client\n \n-    /**\n-     * If ASSUMED_VALID is set, it means that this block has not been validated\n-     * and has validity status less than VALID_SCRIPTS. Also that it may have\n-     * descendant blocks with VALID_SCRIPTS set, because they can be validated\n-     * based on an assumeutxo snapshot.\n-     *\n-     * When an assumeutxo snapshot is loaded, the ASSUMED_VALID flag is added to\n-     * unvalidated blocks at the snapshot height and below. Then, as the background\n-     * validation progresses, and these blocks are validated, the ASSUMED_VALID\n-     * flags are removed. See `doc/design/assumeutxo.md` for details.\n-     *\n-     * This flag is only used to implement checks in CheckBlockIndex() and\n-     * should not be used elsewhere.\n-     */\n-    BLOCK_ASSUMED_VALID      =   256,\n+    BLOCK_STATUS_RESERVED    =   256, //!< Unused flag that was previously set on assumeutxo snapshot blocks and their",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484705186",
      "id" : 1484705186,
      "line" : 131,
      "node_id" : "PRRC_kwDOABII585Yfs2i",
      "original_commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "original_line" : 131,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 19,
      "pull_request_review_id" : 1871315375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484705186/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T19:13:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484705186",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484708844"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484708844"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The next paragraph refers to this deleted comment (\"using\r\n  the nStatus flag mentioned above\") and should be updated too.",
      "commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "created_at" : "2024-02-09T19:12:13Z",
      "diff_hunk" : "@@ -51,12 +51,6 @@ The utility script\n \n ## Design notes\n \n-- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484708844",
      "id" : 1484708844,
      "line" : 54,
      "node_id" : "PRRC_kwDOABII585Yftvs",
      "original_commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "original_line" : 54,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/design/assumeutxo.md",
      "position" : 4,
      "pull_request_review_id" : 1871315375,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484708844/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T19:13:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484708844",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484742841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484742841"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Why check these values indirectly instead of directly (field `txcount`)?\r\n\r\nWow, I did not notice that field ð¤¦. That will make the test a lot better.",
      "commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "created_at" : "2024-02-09T19:51:19Z",
      "diff_hunk" : "@@ -205,6 +208,35 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx values in the starting block\n+        # before loading the snapshot, the first block after it, the last block\n+        # before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 1)\n+\n+        # After loading the snapshot, check nChainTx values indirectly, by using the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484742841",
      "id" : 1484742841,
      "in_reply_to_id" : 1483625151,
      "line" : 231,
      "node_id" : "PRRC_kwDOABII585Yf2C5",
      "original_commit_id" : "d2bbe427d33400ce75e812f667787fb943eacb3c",
      "original_line" : 223,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/feature_assumeutxo.py",
      "position" : 48,
      "pull_request_review_id" : 1873099729,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484742841/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-09T19:51:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1484742841",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491224522"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224522"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484708844\r\n\r\n> The next paragraph refers to this deleted comment (\"using the nStatus flag mentioned above\") and should be updated too.\r\n\r\nThanks, fixed",
      "commit_id" : "8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b",
      "created_at" : "2024-02-15T15:46:33Z",
      "diff_hunk" : "@@ -51,12 +51,6 @@ The utility script\n \n ## Design notes\n \n-- A new block index `nStatus` flag is introduced, `BLOCK_ASSUMED_VALID`, to mark block",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491224522",
      "id" : 1491224522,
      "in_reply_to_id" : 1484708844,
      "line" : 54,
      "node_id" : "PRRC_kwDOABII585Y4kfK",
      "original_commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "original_line" : 54,
      "original_position" : 4,
      "original_start_line" : null,
      "path" : "doc/design/assumeutxo.md",
      "position" : 4,
      "pull_request_review_id" : 1883156605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224522/reactions"
      },
      "side" : "LEFT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-15T16:15:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224522",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491224648"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224648"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484705186\r\n\r\n> Is it necessary to keep a placeholder / would just removing it break something? I'm asking beacuse as far as I can see, the `enum BlockStatus` is only used in `IsValid` / `RaiseValidity`, but not for `nStatus`, which is a `uint32_t`.\r\n\r\nThis is mostly just for documentation. I think it's useful to keep a note that the field was previously used and may be saved to disk. Probably though it would not break anything if the field were reused in the future, so it should be possible to reclaim this if we were running out of flags.",
      "commit_id" : "8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b",
      "created_at" : "2024-02-15T15:46:39Z",
      "diff_hunk" : "@@ -128,21 +128,8 @@ enum BlockStatus : uint32_t {\n \n     BLOCK_OPT_WITNESS        =   128, //!< block data in blk*.dat was received with a witness-enforcing client\n \n-    /**\n-     * If ASSUMED_VALID is set, it means that this block has not been validated\n-     * and has validity status less than VALID_SCRIPTS. Also that it may have\n-     * descendant blocks with VALID_SCRIPTS set, because they can be validated\n-     * based on an assumeutxo snapshot.\n-     *\n-     * When an assumeutxo snapshot is loaded, the ASSUMED_VALID flag is added to\n-     * unvalidated blocks at the snapshot height and below. Then, as the background\n-     * validation progresses, and these blocks are validated, the ASSUMED_VALID\n-     * flags are removed. See `doc/design/assumeutxo.md` for details.\n-     *\n-     * This flag is only used to implement checks in CheckBlockIndex() and\n-     * should not be used elsewhere.\n-     */\n-    BLOCK_ASSUMED_VALID      =   256,\n+    BLOCK_STATUS_RESERVED    =   256, //!< Unused flag that was previously set on assumeutxo snapshot blocks and their",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491224648",
      "id" : 1491224648,
      "in_reply_to_id" : 1484705186,
      "line" : 131,
      "node_id" : "PRRC_kwDOABII585Y4khI",
      "original_commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "original_line" : 131,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 44,
      "pull_request_review_id" : 1883156605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224648/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-15T16:15:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224648",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491224965"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224965"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483625151\r\n\r\n> Why check these values indirectly instead of directly (field `txcount`)?\r\n\r\nThanks, checking these values directly now",
      "commit_id" : "8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b",
      "created_at" : "2024-02-15T15:46:54Z",
      "diff_hunk" : "@@ -205,6 +208,35 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx values in the starting block\n+        # before loading the snapshot, the first block after it, the last block\n+        # before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 1)\n+\n+        # After loading the snapshot, check nChainTx values indirectly, by using the",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491224965",
      "id" : 1491224965,
      "in_reply_to_id" : 1483625151,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Y4kmF",
      "original_commit_id" : "d2bbe427d33400ce75e812f667787fb943eacb3c",
      "original_line" : 223,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/feature_assumeutxo.py",
      "position" : null,
      "pull_request_review_id" : 1883156605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224965/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-15T16:15:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491224965",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491225507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491225507"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1483671675\r\n\r\n> comment can be removed, it's no longer faked.\r\n\r\nGood catch, dropped this comment.",
      "commit_id" : "8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b",
      "created_at" : "2024-02-15T15:47:15Z",
      "diff_hunk" : "@@ -173,21 +177,19 @@ class CBlockIndex\n     //! (memory only) Total amount of work (expected number of hashes) in the chain up to and including this block\n     arith_uint256 nChainWork{};\n \n-    //! Number of transactions in this block.\n+    //! Number of transactions in this block. This will be nonzero if the block\n+    //! reached the VALID_TRANSACTIONS level, and zero otherwise.\n     //! Note: in a potential headers-first mode, this number cannot be relied upon\n     //! Note: this value is faked during UTXO snapshot load to ensure that",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491225507",
      "id" : 1491225507,
      "in_reply_to_id" : 1483671675,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Y4kuj",
      "original_commit_id" : "207a171769a662421c5490f6f3ddca9098ae3e78",
      "original_line" : 183,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : null,
      "pull_request_review_id" : 1883156605,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491225507/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-15T16:15:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491225507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491287980"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491287980"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1484705186\r\n\r\n> Is it necessary to keep a placeholder / would just removing it break something? I'm asking beacuse as far as I can see, the `enum BlockStatus` is only used in `IsValid` / `RaiseValidity`, but not for `nStatus`, which is a `uint32_t`.\r\n\r\nIf this asking whether dropping the placeholder would change the underlying enum type, I think it wouldn't because it it's declared 32-bit unsigned explicitly (`enum BlockStatus : uint32_t`)\r\n",
      "commit_id" : "8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b",
      "created_at" : "2024-02-15T16:28:06Z",
      "diff_hunk" : "@@ -128,21 +128,8 @@ enum BlockStatus : uint32_t {\n \n     BLOCK_OPT_WITNESS        =   128, //!< block data in blk*.dat was received with a witness-enforcing client\n \n-    /**\n-     * If ASSUMED_VALID is set, it means that this block has not been validated\n-     * and has validity status less than VALID_SCRIPTS. Also that it may have\n-     * descendant blocks with VALID_SCRIPTS set, because they can be validated\n-     * based on an assumeutxo snapshot.\n-     *\n-     * When an assumeutxo snapshot is loaded, the ASSUMED_VALID flag is added to\n-     * unvalidated blocks at the snapshot height and below. Then, as the background\n-     * validation progresses, and these blocks are validated, the ASSUMED_VALID\n-     * flags are removed. See `doc/design/assumeutxo.md` for details.\n-     *\n-     * This flag is only used to implement checks in CheckBlockIndex() and\n-     * should not be used elsewhere.\n-     */\n-    BLOCK_ASSUMED_VALID      =   256,\n+    BLOCK_STATUS_RESERVED    =   256, //!< Unused flag that was previously set on assumeutxo snapshot blocks and their",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1491287980",
      "id" : 1491287980,
      "in_reply_to_id" : 1484705186,
      "line" : 131,
      "node_id" : "PRRC_kwDOABII585Y4z-s",
      "original_commit_id" : "c9ca4ca4d970f9d42d0254775c04d114bd2152c3",
      "original_line" : 131,
      "original_position" : 19,
      "original_start_line" : null,
      "path" : "src/chain.h",
      "position" : 44,
      "pull_request_review_id" : 1883296887,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491287980/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-15T16:28:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1491287980",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1494616142"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1494616142"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Would need to add a suppression for now?\r\n\r\n```\r\n node1 stderr rpc/blockchain.cpp:1658:42: runtime error: unsigned integer overflow: 0 - 200 cannot be represented in type 'unsigned int'\r\n    #0 0x5622afcfe34c in getchaintxstats()::$_0::operator()(RPCHelpMan const&, JSONRPCRequest const&) const src/rpc/blockchain.cpp:1658:42\r\n    #1 0x5622afcfe34c in UniValue std::__invoke_impl<UniValue, getchaintxstats()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(std::__invoke_other, getchaintxstats()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/invoke.h:61:14\r\n    #2 0x5622afcfe34c in std::enable_if<is_invocable_r_v<UniValue, getchaintxstats()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>, UniValue>::type std::__invoke_r<UniValue, getchaintxstats()::$_0&, RPCHelpMan const&, JSONRPCRequest const&>(getchaintxstats()::$_0&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/invoke.h:114:9\r\n    #3 0x5622afcfe34c in std::_Function_handler<UniValue (RPCHelpMan const&, JSONRPCRequest const&), getchaintxstats()::$_0>::_M_invoke(std::_Any_data const&, RPCHelpMan const&, JSONRPCRequest const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:290:9\r\n    #4 0x5622b0be25a6 in std::function<UniValue (RPCHelpMan const&, JSONRPCRequest const&)>::operator()(RPCHelpMan const&, JSONRPCRequest const&) const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n    #5 0x5622b0be25a6 in RPCHelpMan::HandleRequest(JSONRPCRequest const&) const src/rpc/util.cpp:620:20\r\n    #6 0x5622afd5574a in CRPCCommand::CRPCCommand(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, RPCHelpMan (*)())::'lambda'(JSONRPCRequest const&, UniValue&, bool)::operator()(JSONRPCRequest const&, UniValue&, bool) const src/./rpc/server.h:107:91\r\n    #7 0x5622affb821e in std::function<bool (JSONRPCRequest const&, UniValue&, bool)>::operator()(JSONRPCRequest const&, UniValue&, bool) const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n    #8 0x5622affb821e in ExecuteCommand(CRPCCommand const&, JSONRPCRequest const&, UniValue&, bool) src/rpc/server.cpp:537:20\r\n    #9 0x5622affb821e in ExecuteCommands(std::vector<CRPCCommand const*, std::allocator<CRPCCommand const*>> const&, JSONRPCRequest const&, UniValue&) src/rpc/server.cpp:504:13\r\n    #10 0x5622affb4fa1 in CRPCTable::execute(JSONRPCRequest const&) const src/rpc/server.cpp:524:13\r\n    #11 0x5622b02e0d82 in HTTPReq_JSONRPC(std::any const&, HTTPRequest*) src/httprpc.cpp:203:40\r\n    #12 0x5622b030a5ad in std::function<bool (HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&)>::operator()(HTTPRequest*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>> const&) const /usr/bin/../lib/gcc/x86_64-linux-gnu/13/../../../../include/c++/13/bits/std_function.h:591:9\r\n    #13 0x5622b030a5ad in HTTPWorkItem::operator()() src/httpserver.cpp:60:9\r\n    #14 0x5622b03102b6 in WorkQueue<HTTPClosure>::Run() src/httpserver.cpp:115:13\r\n    #15 0x5622b02f939c in HTTPWorkQueueRun(WorkQueue<HTTPClosure>*, int) src/httpserver.cpp:404:12\r\n    #16 0x7f71dd506b83  (/lib/x86_64-linux-gnu/libstdc++.so.6+0xeab83) (BuildId: befd6a93d352d7d294804769783f60c9cc0cb5f5)\r\n    #17 0x5622af76219e in asan_thread_start(void*) asan_interceptors.cpp.o\r\n    #18 0x7f71dd17aac9  (/lib/x86_64-linux-gnu/libc.so.6+0x97ac9) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\n    #19 0x7f71dd20b47b  (/lib/x86_64-linux-gnu/libc.so.6+0x12847b) (BuildId: f0b834daa3d05a80967e9ec2f990a1ea71c958fa)\r\nSUMMARY: UndefinedBehaviorSanitizer: unsigned-integer-overflow rpc/blockchain.cpp:1658:42 in \r\n```\r\n\r\nhttps://cirrus-ci.com/task/5549867297144832?logs=ci#L2930",
      "commit_id" : "8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b",
      "created_at" : "2024-02-19T14:17:54Z",
      "diff_hunk" : "@@ -199,6 +199,34 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx values in the starting block\n+        # before loading the snapshot, the first block after it, the last block\n+        # before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 0)\n+\n+        # After loading the snapshot, check nChainTx values indirectly, by using the\n+        # getchaintxstats RPC, which returns differences of nChainTx values\n+        # between two blocks at the beginning and end of a specified window.\n+\n+        # nChainTx of the snapshot block should be SNAPSHOT_BASE_HEIGHT+1\n+        # because every block has one transaction. nChainTx of the previous\n+        # block should be 0. Confirm expected difference of these values.\n+        stats = n1.getchaintxstats(nblocks=1, blockhash=snapshot_hash)\n+        assert_equal(stats[\"window_tx_count\"], SNAPSHOT_BASE_HEIGHT+1)\n+\n+        # nChainTx of all blocks after START_HEIGHT and before\n+        # SNAPSHOT_BASE_HEIGHT should be 0. Confirm expected difference at\n+        # beginning and end of this window.\n+        stats = n1.getchaintxstats(nblocks=SNAPSHOT_BASE_HEIGHT-START_HEIGHT-2, blockhash=snapshot_prev_hash)\n+        assert_equal(stats[\"window_tx_count\"], 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1494616142",
      "id" : 1494616142,
      "in_reply_to_id" : 1479428612,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ZFghO",
      "original_commit_id" : "603a92c9881ed78e29f15c48121ce8bf35d30837",
      "original_line" : 245,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "test/functional/feature_assumeutxo.py",
      "position" : null,
      "pull_request_review_id" : 1888522953,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1494616142/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-19T14:17:54Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1494616142",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1495983754"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495983754"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "CI failed on this line: https://cirrus-ci.com/task/5549867297144832?logs=ci#L2880",
      "commit_id" : "8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b",
      "created_at" : "2024-02-20T15:07:01Z",
      "diff_hunk" : "@@ -216,20 +224,19 @@ def run_test(self):\n         snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n         snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n \n-        # nTx of the starting block should be 1 because it actually has one\n-        # transaction. nTx of later blocks should be fake 1 values set by\n-        # snapshot loading code.\n+        # nTx of the starting block should be 1 because it has one transaction.\n+        # nTx of later blocks should be unset.\n         assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\n-        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 1)\n-        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 1)\n-        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 1)\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 0)\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 0)\n \n         # nChainTx of the starting block should be its height + 1. nChainTx of\n         # the snapshot block should be snapshot_nchaintx. nChainTx of blocks in\n-        # between these should be fake values set by snapshot loading code.\n+        # between these should be unset.\n         assert_equal(n1.getchaintxstats(nblocks=1, blockhash=start_hash)[\"txcount\"], START_HEIGHT + 1)\n-        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=start_next_hash)[\"txcount\"], START_HEIGHT + 2)\n-        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=snapshot_prev_hash)[\"txcount\"], SNAPSHOT_BASE_HEIGHT)\n+        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=start_next_hash)[\"txcount\"], 0)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1495983754",
      "id" : 1495983754,
      "line" : 238,
      "node_id" : "PRRC_kwDOABII585ZKuaK",
      "original_commit_id" : "50273702d7d5dafc1c912ca34fde58fcf88e2a85",
      "original_line" : 238,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/feature_assumeutxo.py",
      "position" : 55,
      "pull_request_review_id" : 1890683967,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495983754/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-20T15:07:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1495983754",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK, looks good at first sight, will do a deeper review when it's clear if the CI failure is an issue. I couldn't reproduce it locally so far...",
      "created_at" : "2024-02-20T15:16:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954438224",
      "id" : 1954438224,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII5850flxQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954438224/reactions"
      },
      "updated_at" : "2024-02-20T15:16:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954438224",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1322187?v=4",
         "events_url" : "https://api.github.com/users/fjahr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fjahr/followers",
         "following_url" : "https://api.github.com/users/fjahr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fjahr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fjahr",
         "id" : 1322187,
         "login" : "fjahr",
         "node_id" : "MDQ6VXNlcjEzMjIxODc=",
         "organizations_url" : "https://api.github.com/users/fjahr/orgs",
         "received_events_url" : "https://api.github.com/users/fjahr/received_events",
         "repos_url" : "https://api.github.com/users/fjahr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fjahr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fjahr"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "To reproduce locally, you'll have to compile with the `integer` sanitizer (not to be confused by the `undefined` sanitizer)",
      "created_at" : "2024-02-20T15:20:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954448961",
      "id" : 1954448961,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII5850foZB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954448961/reactions"
      },
      "updated_at" : "2024-02-20T15:20:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954448961",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "CI failure is just a preexisting bug in a line of code that doesn't affect anything:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/45b2a91897ca8f4a3e0c1adcfb30cf570971da4e/src/rpc/blockchain.cpp#L1658\r\n\r\nTwo `nChainTx` values in the `getchaintxstats` are subtracted and this triggers the undefined behavior sanitizer because they are unsigned and the result is negative. `getchaintxstats` has a number of edge case problems like this that should be cleaned up but don't really affect anything. I'll probably just add a ubsan suppression in this PR.",
      "created_at" : "2024-02-20T15:24:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954455499",
      "id" : 1954455499,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII5850fp_L",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954455499/reactions"
      },
      "updated_at" : "2024-02-20T15:24:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954455499",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> To reproduce locally, you'll have to compile with the `integer` sanitizer (not to be confused by the `undefined` sanitizer)\r\n\r\nThanks! I was just trying to reproduce this locally using the undefined sanitizer.",
      "created_at" : "2024-02-20T15:24:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954457409",
      "id" : 1954457409,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII5850fqdB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954457409/reactions"
      },
      "updated_at" : "2024-02-20T15:24:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954457409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 8ab4e07a1a54c9f4818a557fd1182bbb59e1cf9b -> 8afcd99435b693f69b8c3a918b0573ef12559b22 ([`pr/nofake.8`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.8) -> [`pr/nofake.9`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.9), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.8..pr/nofake.9)) adding suppression to avoid getchaintxstats ubsan integer overflow errors exposed by new test coverage",
      "created_at" : "2024-02-20T19:50:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1954946598",
      "id" : 1954946598,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII5850hh4m",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954946598/reactions"
      },
      "updated_at" : "2024-02-20T19:50:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1954946598",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499026543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499026543"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit in the first commit: Why claim they are fake when one can test which ones are fake?\r\n\r\n\r\n```diff\r\ndiff --git a/test/functional/feature_assumeutxo.py b/test/functional/feature_assumeutxo.py\r\nindex 49cd2d8ec1..1f0d4bb309 100755\r\n--- a/test/functional/feature_assumeutxo.py\r\n+++ b/test/functional/feature_assumeutxo.py\r\n@@ -309,6 +309,17 @@ class AssumeutxoTest(BitcoinTestFramework):\r\n         }\r\n         self.wait_until(lambda: n1.getindexinfo() == completed_idx_state)\r\n \r\n+        self.log.info(\"Re-check nTx and nChainTx values\")\r\n+        assert_equal(n1.getblockheader(start_hash)[\"nTx\"], 1)\r\n+        assert_equal(n1.getblockheader(start_next_hash)[\"nTx\"], 2)\r\n+        assert_equal(n1.getblockheader(snapshot_prev_hash)[\"nTx\"], 1)\r\n+        assert_equal(n1.getblockheader(snapshot_hash)[\"nTx\"], 2)\r\n+\r\n+        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=start_hash)[\"txcount\"], START_HEIGHT + 1)\r\n+        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=start_next_hash)[\"txcount\"], START_HEIGHT + 3)\r\n+        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=snapshot_prev_hash)[\"txcount\"], snapshot_nchaintx - 2)\r\n+        assert_equal(n1.getchaintxstats(nblocks=1, blockhash=snapshot_hash)[\"txcount\"], snapshot_nchaintx)\r\n+\r\n \r\n         for i in (0, 1):\r\n             n = self.nodes[i]\r\n",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-22T10:33:39Z",
      "diff_hunk" : "@@ -205,6 +208,30 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx and nChainTx values in the\n+        # starting block before loading the snapshot, the first block after it,\n+        # the last block before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+\n+        # nTx of the starting block should be 1 because it actually has one\n+        # transaction. nTx of later blocks should be fake 1 values set by",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499026543",
      "id" : 1499026543,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ZWVRv",
      "original_commit_id" : "32481c30a55d697b361a6f840be5a136ef951ee4",
      "original_line" : 220,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "test/functional/feature_assumeutxo.py",
      "position" : null,
      "pull_request_review_id" : 1895496933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499026543/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-22T11:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499026543",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499033207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499033207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: In the first commit. I tested this locally, and the suppressions were not needed. The cirrus link you provide says:\r\n\r\n```\r\n node1 stderr rpc/blockchain.cpp:1658:42: runtime error: unsigned integer overflow: 0 - 200 cannot be represented in type 'unsigned int'\r\n```\r\n\r\nLooking at the `0`, it seems more likely that this was introduced in a later commit.\r\n\r\nAlso, Cirrus will clear the log in 90 days, so it may be better to not link to it.",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-22T10:38:54Z",
      "diff_hunk" : "@@ -61,6 +62,7 @@ implicit-integer-sign-change:CBlockPolicyEstimator::processBlockTx\n implicit-integer-sign-change:SetStdinEcho\n implicit-integer-sign-change:compressor.h\n implicit-integer-sign-change:crypto/\n+implicit-integer-sign-change:getchaintxstats*",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499033207",
      "id" : 1499033207,
      "line" : 65,
      "node_id" : "PRRC_kwDOABII585ZWW53",
      "original_commit_id" : "32481c30a55d697b361a6f840be5a136ef951ee4",
      "original_line" : 65,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/sanitizer_suppressions/ubsan",
      "position" : 12,
      "pull_request_review_id" : 1895496933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499033207/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-22T11:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499033207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499040796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499040796"
         }
      },
      "author_association" : "MEMBER",
      "body" : "second commit: LogPrintf is deprecated. Also, could use `STR_INTERNAL_BUG` to reduce boilerplate.",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-22T10:43:33Z",
      "diff_hunk" : "@@ -5115,6 +5115,11 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n     if (pindex == nullptr)\n         return 0.0;\n \n+    if (!Assume(pindex->nChainTx > 0)) {\n+        LogPrintf(\"Internal bug detected: block %d has unset nChainTx (%s %s). Please report this issue here: %s\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499040796",
      "id" : 1499040796,
      "line" : 5125,
      "node_id" : "PRRC_kwDOABII585ZWYwc",
      "original_commit_id" : "cecf618b68d874ed90949c8c10959437b3047f71",
      "original_line" : 5119,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 190,
      "pull_request_review_id" : 1895496933,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499040796/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-22T11:55:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499040796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499216412"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499216412"
         }
      },
      "author_association" : "MEMBER",
      "body" : "594336ae8aad026dacb5d536df63bd374e3a89c7: there there",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-22T13:08:24Z",
      "diff_hunk" : "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There there should only be an nTx value if we have",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499216412",
      "id" : 1499216412,
      "line" : 4930,
      "node_id" : "PRRC_kwDOABII585ZXDoc",
      "original_commit_id" : "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "original_line" : 4932,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 85,
      "pull_request_review_id" : 1895813376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499216412/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-22T16:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499216412",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499230459"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499230459"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit in https://github.com/bitcoin/bitcoin/commit/594336ae8aad026dacb5d536df63bd374e3a89c7: Would be good to avoid the use of `=` in C++, when possible, as it narrowing and possibly confusing when used in contexts with `==`.\r\n\r\n```cpp\r\nconst bool is_active{c == &ActiveChainstate()};",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-22T13:19:18Z",
      "diff_hunk" : "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499230459",
      "id" : 1499230459,
      "line" : 4962,
      "node_id" : "PRRC_kwDOABII585ZXHD7",
      "original_commit_id" : "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "original_line" : 4964,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 122,
      "pull_request_review_id" : 1895813376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499230459/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-22T16:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499230459",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499266054"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499266054"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just to clarify, the `is_active` check is just a belt-and-suspender, since `pindex == snap_base` implies `is_active`?\r\n\r\nAn alternative may be to split the assumption out into a separate assert.",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-22T13:45:46Z",
      "diff_hunk" : "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499266054",
      "id" : 1499266054,
      "line" : 4964,
      "node_id" : "PRRC_kwDOABII585ZXPwG",
      "original_commit_id" : "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "original_line" : 4966,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 125,
      "pull_request_review_id" : 1895813376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499266054/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-22T16:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499266054",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499519079"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499519079"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Why would the *background* chainstate have the *snapshot* base? The comment seems wrong and the second branch of the if condition is never taken, no?",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-22T16:20:49Z",
      "diff_hunk" : "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n                     // If this block sorts at least as good as the current tip and\n                     // is valid and we have all data for its parents, it must be in\n                     // setBlockIndexCandidates.  m_chain.Tip() must also be there\n                     // even if some data has been pruned.\n                     //\n-                    if ((pindexFirstMissing == nullptr || pindex == c->m_chain.Tip())) {\n+                    if (pindexFirstMissing == nullptr || pindex == c->m_chain.Tip() || (is_active && pindex == snap_base)) {\n                         // The active chainstate should always have this block\n                         // as a candidate, but a background chainstate should\n                         // only have it if it is an ancestor of the snapshot base.\n-                        if (is_active || GetSnapshotBaseBlock()->GetAncestor(pindex->nHeight) == pindex) {\n+                        if (is_active || snap_base->GetAncestor(pindex->nHeight) == pindex) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499519079",
      "id" : 1499519079,
      "line" : 4975,
      "node_id" : "PRRC_kwDOABII585ZYNhn",
      "original_commit_id" : "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "original_line" : 4977,
      "original_position" : 135,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 139,
      "pull_request_review_id" : 1895813376,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499519079/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-22T16:31:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499519079",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499608826"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499608826"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499266054\r\n\r\n> Just to clarify, the `is_active` check is just a belt-and-suspender, since `pindex == snap_base` implies `is_active`?\r\n\r\nIt's meant to be a real check. I should probably add a comment about it. The idea is that on the snapshot chain, the snapshot block should be in `setBlockIndexCandidates` even though earlier transactions may not be downloaded.\r\n\r\nI don't think `pindex == snap_base` implies anything about `is_active`, because the `for ... GetAll` loop above should be iterating over all chains and only one of them should be active.\r\n\r\nHowever, I think it might be true right now that the snapshot block is added to `setBlockIndexCandidates` for all chains when it is missing transaction data, even though it only makes sense to add it on the snapshot chain. So the checks below may happen to succeed even if `is_active` is false. But if that's the case, it's just a side-effect of the way some sloppy code around TryAddBlockIndexCandidate is written, not something we should rely on here:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1ac627c485a43e50a9a49baddce186ee3ad4daad/src/validation.cpp#L4602-L4613\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/1ac627c485a43e50a9a49baddce186ee3ad4daad/src/test/validation_chainstatemanager_tests.cpp#L519-L522\r\n\r\nI think we will probably want a separate PR to clean up code around `TryAddBlockIndexCandidate` and only add blocks to `setBlockIndexCandidates` that really belong there.",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-22T17:24:48Z",
      "diff_hunk" : "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499608826",
      "id" : 1499608826,
      "in_reply_to_id" : 1499266054,
      "line" : 4964,
      "node_id" : "PRRC_kwDOABII585ZYjb6",
      "original_commit_id" : "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "original_line" : 4966,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 125,
      "pull_request_review_id" : 1896432015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499608826/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-22T17:52:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499608826",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499641472"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499641472"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499519079\r\n\r\n> Why would the _background_ chainstate have the _snapshot_ base? The comment seems wrong and the second branch of the if condition is never taken, no?\r\n\r\nI think the comment is just saying that if pindex is an ancestor of the snapshot base, it should be in setBlockIndexCandidates. It's possible the snapshot base could be in there too, but the code is only checking for it to be there if the chain is active, or if all transactions in and before the snapshot base were downloaded.",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-22T17:48:10Z",
      "diff_hunk" : "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n                     // If this block sorts at least as good as the current tip and\n                     // is valid and we have all data for its parents, it must be in\n                     // setBlockIndexCandidates.  m_chain.Tip() must also be there\n                     // even if some data has been pruned.\n                     //\n-                    if ((pindexFirstMissing == nullptr || pindex == c->m_chain.Tip())) {\n+                    if (pindexFirstMissing == nullptr || pindex == c->m_chain.Tip() || (is_active && pindex == snap_base)) {\n                         // The active chainstate should always have this block\n                         // as a candidate, but a background chainstate should\n                         // only have it if it is an ancestor of the snapshot base.\n-                        if (is_active || GetSnapshotBaseBlock()->GetAncestor(pindex->nHeight) == pindex) {\n+                        if (is_active || snap_base->GetAncestor(pindex->nHeight) == pindex) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499641472",
      "id" : 1499641472,
      "in_reply_to_id" : 1499519079,
      "line" : 4975,
      "node_id" : "PRRC_kwDOABII585ZYraA",
      "original_commit_id" : "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "original_line" : 4977,
      "original_position" : 135,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 139,
      "pull_request_review_id" : 1896432015,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499641472/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-22T17:52:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1499641472",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502615711"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502615711"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499026543\r\n\r\n> nit in the first commit: Why claim they are fake when one can test which ones are fake?",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-26T13:29:26Z",
      "diff_hunk" : "@@ -205,6 +208,30 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx and nChainTx values in the\n+        # starting block before loading the snapshot, the first block after it,\n+        # the last block before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+\n+        # nTx of the starting block should be 1 because it actually has one\n+        # transaction. nTx of later blocks should be fake 1 values set by",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502615711",
      "id" : 1502615711,
      "in_reply_to_id" : 1499026543,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ZkBif",
      "original_commit_id" : "32481c30a55d697b361a6f840be5a136ef951ee4",
      "original_line" : 220,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "test/functional/feature_assumeutxo.py",
      "position" : null,
      "pull_request_review_id" : 1900881113,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502615711/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-26T13:56:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502615711",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502654993"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502654993"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499026543\r\n\r\n> nit in the first commit: Why claim they are fake when one can test which ones are fake?\r\n\r\nThis PR is removing the fake values, so the parts of this test that refer to fake values only last for two commits then are removed along with the fake values. \r\n\r\nI think it would make this test too fragile and difficult to maintain if it hardcoded expressions like START_HEIGHT + 3, and snapshot_nchaintx - 2 that depend on the i % 3 == 0 condition ~150 lines earlier in the test setup. It could be useful to check final nTx and nChainTx values though, not just initial ones after loading the snapshot I expanded the test to check for these values by storing them instead of hardcoding them.",
      "commit_id" : "8afcd99435b693f69b8c3a918b0573ef12559b22",
      "created_at" : "2024-02-26T13:56:17Z",
      "diff_hunk" : "@@ -205,6 +208,30 @@ def run_test(self):\n         assert_equal(loaded['coins_loaded'], SNAPSHOT_BASE_HEIGHT)\n         assert_equal(loaded['base_height'], SNAPSHOT_BASE_HEIGHT)\n \n+        # After loading the snapshot, check nTx and nChainTx values in the\n+        # starting block before loading the snapshot, the first block after it,\n+        # the last block before the snapshot block, and the snapshot block.\n+        start_hash = n1.getblockhash(height=START_HEIGHT)\n+        start_next_hash = n1.getblockhash(height=START_HEIGHT+1)\n+        snapshot_prev_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT-1)\n+        snapshot_hash = n1.getblockhash(height=SNAPSHOT_BASE_HEIGHT)\n+\n+        # nTx of the starting block should be 1 because it actually has one\n+        # transaction. nTx of later blocks should be fake 1 values set by",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502654993",
      "id" : 1502654993,
      "in_reply_to_id" : 1499026543,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ZkLIR",
      "original_commit_id" : "32481c30a55d697b361a6f840be5a136ef951ee4",
      "original_line" : 220,
      "original_position" : 36,
      "original_start_line" : null,
      "path" : "test/functional/feature_assumeutxo.py",
      "position" : null,
      "pull_request_review_id" : 1900881113,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502654993/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-26T13:58:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502654993",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502659435"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502659435"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499033207\r\n\r\n> nit: In the first commit. I tested this locally, and the suppressions were not needed. \r\n\r\nThanks, I updated the commit description, dropped the link, and moved the ubsan suppressions into a new commit",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-26T13:59:28Z",
      "diff_hunk" : "@@ -61,6 +62,7 @@ implicit-integer-sign-change:CBlockPolicyEstimator::processBlockTx\n implicit-integer-sign-change:SetStdinEcho\n implicit-integer-sign-change:compressor.h\n implicit-integer-sign-change:crypto/\n+implicit-integer-sign-change:getchaintxstats*",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502659435",
      "id" : 1502659435,
      "in_reply_to_id" : 1499033207,
      "line" : 65,
      "node_id" : "PRRC_kwDOABII585ZkMNr",
      "original_commit_id" : "32481c30a55d697b361a6f840be5a136ef951ee4",
      "original_line" : 65,
      "original_position" : 12,
      "original_start_line" : null,
      "path" : "test/sanitizer_suppressions/ubsan",
      "position" : 12,
      "pull_request_review_id" : 1900953535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502659435/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-26T17:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502659435",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502660518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502660518"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499040796\r\n\r\n> second commit: LogPrintf is deprecated. Also, could use `STR_INTERNAL_BUG` to reduce boilerplate.\r\n\r\nChanged LogPrintf to LogWarning. I'm still not using STR_INTERNAL_BUG for now though. I actually tried to use STR_INTERNAL_BUG initially here but it seemed like an awkward fit because it prints a multiline string to the log which seems like it would complicate log parsing, and it also duplicates file/line/function name in the log. It would be nice to have a version of STR_INTERNAL_BUG, maybe integrated with the Assume macro that works better for logging, but right now it appears like STR_INTERNAL_BUG is better suited and mostly used for throwing exceptions, not for logging.",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-26T14:00:15Z",
      "diff_hunk" : "@@ -5115,6 +5115,11 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n     if (pindex == nullptr)\n         return 0.0;\n \n+    if (!Assume(pindex->nChainTx > 0)) {\n+        LogPrintf(\"Internal bug detected: block %d has unset nChainTx (%s %s). Please report this issue here: %s\\n\",",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502660518",
      "id" : 1502660518,
      "in_reply_to_id" : 1499040796,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ZkMem",
      "original_commit_id" : "cecf618b68d874ed90949c8c10959437b3047f71",
      "original_line" : 5119,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1900953535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502660518/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-26T17:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502660518",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502661422"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502661422"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370/files#r1499519079\r\n\r\n> Why would the _background_ chainstate have the _snapshot_ base? The comment seems wrong and the second branch of the if condition is never taken, no?\r\n\r\nAnswered this in https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1499641472, but now added better comments to the code as well.\r\n",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-26T14:00:52Z",
      "diff_hunk" : "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {\n                 if (pindexFirstInvalid == nullptr) {\n-                    const bool is_active = c == &ActiveChainstate();\n                     // If this block sorts at least as good as the current tip and\n                     // is valid and we have all data for its parents, it must be in\n                     // setBlockIndexCandidates.  m_chain.Tip() must also be there\n                     // even if some data has been pruned.\n                     //\n-                    if ((pindexFirstMissing == nullptr || pindex == c->m_chain.Tip())) {\n+                    if (pindexFirstMissing == nullptr || pindex == c->m_chain.Tip() || (is_active && pindex == snap_base)) {\n                         // The active chainstate should always have this block\n                         // as a candidate, but a background chainstate should\n                         // only have it if it is an ancestor of the snapshot base.\n-                        if (is_active || GetSnapshotBaseBlock()->GetAncestor(pindex->nHeight) == pindex) {\n+                        if (is_active || snap_base->GetAncestor(pindex->nHeight) == pindex) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502661422",
      "id" : 1502661422,
      "in_reply_to_id" : 1499519079,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ZkMsu",
      "original_commit_id" : "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "original_line" : 4977,
      "original_position" : 135,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1900953535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502661422/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-26T17:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502661422",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502662368"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502662368"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370/files#r1499266054\r\n\r\n> Just to clarify, the `is_active` check is just a belt-and-suspender, since `pindex == snap_base` implies `is_active`?\r\n\r\nReviewing this more, my comments above about `pindex == snap_base` being orthogonal to `is_active`, and about TryAddBlockIndexCandidate adding the snapshot block as a candidate to the background validation chainstate unnecessarily are still accurate, but my conclusion that it makes sense to keep `is_active` instead of dropping it is wrong.\r\n\r\nIt makes more sense to drop `is_active &&` condition to avoid hitting the `c->setBlockIndexCandidates.count(pindex) == 0` assert below, and not trigger an error if the snapshot block is added unnecessarily to the background chain candidate set, which can happen in LoadBlockIndex if the node is restarted during background validation as described above.\r\n\r\nSo the new push drops `is_active &&` here and should be safer and clearer. I also wrote a lot of new comments to help clarify this code.",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-26T14:01:34Z",
      "diff_hunk" : "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();\n             if (c->m_chain.Tip() == nullptr) continue;\n-            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && pindexFirstNeverProcessed == nullptr) {\n+            if (!CBlockIndexWorkComparator()(pindex, c->m_chain.Tip()) && (pindexFirstNeverProcessed == nullptr || (is_active && pindex == snap_base))) {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502662368",
      "id" : 1502662368,
      "in_reply_to_id" : 1499266054,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ZkM7g",
      "original_commit_id" : "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "original_line" : 4966,
      "original_position" : 121,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1900953535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502662368/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-26T17:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502662368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502662950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502662950"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370/files#r1499230459\r\n\r\n> nit in [594336a](https://github.com/bitcoin/bitcoin/commit/594336ae8aad026dacb5d536df63bd374e3a89c7): Would be good to avoid the use of `=` in C++, when possible, as it narrowing and possibly confusing when used in contexts with `==`.\r\n\r\nMakes sense. In the newest update I was able to eliminate some uses of is_active and drop this.",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-26T14:01:59Z",
      "diff_hunk" : "@@ -4944,30 +4948,33 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));\n+        }\n+\n         // Chainstate-specific checks on setBlockIndexCandidates\n         for (auto c : GetAll()) {\n+            const bool is_active = c == &ActiveChainstate();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502662950",
      "id" : 1502662950,
      "in_reply_to_id" : 1499230459,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ZkNEm",
      "original_commit_id" : "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "original_line" : 4964,
      "original_position" : 118,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1900953535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502662950/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-26T17:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502662950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502663415"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502663415"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370/files#r1499216412\r\n\r\n> [594336a](https://github.com/bitcoin/bitcoin/commit/594336ae8aad026dacb5d536df63bd374e3a89c7): there there\r\n\r\nThanks, fixed",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-26T14:02:18Z",
      "diff_hunk" : "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There there should only be an nTx value if we have",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1502663415",
      "id" : 1502663415,
      "in_reply_to_id" : 1499216412,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585ZkNL3",
      "original_commit_id" : "594336ae8aad026dacb5d536df63bd374e3a89c7",
      "original_line" : 4932,
      "original_position" : 81,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1900953535,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502663415/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-26T17:51:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1502663415",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 8afcd99435b693f69b8c3a918b0573ef12559b22 -> 7081caca03b8f0d1c96415e0fc839bf4836257be ([`pr/nofake.9`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.9) -> [`pr/nofake.10`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.10), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.9..pr/nofake.10)) adding check for final nTx and nChainTx values to the python test, moving ubsan suppressions to another commit, and improving setBlockIndexCandidates checks and adding better comments.\r\nUpdated 7081caca03b8f0d1c96415e0fc839bf4836257be -> 2f3a692cdad60cb771e390bb79bf4da2b40146c9 ([`pr/nofake.10`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.10) -> [`pr/nofake.11`](https://github.com/ryanofsky/bitcoin/commits/pr/nofake.11), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/nofake.10..pr/nofake.11)) making minor edits to comments",
      "created_at" : "2024-02-26T17:32:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1964718181",
      "id" : 1964718181,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII5851Gzhl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1964718181/reactions"
      },
      "updated_at" : "2024-02-26T17:50:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1964718181",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505114232"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think that this criterion can fail during the point in time where the background chainstate catches up with the snapshot block.\r\nWe will request the snapshot block from a peer, and if it doesn't arrive in order, we can't connect it yet. Therefore, in in `ReceivedBlockTransactions` we'll set `nTx` to some value but since there are predecessors that haven't arrived yet we'll set `nChainTx` (which was previously set to the chainparams value) back to 0. As a result, we have `pindex == snap_base` and  `pindex->HaveNumChainTxs()==false` and the assert will be hit.",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-27T22:56:25Z",
      "diff_hunk" : "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232",
      "id" : 1505114232,
      "line" : 4935,
      "node_id" : "PRRC_kwDOABII585Ztjh4",
      "original_commit_id" : "d351ea2f887dc81993799010ac2fb6a220f07561",
      "original_line" : 4937,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 92,
      "pull_request_review_id" : 1904970718,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505114232/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-27T23:02:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505114232",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505146598"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505146598"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232\r\n\r\nIn commit \"assumeutxo: Get rid of faked nTx and nChainTx values\" (d351ea2f887dc81993799010ac2fb6a220f07561)\r\n\r\n> we'll set `nChainTx` (which was previously set to the chainparams value) back to 0\r\n\r\nWow, great catch. It never occurred to me that we would set the `nChainTx` back to 0 after setting it to another value. But that's exactly what we do at the beginning of ReceivedBlockTransactions():\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/ba907f96ad37c09c49c0e1532fad118fcb8dd4a8/src/validation.cpp#L3616\r\n\r\nIt looks like this bug was actually present in the previous assert too, and not new in this commit?\r\n\r\nIn light of that, I guess the check we would need here is:\r\n\r\n```c++\r\nif (pindex->HaveNumChainTxs()) {\r\n    assert(pindexFirstNeverProcessed == nullptr || pindex == snap_base);\r\n} else {\r\n    assert(pindexFirstNeverProcessed != nullptr);   \r\n}\r\n```\r\n\r\nBut I think a better change would be to make ReceivedBlockTransactions() not reset nChainTx to 0 at all. Setting the snapshot block `nChainTx` to a real value, then back to 0, then back to a real value again seems like confusing behavior that could break other code aside from this assert.",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-27T23:36:28Z",
      "diff_hunk" : "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505146598",
      "id" : 1505146598,
      "in_reply_to_id" : 1505114232,
      "line" : 4935,
      "node_id" : "PRRC_kwDOABII585Ztrbm",
      "original_commit_id" : "d351ea2f887dc81993799010ac2fb6a220f07561",
      "original_line" : 4937,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 92,
      "pull_request_review_id" : 1905017572,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505146598/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-27T23:36:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1505146598",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506224490"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506224490"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> It looks like this bug was actually present in the previous assert too, and not new in this commit?\r\n\r\nYes, I encountered this issue testing this branch on signet (and hadn't tried that with master), but it should also fail on master. So I think it would also be ok to fix this not here but in a separate PR.\r\n\r\nSlightly related: I wonder if we should do something differently in the situation where the chainparams-provided `nChainTx` turns out to be wrong. Of course that's trusted data and shouldn't be incorrect normally - but if it is anyway I think that we'd currently continue with the inconsistent `nChainTx` data and wouldn't even log an error - unless `-checkblockindex` is enabled, in which case we'd terminate with an assert.\r\n",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-28T16:15:37Z",
      "diff_hunk" : "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506224490",
      "id" : 1506224490,
      "in_reply_to_id" : 1505114232,
      "line" : 4935,
      "node_id" : "PRRC_kwDOABII585Zxylq",
      "original_commit_id" : "d351ea2f887dc81993799010ac2fb6a220f07561",
      "original_line" : 4937,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 92,
      "pull_request_review_id" : 1906693636,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506224490/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-28T16:15:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506224490",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506346712"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506346712"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> > It looks like this bug was actually present in the previous assert too, and not new in this commit?\r\n> \r\n> Yes, I encountered this issue testing this branch on signet (and hadn't tried that with master), but it should also fail on master. So I think it would also be ok to fix this not here but in a separate PR.\r\n\r\nAgree it should probably be a separate PR. It might be easier to implement that PR after this one, so the fake values are gone and and ReceivedBlockTransactions could assert that nTx and nChainTx are 0 for new, non-snapshot blocks.\r\n\r\n> Slightly related: I wonder if we should do something differently in the situation where the chainparams-provided `nChainTx` turns out to be wrong. Of course that's trusted data and shouldn't be incorrect normally - but if it is anyway I think that we'd currently continue with the inconsistent `nChainTx` data and wouldn't even log an error - unless `-checkblockindex` is enabled, in which case we'd terminate with an assert.\r\n\r\nAgree. We have errors and specific code to handle cases when other trusted data is wrong, so it probably makes sense to handle this case as well. It might be easier to check for this case after the fake values are gone since nonzero nChainTx values should not be changing after that.",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-28T17:42:48Z",
      "diff_hunk" : "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506346712",
      "id" : 1506346712,
      "in_reply_to_id" : 1505114232,
      "line" : 4935,
      "node_id" : "PRRC_kwDOABII585ZyQbY",
      "original_commit_id" : "d351ea2f887dc81993799010ac2fb6a220f07561",
      "original_line" : 4937,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 92,
      "pull_request_review_id" : 1906886247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506346712/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-28T17:42:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506346712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506379814"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506379814"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Agree it should probably be a separate PR. \r\n\r\nok - I can work on a follow-up that fixes the bug (preferably in `ReceivedBlockTransactions` instead of just adjusting the checks) , and add a test case that would trigger the assert on master.",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-28T18:10:29Z",
      "diff_hunk" : "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506379814",
      "id" : 1506379814,
      "in_reply_to_id" : 1505114232,
      "line" : 4935,
      "node_id" : "PRRC_kwDOABII585ZyYgm",
      "original_commit_id" : "d351ea2f887dc81993799010ac2fb6a220f07561",
      "original_line" : 4937,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 92,
      "pull_request_review_id" : 1906943001,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506379814/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-28T18:10:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506379814",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "ACK 2f3a692cdad60cb771e390bb79bf4da2b40146c9 - I reviewed the code, and did some testing running with `-checkblockindex` on signet.\r\n\r\nWould be great if @jamesob you could have a quick look. Not necessarily an in-depth review - I'd just want too make sure we're not missing some historical context from the time when the faked values and the `BLOCK_ASSUMED_VALID` flag were introduced originally.",
      "created_at" : "2024-02-28T18:18:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1969573251",
      "id" : 1969573251,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII5851ZU2D",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1969573251/reactions"
      },
      "updated_at" : "2024-02-28T18:18:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1969573251",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506468176"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506468176"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> ok - I can work on a follow-up that fixes the bug (preferably in `ReceivedBlockTransactions` instead of just adjusting the checks) , and add a test case that would trigger the assert on master.\r\n\r\nThat would be great, and I'd be happy to review. Let me know if you think I should update the CheckBlockIndex assert in this PR as described above https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505146598 too here.\r\n\r\nI did experiment a little with adding asserts to ReceivedBlockTransactions:\r\n\r\n```diff\r\n--- a/src/validation.cpp\r\n+++ b/src/validation.cpp\r\n@@ -3589,6 +3589,8 @@ void Chainstate::TryAddBlockIndexCandidate(CBlockIndex* pindex)\r\n void ChainstateManager::ReceivedBlockTransactions(const CBlock& block, CBlockIndex* pindexNew, const FlatFilePos& pos)\r\n {\r\n     AssertLockHeld(cs_main);\r\n+    assert(pindexNew->nTx == 0);\r\n+    assert(pindexNew->nChainTx == 0);\r\n     pindexNew->nTx = block.vtx.size();\r\n     pindexNew->nChainTx = 0;\r\n     pindexNew->nFile = pos.nFile;\r\n```\r\n\r\nThis makes the two assumeutxo tests fail as expected, but it also makes the `rpc_getblockfrompeer.py` test fail the `nTx == 0` check for some reason. Hopefully a straightforward fix ReceivedBlockTransactions should be possible, though.",
      "commit_id" : "2f3a692cdad60cb771e390bb79bf4da2b40146c9",
      "created_at" : "2024-02-28T19:20:31Z",
      "diff_hunk" : "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1506468176",
      "id" : 1506468176,
      "in_reply_to_id" : 1505114232,
      "line" : 4935,
      "node_id" : "PRRC_kwDOABII585ZyuFQ",
      "original_commit_id" : "d351ea2f887dc81993799010ac2fb6a220f07561",
      "original_line" : 4937,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 92,
      "pull_request_review_id" : 1907089957,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506468176/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-28T19:20:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1506468176",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1508080078"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508080078"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> Let me know if you think I should update the CheckBlockIndex assert in this PR as described above https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505146598 too here.\r\n\r\nUp to you, but I think it'd be good to have this fixed and would be happy to re-ACK.",
      "commit_id" : "7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "created_at" : "2024-02-29T19:14:58Z",
      "diff_hunk" : "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1508080078",
      "id" : 1508080078,
      "in_reply_to_id" : 1505114232,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Z43nO",
      "original_commit_id" : "d351ea2f887dc81993799010ac2fb6a220f07561",
      "original_line" : 4937,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1909688739,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508080078/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-29T19:14:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508080078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1508212488"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508212488"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1508080078\r\n\r\n> Up to you, but I think it'd be good to have this fixed and would be happy to re-ACK.\r\n\r\nOk, I updated the assertion in a new commit 438ac1ffc23ec5134f2ac74cee75ff145078df09, which could also be a standalone PR. (I'm assuming by \"fixed\" you mean changing the assertion, not changing ReceivedBlockTransactions, which I think would be harder to do correctly.)",
      "commit_id" : "7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "created_at" : "2024-02-29T21:26:48Z",
      "diff_hunk" : "@@ -4902,36 +4916,26 @@ void ChainstateManager::CheckBlockIndex()\n         if (!pindex->HaveNumChainTxs()) assert(pindex->nSequenceId <= 0); // nSequenceId can't be set positive for blocks that aren't linked (negative is used for preciousblock)\n         // VALID_TRANSACTIONS is equivalent to nTx > 0 for all nodes (whether or not pruning has occurred).\n         // HAVE_DATA is only equivalent to nTx > 0 (or VALID_TRANSACTIONS) if no pruning has occurred.\n-        // Unless these indexes are assumed valid and pending block download on a\n-        // background chainstate.\n-        if (!m_blockman.m_have_pruned && !pindex->IsAssumedValid()) {\n+        if (!m_blockman.m_have_pruned) {\n             // If we've never pruned, then HAVE_DATA should be equivalent to nTx > 0\n             assert(!(pindex->nStatus & BLOCK_HAVE_DATA) == (pindex->nTx == 0));\n-            if (pindexFirstAssumeValid == nullptr) {\n-                // If we've got some assume valid blocks, then we might have\n-                // missing blocks (not HAVE_DATA) but still treat them as\n-                // having been processed (with a fake nTx value). Otherwise, we\n-                // can assert that these are the same.\n-                assert(pindexFirstMissing == pindexFirstNeverProcessed);\n-            }\n+            assert(pindexFirstMissing == pindexFirstNeverProcessed);\n         } else {\n             // If we have pruned, then we can only say that HAVE_DATA implies nTx > 0\n             if (pindex->nStatus & BLOCK_HAVE_DATA) assert(pindex->nTx > 0);\n         }\n         if (pindex->nStatus & BLOCK_HAVE_UNDO) assert(pindex->nStatus & BLOCK_HAVE_DATA);\n         if (pindex->IsAssumedValid()) {\n-            // Assumed-valid blocks should have some nTx value.\n-            assert(pindex->nTx > 0);\n             // Assumed-valid blocks should connect to the main chain.\n             assert((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TREE);\n-        } else {\n-            // Otherwise there should only be an nTx value if we have\n-            // actually seen a block's transactions.\n-            assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n+        // There should only be an nTx value if we have\n+        // actually seen a block's transactions.\n+        assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n-        assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        // HaveNumChainTxs will also be set in the assumeutxo snapshot block from snapshot metadata.\n+        assert((pindexFirstNeverProcessed == nullptr || pindex == snap_base) == pindex->HaveNumChainTxs());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1508212488",
      "id" : 1508212488,
      "in_reply_to_id" : 1505114232,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Z5X8I",
      "original_commit_id" : "d351ea2f887dc81993799010ac2fb6a220f07561",
      "original_line" : 4937,
      "original_position" : 88,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : null,
      "pull_request_review_id" : 1909903494,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508212488/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-02-29T21:39:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1508212488",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509552384"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509552384"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I think it must be `pindex->nTx != 0` in the line above - since the situation is that we have received the snapshot block transactions (so `nTx!=0`), but can't connect the block yet (so `nChainTx==0`).\r\nAlso, maybe `unconnected_snapshot_block` is a better name? ",
      "commit_id" : "7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "created_at" : "2024-03-01T21:21:28Z",
      "diff_hunk" : "@@ -4930,8 +4931,22 @@ void ChainstateManager::CheckBlockIndex()\n             assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n+        // However, an exception to this is possible for the snapshot base\n+        // block. In rare cases, the snapshot base block, which has a non-zero\n+        // nChainTx value initialized from snapshot metadata, may temporarily\n+        // have its nChainTx value set to 0 by ReceivedBlockTransations if it is\n+        // downloaded out of order, before one of its parent blocks. This is\n+        // confusing behavior, but not a bug as long as the check below is\n+        // written to account for it. More work should be done later to clean up\n+        // the behavior and simplify the check, see\n+        // https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232\n         assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        if (pindex->HaveNumChainTxs()) {\n+            assert(pindexFirstNotTransactionsValid == nullptr);\n+        } else {\n+            const bool unprocessed_snapshot_block{pindex == snap_base && pindex->nTx == 0};\n+            assert(pindexFirstNotTransactionsValid != nullptr || unprocessed_snapshot_block);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509552384",
      "id" : 1509552384,
      "line" : 4951,
      "node_id" : "PRRC_kwDOABII585Z-fEA",
      "original_commit_id" : "438ac1ffc23ec5134f2ac74cee75ff145078df09",
      "original_line" : 4948,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 108,
      "pull_request_review_id" : 1912039200,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509552384/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-01T22:02:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509552384",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509611419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509611419"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "This is also violated in the situation of a snapshot block that is sent out of order (`pindex->nChainTx == 0`, `pindex == snap_base` )",
      "commit_id" : "7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "created_at" : "2024-03-01T21:57:50Z",
      "diff_hunk" : "@@ -4959,14 +4965,17 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509611419",
      "id" : 1509611419,
      "line" : 4974,
      "node_id" : "PRRC_kwDOABII585Z-teb",
      "original_commit_id" : "6c154da50e7bf1ea2d21bf5e0fcc7746eacca24d",
      "original_line" : 4976,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 134,
      "pull_request_review_id" : 1912039200,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509611419/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-01T22:02:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509611419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509658225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509658225"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509552384\r\n\r\n> I think it must be `pindex->nTx != 0` in the line above - since the situation is that we have received the snapshot block transactions (so `nTx!=0`), but can't connect the block yet (so `nChainTx==0`). Also, maybe `unconnected_snapshot_block` is a better name?\r\n\r\nOh, I forgot that nTx would still be set in that case. I was trying to make the check stricter so snap_base would have to have nChainTx set after it was fully connected, and it wouldn't be able to escape this check after that happened. But I guess there is no way to determine that and the best that can be done is to check that it nChainTx is nonzero after it is validated. Can make that update",
      "commit_id" : "7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "created_at" : "2024-03-01T23:11:33Z",
      "diff_hunk" : "@@ -4930,8 +4931,22 @@ void ChainstateManager::CheckBlockIndex()\n             assert(((pindex->nStatus & BLOCK_VALID_MASK) >= BLOCK_VALID_TRANSACTIONS) == (pindex->nTx > 0)); // This is pruning-independent.\n         }\n         // All parents having had data (at some point) is equivalent to all parents being VALID_TRANSACTIONS, which is equivalent to HaveNumChainTxs().\n+        // However, an exception to this is possible for the snapshot base\n+        // block. In rare cases, the snapshot base block, which has a non-zero\n+        // nChainTx value initialized from snapshot metadata, may temporarily\n+        // have its nChainTx value set to 0 by ReceivedBlockTransations if it is\n+        // downloaded out of order, before one of its parent blocks. This is\n+        // confusing behavior, but not a bug as long as the check below is\n+        // written to account for it. More work should be done later to clean up\n+        // the behavior and simplify the check, see\n+        // https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1505114232\n         assert((pindexFirstNeverProcessed == nullptr) == pindex->HaveNumChainTxs());\n-        assert((pindexFirstNotTransactionsValid == nullptr) == pindex->HaveNumChainTxs());\n+        if (pindex->HaveNumChainTxs()) {\n+            assert(pindexFirstNotTransactionsValid == nullptr);\n+        } else {\n+            const bool unprocessed_snapshot_block{pindex == snap_base && pindex->nTx == 0};\n+            assert(pindexFirstNotTransactionsValid != nullptr || unprocessed_snapshot_block);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509658225",
      "id" : 1509658225,
      "in_reply_to_id" : 1509552384,
      "line" : 4951,
      "node_id" : "PRRC_kwDOABII585Z-45x",
      "original_commit_id" : "438ac1ffc23ec5134f2ac74cee75ff145078df09",
      "original_line" : 4948,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 108,
      "pull_request_review_id" : 1912222187,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509658225/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-01T23:26:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509658225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509662408"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509662408"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509611419\r\n\r\n> This is also violated in the situation of a snapshot block that is sent out of order (`pindex->nChainTx == 0`, `pindex == snap_base` )\r\n\r\nOk, I guess it needs to be changed to:\r\n\r\n```c++\r\nassert(pindex->nChainTx == 0 || pindex == snap_base);\r\n```",
      "commit_id" : "7ce1a0e375a2b27614be0ff148aea989d1100ff8",
      "created_at" : "2024-03-01T23:19:44Z",
      "diff_hunk" : "@@ -4959,14 +4965,17 @@ void ChainstateManager::CheckBlockIndex()\n             assert((pindex->nStatus & BLOCK_FAILED_MASK) == 0); // The failed mask cannot be set for blocks without invalid parents.\n         }\n         // Make sure nChainTx sum is correctly computed.\n-        unsigned int prev_chain_tx = pindex->pprev ? pindex->pprev->nChainTx : 0;\n-        assert((pindex->nChainTx == pindex->nTx + prev_chain_tx)\n-               // Transaction may be completely unset - happens if only the header was accepted but the block hasn't been processed.\n-               || (pindex->nChainTx == 0 && pindex->nTx == 0)\n-               // nChainTx may be unset, but nTx set (if a block has been accepted, but one of its predecessors hasn't been processed yet)\n-               || (pindex->nChainTx == 0 && prev_chain_tx == 0 && pindex->pprev)\n-               // Transaction counts prior to snapshot are unknown.\n-               || pindex->IsAssumedValid());\n+        if (!pindex->pprev) {\n+            // If no previous block, nTx and nChainTx must be the same.\n+            assert(pindex->nChainTx == pindex->nTx);\n+        } else if (pindex->pprev->nChainTx > 0 && pindex->nTx > 0) {\n+            // If previous nChainTx is set and number of transactions in block is known, sum must be set.\n+            assert(pindex->nChainTx == pindex->nTx + pindex->pprev->nChainTx);\n+        } else {\n+            // Otherwise nChainTx should only be set if this is a snapshot block.\n+            assert((pindex->nChainTx != 0) == (pindex == snap_base));",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#discussion_r1509662408",
      "id" : 1509662408,
      "in_reply_to_id" : 1509611419,
      "line" : 4974,
      "node_id" : "PRRC_kwDOABII585Z-57I",
      "original_commit_id" : "6c154da50e7bf1ea2d21bf5e0fcc7746eacca24d",
      "original_line" : 4976,
      "original_position" : 127,
      "original_start_line" : null,
      "path" : "src/validation.cpp",
      "position" : 134,
      "pull_request_review_id" : 1912222187,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29370",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509662408/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2024-03-01T23:27:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1509662408",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @mzumsande I'm really curious how you're testing it, because it is a little hard to reason about abstractly without a test.\r\n\r\nI've been testing this in two ways:\r\n1) On signet, syncing from a snapshot I created until I am close to the point where the background chainstate is finished, and then running with `-checkblockindex` for the last couple of blocks until it crashes. After several tries I've now saved a copy of a datadir where the background sync is finished up to `snapshot_height - 150`  or so, and then I run only the last few blocks with the slow `-checkblockindex`. The signet testing is also how I encountered #29519.\r\n\r\n2) Adjusting `feature_assumeutxo.py`, so far I've just added the code \r\n```\r\n        # Send snapshot block to n1 out of order, to test checkblockindex behavior\r\n        snapshot_hash = n0.getblockhash(SNAPSHOT_BASE_HEIGHT)\r\n        snapshot_block = n0.getblock(snapshot_hash, 0)\r\n        n1.submitblock(snapshot_block)\r\n```\r\nbefore `self.connect_nodes(0, 1)` in line ~308. This triggers the bug at the snapshot height, but is not ideal otherwise, because it means that the order of blocks is really strange, e.g. we receive the block snapshot+1 after snapshot which would not usually happening when syncing. I've run into additional asserts failures this way (not mentioned above) that will hopefully be no longer an issue after changing the logic in `ReceivedBlockTransactions`. But I'm thinking of generalising this approach - maybe even randomize the order in which all blocks are sent - but I haven't done that yet.",
      "created_at" : "2024-03-01T23:53:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1974096225",
      "id" : 1974096225,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII5851qlFh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1974096225/reactions"
      },
      "updated_at" : "2024-03-01T23:55:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1974096225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48763452?v=4",
         "events_url" : "https://api.github.com/users/mzumsande/events{/privacy}",
         "followers_url" : "https://api.github.com/users/mzumsande/followers",
         "following_url" : "https://api.github.com/users/mzumsande/following{/other_user}",
         "gists_url" : "https://api.github.com/users/mzumsande/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/mzumsande",
         "id" : 48763452,
         "login" : "mzumsande",
         "node_id" : "MDQ6VXNlcjQ4NzYzNDUy",
         "organizations_url" : "https://api.github.com/users/mzumsande/orgs",
         "received_events_url" : "https://api.github.com/users/mzumsande/received_events",
         "repos_url" : "https://api.github.com/users/mzumsande/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/mzumsande/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/mzumsande/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/mzumsande"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thank you that is very helpful! I should have thought of submitting the snapshot block to test this. For some reason I was thinking the bug would be harder to trigger.",
      "created_at" : "2024-03-02T00:11:40Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29370#issuecomment-1974116871",
      "id" : 1974116871,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29370",
      "node_id" : "IC_kwDOABII5851qqIH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1974116871/reactions"
      },
      "updated_at" : "2024-03-02T00:11:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1974116871",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   }
]

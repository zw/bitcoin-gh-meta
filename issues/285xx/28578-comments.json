[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28578).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [Ayush170-Future](https://github.com/bitcoin/bitcoin/pull/28578#pullrequestreview-1713827504) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.\n",
      "created_at" : "2023-10-04T01:03:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#issuecomment-1745970922",
      "id" : 1745970922,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28578",
      "node_id" : "IC_kwDOABII585oEWbq",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1745970922/reactions"
      },
      "updated_at" : "2023-11-06T22:32:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1745970922",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1345291276"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345291276"
         }
      },
      "author_association" : "MEMBER",
      "body" : "How is this different from `MOCKED_DESC_CONVERTER.GetDescriptor(mocked_descriptor)` ?",
      "commit_id" : "9eb8913eb3a9fe8ef5578c2171972b383e7847ab",
      "created_at" : "2023-10-04T06:59:30Z",
      "diff_hunk" : "@@ -0,0 +1,138 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <key_io.h>\n+#include <wallet/context.h>\n+#include <wallet/scriptpubkeyman.h>\n+#include <wallet/wallet.h>\n+#include <wallet/test/util.h>\n+#include <validation.h>\n+\n+namespace wallet {\n+namespace {\n+const TestingSetup* g_setup;\n+\n+void initialize_spkm()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN);\n+    g_setup = testing_setup.get();\n+}\n+\n+static std::string CreateDescriptorString(FuzzedDataProvider& fuzzed_data_provider)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1345291276",
      "id" : 1345291276,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585QL4QM",
      "original_commit_id" : "6aaf739363ea91df1864f5fcc4d9ad38af9d2f7a",
      "original_line" : 26,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position" : 26,
      "pull_request_review_id" : 1656792041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345291276/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-04T07:01:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345291276",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1345292604"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345292604"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n// Copyright (c) 2023-present The Bitcoin Core developers\r\n```\r\n\r\nnit: Wrong year? Also, for new code could omit the years completely, or use `-present` to avoid having to ever touch it again.",
      "commit_id" : "9eb8913eb3a9fe8ef5578c2171972b383e7847ab",
      "created_at" : "2023-10-04T07:00:47Z",
      "diff_hunk" : "@@ -0,0 +1,138 @@\n+// Copyright (c) 2022 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1345292604",
      "id" : 1345292604,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QL4k8",
      "original_commit_id" : "6aaf739363ea91df1864f5fcc4d9ad38af9d2f7a",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 1656792041,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345292604/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-04T07:01:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345292604",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1345683247"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345683247"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fixed",
      "commit_id" : "9eb8913eb3a9fe8ef5578c2171972b383e7847ab",
      "created_at" : "2023-10-04T12:03:05Z",
      "diff_hunk" : "@@ -0,0 +1,138 @@\n+// Copyright (c) 2022 The Bitcoin Core developers",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1345683247",
      "id" : 1345683247,
      "in_reply_to_id" : 1345292604,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QNX8v",
      "original_commit_id" : "6aaf739363ea91df1864f5fcc4d9ad38af9d2f7a",
      "original_line" : 1,
      "original_position" : 1,
      "original_start_line" : null,
      "path" : "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 1657364293,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345683247/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-04T12:03:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345683247",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1345692298"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345692298"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Good question, let me check. If they are similar, we can move `MockedDescriptorConverter` to a util file and use it here.",
      "commit_id" : "9eb8913eb3a9fe8ef5578c2171972b383e7847ab",
      "created_at" : "2023-10-04T12:10:00Z",
      "diff_hunk" : "@@ -0,0 +1,138 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <key_io.h>\n+#include <wallet/context.h>\n+#include <wallet/scriptpubkeyman.h>\n+#include <wallet/wallet.h>\n+#include <wallet/test/util.h>\n+#include <validation.h>\n+\n+namespace wallet {\n+namespace {\n+const TestingSetup* g_setup;\n+\n+void initialize_spkm()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN);\n+    g_setup = testing_setup.get();\n+}\n+\n+static std::string CreateDescriptorString(FuzzedDataProvider& fuzzed_data_provider)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1345692298",
      "id" : 1345692298,
      "in_reply_to_id" : 1345291276,
      "line" : 26,
      "node_id" : "PRRC_kwDOABII585QNaKK",
      "original_commit_id" : "6aaf739363ea91df1864f5fcc4d9ad38af9d2f7a",
      "original_line" : 26,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position" : 26,
      "pull_request_review_id" : 1657376684,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345692298/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-04T12:10:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1345692298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1346487893"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346487893"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done!",
      "commit_id" : "5e78c17563956acf3d09ea345f7d33b0ae2eb56e",
      "created_at" : "2023-10-04T21:28:11Z",
      "diff_hunk" : "@@ -0,0 +1,138 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/util/setup_common.h>\n+#include <key_io.h>\n+#include <wallet/context.h>\n+#include <wallet/scriptpubkeyman.h>\n+#include <wallet/wallet.h>\n+#include <wallet/test/util.h>\n+#include <validation.h>\n+\n+namespace wallet {\n+namespace {\n+const TestingSetup* g_setup;\n+\n+void initialize_spkm()\n+{\n+    static const auto testing_setup = MakeNoLogFileContext<const TestingSetup>(ChainType::MAIN);\n+    g_setup = testing_setup.get();\n+}\n+\n+static std::string CreateDescriptorString(FuzzedDataProvider& fuzzed_data_provider)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1346487893",
      "id" : 1346487893,
      "in_reply_to_id" : 1345291276,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QQcZV",
      "original_commit_id" : "6aaf739363ea91df1864f5fcc4d9ad38af9d2f7a",
      "original_line" : 26,
      "original_position" : 26,
      "original_start_line" : null,
      "path" : "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 1658518357,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346487893/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-04T21:28:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346487893",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1346988511"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346988511"
         }
      },
      "author_association" : "MEMBER",
      "body" : "can use `fuzzed_data_provider.ConsumeRandomLengthString` directly",
      "commit_id" : "9171e0593daaba655c701a7442e55be9c473ab02",
      "created_at" : "2023-10-05T08:10:59Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/descriptor.h>\n+#include <test/util/setup_common.h>\n+#include <wallet/scriptpubkeyman.h>\n+#include <wallet/wallet.h>\n+#include <wallet/test/util.h>\n+\n+namespace wallet {\n+namespace {\n+const TestingSetup* g_setup;\n+\n+//! The converter of mocked descriptors, needs to be initialized when the target is.\n+MockedDescriptorConverter MOCKED_DESC_CONVERTER;\n+\n+void initialize_spkm()\n+{\n+    static const auto testing_setup{MakeNoLogFileContext<const TestingSetup>()};\n+    g_setup = testing_setup.get();\n+    SelectParams(ChainType::MAIN);\n+    MOCKED_DESC_CONVERTER.Init();\n+}\n+\n+static DescriptorScriptPubKeyMan* CreateDescriptor(FuzzedDataProvider& fuzzed_data_provider, CWallet& keystore)\n+{\n+    const auto random_bytes{ConsumeRandomLengthByteVector(fuzzed_data_provider)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1346988511",
      "id" : 1346988511,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QSWnf",
      "original_commit_id" : "5e78c17563956acf3d09ea345f7d33b0ae2eb56e",
      "original_line" : 33,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 1659172842,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346988511/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-05T08:12:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1346988511",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1347292066"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347292066"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "9171e0593daaba655c701a7442e55be9c473ab02",
      "created_at" : "2023-10-05T11:45:21Z",
      "diff_hunk" : "@@ -0,0 +1,105 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/descriptor.h>\n+#include <test/util/setup_common.h>\n+#include <wallet/scriptpubkeyman.h>\n+#include <wallet/wallet.h>\n+#include <wallet/test/util.h>\n+\n+namespace wallet {\n+namespace {\n+const TestingSetup* g_setup;\n+\n+//! The converter of mocked descriptors, needs to be initialized when the target is.\n+MockedDescriptorConverter MOCKED_DESC_CONVERTER;\n+\n+void initialize_spkm()\n+{\n+    static const auto testing_setup{MakeNoLogFileContext<const TestingSetup>()};\n+    g_setup = testing_setup.get();\n+    SelectParams(ChainType::MAIN);\n+    MOCKED_DESC_CONVERTER.Init();\n+}\n+\n+static DescriptorScriptPubKeyMan* CreateDescriptor(FuzzedDataProvider& fuzzed_data_provider, CWallet& keystore)\n+{\n+    const auto random_bytes{ConsumeRandomLengthByteVector(fuzzed_data_provider)};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1347292066",
      "id" : 1347292066,
      "in_reply_to_id" : 1346988511,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585QTgui",
      "original_commit_id" : "5e78c17563956acf3d09ea345f7d33b0ae2eb56e",
      "original_line" : 33,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 1659642976,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347292066/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-05T11:45:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347292066",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```bash\r\n$ echo \"cGsoJTg0KVwzKVwAQWlwZTgzKVwAQQAAAAAAADmDg4ODg4ODg4ODgYODg4ODg4Nwa2hhe3t7g4ODg4ODg4OD\" | base64 --decode > scriptpubkeyman.crash\r\n$ FUZZ=scriptpubkeyman ./src/test/fuzz/fuzz scriptpubkeyman.crash\r\n...\r\nRunning: scriptpubkeyman.crash\r\nfuzz: wallet/test/fuzz/scriptpubkeyman.cpp:93: auto wallet::(anonymous namespace)::scriptpubkeyman_fuzz_target(FuzzBufferType)::(anonymous class)::operator()() const: Assertion `spk_manager->GetDescriptorString(descriptor, fuzzed_data_provider.ConsumeBool())' failed.\r\n==1391778== ERROR: libFuzzer: deadly signal\r\n...\r\n```",
      "created_at" : "2023-10-10T14:42:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#issuecomment-1755587298",
      "id" : 1755587298,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28578",
      "node_id" : "IC_kwDOABII585opCLi",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1755587298/reactions"
      },
      "updated_at" : "2023-10-10T14:42:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1755587298",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks, @dergoegge. Fixed it by removing the `assert`, we can't ensure it.",
      "created_at" : "2023-10-10T18:46:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#issuecomment-1756035199",
      "id" : 1756035199,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28578",
      "node_id" : "IC_kwDOABII585oqvh_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1756035199/reactions"
      },
      "updated_at" : "2023-10-10T18:46:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1756035199",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```bash\r\n$ echo \"cGsoJTQxLyopXDMAXABhZGRyKGJjMYMxMTAwMDIwMDAwMDBnJyw2ZGRyKGI1bikp\" | base64 --decode > scriptpubkeyman2.crash\r\n$ FUZZ=scriptpubkeyman ./src/test/fuzz/fuzz scriptpubkeyman2.crash\r\n...\r\nfuzz: wallet/scriptpubkeyman.cpp:2008: virtual util::Result<CTxDestination> wallet::DescriptorScriptPubKeyMan::GetNewDestination(const OutputType): Assertion `desc_addr_type' failed.\r\n==1499877== ERROR: libFuzzer: deadly signal\r\n...\r\n```",
      "created_at" : "2023-10-11T08:45:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#issuecomment-1757161935",
      "id" : 1757161935,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28578",
      "node_id" : "IC_kwDOABII585ovCnP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1757161935/reactions"
      },
      "updated_at" : "2023-10-11T08:45:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1757161935",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "```bash\r\n$ echo \"dHIoJTA1LyopXDQXFw==\"  | base64 --decode > scriptpubkeyman3.crash\r\n$ FUZZ=scriptpubkeyman ./src/test/fuzz/fuzz scriptpubkeyman3.crash\r\n...\r\nterminate called after throwing an instance of 'std::runtime_error'\r\n  what():  GetNewDestination: Types are inconsistent. Stored type does not match type of newly generated address\r\n...\r\n```\r\n\r\n---\r\n\r\nI would recommend that you run the targets that you write for a while before opening a PR. It could very well be that it finds actual bugs that we don't want to be public right away.",
      "created_at" : "2023-10-12T09:09:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#issuecomment-1759227123",
      "id" : 1759227123,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28578",
      "node_id" : "IC_kwDOABII585o26zz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1759227123/reactions"
      },
      "updated_at" : "2023-10-12T09:09:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1759227123",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I would recommend that you run the targets that you write for a while before opening a PR. It could very well be that it finds actual bugs that we don't want to be public right away.\r\n\r\nSure, sorry for that, left it running but not in my main machine so didn't get some of them. Force-pushed with a fix for `GetNewDestination`.  We can't fuzz it with random outputs types because any inconsistence will throw a runtime error. Any other one will return a `util::Error`. Left it running for some hours before pushing and will continue running it overnight.",
      "created_at" : "2023-10-12T20:50:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#issuecomment-1760347322",
      "id" : 1760347322,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28578",
      "node_id" : "IC_kwDOABII585o7MS6",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1760347322/reactions"
      },
      "updated_at" : "2023-10-12T20:50:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1760347322",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Here's a coverage report: https://dergoegge.github.io/bitcoin-coverage/pr28578/fuzz.coverage/index.html (~1000h CPU time).\r\n\r\nIs there a reason not to cover more of `DescriptorScriptPubKeyMan` in this PR? e.g. `DescriptorScriptPubKeyMan::SignTransaction` or `DescriptorScriptPubKeyMan::FillPSBT`. ",
      "created_at" : "2023-11-06T09:49:31Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#issuecomment-1794443638",
      "id" : 1794443638,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28578",
      "node_id" : "IC_kwDOABII585q9Ql2",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1794443638/reactions"
      },
      "updated_at" : "2023-11-06T09:49:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1794443638",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Is there a reason not to cover more of DescriptorScriptPubKeyMan in this PR? e.g. DescriptorScriptPubKeyMan::SignTransaction or DescriptorScriptPubKeyMan::FillPSBT.\r\n\r\nNot exactly, perhaps one of them may be very slow, let me test more functions and then I can add them all here, np.",
      "created_at" : "2023-11-06T21:19:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#issuecomment-1796506821",
      "id" : 1796506821,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28578",
      "node_id" : "IC_kwDOABII585rFITF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1796506821/reactions"
      },
      "updated_at" : "2023-11-06T21:19:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1796506821",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed covering more functions. Left it running for a long time and didn't see any downside.",
      "created_at" : "2023-11-08T14:05:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#issuecomment-1801958804",
      "id" : 1801958804,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28578",
      "node_id" : "IC_kwDOABII585rZ7WU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1801958804/reactions"
      },
      "updated_at" : "2023-11-08T14:05:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1801958804",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1389308579"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389308579"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We probably want to do what marco did in #28815 here, i.e. break out of the loop on \"bad\" data",
      "commit_id" : "43f7fc6a9e5c7df6fc22cee54eaed70656290bf5",
      "created_at" : "2023-11-10T12:00:59Z",
      "diff_hunk" : "@@ -0,0 +1,157 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/descriptor.h>\n+#include <test/util/setup_common.h>\n+#include <wallet/scriptpubkeyman.h>\n+#include <wallet/wallet.h>\n+#include <wallet/test/util.h>\n+\n+namespace wallet {\n+namespace {\n+const TestingSetup* g_setup;\n+\n+//! The converter of mocked descriptors, needs to be initialized when the target is.\n+MockedDescriptorConverter MOCKED_DESC_CONVERTER;\n+\n+void initialize_spkm()\n+{\n+    static const auto testing_setup{MakeNoLogFileContext<const TestingSetup>()};\n+    g_setup = testing_setup.get();\n+    SelectParams(ChainType::MAIN);\n+    MOCKED_DESC_CONVERTER.Init();\n+}\n+\n+static std::optional<std::pair<WalletDescriptor, FlatSigningProvider>> CreateWalletDescriptor(FuzzedDataProvider& fuzzed_data_provider)\n+{\n+    const std::string mocked_descriptor{fuzzed_data_provider.ConsumeRandomLengthString()};\n+    const auto desc_str{MOCKED_DESC_CONVERTER.GetDescriptor(mocked_descriptor)};\n+    if (!desc_str.has_value()) return std::nullopt;\n+\n+    FlatSigningProvider keys;\n+    std::string error;\n+    std::unique_ptr<Descriptor> parsed_desc{Parse(desc_str.value(), keys, error, false)};\n+    if (!parsed_desc) return std::nullopt;\n+\n+    WalletDescriptor w_desc{WalletDescriptor(std::move(parsed_desc), 0, 0, 1, 1)};\n+    return std::make_pair(w_desc, keys);\n+}\n+\n+static DescriptorScriptPubKeyMan* CreateDescriptor(WalletDescriptor& wallet_desc, FlatSigningProvider& keys, CWallet& keystore)\n+{\n+    LOCK(keystore.cs_wallet);\n+    keystore.AddWalletDescriptor(wallet_desc, keys, /*label=*/\"\", /*internal=*/false);\n+    return keystore.GetDescriptorScriptPubKeyMan(wallet_desc);\n+};\n+\n+FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate* chainstate = &node.chainman->ActiveChainstate();\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+        wallet.SetLastBlockProcessed(chainstate->m_chain.Height(), chainstate->m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    auto wallet_desc{CreateWalletDescriptor(fuzzed_data_provider)};\n+    if (!wallet_desc.has_value()) return;\n+    auto spk_manager{CreateDescriptor(wallet_desc->first, wallet_desc->second, wallet)};\n+    if (spk_manager == nullptr) return;\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 300) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                auto wallet_desc{CreateWalletDescriptor(fuzzed_data_provider)};\n+                if (wallet_desc.has_value()) {\n+                    std::string error;\n+                    if (spk_manager->CanUpdateToWalletDescriptor(wallet_desc->first, error)) {\n+                        auto new_spk_manager{CreateDescriptor(wallet_desc->first, wallet_desc->second, wallet)};\n+                        if (new_spk_manager != nullptr) spk_manager = new_spk_manager;\n+                    }\n+                }\n+            },\n+            [&] {\n+                const CScript script{ConsumeScript(fuzzed_data_provider)};\n+                auto is_mine{spk_manager->IsMine(script)};\n+                if (is_mine == isminetype::ISMINE_SPENDABLE) {\n+                    assert(spk_manager->GetScriptPubKeys().count(script));\n+                }\n+            },\n+            [&] {\n+                auto spks{spk_manager->GetScriptPubKeys()};\n+                for (const CScript& spk : spks) {\n+                    assert(spk_manager->IsMine(spk) == ISMINE_SPENDABLE);\n+                    CTxDestination dest;\n+                    bool extract_dest{ExtractDestination(spk, dest)};\n+                    if (extract_dest) {\n+                        const std::string msg{fuzzed_data_provider.ConsumeRandomLengthString()};\n+                        PKHash pk_hash{fuzzed_data_provider.ConsumeBool() ? PKHash{ConsumeUInt160(fuzzed_data_provider)} : *std::get_if<PKHash>(&dest)};\n+                        std::string str_sig;\n+                        (void)spk_manager->SignMessage(msg, pk_hash, str_sig);\n+                    }\n+                }\n+            },\n+            [&] {\n+                CKey key{ConsumePrivateKey(fuzzed_data_provider, /*compressed=*/fuzzed_data_provider.ConsumeBool())};\n+                if (!key.IsValid()) return;\n+                spk_manager->AddDescriptorKey(key, key.GetPubKey());\n+                spk_manager->TopUp();\n+            },\n+            [&] {\n+                std::string descriptor;\n+                (void)spk_manager->GetDescriptorString(descriptor, /*priv=*/fuzzed_data_provider.ConsumeBool());\n+            },\n+            [&] {\n+                LOCK(spk_manager->cs_desc_man);\n+                auto wallet_desc{spk_manager->GetWalletDescriptor()};\n+                if (wallet_desc.descriptor->IsSingleType()) {\n+                    auto output_type{wallet_desc.descriptor->GetOutputType()};\n+                    if (output_type.has_value()) {\n+                        auto dest{spk_manager->GetNewDestination(*output_type)};\n+                        if (dest) {\n+                            assert(IsValidDestination(*dest));\n+                            assert(spk_manager->IsHDEnabled());\n+                        }\n+                    }\n+                }\n+            },\n+            [&] {\n+                CMutableTransaction tx_to;\n+                const std::optional<CMutableTransaction> opt_tx_to{ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider)};\n+                if (!opt_tx_to) {\n+                    return;\n+                }\n+                tx_to = *opt_tx_to;\n+\n+                std::map<COutPoint, Coin> coins{ConsumeCoins(fuzzed_data_provider)};\n+                const int sighash{fuzzed_data_provider.ConsumeIntegral<int>()};\n+                std::map<int, bilingual_str> input_errors;\n+                (void)spk_manager->SignTransaction(tx_to, coins, sighash, input_errors);\n+            },\n+            [&] {\n+                std::optional<PartiallySignedTransaction> opt_psbt{ConsumeDeserializable<PartiallySignedTransaction>(fuzzed_data_provider)};\n+                if (!opt_psbt) {\n+                    return;\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1389308579",
      "id" : 1389308579,
      "line" : 146,
      "node_id" : "PRRC_kwDOABII585Szyqj",
      "original_commit_id" : "43f7fc6a9e5c7df6fc22cee54eaed70656290bf5",
      "original_line" : 146,
      "original_position" : 146,
      "original_start_line" : 130,
      "path" : "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position" : 146,
      "pull_request_review_id" : 1724633504,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389308579/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 130,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-10T12:00:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389308579",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1389352537"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389352537"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, I'm addressing it.",
      "commit_id" : "43f7fc6a9e5c7df6fc22cee54eaed70656290bf5",
      "created_at" : "2023-11-10T12:46:58Z",
      "diff_hunk" : "@@ -0,0 +1,157 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/descriptor.h>\n+#include <test/util/setup_common.h>\n+#include <wallet/scriptpubkeyman.h>\n+#include <wallet/wallet.h>\n+#include <wallet/test/util.h>\n+\n+namespace wallet {\n+namespace {\n+const TestingSetup* g_setup;\n+\n+//! The converter of mocked descriptors, needs to be initialized when the target is.\n+MockedDescriptorConverter MOCKED_DESC_CONVERTER;\n+\n+void initialize_spkm()\n+{\n+    static const auto testing_setup{MakeNoLogFileContext<const TestingSetup>()};\n+    g_setup = testing_setup.get();\n+    SelectParams(ChainType::MAIN);\n+    MOCKED_DESC_CONVERTER.Init();\n+}\n+\n+static std::optional<std::pair<WalletDescriptor, FlatSigningProvider>> CreateWalletDescriptor(FuzzedDataProvider& fuzzed_data_provider)\n+{\n+    const std::string mocked_descriptor{fuzzed_data_provider.ConsumeRandomLengthString()};\n+    const auto desc_str{MOCKED_DESC_CONVERTER.GetDescriptor(mocked_descriptor)};\n+    if (!desc_str.has_value()) return std::nullopt;\n+\n+    FlatSigningProvider keys;\n+    std::string error;\n+    std::unique_ptr<Descriptor> parsed_desc{Parse(desc_str.value(), keys, error, false)};\n+    if (!parsed_desc) return std::nullopt;\n+\n+    WalletDescriptor w_desc{WalletDescriptor(std::move(parsed_desc), 0, 0, 1, 1)};\n+    return std::make_pair(w_desc, keys);\n+}\n+\n+static DescriptorScriptPubKeyMan* CreateDescriptor(WalletDescriptor& wallet_desc, FlatSigningProvider& keys, CWallet& keystore)\n+{\n+    LOCK(keystore.cs_wallet);\n+    keystore.AddWalletDescriptor(wallet_desc, keys, /*label=*/\"\", /*internal=*/false);\n+    return keystore.GetDescriptorScriptPubKeyMan(wallet_desc);\n+};\n+\n+FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate* chainstate = &node.chainman->ActiveChainstate();\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+        wallet.SetLastBlockProcessed(chainstate->m_chain.Height(), chainstate->m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    auto wallet_desc{CreateWalletDescriptor(fuzzed_data_provider)};\n+    if (!wallet_desc.has_value()) return;\n+    auto spk_manager{CreateDescriptor(wallet_desc->first, wallet_desc->second, wallet)};\n+    if (spk_manager == nullptr) return;\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 300) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                auto wallet_desc{CreateWalletDescriptor(fuzzed_data_provider)};\n+                if (wallet_desc.has_value()) {\n+                    std::string error;\n+                    if (spk_manager->CanUpdateToWalletDescriptor(wallet_desc->first, error)) {\n+                        auto new_spk_manager{CreateDescriptor(wallet_desc->first, wallet_desc->second, wallet)};\n+                        if (new_spk_manager != nullptr) spk_manager = new_spk_manager;\n+                    }\n+                }\n+            },\n+            [&] {\n+                const CScript script{ConsumeScript(fuzzed_data_provider)};\n+                auto is_mine{spk_manager->IsMine(script)};\n+                if (is_mine == isminetype::ISMINE_SPENDABLE) {\n+                    assert(spk_manager->GetScriptPubKeys().count(script));\n+                }\n+            },\n+            [&] {\n+                auto spks{spk_manager->GetScriptPubKeys()};\n+                for (const CScript& spk : spks) {\n+                    assert(spk_manager->IsMine(spk) == ISMINE_SPENDABLE);\n+                    CTxDestination dest;\n+                    bool extract_dest{ExtractDestination(spk, dest)};\n+                    if (extract_dest) {\n+                        const std::string msg{fuzzed_data_provider.ConsumeRandomLengthString()};\n+                        PKHash pk_hash{fuzzed_data_provider.ConsumeBool() ? PKHash{ConsumeUInt160(fuzzed_data_provider)} : *std::get_if<PKHash>(&dest)};\n+                        std::string str_sig;\n+                        (void)spk_manager->SignMessage(msg, pk_hash, str_sig);\n+                    }\n+                }\n+            },\n+            [&] {\n+                CKey key{ConsumePrivateKey(fuzzed_data_provider, /*compressed=*/fuzzed_data_provider.ConsumeBool())};\n+                if (!key.IsValid()) return;\n+                spk_manager->AddDescriptorKey(key, key.GetPubKey());\n+                spk_manager->TopUp();\n+            },\n+            [&] {\n+                std::string descriptor;\n+                (void)spk_manager->GetDescriptorString(descriptor, /*priv=*/fuzzed_data_provider.ConsumeBool());\n+            },\n+            [&] {\n+                LOCK(spk_manager->cs_desc_man);\n+                auto wallet_desc{spk_manager->GetWalletDescriptor()};\n+                if (wallet_desc.descriptor->IsSingleType()) {\n+                    auto output_type{wallet_desc.descriptor->GetOutputType()};\n+                    if (output_type.has_value()) {\n+                        auto dest{spk_manager->GetNewDestination(*output_type)};\n+                        if (dest) {\n+                            assert(IsValidDestination(*dest));\n+                            assert(spk_manager->IsHDEnabled());\n+                        }\n+                    }\n+                }\n+            },\n+            [&] {\n+                CMutableTransaction tx_to;\n+                const std::optional<CMutableTransaction> opt_tx_to{ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider)};\n+                if (!opt_tx_to) {\n+                    return;\n+                }\n+                tx_to = *opt_tx_to;\n+\n+                std::map<COutPoint, Coin> coins{ConsumeCoins(fuzzed_data_provider)};\n+                const int sighash{fuzzed_data_provider.ConsumeIntegral<int>()};\n+                std::map<int, bilingual_str> input_errors;\n+                (void)spk_manager->SignTransaction(tx_to, coins, sighash, input_errors);\n+            },\n+            [&] {\n+                std::optional<PartiallySignedTransaction> opt_psbt{ConsumeDeserializable<PartiallySignedTransaction>(fuzzed_data_provider)};\n+                if (!opt_psbt) {\n+                    return;\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1389352537",
      "id" : 1389352537,
      "in_reply_to_id" : 1389308579,
      "line" : 146,
      "node_id" : "PRRC_kwDOABII585Sz9ZZ",
      "original_commit_id" : "43f7fc6a9e5c7df6fc22cee54eaed70656290bf5",
      "original_line" : 146,
      "original_position" : 146,
      "original_start_line" : 130,
      "path" : "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position" : 146,
      "pull_request_review_id" : 1724708999,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389352537/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 130,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-10T12:46:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389352537",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1389412045"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389412045"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "done",
      "commit_id" : "ca5f6ac3068121d3f56dac52b2a2fbe0b0baca96",
      "created_at" : "2023-11-10T13:42:04Z",
      "diff_hunk" : "@@ -0,0 +1,157 @@\n+// Copyright (c) 2023-present The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <validation.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+#include <test/fuzz/util/descriptor.h>\n+#include <test/util/setup_common.h>\n+#include <wallet/scriptpubkeyman.h>\n+#include <wallet/wallet.h>\n+#include <wallet/test/util.h>\n+\n+namespace wallet {\n+namespace {\n+const TestingSetup* g_setup;\n+\n+//! The converter of mocked descriptors, needs to be initialized when the target is.\n+MockedDescriptorConverter MOCKED_DESC_CONVERTER;\n+\n+void initialize_spkm()\n+{\n+    static const auto testing_setup{MakeNoLogFileContext<const TestingSetup>()};\n+    g_setup = testing_setup.get();\n+    SelectParams(ChainType::MAIN);\n+    MOCKED_DESC_CONVERTER.Init();\n+}\n+\n+static std::optional<std::pair<WalletDescriptor, FlatSigningProvider>> CreateWalletDescriptor(FuzzedDataProvider& fuzzed_data_provider)\n+{\n+    const std::string mocked_descriptor{fuzzed_data_provider.ConsumeRandomLengthString()};\n+    const auto desc_str{MOCKED_DESC_CONVERTER.GetDescriptor(mocked_descriptor)};\n+    if (!desc_str.has_value()) return std::nullopt;\n+\n+    FlatSigningProvider keys;\n+    std::string error;\n+    std::unique_ptr<Descriptor> parsed_desc{Parse(desc_str.value(), keys, error, false)};\n+    if (!parsed_desc) return std::nullopt;\n+\n+    WalletDescriptor w_desc{WalletDescriptor(std::move(parsed_desc), 0, 0, 1, 1)};\n+    return std::make_pair(w_desc, keys);\n+}\n+\n+static DescriptorScriptPubKeyMan* CreateDescriptor(WalletDescriptor& wallet_desc, FlatSigningProvider& keys, CWallet& keystore)\n+{\n+    LOCK(keystore.cs_wallet);\n+    keystore.AddWalletDescriptor(wallet_desc, keys, /*label=*/\"\", /*internal=*/false);\n+    return keystore.GetDescriptorScriptPubKeyMan(wallet_desc);\n+};\n+\n+FUZZ_TARGET(scriptpubkeyman, .init = initialize_spkm)\n+{\n+    FuzzedDataProvider fuzzed_data_provider{buffer.data(), buffer.size()};\n+    const auto& node{g_setup->m_node};\n+    Chainstate* chainstate = &node.chainman->ActiveChainstate();\n+    std::unique_ptr<CWallet> wallet_ptr{std::make_unique<CWallet>(node.chain.get(), \"\", CreateMockableWalletDatabase())};\n+    CWallet& wallet{*wallet_ptr};\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetWalletFlag(WALLET_FLAG_DESCRIPTORS);\n+        wallet.SetLastBlockProcessed(chainstate->m_chain.Height(), chainstate->m_chain.Tip()->GetBlockHash());\n+    }\n+\n+    auto wallet_desc{CreateWalletDescriptor(fuzzed_data_provider)};\n+    if (!wallet_desc.has_value()) return;\n+    auto spk_manager{CreateDescriptor(wallet_desc->first, wallet_desc->second, wallet)};\n+    if (spk_manager == nullptr) return;\n+\n+    LIMITED_WHILE(fuzzed_data_provider.ConsumeBool(), 300) {\n+        CallOneOf(\n+            fuzzed_data_provider,\n+            [&] {\n+                auto wallet_desc{CreateWalletDescriptor(fuzzed_data_provider)};\n+                if (wallet_desc.has_value()) {\n+                    std::string error;\n+                    if (spk_manager->CanUpdateToWalletDescriptor(wallet_desc->first, error)) {\n+                        auto new_spk_manager{CreateDescriptor(wallet_desc->first, wallet_desc->second, wallet)};\n+                        if (new_spk_manager != nullptr) spk_manager = new_spk_manager;\n+                    }\n+                }\n+            },\n+            [&] {\n+                const CScript script{ConsumeScript(fuzzed_data_provider)};\n+                auto is_mine{spk_manager->IsMine(script)};\n+                if (is_mine == isminetype::ISMINE_SPENDABLE) {\n+                    assert(spk_manager->GetScriptPubKeys().count(script));\n+                }\n+            },\n+            [&] {\n+                auto spks{spk_manager->GetScriptPubKeys()};\n+                for (const CScript& spk : spks) {\n+                    assert(spk_manager->IsMine(spk) == ISMINE_SPENDABLE);\n+                    CTxDestination dest;\n+                    bool extract_dest{ExtractDestination(spk, dest)};\n+                    if (extract_dest) {\n+                        const std::string msg{fuzzed_data_provider.ConsumeRandomLengthString()};\n+                        PKHash pk_hash{fuzzed_data_provider.ConsumeBool() ? PKHash{ConsumeUInt160(fuzzed_data_provider)} : *std::get_if<PKHash>(&dest)};\n+                        std::string str_sig;\n+                        (void)spk_manager->SignMessage(msg, pk_hash, str_sig);\n+                    }\n+                }\n+            },\n+            [&] {\n+                CKey key{ConsumePrivateKey(fuzzed_data_provider, /*compressed=*/fuzzed_data_provider.ConsumeBool())};\n+                if (!key.IsValid()) return;\n+                spk_manager->AddDescriptorKey(key, key.GetPubKey());\n+                spk_manager->TopUp();\n+            },\n+            [&] {\n+                std::string descriptor;\n+                (void)spk_manager->GetDescriptorString(descriptor, /*priv=*/fuzzed_data_provider.ConsumeBool());\n+            },\n+            [&] {\n+                LOCK(spk_manager->cs_desc_man);\n+                auto wallet_desc{spk_manager->GetWalletDescriptor()};\n+                if (wallet_desc.descriptor->IsSingleType()) {\n+                    auto output_type{wallet_desc.descriptor->GetOutputType()};\n+                    if (output_type.has_value()) {\n+                        auto dest{spk_manager->GetNewDestination(*output_type)};\n+                        if (dest) {\n+                            assert(IsValidDestination(*dest));\n+                            assert(spk_manager->IsHDEnabled());\n+                        }\n+                    }\n+                }\n+            },\n+            [&] {\n+                CMutableTransaction tx_to;\n+                const std::optional<CMutableTransaction> opt_tx_to{ConsumeDeserializable<CMutableTransaction>(fuzzed_data_provider)};\n+                if (!opt_tx_to) {\n+                    return;\n+                }\n+                tx_to = *opt_tx_to;\n+\n+                std::map<COutPoint, Coin> coins{ConsumeCoins(fuzzed_data_provider)};\n+                const int sighash{fuzzed_data_provider.ConsumeIntegral<int>()};\n+                std::map<int, bilingual_str> input_errors;\n+                (void)spk_manager->SignTransaction(tx_to, coins, sighash, input_errors);\n+            },\n+            [&] {\n+                std::optional<PartiallySignedTransaction> opt_psbt{ConsumeDeserializable<PartiallySignedTransaction>(fuzzed_data_provider)};\n+                if (!opt_psbt) {\n+                    return;\n+                }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1389412045",
      "id" : 1389412045,
      "in_reply_to_id" : 1389308579,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585S0L7N",
      "original_commit_id" : "43f7fc6a9e5c7df6fc22cee54eaed70656290bf5",
      "original_line" : 154,
      "original_position" : 146,
      "original_start_line" : 130,
      "path" : "src/wallet/test/fuzz/scriptpubkeyman.cpp",
      "position" : null,
      "pull_request_review_id" : 1724808652,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28578",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389412045/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-11-10T13:42:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1389412045",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Force-pushed addressing https://github.com/bitcoin/bitcoin/pull/28578#discussion_r1389308579",
      "created_at" : "2023-11-10T13:43:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28578#issuecomment-1805755558",
      "id" : 1805755558,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28578",
      "node_id" : "IC_kwDOABII585roaSm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1805755558/reactions"
      },
      "updated_at" : "2023-11-10T13:43:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1805755558",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   }
]

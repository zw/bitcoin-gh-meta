{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "MEMBER",
   "body" : "I see this issue with latest master using Clang 17.0.6 on aarch64, and running the functional tests under Valgrind (3.22.0):\r\n```bash\r\n node0 stderr ==75935== Thread 25 b-msghand:\r\n==75935== Conditional jump or move depends on uninitialised value(s)\r\n==75935==    at 0x1955B8: _M_reset (optional:313)\r\n==75935==    by 0x1955B8: ~_Optional_payload (optional:437)\r\n==75935==    by 0x1955B8: ~_Optional_base (optional:508)\r\n==75935==    by 0x1955B8: GetLocalAddress(CNode const&) (???:220)\r\n==75935==    by 0x1956A3: GetLocalAddrForPeer(CNode&) (net.cpp:240)\r\n==75935==    by 0x1D091F: MaybeSendAddr (net_processing.cpp:5259)\r\n==75935==    by 0x1D091F: (anonymous namespace)::PeerManagerImpl::SendMessages(CNode*) (???:5453)\r\n==75935==    by 0x1AA183: CConnman::ThreadMessageHandler() (net.cpp:2886)\r\n==75935==    by 0x750627: operator() (std_function.h:591)\r\n==75935==    by 0x750627: util::TraceThread(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>) (???:21)\r\n==75935==    by 0x1B290F: __invoke_impl<void, void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), const char *, (lambda at net.cpp:3231:71)> (invoke.h:61)\r\n==75935==    by 0x1B290F: __invoke<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), const char *, (lambda at net.cpp:3231:71)> (invoke.h:96)\r\n==75935==    by 0x1B290F: _M_invoke<0UL, 1UL, 2UL> (std_thread.h:292)\r\n==75935==    by 0x1B290F: operator() (std_thread.h:299)\r\n==75935==    by 0x1B290F: std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), char const*, CConnman::Start(CScheduler&, CConnman::Options const&)::$_5> > >::_M_run() (std_thread.h:244)\r\n==75935==    by 0x4C501BF: execute_native_thread_routine (thread.cc:104)\r\n==75935==    by 0x4F85E37: start_thread (pthread_create.c:447)\r\n==75935==    by 0x4FF0E5B: thread_start (clone.S:79)\r\n==75935== \r\n{\r\n   <insert_a_suppression_name_here>\r\n   Memcheck:Cond\r\n   fun:_M_reset\r\n   fun:~_Optional_payload\r\n   fun:~_Optional_base\r\n   fun:_Z15GetLocalAddressRK5CNode\r\n   fun:_Z19GetLocalAddrForPeerR5CNode\r\n   fun:MaybeSendAddr\r\n   fun:_ZN12_GLOBAL__N_115PeerManagerImpl12SendMessagesEP5CNode\r\n   fun:_ZN8CConnman20ThreadMessageHandlerEv\r\n   fun:operator()\r\n   fun:_ZN4util11TraceThreadESt17basic_string_viewIcSt11char_traitsIcEESt8functionIFvvEE\r\n   fun:__invoke_impl<void, void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), const char *, (lambda at net.cpp:3231:71)>\r\n   fun:__invoke<void (*)(std::basic_string_view<char, std::char_traits<char> >, std::function<void ()>), const char *, (lambda at net.cpp:3231:71)>\r\n   fun:_M_invoke<0UL, 1UL, 2UL>\r\n   fun:operator()\r\n   fun:_ZNSt6thread11_State_implINS_8_InvokerISt5tupleIJPFvSt17basic_string_viewIcSt11char_traitsIcEESt8functionIFvvEEEPKcZN8CConnman5StartER10CSchedulerRKNSE_7OptionsEE3$_5EEEEE6_M_runEv\r\n   fun:execute_native_thread_routine\r\n   fun:start_thread\r\n   fun:thread_start\r\n}\r\n==75935== \r\n==75935== Exit program on first error (--exit-on-first-error=yes)\r\n```\r\n\r\nBisected to #28078 being the cause.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 4,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29635/comments",
   "created_at" : "2024-03-12T14:07:39Z",
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29635/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/issues/29635",
   "id" : 2181716748,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29635/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "I_kwDOABII586CClsM",
   "number" : 29635,
   "performed_via_github_app" : null,
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29635/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29635/timeline",
   "title" : "valgrind: Conditional jump or move depends on uninitialised value(s)",
   "updated_at" : "2024-03-12T16:02:50Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29635",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
      "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
      "followers_url" : "https://api.github.com/users/fanquake/followers",
      "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/fanquake",
      "id" : 863730,
      "login" : "fanquake",
      "node_id" : "MDQ6VXNlcjg2MzczMA==",
      "organizations_url" : "https://api.github.com/users/fanquake/orgs",
      "received_events_url" : "https://api.github.com/users/fanquake/received_events",
      "repos_url" : "https://api.github.com/users/fanquake/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/fanquake"
   }
}

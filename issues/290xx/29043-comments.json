[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29043).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [ismaelsadeeq](https://github.com/bitcoin/bitcoin/pull/29043#issuecomment-1848452118) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16545](https://github.com/bitcoin/bitcoin/pull/16545) (refactor: Implement missing error checking for ArgsManager flags by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-12-09T14:24:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29043#issuecomment-1848424410",
      "id" : 1848424410,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043",
      "node_id" : "IC_kwDOABII585uLLfa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848424410/reactions"
      },
      "updated_at" : "2023-12-09T22:33:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848424410",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK",
      "created_at" : "2023-12-09T16:15:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29043#issuecomment-1848452118",
      "id" : 1848452118,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043",
      "node_id" : "IC_kwDOABII585uLSQW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848452118/reactions"
      },
      "updated_at" : "2023-12-09T16:15:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848452118",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48946461?v=4",
         "events_url" : "https://api.github.com/users/ismaelsadeeq/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ismaelsadeeq/followers",
         "following_url" : "https://api.github.com/users/ismaelsadeeq/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ismaelsadeeq/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ismaelsadeeq",
         "id" : 48946461,
         "login" : "ismaelsadeeq",
         "node_id" : "MDQ6VXNlcjQ4OTQ2NDYx",
         "organizations_url" : "https://api.github.com/users/ismaelsadeeq/orgs",
         "received_events_url" : "https://api.github.com/users/ismaelsadeeq/received_events",
         "repos_url" : "https://api.github.com/users/ismaelsadeeq/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ismaelsadeeq/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ismaelsadeeq/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ismaelsadeeq"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I updated my PR by removing the changes that I did in initializer-lists. These were not necessary, evaluation order in these is well defined.",
      "created_at" : "2023-12-09T18:34:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29043#issuecomment-1848609143",
      "id" : 1848609143,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043",
      "node_id" : "IC_kwDOABII585uL4l3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848609143/reactions"
      },
      "updated_at" : "2023-12-09T18:34:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848609143",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice find!\r\n\r\nI am wondering if this is worth it at this point, since we only fuzz with llvm based compilers. If we had infrastructure that was fuzzing with gcc (e.g. compiling with afl++'s `afl-g++-fast`) then this would clearly make sense. I think if we are going to care about this, we should also add a gcc fuzz CI job and have a linter (maybe a custom clang-tidy plugin?) that checks for dependence on evaluation order (which would probably be a good idea in any case).",
      "created_at" : "2023-12-11T11:58:10Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29043#issuecomment-1849934451",
      "id" : 1849934451,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043",
      "node_id" : "IC_kwDOABII585uQ8Jz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1849934451/reactions"
      },
      "updated_at" : "2023-12-11T11:58:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1849934451",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> I am wondering if this is worth it at this point, since we only fuzz with llvm based compilers.\r\n\r\nI don't know how stable the ordering is for llvm. If it stays like that it's not a big deal I'd say, but it might change in future versions or with optimization levels? \r\n\r\nAs for stability with other compilers, in a different project I'm working on we run the fuzzing targets with the minimized corpus as unit tests, and this is done in the CI on all platforms. If that would make sense for bitcoin too, then the ordering becomes important again",
      "created_at" : "2023-12-11T17:07:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29043#issuecomment-1850500567",
      "id" : 1850500567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043",
      "node_id" : "IC_kwDOABII585uTGXX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850500567/reactions"
      },
      "updated_at" : "2023-12-11T17:07:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850500567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29043#discussion_r1430148489"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430148489"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Nit: use descriptive variable names for more clarity instead of single letters\r\n<details>\r\n  <summary>see diff</summary>\r\n  \r\n  ```diff\r\n diff --git a/src/test/fuzz/crypto.cpp b/src/test/fuzz/crypto.cpp\r\nindex aa478277e35..2fa2b109e55 100644\r\n--- a/src/test/fuzz/crypto.cpp\r\n+++ b/src/test/fuzz/crypto.cpp\r\n@@ -23,8 +23,8 @@ FUZZ_TARGET(crypto)\r\n     std::vector<uint8_t> data = ConsumeRandomLengthByteVector(fuzzed_data_provider);\r\n     if (data.empty()) {\r\n         auto new_size = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 4096);\r\n-        auto x = fuzzed_data_provider.ConsumeIntegral<uint8_t>();\r\n-        data.resize(new_size, x);\r\n+        auto default_byte_value = fuzzed_data_provider.ConsumeIntegral<uint8_t>();\r\n+        data.resize(new_size, default_byte_value);\r\n     }\r\n \r\n     CHash160 hash160;\r\n@@ -47,8 +47,8 @@ FUZZ_TARGET(crypto)\r\n                     data = ConsumeRandomLengthByteVector(fuzzed_data_provider);\r\n                     if (data.empty()) {\r\n                         auto new_size = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 4096);\r\n-                        auto x = fuzzed_data_provider.ConsumeIntegral<uint8_t>();\r\n-                        data.resize(new_size, x);\r\n+                        auto default_byte_value = fuzzed_data_provider.ConsumeIntegral<uint8_t>();\r\n+                        data.resize(new_size, default_byte_value);\r\n                     }\r\n                 }\r\n \r\ndiff --git a/src/test/fuzz/cuckoocache.cpp b/src/test/fuzz/cuckoocache.cpp\r\nindex f8a5bde3e6f..7fb7568c2bb 100644\r\n--- a/src/test/fuzz/cuckoocache.cpp\r\n+++ b/src/test/fuzz/cuckoocache.cpp\r\n@@ -41,7 +41,7 @@ FUZZ_TARGET(cuckoocache)\r\n         if (fuzzed_data_provider.ConsumeBool()) {\r\n             cuckoo_cache.insert(fuzzed_data_provider.ConsumeBool());\r\n         } else {\r\n-            auto e = fuzzed_data_provider.ConsumeBool();\r\n+            auto element = fuzzed_data_provider.ConsumeBool();\r\n             auto erase = fuzzed_data_provider.ConsumeBool();\r\n             cuckoo_cache.contains(e, erase);\r\n         }\r\ndiff --git a/src/test/fuzz/prevector.cpp b/src/test/fuzz/prevector.cpp\r\nindex 76f2d31c4ec..42a2d409426 100644\r\n--- a/src/test/fuzz/prevector.cpp\r\n+++ b/src/test/fuzz/prevector.cpp\r\n@@ -263,7 +263,7 @@ FUZZ_TARGET(prevector)\r\n             test.clear();\r\n             break;\r\n         case 10: {\r\n-            auto n = prov.ConsumeIntegralInRange<size_t>(0, 32767);\r\n+            auto num_elements = prov.ConsumeIntegralInRange<size_t>(0, 32767);\r\n             auto value = prov.ConsumeIntegral<int>();\r\n             test.assign(n, value);\r\n         } break;\r\n\r\n   ```\r\n</details>",
      "commit_id" : "01960c53c7d71c70792abe19413315768dc2275a",
      "created_at" : "2023-12-18T13:32:09Z",
      "diff_hunk" : "@@ -44,7 +46,9 @@ FUZZ_TARGET(crypto)\n                 if (fuzzed_data_provider.ConsumeBool()) {\n                     data = ConsumeRandomLengthByteVector(fuzzed_data_provider);\n                     if (data.empty()) {\n-                        data.resize(fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 4096), fuzzed_data_provider.ConsumeIntegral<uint8_t>());\n+                        auto new_size = fuzzed_data_provider.ConsumeIntegralInRange<size_t>(1, 4096);\n+                        auto x = fuzzed_data_provider.ConsumeIntegral<uint8_t>();",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29043#discussion_r1430148489",
      "id" : 1430148489,
      "line" : 50,
      "node_id" : "PRRC_kwDOABII585VPlWJ",
      "original_commit_id" : "01960c53c7d71c70792abe19413315768dc2275a",
      "original_line" : 50,
      "original_position" : 17,
      "original_start_line" : null,
      "path" : "src/test/fuzz/crypto.cpp",
      "position" : 17,
      "pull_request_review_id" : 1786902962,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430148489/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-18T13:35:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430148489",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48946461?v=4",
         "events_url" : "https://api.github.com/users/ismaelsadeeq/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ismaelsadeeq/followers",
         "following_url" : "https://api.github.com/users/ismaelsadeeq/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ismaelsadeeq/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ismaelsadeeq",
         "id" : 48946461,
         "login" : "ismaelsadeeq",
         "node_id" : "MDQ6VXNlcjQ4OTQ2NDYx",
         "organizations_url" : "https://api.github.com/users/ismaelsadeeq/orgs",
         "received_events_url" : "https://api.github.com/users/ismaelsadeeq/received_events",
         "repos_url" : "https://api.github.com/users/ismaelsadeeq/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ismaelsadeeq/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ismaelsadeeq/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ismaelsadeeq"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29043#discussion_r1430154424"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29043"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430154424"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This is okay since the standard is left-to-right evaluation order for initializer-clauses within an initializer-list?",
      "commit_id" : "01960c53c7d71c70792abe19413315768dc2275a",
      "created_at" : "2023-12-18T13:37:44Z",
      "diff_hunk" : "@@ -111,7 +111,7 @@ FUZZ_TARGET(coinselection)\n     GroupCoins(fuzzed_data_provider, utxo_pool, coin_params, /*positive_only=*/false, group_all);\n \n     for (const OutputGroup& group : group_all) {\n-        const CoinEligibilityFilter filter(fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeIntegral<uint64_t>());\n+        const CoinEligibilityFilter filter{fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeIntegral<int>(), fuzzed_data_provider.ConsumeIntegral<uint64_t>()};",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29043#discussion_r1430154424",
      "id" : 1430154424,
      "line" : 114,
      "node_id" : "PRRC_kwDOABII585VPmy4",
      "original_commit_id" : "01960c53c7d71c70792abe19413315768dc2275a",
      "original_line" : 114,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/wallet/test/fuzz/coinselection.cpp",
      "position" : 5,
      "pull_request_review_id" : 1786912851,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29043",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430154424/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-18T13:37:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1430154424",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/48946461?v=4",
         "events_url" : "https://api.github.com/users/ismaelsadeeq/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ismaelsadeeq/followers",
         "following_url" : "https://api.github.com/users/ismaelsadeeq/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ismaelsadeeq/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ismaelsadeeq",
         "id" : 48946461,
         "login" : "ismaelsadeeq",
         "node_id" : "MDQ6VXNlcjQ4OTQ2NDYx",
         "organizations_url" : "https://api.github.com/users/ismaelsadeeq/orgs",
         "received_events_url" : "https://api.github.com/users/ismaelsadeeq/received_events",
         "repos_url" : "https://api.github.com/users/ismaelsadeeq/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ismaelsadeeq/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ismaelsadeeq/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ismaelsadeeq"
      }
   }
]

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29016).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-12-06T22:32:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1843794495",
      "id" : 1843794495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29016",
      "node_id" : "IC_kwDOABII585t5hI_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843794495/reactions"
      },
      "updated_at" : "2023-12-06T22:32:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843794495",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29016#discussion_r1418224065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418224065"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "looks like the tidy ci is getting upset here\r\n\r\n```\r\nrpc/mempool.cpp:462:82: error: argument name 'inclue_hex' in comment does not match parameter name 'include_hex' [bugprone-argument-comment,-warnings-as-errors]\r\n  462 |             TxToUniv(e.GetTx(), /*block_hash=*/uint256::ZERO, /*entry=*/txentry, /*inclue_hex=*/false);\r\n      |                                                                                  ^~~~~~~~~~~~~~~\r\n      |                                                                                  /*include_hex=*/\r\n./core_io.h:57:88: note: 'include_hex' declared here\r\n   57 | void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex = true, bool without_witness = false, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\r\n   ```",
      "commit_id" : "07008477b8174d00627c5fe75859bc1f85602c69",
      "created_at" : "2023-12-07T02:17:13Z",
      "diff_hunk" : "@@ -375,6 +377,100 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n     }\n }\n \n+static RPCHelpMan listmempooltransactions()\n+{\n+    return RPCHelpMan{\"listmempooltransactions\",\n+        \"\\nReturns all transactions in the mempool. Can be filtered by mempool_sequence\\n\"\n+        \"\\nAllows for syncing with current mempool entries via polling (not zmq).\",\n+        {\n+            {\"start_sequence\", RPCArg::Type::NUM, RPCArg::Default{0}, \"The mempool_sequence to start the results to. Defaults to 0 (zero, all transactions).\"},\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a json object, false for array of transaction ids\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\",\n+                RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"mempool_sequence\", \"The current max mempool sequence value.\"},\n+                    {RPCResult::Type::ARR, \"txs\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::NUM, \"entry_sequence\", \"The mempool sequence value for this transaction entry.\"},\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"The transaction id\"},\n+                        }},\n+                    }},\n+                }},\n+            RPCResult{\"for verbose = true\",\n+                RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"mempool_sequence\", \"The current max mempool sequence value.\"},\n+                    {RPCResult::Type::ARR, \"txs\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                         Cat<std::vector<RPCResult>>(\n+                            {\n+                                {RPCResult::Type::NUM, \"entry_sequence\", \"The mempool sequence value for this transaction entry.\"},\n+                            },\n+                            DecodeTxDoc(/*txid_field_doc=*/\"The transaction id of the mempool transaction\")),\n+                        }},\n+                    }},\n+                }},\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"listmempooltransactions\", \"true\")\n+            + HelpExampleRpc(\"listmempooltransactions\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            uint64_t start_mempool_sequence = 0;\n+            if (!request.params[0].isNull()) {\n+                start_mempool_sequence = request.params[0].getInt<uint64_t>();\n+            }\n+\n+            bool fVerbose = false;\n+            if (!request.params[1].isNull())\n+                fVerbose = request.params[1].get_bool();\n+\n+            return MempoolTxsToJSON(EnsureAnyMemPool(request.context), fVerbose, start_mempool_sequence);\n+        },\n+    };\n+}\n+\n+UniValue MempoolTxsToJSON(const CTxMemPool& pool, bool verbose, uint64_t sequence_start)\n+{\n+    uint64_t mempool_sequence;\n+\n+    LOCK(pool.cs);\n+    mempool_sequence = pool.GetSequence();\n+\n+    UniValue o(UniValue::VOBJ);\n+    o.pushKV(\"mempool_sequence\", mempool_sequence);\n+\n+    UniValue a(UniValue::VARR);\n+    for (const CTxMemPoolEntry& e : pool.entryAll()) {\n+        UniValue txentry(UniValue::VOBJ);\n+\n+        // We skip anything not requested.\n+        if (e.GetSequence() < sequence_start)\n+            continue;\n+\n+        txentry.pushKV(\"entry_sequence\", e.GetSequence());\n+\n+        if (verbose) {\n+            // We could also calculate fees etc for this transaction, but yolo.\n+            TxToUniv(e.GetTx(), /*block_hash=*/uint256::ZERO, /*entry=*/txentry, /*inclue_hex=*/false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29016#discussion_r1418224065",
      "id" : 1418224065,
      "line" : 462,
      "node_id" : "PRRC_kwDOABII585UiGHB",
      "original_commit_id" : "07008477b8174d00627c5fe75859bc1f85602c69",
      "original_line" : 462,
      "original_position" : 95,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 95,
      "pull_request_review_id" : 1768993243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418224065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T02:17:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418224065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15950706?v=4",
         "events_url" : "https://api.github.com/users/kevkevinpal/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kevkevinpal/followers",
         "following_url" : "https://api.github.com/users/kevkevinpal/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kevkevinpal/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kevkevinpal",
         "id" : 15950706,
         "login" : "kevkevinpal",
         "node_id" : "MDQ6VXNlcjE1OTUwNzA2",
         "organizations_url" : "https://api.github.com/users/kevkevinpal/orgs",
         "received_events_url" : "https://api.github.com/users/kevkevinpal/received_events",
         "repos_url" : "https://api.github.com/users/kevkevinpal/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kevkevinpal/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kevkevinpal/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kevkevinpal"
      }
   }
]

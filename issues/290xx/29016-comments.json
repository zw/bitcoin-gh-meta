[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29016).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [kristapsk](https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1880094062), [bordalix](https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1880184679) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#24748](https://github.com/bitcoin/bitcoin/pull/24748) (test/BIP324: functional tests for v2 P2P encryption by stratospher)\n* [#22341](https://github.com/bitcoin/bitcoin/pull/22341) (rpc: add path to gethdkey by Sjors)\n* [#19463](https://github.com/bitcoin/bitcoin/pull/19463) (Prune locks by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-12-06T22:32:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1843794495",
      "id" : 1843794495,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29016",
      "node_id" : "IC_kwDOABII585t5hI_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843794495/reactions"
      },
      "updated_at" : "2024-01-07T21:42:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843794495",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29016#discussion_r1418224065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418224065"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "looks like the tidy ci is getting upset here\r\n\r\n```\r\nrpc/mempool.cpp:462:82: error: argument name 'inclue_hex' in comment does not match parameter name 'include_hex' [bugprone-argument-comment,-warnings-as-errors]\r\n  462 |             TxToUniv(e.GetTx(), /*block_hash=*/uint256::ZERO, /*entry=*/txentry, /*inclue_hex=*/false);\r\n      |                                                                                  ^~~~~~~~~~~~~~~\r\n      |                                                                                  /*include_hex=*/\r\n./core_io.h:57:88: note: 'include_hex' declared here\r\n   57 | void TxToUniv(const CTransaction& tx, const uint256& block_hash, UniValue& entry, bool include_hex = true, bool without_witness = false, const CTxUndo* txundo = nullptr, TxVerbosity verbosity = TxVerbosity::SHOW_DETAILS);\r\n   ```",
      "commit_id" : "07008477b8174d00627c5fe75859bc1f85602c69",
      "created_at" : "2023-12-07T02:17:13Z",
      "diff_hunk" : "@@ -375,6 +377,100 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose, bool include_mempoo\n     }\n }\n \n+static RPCHelpMan listmempooltransactions()\n+{\n+    return RPCHelpMan{\"listmempooltransactions\",\n+        \"\\nReturns all transactions in the mempool. Can be filtered by mempool_sequence\\n\"\n+        \"\\nAllows for syncing with current mempool entries via polling (not zmq).\",\n+        {\n+            {\"start_sequence\", RPCArg::Type::NUM, RPCArg::Default{0}, \"The mempool_sequence to start the results to. Defaults to 0 (zero, all transactions).\"},\n+            {\"verbose\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"True for a json object, false for array of transaction ids\"},\n+        },\n+        {\n+            RPCResult{\"for verbose = false\",\n+                RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"mempool_sequence\", \"The current max mempool sequence value.\"},\n+                    {RPCResult::Type::ARR, \"txs\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                            {RPCResult::Type::NUM, \"entry_sequence\", \"The mempool sequence value for this transaction entry.\"},\n+                            {RPCResult::Type::STR_HEX, \"txid\", \"The transaction id\"},\n+                        }},\n+                    }},\n+                }},\n+            RPCResult{\"for verbose = true\",\n+                RPCResult::Type::OBJ, \"\", \"\",\n+                {\n+                    {RPCResult::Type::NUM, \"mempool_sequence\", \"The current max mempool sequence value.\"},\n+                    {RPCResult::Type::ARR, \"txs\", \"\",\n+                    {\n+                        {RPCResult::Type::OBJ, \"\", \"\",\n+                        {\n+                         Cat<std::vector<RPCResult>>(\n+                            {\n+                                {RPCResult::Type::NUM, \"entry_sequence\", \"The mempool sequence value for this transaction entry.\"},\n+                            },\n+                            DecodeTxDoc(/*txid_field_doc=*/\"The transaction id of the mempool transaction\")),\n+                        }},\n+                    }},\n+                }},\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"listmempooltransactions\", \"true\")\n+            + HelpExampleRpc(\"listmempooltransactions\", \"true\")\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+        {\n+            uint64_t start_mempool_sequence = 0;\n+            if (!request.params[0].isNull()) {\n+                start_mempool_sequence = request.params[0].getInt<uint64_t>();\n+            }\n+\n+            bool fVerbose = false;\n+            if (!request.params[1].isNull())\n+                fVerbose = request.params[1].get_bool();\n+\n+            return MempoolTxsToJSON(EnsureAnyMemPool(request.context), fVerbose, start_mempool_sequence);\n+        },\n+    };\n+}\n+\n+UniValue MempoolTxsToJSON(const CTxMemPool& pool, bool verbose, uint64_t sequence_start)\n+{\n+    uint64_t mempool_sequence;\n+\n+    LOCK(pool.cs);\n+    mempool_sequence = pool.GetSequence();\n+\n+    UniValue o(UniValue::VOBJ);\n+    o.pushKV(\"mempool_sequence\", mempool_sequence);\n+\n+    UniValue a(UniValue::VARR);\n+    for (const CTxMemPoolEntry& e : pool.entryAll()) {\n+        UniValue txentry(UniValue::VOBJ);\n+\n+        // We skip anything not requested.\n+        if (e.GetSequence() < sequence_start)\n+            continue;\n+\n+        txentry.pushKV(\"entry_sequence\", e.GetSequence());\n+\n+        if (verbose) {\n+            // We could also calculate fees etc for this transaction, but yolo.\n+            TxToUniv(e.GetTx(), /*block_hash=*/uint256::ZERO, /*entry=*/txentry, /*inclue_hex=*/false);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29016#discussion_r1418224065",
      "id" : 1418224065,
      "line" : 462,
      "node_id" : "PRRC_kwDOABII585UiGHB",
      "original_commit_id" : "07008477b8174d00627c5fe75859bc1f85602c69",
      "original_line" : 462,
      "original_position" : 95,
      "original_start_line" : null,
      "path" : "src/rpc/mempool.cpp",
      "position" : 95,
      "pull_request_review_id" : 1768993243,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29016",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418224065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T02:17:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418224065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/15950706?v=4",
         "events_url" : "https://api.github.com/users/kevkevinpal/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kevkevinpal/followers",
         "following_url" : "https://api.github.com/users/kevkevinpal/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kevkevinpal/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kevkevinpal",
         "id" : 15950706,
         "login" : "kevkevinpal",
         "node_id" : "MDQ6VXNlcjE1OTUwNzA2",
         "organizations_url" : "https://api.github.com/users/kevkevinpal/orgs",
         "received_events_url" : "https://api.github.com/users/kevkevinpal/received_events",
         "repos_url" : "https://api.github.com/users/kevkevinpal/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kevkevinpal/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kevkevinpal/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kevkevinpal"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> My initial attempt at this modified `getrawmempool` to\r\n> \r\n>     * take a `start_sequence` to allow for filtering, and\r\n> \r\n>     * adding the txdata (inputs outpoints + outputs (amount + scriptPubKeys)).\r\n\r\nThis seems like the best option imo. If we want to return the transaction hex (iiuc that should suffice if you are looking to get the tx data itself) we could add another level of verbosity to `getrawmempool` / `getmempoolentry`.\r\n\r\n> That was pretty ugly however, given that the current data model for `getrawmempool` is around a concept of \"mempool entry\" data. This returns transaction data (and does not report on information about other mempool dependencies etc; for that you should still call `getrawmempool` or `getmempoolentry`).\r\n\r\nNot sure I understand what the difficulty was? `getrawmempool` should give dependencies if you use `verbose` (see the \"depends\" field).\r\n\r\n> Note that this works well with ZMQ as the mempool_sequence number is identical.\r\n\r\nAssuming you mean the sequence emitted from `Transaction{AddedTo,RemovedFrom}Mempool`, note that this is not actually the case (they're usually off by 1 or more due to when the sequence increments happen).",
      "created_at" : "2023-12-18T16:00:09Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1860896797",
      "id" : 1860896797,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29016",
      "node_id" : "IC_kwDOABII585u6wgd",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1860896797/reactions"
      },
      "updated_at" : "2023-12-18T16:00:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1860896797",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Assuming you mean the sequence emitted from Transaction{AddedTo,RemovedFrom}Mempool, note that this is not actually the case (they're usually off by 1 or more due to when the sequence increments happen).\r\n\r\nCan you say more about this divergence or point me to a doc that contains more info?\r\n\r\nI should add that one problem with the existing `getrawmempool` RPC semantics is that currently requesting the mempool_sequence *and* asking for verbose results is specifically disallowed. \r\n\r\nI attempted to find a rationale for this but was unsuccessful (some code reorgs had removed the original code commit in the blame).\r\n\r\nRe: returning the raw tx: that suffices but is suboptimal for an application that is scanning for particular output creation or input inclusion in a proposed tx as it creates additional work on the client.\r\n\r\nSpeaking of computation, note that this approach omits the computation required for finding ancestor/descendent txs in the mempool; that seemed like unnecessary work for clients that are solely interested in just the tx info.\r\n",
      "created_at" : "2024-01-07T03:23:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1879925212",
      "id" : 1879925212,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29016",
      "node_id" : "IC_kwDOABII585wDWHc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879925212/reactions"
      },
      "updated_at" : "2024-01-07T03:23:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879925212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1097769?v=4",
         "events_url" : "https://api.github.com/users/niftynei/events{/privacy}",
         "followers_url" : "https://api.github.com/users/niftynei/followers",
         "following_url" : "https://api.github.com/users/niftynei/following{/other_user}",
         "gists_url" : "https://api.github.com/users/niftynei/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/niftynei",
         "id" : 1097769,
         "login" : "niftynei",
         "node_id" : "MDQ6VXNlcjEwOTc3Njk=",
         "organizations_url" : "https://api.github.com/users/niftynei/orgs",
         "received_events_url" : "https://api.github.com/users/niftynei/received_events",
         "repos_url" : "https://api.github.com/users/niftynei/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/niftynei/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/niftynei/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/niftynei"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Also, [missing](https://github.com/bitcoin/bitcoin/pull/29016/checks?check_run_id=19389652409) test coverage for the new command:\r\n\r\nYes, will add test coverage when this approach gets a concept ack.\r\n\r\nInstead, working usage of this proposed code change has been included in the original PR",
      "created_at" : "2024-01-07T03:25:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1879925440",
      "id" : 1879925440,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29016",
      "node_id" : "IC_kwDOABII585wDWLA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879925440/reactions"
      },
      "updated_at" : "2024-01-07T03:25:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1879925440",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1097769?v=4",
         "events_url" : "https://api.github.com/users/niftynei/events{/privacy}",
         "followers_url" : "https://api.github.com/users/niftynei/followers",
         "following_url" : "https://api.github.com/users/niftynei/following{/other_user}",
         "gists_url" : "https://api.github.com/users/niftynei/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/niftynei",
         "id" : 1097769,
         "login" : "niftynei",
         "node_id" : "MDQ6VXNlcjEwOTc3Njk=",
         "organizations_url" : "https://api.github.com/users/niftynei/orgs",
         "received_events_url" : "https://api.github.com/users/niftynei/received_events",
         "repos_url" : "https://api.github.com/users/niftynei/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/niftynei/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/niftynei/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/niftynei"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2024-01-07T15:44:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1880094062",
      "id" : 1880094062,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29016",
      "node_id" : "IC_kwDOABII585wD_Vu",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1880094062/reactions"
      },
      "updated_at" : "2024-01-07T15:44:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1880094062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/4500994?v=4",
         "events_url" : "https://api.github.com/users/kristapsk/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kristapsk/followers",
         "following_url" : "https://api.github.com/users/kristapsk/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kristapsk/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kristapsk",
         "id" : 4500994,
         "login" : "kristapsk",
         "node_id" : "MDQ6VXNlcjQ1MDA5OTQ=",
         "organizations_url" : "https://api.github.com/users/kristapsk/orgs",
         "received_events_url" : "https://api.github.com/users/kristapsk/received_events",
         "repos_url" : "https://api.github.com/users/kristapsk/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kristapsk/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kristapsk"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Concept ACK",
      "created_at" : "2024-01-07T21:42:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29016#issuecomment-1880184679",
      "id" : 1880184679,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29016",
      "node_id" : "IC_kwDOABII585wEVdn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1880184679/reactions"
      },
      "updated_at" : "2024-01-07T21:42:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1880184679",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/9318412?v=4",
         "events_url" : "https://api.github.com/users/bordalix/events{/privacy}",
         "followers_url" : "https://api.github.com/users/bordalix/followers",
         "following_url" : "https://api.github.com/users/bordalix/following{/other_user}",
         "gists_url" : "https://api.github.com/users/bordalix/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/bordalix",
         "id" : 9318412,
         "login" : "bordalix",
         "node_id" : "MDQ6VXNlcjkzMTg0MTI=",
         "organizations_url" : "https://api.github.com/users/bordalix/orgs",
         "received_events_url" : "https://api.github.com/users/bordalix/received_events",
         "repos_url" : "https://api.github.com/users/bordalix/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/bordalix/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/bordalix/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/bordalix"
      }
   }
]

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29040).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [vasild](https://github.com/bitcoin/bitcoin/pull/29040#pullrequestreview-1774737399) |\n| Concept ACK | [hebasto](https://github.com/bitcoin/bitcoin/pull/29040#issuecomment-1848422903) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-12-09T12:19:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#issuecomment-1848394548",
      "id" : 1848394548,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29040",
      "node_id" : "IC_kwDOABII585uLEM0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848394548/reactions"
      },
      "updated_at" : "2023-12-11T10:13:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848394548",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK.\r\n\r\n> This silences the following (clang 18):\r\n>\r\n> ```\r\n> common/args.cpp:288:31: error: returning variable 'm_cached_blocks_path' by reference requires holding mutex 'cs_args' [-Werror,-Wthread-safety-reference-return]\r\n>  288 |     if (!path.empty()) return path;\r\n>      |                               ^\r\n> ```\r\n\r\nDoes it happen on the master branch?",
      "created_at" : "2023-12-09T14:17:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#issuecomment-1848422903",
      "id" : 1848422903,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29040",
      "node_id" : "IC_kwDOABII585uLLH3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848422903/reactions"
      },
      "updated_at" : "2023-12-09T14:17:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848422903",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Does it happen on the master branch?\r\n\r\n@hebasto, yes, see https://github.com/bitcoin/bitcoin/pull/28774",
      "created_at" : "2023-12-11T09:45:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#issuecomment-1849679829",
      "id" : 1849679829,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29040",
      "node_id" : "IC_kwDOABII585uP9_V",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1849679829/reactions"
      },
      "updated_at" : "2023-12-11T09:45:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1849679829",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422226453"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422226453"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: the commit message has comments:\r\n\r\n```\r\n #include <system_error>  // for error_code\r\n #include <type_traits>   // for is_same\r\n```\r\n\r\npersonally I like them and find them useful.",
      "commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "created_at" : "2023-12-11T09:59:55Z",
      "diff_hunk" : "@@ -14,6 +14,8 @@\n #include <ios>\n #include <ostream>\n #include <string>\n+#include <system_error>\n+#include <type_traits>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422226453",
      "id" : 1422226453,
      "line" : 18,
      "node_id" : "PRRC_kwDOABII585UxXQV",
      "original_commit_id" : "facc08096d7df9c4eacb559f02950ee8a13b1147",
      "original_line" : 18,
      "original_position" : 11,
      "original_start_line" : 17,
      "path" : "src/util/fs.h",
      "position" : 11,
      "pull_request_review_id" : 1774737399,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422226453/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 17,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-11T10:13:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422226453",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422242907"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422242907"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "What about the comment that says \"This method can be removed after switching to C++20\"? I think indeed this method should be removed entirely.\r\n\r\nIn C++17 its prototype, according to the spec is `std::string u8string() const` which matches ours and is ok. But in C++20 it is: `std::u8string u8string() const` and it is confusing to have a mismatch. I would better drop this method like the comment says and then fix problems (if any) that arise due to that.",
      "commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "created_at" : "2023-12-11T10:12:58Z",
      "diff_hunk" : "@@ -54,10 +56,8 @@ class path : public std::filesystem::path\n \n     std::string u8string() const\n     {\n-        const auto& utf8_str{std::filesystem::path::u8string()};\n-        // utf8_str might either be std::string (C++17) or std::u8string\n-        // (C++20). Convert both to std::string. This method can be removed\n-        // after switching to C++20.\n+        const std::u8string& utf8_str{std::filesystem::path::u8string()};\n+        // Convert to std::string as a convenience for use in RPC code.\n         return std::string{utf8_str.begin(), utf8_str.end()};\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422242907",
      "id" : 1422242907,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585UxbRb",
      "original_commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : 57,
      "path" : "src/util/fs.h",
      "position" : 35,
      "pull_request_review_id" : 1774737399,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422242907/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-11T10:13:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422242907",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422675622"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422675622"
         }
      },
      "author_association" : "MEMBER",
      "body" : "\"This method can be removed after switching to C++20\" was written by me and I think it no longer makes sense.\r\n\r\n> But in C++20 it is: std::u8string u8string() const and it is confusing to have a mismatch.\r\n\r\nI think this is fine. `fs::path` is not an exact API-copy of `std::filesystem::path`. Some methods are different, or deleted, so this mismatch should be fine.\r\n\r\nIf a u8string was returned here, UniValue would have to be updated to take it as well, in which case the conversion would need to happen there. Other parts of the codebase may have to be adjusted as well. I don't think forcing conversions all over the codebase  adds any value, but I am happy to change my view, if there are any good reasons.",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-11T15:43:42Z",
      "diff_hunk" : "@@ -54,10 +56,8 @@ class path : public std::filesystem::path\n \n     std::string u8string() const\n     {\n-        const auto& utf8_str{std::filesystem::path::u8string()};\n-        // utf8_str might either be std::string (C++17) or std::u8string\n-        // (C++20). Convert both to std::string. This method can be removed\n-        // after switching to C++20.\n+        const std::u8string& utf8_str{std::filesystem::path::u8string()};\n+        // Convert to std::string as a convenience for use in RPC code.\n         return std::string{utf8_str.begin(), utf8_str.end()};\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422675622",
      "id" : 1422675622,
      "in_reply_to_id" : 1422242907,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585UzE6m",
      "original_commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : 57,
      "path" : "src/util/fs.h",
      "position" : 35,
      "pull_request_review_id" : 1775468844,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422675622/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-11T15:43:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422675622",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422802518"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422802518"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I need to understand this better. What I grasp now is that in C++17 it was ok to store UTF-8 strings in `std::string` and in C++20 it is not and one has to use `std::u8string` instead?\r\n\r\nThis smells because if callers need `std::string` why do they call `u8string()` and not `string()`!? Is it because it was ok to do that in C++17 because in C++17 `std::filesystem::path::string()` would return `std::string` itself and on top of this it was needed because of some complication on Windows?\r\n\r\nOn Windows `filesystem::path` uses `wchar_t` and it has to be somehow converted to `std::string<char>`, I guess:\r\n1. `filesystem::path::string()` which does that conversion is not ok\r\n2. `filesystem::path::u8string()` converts `wchar_t` to\r\n  2.1. C++17: `char` from which we convert it explicitly to `char` which is a noop\r\n  2.2. C++20: `char8_t` from which we convert it explicitly to `char`. Is that ok? Why C++20 has `std::u8string` if we can store UTF-8 strings in `std::string`?\r\n\r\nWhat would be an example in C++20 where it is broken by calling `string()` (1.) and ok by converting `wchar_t`->`char8_t`->`char` (2.2)?",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-11T16:52:55Z",
      "diff_hunk" : "@@ -54,10 +56,8 @@ class path : public std::filesystem::path\n \n     std::string u8string() const\n     {\n-        const auto& utf8_str{std::filesystem::path::u8string()};\n-        // utf8_str might either be std::string (C++17) or std::u8string\n-        // (C++20). Convert both to std::string. This method can be removed\n-        // after switching to C++20.\n+        const std::u8string& utf8_str{std::filesystem::path::u8string()};\n+        // Convert to std::string as a convenience for use in RPC code.\n         return std::string{utf8_str.begin(), utf8_str.end()};\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422802518",
      "id" : 1422802518,
      "in_reply_to_id" : 1422242907,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585Uzj5W",
      "original_commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : 57,
      "path" : "src/util/fs.h",
      "position" : 35,
      "pull_request_review_id" : 1775659940,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422802518/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-11T16:52:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422802518",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422807954"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422807954"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> I need to understand this better. What I grasp now is that in C++17 it was ok to store UTF-8 strings in `std::string` and in C++20 it is not and one has to use `std::u8string` instead?\r\n\r\nThe underlying data structure is just a container to hold bytes. If the bytes are identical, which they are (in this function), it only matters for readers of the code what the data structure is called.\r\n\r\nThe important part to getting the right bytes is to call the right function, which is called `u8string` in all versions of C++ and in this file.",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-11T16:56:46Z",
      "diff_hunk" : "@@ -54,10 +56,8 @@ class path : public std::filesystem::path\n \n     std::string u8string() const\n     {\n-        const auto& utf8_str{std::filesystem::path::u8string()};\n-        // utf8_str might either be std::string (C++17) or std::u8string\n-        // (C++20). Convert both to std::string. This method can be removed\n-        // after switching to C++20.\n+        const std::u8string& utf8_str{std::filesystem::path::u8string()};\n+        // Convert to std::string as a convenience for use in RPC code.\n         return std::string{utf8_str.begin(), utf8_str.end()};\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422807954",
      "id" : 1422807954,
      "in_reply_to_id" : 1422242907,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585UzlOS",
      "original_commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : 57,
      "path" : "src/util/fs.h",
      "position" : 35,
      "pull_request_review_id" : 1775668271,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422807954/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-11T16:56:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422807954",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422828473"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422828473"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> 2.2. C++20: `char8_t` from which we convert it explicitly to `char`. Is that ok? Why C++20 has `std::u8string` if we can store UTF-8 strings in `std::string`?\r\n\r\nYes, conversion should be fine. See https://stackoverflow.com/a/57453713",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-11T17:10:52Z",
      "diff_hunk" : "@@ -54,10 +56,8 @@ class path : public std::filesystem::path\n \n     std::string u8string() const\n     {\n-        const auto& utf8_str{std::filesystem::path::u8string()};\n-        // utf8_str might either be std::string (C++17) or std::u8string\n-        // (C++20). Convert both to std::string. This method can be removed\n-        // after switching to C++20.\n+        const std::u8string& utf8_str{std::filesystem::path::u8string()};\n+        // Convert to std::string as a convenience for use in RPC code.\n         return std::string{utf8_str.begin(), utf8_str.end()};\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422828473",
      "id" : 1422828473,
      "in_reply_to_id" : 1422242907,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585UzqO5",
      "original_commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : 57,
      "path" : "src/util/fs.h",
      "position" : 35,
      "pull_request_review_id" : 1775701397,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422828473/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-11T17:10:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422828473",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422829381"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422829381"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> What would be an example in C++20 where it is broken by calling `string()` (1.) and ok by converting `wchar_t`->`char8_t`->`char` (2.2)?\r\n\r\nThis has nothing to do with C++20. If you call the wrong function `string()` vs `u8string()`, you will also get the wrong result with C++17.",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-11T17:11:40Z",
      "diff_hunk" : "@@ -54,10 +56,8 @@ class path : public std::filesystem::path\n \n     std::string u8string() const\n     {\n-        const auto& utf8_str{std::filesystem::path::u8string()};\n-        // utf8_str might either be std::string (C++17) or std::u8string\n-        // (C++20). Convert both to std::string. This method can be removed\n-        // after switching to C++20.\n+        const std::u8string& utf8_str{std::filesystem::path::u8string()};\n+        // Convert to std::string as a convenience for use in RPC code.\n         return std::string{utf8_str.begin(), utf8_str.end()};\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422829381",
      "id" : 1422829381,
      "in_reply_to_id" : 1422242907,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585UzqdF",
      "original_commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : 57,
      "path" : "src/util/fs.h",
      "position" : 35,
      "pull_request_review_id" : 1775702776,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422829381/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-11T17:11:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1422829381",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1423659099"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423659099"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> This has nothing to do with C++20\r\n\r\nok, rephrase (I mentioned C++20 because C++17 does not have `char8_t`):\r\n\r\nWhat would be an example where it is broken by calling `string()` (1.) and ok by converting `wchar_t`->`char8_t`->`char` (2.2)?",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-12T08:51:18Z",
      "diff_hunk" : "@@ -54,10 +56,8 @@ class path : public std::filesystem::path\n \n     std::string u8string() const\n     {\n-        const auto& utf8_str{std::filesystem::path::u8string()};\n-        // utf8_str might either be std::string (C++17) or std::u8string\n-        // (C++20). Convert both to std::string. This method can be removed\n-        // after switching to C++20.\n+        const std::u8string& utf8_str{std::filesystem::path::u8string()};\n+        // Convert to std::string as a convenience for use in RPC code.\n         return std::string{utf8_str.begin(), utf8_str.end()};\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1423659099",
      "id" : 1423659099,
      "in_reply_to_id" : 1422242907,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585U21Bb",
      "original_commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : 57,
      "path" : "src/util/fs.h",
      "position" : 35,
      "pull_request_review_id" : 1776948596,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423659099/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-12T08:51:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423659099",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1423882821"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423882821"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> What would be an example where it is broken by calling `string()`\r\n\r\nAny place, which correctly calls `u8string()`, and instead incorrectly calls `string()` is broken. For example, the code may be broken on systems whose native encoding is not UTF-8.\r\n\r\nSee also\r\n\r\n```diff\r\ndiff --git a/src/test/fs_tests.cpp b/src/test/fs_tests.cpp\r\nindex 7cfecb2b22..34168a551b 100644\r\n--- a/src/test/fs_tests.cpp\r\n+++ b/src/test/fs_tests.cpp\r\n@@ -19,7 +19,7 @@ BOOST_AUTO_TEST_CASE(fsbridge_pathtostring)\r\n {\r\n     std::string u8_str = \"fs_tests_â¿_ð\";\r\n     BOOST_CHECK_EQUAL(fs::PathToString(fs::PathFromString(u8_str)), u8_str);\r\n-    BOOST_CHECK_EQUAL(fs::u8path(u8_str).u8string(), u8_str);\r\n+    BOOST_CHECK_EQUAL(std::filesystem::path{fs::u8path(u8_str)}.string(), u8_str);\r\n     BOOST_CHECK_EQUAL(fs::PathFromString(u8_str).u8string(), u8_str);\r\n     BOOST_CHECK_EQUAL(fs::PathToString(fs::u8path(u8_str)), u8_str);\r\n #ifndef WIN32\r\n```\r\n\r\n```\r\nunknown location(0): fatal error: in \"fs_tests/fsbridge_pathtostring\": class std::system_error: No mapping for the Unicode character exists in the target multi-byte code page.\r\n```\r\n\r\nhttps://github.com/maflcko/bitcoin-core-with-ci/actions/runs/7180069987/job/19553642111#step:23:477",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-12T11:51:07Z",
      "diff_hunk" : "@@ -54,10 +56,8 @@ class path : public std::filesystem::path\n \n     std::string u8string() const\n     {\n-        const auto& utf8_str{std::filesystem::path::u8string()};\n-        // utf8_str might either be std::string (C++17) or std::u8string\n-        // (C++20). Convert both to std::string. This method can be removed\n-        // after switching to C++20.\n+        const std::u8string& utf8_str{std::filesystem::path::u8string()};\n+        // Convert to std::string as a convenience for use in RPC code.\n         return std::string{utf8_str.begin(), utf8_str.end()};\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1423882821",
      "id" : 1423882821,
      "in_reply_to_id" : 1422242907,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585U3rpF",
      "original_commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : 57,
      "path" : "src/util/fs.h",
      "position" : 35,
      "pull_request_review_id" : 1777293155,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423882821/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-12T11:51:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423882821",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1425796516"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425796516"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"refactor: Remove pre-C++20 fs code\" (fa3d9304e80c214c8b073f12a7f4b08c5a94af04)\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1422242907\r\n\r\n> If a u8string was returned here, UniValue would have to be updated to take it as well, in which case the conversion would need to happen there.\r\n\r\nIn theory, no conversions are actually required, right? In theory UniValue could use u8string instead of string internally, and other parts of the codebase could too, so nothing would need to be converted?\r\n\r\nIn any case, I think going forward it will be confusing to have a u8string method that doesn't actually return a u8string. The method isn't called very many places, so maybe we could follow this up with a scripted-diff renaming u8string to utf8sting or something like that, to avoid confusing it with the standard method.\r\n\r\nRenaming might also be good since it should make the standard u8string method easier to call and allow getting the utf8 paths more efficiently without {utf8_str.begin(), utf8_str.end()} copies.",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-13T19:31:06Z",
      "diff_hunk" : "@@ -54,10 +56,8 @@ class path : public std::filesystem::path\n \n     std::string u8string() const\n     {\n-        const auto& utf8_str{std::filesystem::path::u8string()};\n-        // utf8_str might either be std::string (C++17) or std::u8string\n-        // (C++20). Convert both to std::string. This method can be removed\n-        // after switching to C++20.\n+        const std::u8string& utf8_str{std::filesystem::path::u8string()};\n+        // Convert to std::string as a convenience for use in RPC code.\n         return std::string{utf8_str.begin(), utf8_str.end()};\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1425796516",
      "id" : 1425796516,
      "in_reply_to_id" : 1422242907,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585U--2k",
      "original_commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : 57,
      "path" : "src/util/fs.h",
      "position" : 35,
      "pull_request_review_id" : 1780346500,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425796516/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-13T20:20:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425796516",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1425838080"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425838080"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "In commit \"ArgsManager: return path by value from GetBlocksDirPath()\" (856c88776f8486446602476a1c9e133ac0cff510)\r\n\r\nThis change looks ok, but it seems like the clang-18 warning is a false alarm. We know know m_cached_blocks_path will never change after it is written, and we always acquire the cs_args lock before reading m_cached_blocks_path so we can be sure that by the time we do read it we are necessarily seeing the latest value. I don't see how there could be a race condition here, because it shouldn't matter how long reader threads hold the lock, as long as they are acquire the lock before reading and we know the value never changes.\r\n\r\nMaybe declaring the `fs::path& path` const, and writing to `m_cached_blocks_path` directly could make the warning go away?",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-13T20:13:21Z",
      "diff_hunk" : "@@ -277,7 +277,7 @@ fs::path ArgsManager::GetPathArg(std::string arg, const fs::path& default_value)\n     return result.has_filename() ? result : result.parent_path();\n }\n \n-const fs::path& ArgsManager::GetBlocksDirPath() const\n+fs::path ArgsManager::GetBlocksDirPath() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1425838080",
      "id" : 1425838080,
      "line" : 280,
      "node_id" : "PRRC_kwDOABII585U_JAA",
      "original_commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "original_line" : 280,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/common/args.cpp",
      "position" : 5,
      "pull_request_review_id" : 1780346500,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425838080/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-13T20:20:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425838080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1426447476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1426447476"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> confusing to have a u8string method that doesn't actually return a u8string\r\n\r\nMy concern exactly!",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-14T09:18:16Z",
      "diff_hunk" : "@@ -54,10 +56,8 @@ class path : public std::filesystem::path\n \n     std::string u8string() const\n     {\n-        const auto& utf8_str{std::filesystem::path::u8string()};\n-        // utf8_str might either be std::string (C++17) or std::u8string\n-        // (C++20). Convert both to std::string. This method can be removed\n-        // after switching to C++20.\n+        const std::u8string& utf8_str{std::filesystem::path::u8string()};\n+        // Convert to std::string as a convenience for use in RPC code.\n         return std::string{utf8_str.begin(), utf8_str.end()};\n     }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1426447476",
      "id" : 1426447476,
      "in_reply_to_id" : 1422242907,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585VBdx0",
      "original_commit_id" : "0d66eea93f1e115b2e9e00ee2e89cd967f826d22",
      "original_line" : 62,
      "original_position" : 35,
      "original_start_line" : 57,
      "path" : "src/util/fs.h",
      "position" : 35,
      "pull_request_review_id" : 1781375568,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1426447476/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 57,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-14T09:18:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1426447476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1426458856"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1426458856"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "The warning tells us that the code is _potentially_ unsafe. Not that it has a certain bug now. It is similar to having a variable declared with `GUARDED_BY()`, then accessing it without the mutex in such a way that it is safe.\r\n\r\n> Maybe declaring the fs::path& path const, and writing to m_cached_blocks_path directly could make the warning go away?\r\n\r\nWould that be like tricking the compiler, going around the warning without actually removing the underlying potential problem?",
      "commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "created_at" : "2023-12-14T09:27:48Z",
      "diff_hunk" : "@@ -277,7 +277,7 @@ fs::path ArgsManager::GetPathArg(std::string arg, const fs::path& default_value)\n     return result.has_filename() ? result : result.parent_path();\n }\n \n-const fs::path& ArgsManager::GetBlocksDirPath() const\n+fs::path ArgsManager::GetBlocksDirPath() const",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29040#discussion_r1426458856",
      "id" : 1426458856,
      "in_reply_to_id" : 1425838080,
      "line" : 280,
      "node_id" : "PRRC_kwDOABII585VBgjo",
      "original_commit_id" : "856c88776f8486446602476a1c9e133ac0cff510",
      "original_line" : 280,
      "original_position" : 5,
      "original_start_line" : null,
      "path" : "src/common/args.cpp",
      "position" : 5,
      "pull_request_review_id" : 1781393697,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29040",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1426458856/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-14T09:27:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1426458856",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   }
]

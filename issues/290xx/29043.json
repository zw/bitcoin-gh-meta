{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "There exist many usages of `fuzzed_data_provider` where it is evaluated directly in the function call.\r\nUnfortunately, [the order of evaluation of function arguments is unspecified](https://en.cppreference.com/w/cpp/language/eval_order), and a simple example shows that it can differ e.g. between clang++ and g++: https://godbolt.org/z/jooMezWWY\r\n\r\nWhen the evaluation order is not consistent, the same fuzzing/random input will produce different output, which is bad for coverage/reproducibility. This PR fixes all these cases I have found where unspecified evaluation order could be a problem.\r\n\r\nFinding these has been manual work; I grepped the sourcecode for these patterns, and looked at each usage individually. So there is a chance I missed some.\r\n\r\n* `fuzzed_data_provider`\r\n* `.Consume`\r\n* `>Consume`\r\n* `.rand`\r\n\r\nI first discovered this in https://github.com/bitcoin/bitcoin/pull/29013#discussion_r1420236394. Note that there is a possibility that due to this fix the evaluation order is now different in many cases than when the fuzzing corpus has been created. If that is the case, the fuzzing corpus will have worse coverage than before.",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043/comments",
   "created_at" : "2023-12-09T14:24:09Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/29043",
   "id" : 2033870672,
   "labels" : [],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585hlozm",
   "number" : 29043,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/29043.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29043",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/29043.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29043"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043/timeline",
   "title" : "fuzz/util: make FuzzedDataProvider & FastRandomContext usage deterministic",
   "updated_at" : "2023-12-09T14:28:58Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29043",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
      "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
      "followers_url" : "https://api.github.com/users/martinus/followers",
      "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
      "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/martinus",
      "id" : 14386,
      "login" : "martinus",
      "node_id" : "MDQ6VXNlcjE0Mzg2",
      "organizations_url" : "https://api.github.com/users/martinus/orgs",
      "received_events_url" : "https://api.github.com/users/martinus/received_events",
      "repos_url" : "https://api.github.com/users/martinus/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/martinus"
   }
}

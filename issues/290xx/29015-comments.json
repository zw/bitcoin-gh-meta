[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29015).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [TheCharlatan](https://github.com/bitcoin/bitcoin/pull/29015#pullrequestreview-1933641180) |\n| Concept ACK | [Sjors](https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1927009876) |\n| Approach ACK | [hebasto](https://github.com/bitcoin/bitcoin/pull/29015#pullrequestreview-1882740742) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#bitcoin-core/gui/599](https://github.com/bitcoin-core/gui/pull/599) (Translate unit names & fix external signer error by luke-jr)\n* [#29642](https://github.com/bitcoin/bitcoin/pull/29642) (kernel: Handle fatal errors through return values by TheCharlatan)\n* [#29623](https://github.com/bitcoin/bitcoin/pull/29623) (Simplify network-adjusted time warning logic by stickies-v)\n* [#29473](https://github.com/bitcoin/bitcoin/pull/29473) (refactor: Speed up Base58 encoding/decoding by 400%/200% via preliminary byte packing by paplorinc)\n* [#29442](https://github.com/bitcoin/bitcoin/pull/29442) (wallet: Target a pre-defined utxo set composition by adjusting change outputs by remyers)\n* [#29432](https://github.com/bitcoin/bitcoin/pull/29432) (Stratum v2 Template Provider (take 3) by Sjors)\n* [#29365](https://github.com/bitcoin/bitcoin/pull/29365) (Extend signetchallenge to set target block spacing by starius)\n* [#29346](https://github.com/bitcoin/bitcoin/pull/29346) (Stratum v2 Noise Protocol by Sjors)\n* [#29278](https://github.com/bitcoin/bitcoin/pull/29278) (Wallet:  Add `maxfeerate` wallet startup option by ismaelsadeeq)\n* [#29242](https://github.com/bitcoin/bitcoin/pull/29242) (Mempool util: Add RBF diagram checks for single chunks against clusters of size 2 by instagibbs)\n* [#29229](https://github.com/bitcoin/bitcoin/pull/29229) (Make (Read/Write)BinaryFile work with char vector, use AutoFile by Sjors)\n* [#28710](https://github.com/bitcoin/bitcoin/pull/28710) (Remove the legacy wallet and BDB dependency by achow101)\n* [#27375](https://github.com/bitcoin/bitcoin/pull/27375) (net: support unix domain sockets for -proxy and -onion by pinheadmz)\n* [#22838](https://github.com/bitcoin/bitcoin/pull/22838) (descriptors: Be able to specify change and receiving in a single descriptor string by achow101)\n* [#21283](https://github.com/bitcoin/bitcoin/pull/21283) (Implement BIP 370 PSBTv2 by achow101)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-12-06T22:26:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1843788249",
      "id" : 1843788249,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585t5fnZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843788249/reactions"
      },
      "updated_at" : "2024-03-13T11:15:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843788249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Motivation for this change is that the util library is a dependency of the kernel, and we should remove functionality from util that shouldn't be called by kernel code or kernel applications.\r\n\r\nIs the idea here that `util` should be for generic code, and that these bits and pieces (like fees and error) are specific bitcoin features that are only relevant to wallet/p2p, so aren't generic?",
      "created_at" : "2023-12-07T03:13:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1844180519",
      "id" : 1844180519,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585t6_Yn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1844180519/reactions"
      },
      "updated_at" : "2023-12-07T03:13:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1844180519",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 0e647454b49274ee82978c06b606f3fd9c02b779 -> 778c0214d25e5a012c61251d592257ae19805255 ([`pr/rmutil.1`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.1) -> [`pr/rmutil.2`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.2), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/rmutil.1..pr/rmutil.2)) fixing CI errors from forgitting to add new files to git\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1844180519\r\n\r\n> > Motivation for this change is that the util library is a dependency of the kernel, and we should remove functionality from util that shouldn't be called by kernel code or kernel applications.\r\n> \r\n> Is the idea here that `util` should be for generic code, and that these bits and pieces (like fees and error) are specific bitcoin features that are only relevant to wallet/p2p, so aren't generic?\r\n\r\nI do think that's generally a good thing to do, but it's not really the goal of this PR. The main thing this PR is trying to do is provide a better kernel API and reduce the size of the kernel library.\r\n\r\nBecause libbitcoin_kernel depends on libbitcoin_util, any external application using the kernel will also depend on util. So we should try to avoid including functions and types in util that are not likely to be useful to external applications, or are unstable and meant for internal use. The common library is usually a better place for these things.",
      "created_at" : "2023-12-07T23:23:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1846256921",
      "id" : 1846256921,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uC6UZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1846256921/reactions"
      },
      "updated_at" : "2023-12-07T23:23:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1846256921",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > > Motivation for this change is that the util library is a dependency of the kernel, and we should remove functionality from util that shouldn't be called by kernel code or kernel applications.\r\n> > \r\n> > Is the idea here that `util` should be for generic code, and that these bits and pieces (like fees and error) are specific bitcoin features that are only relevant to wallet/p2p, so aren't generic?\r\n> \r\n> I do think that's generally a good thing to do, but it's not really the goal of this PR. The main thing this PR is trying to do is provide a better kernel API and reduce the size of the kernel library.\r\n\r\nDoes that mean that things should only go in util if they're going to be used by the kernel library then? That would presumably mean util/bitdeque.h and util/sock.cpp should also eventually go elsewhere, for example? That seems like a bad approach to me (in that it means code has to move into and out of util based on whether it's relevant to the kernel, rather than due to any changes to the code itself, and users then potentially have to deal with it moving into/outof the util:: namespace).",
      "created_at" : "2023-12-07T23:58:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1846286294",
      "id" : 1846286294,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uDBfW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1846286294/reactions"
      },
      "updated_at" : "2023-12-07T23:58:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1846286294",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Does that mean that things should only go in util if they're going to be used by the kernel library then?\r\n\r\nNo, I don't think so, and I don't think much else is going to move after this PR. I think only code that _shouldn't_ be used by the kernel or kernel applications should be moved out of util, not just code that _isn't_ used by the kernel. I agree just moving any code that isn't used by the kernel would be a bad approach, and wrote basically the same comment as you recently in https://github.com/bitcoin/bitcoin/pull/27989#issuecomment-1613966139, so I think we are in agreement.",
      "created_at" : "2023-12-08T00:53:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1846332843",
      "id" : 1846332843,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uDM2r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1846332843/reactions"
      },
      "updated_at" : "2023-12-08T00:54:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1846332843",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Updated 778c0214d25e5a012c61251d592257ae19805255 -> 8b21f41335dc837b36ea863156605d092f47a0ab ([`pr/rmutil.2`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.2) -> [`pr/rmutil.3`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/rmutil.2..pr/rmutil.3)) to fix clang-tidy error https://cirrus-ci.com/task/4602567305461760. Also switched to `using` declarations more places to avoid creating conflicts and make the PR easier to review\r\nUpdated 8b21f41335dc837b36ea863156605d092f47a0ab -> 8748d63a07d23237dca41f8a5f91288ce59b1de8 ([`pr/rmutil.3`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.3) -> [`pr/rmutil.4`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/rmutil.3..pr/rmutil.4)) to fix another clang-tidy error https://cirrus-ci.com/task/4950555420786688 and making other small cleanups\r\nUpdated 8748d63a07d23237dca41f8a5f91288ce59b1de8 -> b23409474f6fe874a25374bb978db9e5682954e6 ([`pr/rmutil.4`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.4) -> [`pr/rmutil.5`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.5), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/rmutil.4..pr/rmutil.5)) to try to fix another clang-tidy error",
      "created_at" : "2023-12-08T18:23:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1847634783",
      "id" : 1847634783,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uIKtf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1847634783/reactions"
      },
      "updated_at" : "2023-12-08T19:50:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1847634783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@ryanofsky \r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/29015#issue-2029493410:\r\n> the util library is a dependency of the kernel, and we should remove functionality from util that shouldn't be called by kernel code or kernel applications.\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1846332843:\r\n> only code that _shouldn't_ be used by the kernel or kernel applications should be moved out of util, not just code that _isn't_ used by the kernel.\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/27989#issuecomment-1613966139:\r\n> I think util/ is a good home for general purpose code providing basic data structures and cross platform capabilities, and I think common/ is good home for project-specific code that needs to be shared between bitcoind, bitcoin-cli, and bitcoin-wallet.\r\n\r\nDoes it make sense to improve https://github.com/bitcoin/bitcoin/blob/master/doc/design/libraries.md by expressing the idea from the quotes above more clearly? As for now, it reads:\r\n> In general, if it is ever unclear whether it is better to add code to util or common, it is probably better to add it to common unless it is very generically useful or useful particularly to include in the kernel.",
      "created_at" : "2023-12-10T11:20:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1848935768",
      "id" : 1848935768,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uNIVY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848935768/reactions"
      },
      "updated_at" : "2023-12-10T11:20:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1848935768",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/32963518?v=4",
         "events_url" : "https://api.github.com/users/hebasto/events{/privacy}",
         "followers_url" : "https://api.github.com/users/hebasto/followers",
         "following_url" : "https://api.github.com/users/hebasto/following{/other_user}",
         "gists_url" : "https://api.github.com/users/hebasto/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/hebasto",
         "id" : 32963518,
         "login" : "hebasto",
         "node_id" : "MDQ6VXNlcjMyOTYzNTE4",
         "organizations_url" : "https://api.github.com/users/hebasto/orgs",
         "received_events_url" : "https://api.github.com/users/hebasto/received_events",
         "repos_url" : "https://api.github.com/users/hebasto/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/hebasto/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/hebasto"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Re https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1848935768\r\n\r\n> Does it make sense to improve https://github.com/bitcoin/bitcoin/blob/master/doc/design/libraries.md by expressing the idea from the quotes above more clearly? As for now, it reads:\r\n\r\nThis seems like the right place to talk about the relationship between the util and kernel library. My work on the kernel library has been focusing on reducing its essence to validation code, pruning external dependencies, and stripping out as much system related functionality as possible. I think if the goal is to have the kernel be capable of running on as many platforms as possible, potentially beyond the number of platforms that Bitcoin Core is capable of today and extending into embedded environments, this last point becomes crucial.\r\n\r\nLooking at the content of `util` it provides roughly two types of functionality: Utilities for basic data structures and their serialization, and cross-platform system related utilities, like file handling, threading, process handling, etc. \r\n\r\nIn my opinion, making the `util` library a proper dependency of the kernel should not introduce new cross-platform system-related content into the kernel library. Besides potentially limiting use cases of the kernel, providing cross-platform utilities beyond what the kernel strictly requires seems like a potentially unreasonable future maintenance burden. This would be contrary to our incremental process of creating a minimal kernel library.\r\n\r\nThe asterisk here is that some of the utilities that are not currently used by the kernel do not introduce new dependencies, since they entirely rely on code that is already used by the kernel. I also generally think that some utilities could remain in the util library even though they are not currently used by validation code. The criteria I propose for evaluating if modules should remain in util after this PR are:\r\n\r\n1. The module is directly used by kernel code.\r\n2. The module contains basic data structure utilities for interacting with kernel code.\r\n3. The module does not contain system-related utilities that are not directly used by the kernel.\r\n4. The module does not contain project-specific code that is not relevant to the kernel.\r\n5. The module does not introduce new dependencies beyond the current dependencies of the kernel.\r\n\r\nLooking at @hebasto's comment [here](https://github.com/bitcoin/bitcoin/pull/28690#pullrequestreview-1774033780), `threadinterrupt.cpp` and `readwritefile.cpp` would violate the 3rd criteria in my eyes, while the `spanparsing` and `bytevectorhash` modules could potentially remain in `util`.\r\n\r\nBetween this PR and #28690 I think it would be nice if common criteria for `util` would be defined and documented. All this said, I think it would be acceptable too if things were kept purposefully vague as they are now until the need for more concrete structures arises.",
      "created_at" : "2023-12-10T17:22:08Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1849026409",
      "id" : 1849026409,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uNedp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1849026409/reactions"
      },
      "updated_at" : "2023-12-10T17:22:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1849026409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Would it make sense to just merge common into util; but have a \"stripped\" version of util available for the kernel, that excludes stuff that doesn't match the 5 points above? That way the difference is just at the build system level, it doesn't involve moving files around or moving code between namespaces...\r\n\r\nThen the advice would be: (a) just put things in util, (b) but only add things to the \"util-core\" section of the build file when they're needed by the kernel; (c) keep things in the util:: namespace; (d) split stuff into different .h/.cpp files pretty aggressively?\r\n\r\nThat would imply a different approach for the [util: move fees.h and error.h to common/messages.h](https://github.com/bitcoin/bitcoin/pull/29015/commits/20b7041f63b1cb0e69347321e20d927e2615c980) commit here.",
      "created_at" : "2023-12-11T02:00:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1849208455",
      "id" : 1849208455,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uOK6H",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1849208455/reactions"
      },
      "updated_at" : "2023-12-11T02:00:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1849208455",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1849208455\r\n\r\n> Would it make sense to just merge common into util; but have a \"stripped\" version of util available for the kernel\r\n\r\nIdea to build util and util-core (or util-lite?) libraries is interesting, because then it would be easy to add/remove things from util library depending on whether the kernel needs them, and it would never require renaming anything. I could see this being useful in the future if util library started growing a lot and accumulating more features of over time.\r\n\r\nBut for now, IMO, just sticking with the current util/common separation and using the cleanup in this PR would organize things better and be less confusing than having two util versions, and it would require moving fewer things. Even though the libraries.md document is currently ambiguous, I think it should be pretty easy to remove the ambiguity here.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1849026409\r\n\r\n> The criteria I propose for evaluating if modules should remain in util after this PR are:\r\n\r\nI think these are good rules if you replace \"basic data structure utilities\" with \"basic utilities that to do not require outside dependencies\", and also drop the 3rd rule. It seems like with the 3rd rule you are trying to make a distinction between \"data structure utilities\" and \"system-related utilities\", and I don't think it helps to draw a dividing line there.\r\n",
      "created_at" : "2023-12-11T16:37:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1850445505",
      "id" : 1850445505,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uS47B",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850445505/reactions"
      },
      "updated_at" : "2023-12-11T16:37:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850445505",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Added 1 commits b23409474f6fe874a25374bb978db9e5682954e6 -> 6d8cb4d4cd6062ad06cd351439e9139e028995d3 ([`pr/rmutil.5`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.5) -> [`pr/rmutil.6`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/rmutil.5...pr/rmutil.6)) updating libraries.md to describe differences between util and common libraries better.\r\n\r\nre: https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1849026409\r\n\r\n> My work on the kernel library has been focusing on reducing its essence to validation code, pruning external dependencies, and stripping out as much system related functionality as possible.\r\n> [...]\r\n> In my opinion, making the `util` library a proper dependency of the kernel should not introduce new cross-platform system-related content into the kernel library.\r\n\r\nJust to address these points directly, I think the goals of making the kernel portable and working on any platform, and making the kernel minimal working and in constrained environments are great goals. I just don't you need to `rm src/util/sock.cpp` to achieve these goals. As long as the util library is distributed as a static library, or built as a static library and linked into a dynamic library, the socket functions will not be part of resulting executables if they are not called. And if the kernel is being built for a platform which doesn't support sockets at all, `src/util/sock.cpp` can just be stubbed or not compiled at all and there should be no problem for portability either. I do think it's good to keep the util library small and lightweight and remove things which don't fit there. But I don't think it needs to be stripped down in a more extreme way.",
      "created_at" : "2023-12-11T18:17:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1850626464",
      "id" : 1850626464,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uTlGg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850626464/reactions"
      },
      "updated_at" : "2023-12-11T18:17:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850626464",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Re https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1850626464\r\n\r\n> And if the kernel is being built for a platform which doesn't support sockets at all, src/util/sock.cpp can just be stubbed or not compiled at all and there should be no problem for portability either.\r\n\r\nOne of the guiding principles for the kernel project so far has been to prohibit future re-couplings of decoupled modules. The [tracking issue](https://github.com/bitcoin/bitcoin/issues/27587) says \"Any further coupling of our consensus engine with non-consensus modules will result in linker errors, preventing this project from becoming a Sisyphean task of battling coupling regressions.\". How could this fit in with leaving unused content in the library?",
      "created_at" : "2023-12-11T20:40:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1850853920",
      "id" : 1850853920,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uUcog",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850853920/reactions"
      },
      "updated_at" : "2023-12-11T20:40:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850853920",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> One of the guiding principles for the kernel project so far has been to prohibit future re-couplings of decoupled modules.\r\n\r\nI reread the issue you linked to, but I don't understand what it implies here. I do think you can rely on linker errors to ensure kernel code isn't calling wallet code or GUI code or P2P code or storing state in global variables. But what else do you want beyond that? And how does removing `sock.cpp` from the util library help, for example?",
      "created_at" : "2023-12-11T22:08:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1850970368",
      "id" : 1850970368,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uU5EA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850970368/reactions"
      },
      "updated_at" : "2023-12-11T22:08:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850970368",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1423218395"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423218395"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Doesn't libconsensus necessarily depend on libcrypto (for sha256 at least)?",
      "commit_id" : "6d8cb4d4cd6062ad06cd351439e9139e028995d3",
      "created_at" : "2023-12-11T23:01:31Z",
      "diff_hunk" : "@@ -87,14 +88,15 @@ class bitcoin-qt,bitcoind,bitcoin-cli,bitcoin-wallet bold\n \n - *libbitcoin_consensus* should be a standalone dependency that any library can depend on, and it should not depend on any other libraries itself.\n \n-- *libbitcoin_util* should also be a standalone dependency that any library can depend on, and it should not depend on other internal libraries.\n+- *libbitcoin_crypto* should be a standalone dependency that any library can depend on, and it should not depend on any other libraries itself. (It is not shown in diagram above to save space, but has the exact same connections as *libbitcoin_consensus*, which is shown.)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1423218395",
      "id" : 1423218395,
      "line" : 91,
      "node_id" : "PRRC_kwDOABII585U1Jbb",
      "original_commit_id" : "6d8cb4d4cd6062ad06cd351439e9139e028995d3",
      "original_line" : 91,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "doc/design/libraries.md",
      "position" : 13,
      "pull_request_review_id" : 1776320307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423218395/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-11T23:26:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423218395",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1423227364"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423227364"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It seems odd to put this in \"node\" when `TransactionErrorString(TransactionError error)` is in \"common\" ?\r\n\r\n`TransactionError` is returned by `CombinePSBTs()` which seems like something that could reasonably be exposed by a command line tool without needing a full node setup.\r\n\r\nSo putting this in common seems more sensible to me?\r\n\r\n",
      "commit_id" : "6d8cb4d4cd6062ad06cd351439e9139e028995d3",
      "created_at" : "2023-12-11T23:16:03Z",
      "diff_hunk" : "@@ -0,0 +1,33 @@\n+// Copyright (c) 2010-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+//! @file node/types.h is a home for public enum and struct type definitions\n+//! that are used by internally by node code, but also used externally by wallet\n+//! or GUI code.\n+//!\n+//! This file is intended to define only simple types that do not have external\n+//! dependencies. More complicated types should be defined in dedicated header\n+//! files.\n+\n+#ifndef BITCOIN_NODE_TYPES_H\n+#define BITCOIN_NODE_TYPES_H\n+\n+enum class TransactionError {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1423227364",
      "id" : 1423227364,
      "line" : 17,
      "node_id" : "PRRC_kwDOABII585U1Lnk",
      "original_commit_id" : "529be13d20b7578d58494ab42a3a50a417ed5c24",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/node/types.h",
      "position" : 17,
      "pull_request_review_id" : 1776320307,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423227364/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-11T23:26:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1423227364",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Re https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1850970368\r\n\r\n> But what else do you want beyond that? And how does removing sock.cpp from the util library help, for example?\r\n\r\nMaybe removing `sock.cpp` is a bad example, since it is already impossible to link against it. `sock.cpp` uses modules that are already not part of the kernel, so trying to link it in will result in errors. Then again, if `sock.cpp` uses common modules, why is it in `util` in the first place? To provide another concrete example,  there is `thread.cpp`, which I was hoping to remove from the kernel in #28960. If it is removed, how could the kernel library be guarded from its future re-introduction if it remains in the `util` library?",
      "created_at" : "2023-12-12T08:20:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1851506064",
      "id" : 1851506064,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585uW72Q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1851506064/reactions"
      },
      "updated_at" : "2023-12-12T08:20:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1851506064",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1424337096"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1424337096"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1423218395\r\n\r\n> Doesn't libconsensus necessarily depend on libcrypto (for sha256 at least)?\r\n\r\nYes that should be right. I think I just deluded myself because I didn't want to update the mermaid diagram. Updated now though.",
      "commit_id" : "9ba4dc41fd405a008e9badc4092ef1905f534b96",
      "created_at" : "2023-12-12T17:19:42Z",
      "diff_hunk" : "@@ -87,14 +88,15 @@ class bitcoin-qt,bitcoind,bitcoin-cli,bitcoin-wallet bold\n \n - *libbitcoin_consensus* should be a standalone dependency that any library can depend on, and it should not depend on any other libraries itself.\n \n-- *libbitcoin_util* should also be a standalone dependency that any library can depend on, and it should not depend on other internal libraries.\n+- *libbitcoin_crypto* should be a standalone dependency that any library can depend on, and it should not depend on any other libraries itself. (It is not shown in diagram above to save space, but has the exact same connections as *libbitcoin_consensus*, which is shown.)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1424337096",
      "id" : 1424337096,
      "in_reply_to_id" : 1423218395,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585U5ajI",
      "original_commit_id" : "6d8cb4d4cd6062ad06cd351439e9139e028995d3",
      "original_line" : 91,
      "original_position" : 13,
      "original_start_line" : null,
      "path" : "doc/design/libraries.md",
      "position" : null,
      "pull_request_review_id" : 1778060101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1424337096/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-12T19:38:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1424337096",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1424337693"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1424337693"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1423227364\r\n\r\n> It seems odd to put this in \"node\" when `TransactionErrorString(TransactionError error)` is in \"common\" ?\r\n> \r\n> `TransactionError` is returned by `CombinePSBTs()` which seems like something that could reasonably be exposed by a command line tool without needing a full node setup.\r\n> \r\n> So putting this in common seems more sensible to me?\r\n\r\nThis is sort of a borderline case, and I did consider whether to move it in to `common` instead of `node`. The main place where `TransactionError` codes are actually used, and the place where the type was introduced in #14978 was in `node/transaction.h` and `node/transaction.cpp` for the `BroadcastTransaction` function. But disappointingly I think, the same type was also reused in other places like wallet code and psbt code, with extra enum values added to support these. I think it would be better if the enum were split up so it would be clearer which functions returned which values, so for example, you would not be goaded by compiler into writing error handling code for enum values that could never be returned. \r\n\r\nWith this background, I thought for this PR putting `TransactionError` in `node` instead of `common` would be better so it would be more likely to be appropriately used for functions like `node::BroadcastTransaction` and `interfaces::Node::broadTransaction`, and less likely to be misused for non-node functions. I could understand the opposite argument, though, that if even if it belongs in `node` when used ideally, it makes more sense for it to be in `common` based on the way it is used now.\r\n\r\nMore generally, I do think it's good for public node types to be defined in the node library, even if they may be also used by outside code (such as as GUI code or code in src/interfaces/ or src/common/). It makes the outside code clearer and more self documenting if you can see which libraries types are coming from. CNodeStats, CNodeStateStats, and SynchronizationState are examples of other node types which are used by the GUI outside  the node library. AddressPurpose, isminetype, CRecipient, and CCoinControl are examples of wallet types used by the GUI outside the wallet library, and I think in both cases it is helpful for these types to have node:: and wallet:: prefixes when used by outside code.\r\n\r\nBut this is just to explain my reasoning. I wouldn't oppose moving the type to common if you think that is better. I will also look into splitting up the TransactionError type to see if there's an easy way to clean this up completely.",
      "commit_id" : "9ba4dc41fd405a008e9badc4092ef1905f534b96",
      "created_at" : "2023-12-12T17:20:14Z",
      "diff_hunk" : "@@ -0,0 +1,33 @@\n+// Copyright (c) 2010-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+//! @file node/types.h is a home for public enum and struct type definitions\n+//! that are used by internally by node code, but also used externally by wallet\n+//! or GUI code.\n+//!\n+//! This file is intended to define only simple types that do not have external\n+//! dependencies. More complicated types should be defined in dedicated header\n+//! files.\n+\n+#ifndef BITCOIN_NODE_TYPES_H\n+#define BITCOIN_NODE_TYPES_H\n+\n+enum class TransactionError {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1424337693",
      "id" : 1424337693,
      "in_reply_to_id" : 1423227364,
      "line" : 17,
      "node_id" : "PRRC_kwDOABII585U5asd",
      "original_commit_id" : "529be13d20b7578d58494ab42a3a50a417ed5c24",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/node/types.h",
      "position" : 17,
      "pull_request_review_id" : 1778060101,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1424337693/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-12T19:38:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1424337693",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1851506064\r\n\r\n> Maybe removing `sock.cpp` is a bad example, since it is already impossible to link against it. `sock.cpp` uses modules that are already not part of the kernel, so trying to link it in will result in errors. Then again, if `sock.cpp` uses common modules, why is it in `util` in the first place?\r\n\r\nI'm actually not sure what is this referring to. Running `nm ./src/util/libbitcoin_util_a-sock.o --undefined-only` I see sock.cpp is using LogInstance, NodeClock, and SysErrorString which should all be part of the util library.\r\n\r\n> To provide another concrete example, there is `thread.cpp`, which I was hoping to remove from the kernel in #28960. If it is removed, how could the kernel library be guarded from its future re-introduction if it remains in the `util` library?\r\n\r\n`thread.h` contains `TraceThread` which seems like a nice utility for the naming threads (which is helpful for monitoring in top) and printing exceptions (which is useful for debugging). I guess kernel code isn't currently using this function (or #28960 removes the last usage), but as long as kernel code is calling threads, what benefit is to preventing kernel code from calling this function? It seems like a useful function, and if anything more code should use it, I would think.\r\n\r\nI do agree with goals of making the kernel small and portable, and agree we should organize libraries with that in mind. I also think we should try to trigger link errors to enforce API boundaries. It just seems to me we can do these things without moving a lot around.",
      "created_at" : "2023-12-12T19:38:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1852688371",
      "id" : 1852688371,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585ubcfz",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1852688371/reactions"
      },
      "updated_at" : "2023-12-12T19:38:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1852688371",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Re https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1852688371\r\n\r\n> I'm actually not sure what is this referring to. Running nm ./src/util/libbitcoin_util_a-sock.o --undefined-only I see sock.cpp is using LogInstance, NodeClock, and SysErrorString which should all be part of the util library.\r\n\r\nThanks for actually verifying, I just assumed that the `common/system.h`include was actually used :(.\r\n\r\n",
      "created_at" : "2023-12-12T19:55:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1852711192",
      "id" : 1852711192,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585ubiEY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1852711192/reactions"
      },
      "updated_at" : "2023-12-12T19:55:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1852711192",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1425022656"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425022656"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> With this background, I thought for this PR putting `TransactionError` in `node` instead of `common` would be better so it would be more likely to be appropriately used for functions like `node::BroadcastTransaction` and `interfaces::Node::broadTransaction`, and less likely to be misused for non-node functions. I could understand the opposite argument, though, that if even if it belongs in `node` when used ideally, it makes more sense for it to be in `common` based on the way it is used now.\r\n\r\nI was mostly thinking that it doesn't make sense for `TransactionErrorString()` in common even though it depends on `TransactionError` which is in node, and node depends on common, not vice-versa? I wasn't expecting paragraphs of response :) I mean, it's just an enum with associated translatable descriptions? Doesn't really seem worth worrying about the fact that some of the errors only make sense in a node context; aren't these all just \"something went wrong, deal with it, dear user\"?\r\n\r\nBTW, I think `TransactionError::P2P_DISABLED` can be dropped entirely? (I think the last/only use was removed in #15713)",
      "commit_id" : "9ba4dc41fd405a008e9badc4092ef1905f534b96",
      "created_at" : "2023-12-13T08:40:43Z",
      "diff_hunk" : "@@ -0,0 +1,33 @@\n+// Copyright (c) 2010-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+//! @file node/types.h is a home for public enum and struct type definitions\n+//! that are used by internally by node code, but also used externally by wallet\n+//! or GUI code.\n+//!\n+//! This file is intended to define only simple types that do not have external\n+//! dependencies. More complicated types should be defined in dedicated header\n+//! files.\n+\n+#ifndef BITCOIN_NODE_TYPES_H\n+#define BITCOIN_NODE_TYPES_H\n+\n+enum class TransactionError {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1425022656",
      "id" : 1425022656,
      "in_reply_to_id" : 1423227364,
      "line" : 17,
      "node_id" : "PRRC_kwDOABII585U8B7A",
      "original_commit_id" : "529be13d20b7578d58494ab42a3a50a417ed5c24",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/node/types.h",
      "position" : 17,
      "pull_request_review_id" : 1779110523,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425022656/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-13T08:40:44Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425022656",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1425731507"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425731507"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "re: https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1425022656\r\n\r\n> I was mostly thinking that it doesn't make sense for `TransactionErrorString()` in common even though it depends on `TransactionError` which is in node, and node depends on common, not vice-versa? I wasn't expecting paragraphs of response :)\r\n\r\nYeah sorry thanks for pinning down the actual concern. Before you just said it \"seems odd\" so I felt like I needed to justify my entire thought process.\r\n\r\nIn any case, both the node and wallet libraries expose public types which I listed above (CNodeStats, CNodeStateStats, and SynchronizationState, AddressPurpose, isminetype, CRecipient, and CCoinControl) which can be considered part of the interfaces to these libraries, but are not part of the libraries themselves. For example, the GUI code is not allowed to call node or wallet functions, but it uses all of these public types, and this is fine. Other code, including code in common, can also use these types and there is no problem with this.\r\n\r\nWe do have a choice where about where to put public types which are not really part of any library. We can put them in the interfaces directory, or in common, or in the node and wallet directories. Personally, I think it makes sense to put them in the wallet directory when they are related to wallet functionality and used by wallet code, put them in the node directory when they are related to node functionality and used by node code, put them in the common directory when they are related to common functionality (like PSBT) and used by common code. The comments at the top of {node,wallet,common}/types.h files are meant to explain the idea that these are public types.\r\n\r\n> Doesn't really seem worth worrying about the fact that some of the errors only make sense in a node context; aren't these all just \"something went wrong, deal with it, dear user\"?\r\n\r\nYes if errors are just being propagated to the user level, you don't care about this at all, and it's probably a mistake to use an enum to begin with because the error messages won't be able to contain useful context. In this case, though, the errors are being translated to RPC codes, and RPC callers may actually want to implement different forms of error handling, so it would be good to be clear about what errors are possible, plus it's easy to do, so I did add a new commit splitting PSBTError from TransactionError.\r\n\r\n> BTW, I think `TransactionError::P2P_DISABLED` can be dropped entirely? (I think the last/only use was removed in #15713)\r\n\r\nThanks, the new commit drops this code too.",
      "commit_id" : "414546dcc455fb5f5f8e2c4591b2df1f16863cdc",
      "created_at" : "2023-12-13T18:24:31Z",
      "diff_hunk" : "@@ -0,0 +1,33 @@\n+// Copyright (c) 2010-2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+//! @file node/types.h is a home for public enum and struct type definitions\n+//! that are used by internally by node code, but also used externally by wallet\n+//! or GUI code.\n+//!\n+//! This file is intended to define only simple types that do not have external\n+//! dependencies. More complicated types should be defined in dedicated header\n+//! files.\n+\n+#ifndef BITCOIN_NODE_TYPES_H\n+#define BITCOIN_NODE_TYPES_H\n+\n+enum class TransactionError {",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#discussion_r1425731507",
      "id" : 1425731507,
      "in_reply_to_id" : 1423227364,
      "line" : 17,
      "node_id" : "PRRC_kwDOABII585U-u-z",
      "original_commit_id" : "529be13d20b7578d58494ab42a3a50a417ed5c24",
      "original_line" : 16,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/node/types.h",
      "position" : 17,
      "pull_request_review_id" : 1780244193,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29015",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425731507/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-13T18:40:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1425731507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Concept ACK. Moving things out of util that the kernel will / should never need, makes sense to me. I don't have strong feelings on where exactly to move these things to.",
      "created_at" : "2024-02-05T13:27:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1927009876",
      "id" : 1927009876,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585y29ZU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927009876/reactions"
      },
      "updated_at" : "2024-02-05T13:27:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1927009876",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/10217?v=4",
         "events_url" : "https://api.github.com/users/Sjors/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Sjors/followers",
         "following_url" : "https://api.github.com/users/Sjors/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Sjors/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Sjors",
         "id" : 10217,
         "login" : "Sjors",
         "node_id" : "MDQ6VXNlcjEwMjE3",
         "organizations_url" : "https://api.github.com/users/Sjors/orgs",
         "received_events_url" : "https://api.github.com/users/Sjors/received_events",
         "repos_url" : "https://api.github.com/users/Sjors/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Sjors/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Sjors"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2024-02-11T10:32:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1937538080",
      "id" : 1937538080,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII585zfHwg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937538080/reactions"
      },
      "updated_at" : "2024-02-11T10:32:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1937538080",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-03-09T02:13:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1986694293",
      "id" : 1986694293,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII5852aoyV",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986694293/reactions"
      },
      "updated_at" : "2024-03-09T02:13:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1986694293",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased 486379c10fdce568a64b78cbb2dad1fa52263a79 -> ffcd3068359ea35f3b7c491df866a0d6924e3b37 ([`pr/rmutil.10`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.10) -> [`pr/rmutil.11`](https://github.com/ryanofsky/bitcoin/commits/pr/rmutil.11), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/rmutil.10-rebase..pr/rmutil.11)) due to conflict with #28960",
      "created_at" : "2024-03-11T17:22:00Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1989013655",
      "id" : 1989013655,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII5852jfCX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1989013655/reactions"
      },
      "updated_at" : "2024-03-11T17:22:00Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1989013655",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-03-13T11:15:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29015#issuecomment-1994139736",
      "id" : 1994139736,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29015",
      "node_id" : "IC_kwDOABII58523ChY",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1994139736/reactions"
      },
      "updated_at" : "2024-03-13T11:15:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1994139736",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]

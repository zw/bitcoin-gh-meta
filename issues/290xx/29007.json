{
   "active_lock_reason" : null,
   "assignee" : null,
   "assignees" : [],
   "author_association" : "CONTRIBUTOR",
   "body" : "Testing addrman functionality is limited in the functional tests because `nKey` for the addrman is chosen randomly during every run and there's a small chance for collision when inserting a new address into the addrman. Currently in our tests, we keep only 1 address in the new table, 1 address in the tried table and don't insert new addresses into the addrman because of these possible collisions. See https://github.com/bitcoin/bitcoin/pull/26988#discussion_r1091145647, https://github.com/bitcoin/bitcoin/pull/23084, [#22831(comment)](https://github.com/bitcoin/bitcoin/pull/22831/files#r708302639). \r\n\r\nImprove address manager testing we can do with our functional tests by using a deterministic addrman.\r\n\r\n### reason for collisions when inserting an address into new table\r\n- the new table in the addrman has 1024 buckets and each bucket has 64 positions.\r\n- when a new address is added using `addpeeraddress` RPC,\r\n\t- the bucket where this address is placed is calculated from `nKey`, netgroup of ip address, netgroup of source address\r\n\t- the bucket position where this address is placed is calculated from `nKey`, bucket number, ip address and port information\r\n- if 2 addresses belong to same netgroup, they would both be assigned the same new table bucket.\r\n- since the bucket position where this address is placed is calculated from hashing information containing `nKey`, bucket number, ip address and port information; and then doing %64. it's possible that the position calculated would collide for certain `nKey`, ip address and port combo since `nKey` is generated randomly every run. and the address doesn't get added into the new table\r\n\r\n### reason for collisions when inserting an address into tried table\r\n- the tried table in the addrman has 256 buckets and each bucket has 64 positions.\r\n- when an address is added using `addpeeraddress` RPC,\r\n\t- the bucket where this address is placed is calculated from `nKey`, ip address and port information and netgroup of ip address\r\n\t- the bucket position where this address is placed is calculated from `nKey`, bucket number, ip address and port information (like in new table)\r\n- if 2 addresses belong to same netgroup, there's a lesser chance(compared to the new table) that they get asssigned the same tried table bucket because ip address and port info is also used in calculating the bucket.\r\n- assuming they get placed in same bucket, it's possible the bucket position could collide here too. (same reasoning as for new table address collision)",
   "closed_at" : null,
   "closed_by" : null,
   "comments" : 1,
   "comments_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29007/comments",
   "created_at" : "2023-12-06T02:55:43Z",
   "draft" : false,
   "events_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29007/events",
   "html_url" : "https://github.com/bitcoin/bitcoin/pull/29007",
   "id" : 2027551012,
   "labels" : [
      {
         "color" : "d4c5f9",
         "default" : false,
         "description" : null,
         "id" : 62963516,
         "name" : "Tests",
         "node_id" : "MDU6TGFiZWw2Mjk2MzUxNg==",
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/labels/Tests"
      }
   ],
   "labels_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29007/labels{/name}",
   "locked" : false,
   "milestone" : null,
   "node_id" : "PR_kwDOABII585hQFye",
   "number" : 29007,
   "performed_via_github_app" : null,
   "pull_request" : {
      "diff_url" : "https://github.com/bitcoin/bitcoin/pull/29007.diff",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29007",
      "merged_at" : null,
      "patch_url" : "https://github.com/bitcoin/bitcoin/pull/29007.patch",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29007"
   },
   "reactions" : {
      "+1" : 0,
      "-1" : 0,
      "confused" : 0,
      "eyes" : 0,
      "heart" : 0,
      "hooray" : 0,
      "laugh" : 0,
      "rocket" : 0,
      "total_count" : 0,
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29007/reactions"
   },
   "repository_url" : "https://api.github.com/repos/bitcoin/bitcoin",
   "state" : "open",
   "state_reason" : null,
   "timeline_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29007/timeline",
   "title" : "test: create deterministic addrman in the functional tests",
   "updated_at" : "2023-12-06T02:55:48Z",
   "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29007",
   "user" : {
      "avatar_url" : "https://avatars.githubusercontent.com/u/44024636?v=4",
      "events_url" : "https://api.github.com/users/stratospher/events{/privacy}",
      "followers_url" : "https://api.github.com/users/stratospher/followers",
      "following_url" : "https://api.github.com/users/stratospher/following{/other_user}",
      "gists_url" : "https://api.github.com/users/stratospher/gists{/gist_id}",
      "gravatar_id" : "",
      "html_url" : "https://github.com/stratospher",
      "id" : 44024636,
      "login" : "stratospher",
      "node_id" : "MDQ6VXNlcjQ0MDI0NjM2",
      "organizations_url" : "https://api.github.com/users/stratospher/orgs",
      "received_events_url" : "https://api.github.com/users/stratospher/received_events",
      "repos_url" : "https://api.github.com/users/stratospher/repos",
      "site_admin" : false,
      "starred_url" : "https://api.github.com/users/stratospher/starred{/owner}{/repo}",
      "subscriptions_url" : "https://api.github.com/users/stratospher/subscriptions",
      "type" : "User",
      "url" : "https://api.github.com/users/stratospher"
   }
}

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/29010).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n",
      "created_at" : "2023-12-06T13:56:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1842939026",
      "id" : 1842939026,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t2QSS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1842939026/reactions"
      },
      "updated_at" : "2023-12-06T13:56:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1842939026",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "cc @maflcko\r\n\r\nturns out we can actually keep the map if we just don't add all the harness functions into it",
      "created_at" : "2023-12-06T13:59:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1842946104",
      "id" : 1842946104,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t2SA4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1842946104/reactions"
      },
      "updated_at" : "2023-12-06T13:59:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1842946104",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Nice, but I am not sure if we want to go down to route to put everyone back into the makefile hell, because this will just make writing new fuzz tests bloaty and impossible to maintain/review (Who is going to read those repetitive and ugly 1k LOC of build code).  (Unrelated: Not even sure how this will interact with cmake)\r\n\r\nIt seems easier to just put a one-line bash command into the readme to achieve the same, for anyone that needs it (oss-fuzz, fuzz-introspector, afl-lto, etc ...).\r\n\r\nHappy to provide more feedback, but for now it would be good to explain why each target needs to be in a separate file.\r\n\r\nIn C++ it should be possible to have more than one function in the same file. Also, given that `FuzzFrameworkRegisterTarget` isn't called for the function pointer, LTO should see this and nuke the function?",
      "created_at" : "2023-12-06T14:39:20Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1843018335",
      "id" : 1843018335,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t2jpf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843018335/reactions"
      },
      "updated_at" : "2023-12-06T14:39:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843018335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I split the harnesses into individual files so that we can use the file list in `src/test/fuzz` as the harness list. It should be possible to use that to have a loop (?) in the makefile to build each binary instead of the hard-coded list I have here (I haven't figured out how to do that yet). If that works, adding a new fuzz harness becomes easier as no makefile would need to be edited.",
      "created_at" : "2023-12-06T14:46:05Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1843034078",
      "id" : 1843034078,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t2nfe",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843034078/reactions"
      },
      "updated_at" : "2023-12-06T14:46:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843034078",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> turns out we can actually keep the map if we just don't add all the harness functions into it\r\n\r\nAre you sure on this? I don't know how afl or fuzz-introspector detect reachable code paths, but I'd be surprised if the static analysis can follow a function pointer hidden in a map.",
      "created_at" : "2023-12-06T15:06:22Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1843074084",
      "id" : 1843074084,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t2xQk",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843074084/reactions"
      },
      "updated_at" : "2023-12-06T15:06:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843074084",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-12-06T15:55:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1843187171",
      "id" : 1843187171,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t3M3j",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843187171/reactions"
      },
      "updated_at" : "2023-12-06T15:55:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843187171",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Are you sure on this? I don't know how afl or fuzz-introspector detect reachable code paths, but I'd be surprised if the static analysis can follow a function pointer hidden in a map.\r\n\r\nYea maybe not... should be quite easy to avoid the map.\r\n\r\nI'll try to setup a fuzz-introspector instance at some point, I have a feeling it'll still be a while before we can use oss-fuzz's instance.",
      "created_at" : "2023-12-06T15:59:34Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1843194507",
      "id" : 1843194507,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t3OqL",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843194507/reactions"
      },
      "updated_at" : "2023-12-06T15:59:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843194507",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> The cumulative size of the individual binaries (compiled with LTO) is 3.6GB vs 14GB when search and replacing `std::getenv(\"FUZZ\")` (like we do in oss-fuzz).\r\n\r\nWhat does this mean? I'm seeing file sizes of 448MB (with fuzzing enabled) and 146MB (with a normal build) for test/fuzz/fuzz.\r\n\r\nThis seems like it's reverting #20560?",
      "created_at" : "2023-12-07T00:36:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1843941916",
      "id" : 1843941916,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t6FIc",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843941916/reactions"
      },
      "updated_at" : "2023-12-07T00:36:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1843941916",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> This seems like it's reverting #20560?\r\n\r\nyeah, in the current form this is reverting that pull, so I don't think it can be merged. Though, I guess the goal is to somehow come up with magic makefile code (which can optionally be enabled) to extend the build code from the file names automatically.",
      "created_at" : "2023-12-07T07:45:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1844829261",
      "id" : 1844829261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t9dxN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1844829261/reactions"
      },
      "updated_at" : "2023-12-07T07:45:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1844829261",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I guess the \"one fuzz target per file\" makes the \"one fuzz binary per message/rpc type\" idea a bit harder to implement: https://github.com/bitcoin/bitcoin/pull/28015#issuecomment-1621453405 ?",
      "created_at" : "2023-12-07T08:45:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1844917023",
      "id" : 1844917023,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t9zMf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1844917023/reactions"
      },
      "updated_at" : "2023-12-07T08:45:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1844917023",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> What does this mean? I'm seeing file sizes of 448MB (with fuzzing enabled) and 146MB (with a normal build) for test/fuzz/fuzz.\r\n\r\nIf you build this pull request you should see a binary per fuzz harness in `src/test/fuzz` (e.g. `src/test/fuzz/process_message`), as well as the usual fuzz binary `src/test/fuzz/fuzz`. If you sum up the size of the individual per harness binaries (assuming you compile with LTO) you should end up with roughly 3.6GB (maybe this depends on compiler version etc.). The 14GB is the size of `src/test/fuzz/fuzz` multiplied by the number harnesses we have (in this PR 127 harnesses), since that is what we have in oss-fuzz at the moment.\r\n\r\nHow I compiled this PR to get these stats:\r\n```\r\nCC=afl-clang-lto CXX=afl-clang-lto++ ./configure --enable-fuzz\r\nmake\r\n```",
      "created_at" : "2023-12-07T10:50:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1845118486",
      "id" : 1845118486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585t-kYW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1845118486/reactions"
      },
      "updated_at" : "2023-12-07T10:50:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1845118486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29010#discussion_r1418771429"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29010"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418771429"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Is the change in this header file needed for your approach? If there is only one fuzz target per file, and only one file is compiled, you wouldn't need to check whether it needs to be compiled, no?",
      "commit_id" : "8118b24539a823561f31d0f7574cd53e94ed4814",
      "created_at" : "2023-12-07T10:57:42Z",
      "diff_hunk" : "@@ -39,14 +40,25 @@ void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target,\n #define FUZZ_TARGET(...) DETAIL_FUZZ(__VA_ARGS__)\n #endif\n \n-#define DETAIL_FUZZ(name, ...)                                                        \\\n-    void name##_fuzz_target(FuzzBufferType);                                          \\\n-    struct name##_Before_Main {                                                       \\\n-        name##_Before_Main()                                                          \\\n-        {                                                                             \\\n-            FuzzFrameworkRegisterTarget(#name, name##_fuzz_target, {__VA_ARGS__});    \\\n-        }                                                                             \\\n-    } const static g_##name##_before_main;                                            \\\n+constexpr bool should_compile_harness(std::string_view name)\n+{\n+#ifdef FUZZ_HARNESS\n+    return name.compare(STRINGIZE(FUZZ_HARNESS)) == 0;\n+#else\n+    return true;\n+#endif\n+}\n+\n+#define DETAIL_FUZZ(name, ...)                                                         \\\n+    void name##_fuzz_target(FuzzBufferType);                                           \\\n+    struct name##_Before_Main {                                                        \\\n+        name##_Before_Main()                                                           \\\n+        {                                                                              \\\n+            if constexpr (should_compile_harness(#name)) {                             \\\n+                FuzzFrameworkRegisterTarget(#name, name##_fuzz_target, {__VA_ARGS__}); \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#discussion_r1418771429",
      "id" : 1418771429,
      "line" : 58,
      "node_id" : "PRRC_kwDOABII585UkLvl",
      "original_commit_id" : "8118b24539a823561f31d0f7574cd53e94ed4814",
      "original_line" : 58,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : 35,
      "pull_request_review_id" : 1769863512,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29010",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418771429/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T10:57:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418771429",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29010#discussion_r1418785689"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29010"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418785689"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Right, I think once building all the individual binaries is optional, this could be used to build just one of the individual binaries, e.g.:\r\n\r\n```\r\nCPPFLAGS=\"-DFUZZ_HARNESS=process_message\"  ./configure --enable-fuzz\r\nmake\r\n```\r\n\r\nwhich would produce `src/test/fuzz/fuzz` that only has the `process_message` harness. Building and linking just one harness is faster than all of them, maybe useful when reproducing testcases?\r\n\r\nMaybe there is a better way of accomplishing this?",
      "commit_id" : "8118b24539a823561f31d0f7574cd53e94ed4814",
      "created_at" : "2023-12-07T11:06:50Z",
      "diff_hunk" : "@@ -39,14 +40,25 @@ void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target,\n #define FUZZ_TARGET(...) DETAIL_FUZZ(__VA_ARGS__)\n #endif\n \n-#define DETAIL_FUZZ(name, ...)                                                        \\\n-    void name##_fuzz_target(FuzzBufferType);                                          \\\n-    struct name##_Before_Main {                                                       \\\n-        name##_Before_Main()                                                          \\\n-        {                                                                             \\\n-            FuzzFrameworkRegisterTarget(#name, name##_fuzz_target, {__VA_ARGS__});    \\\n-        }                                                                             \\\n-    } const static g_##name##_before_main;                                            \\\n+constexpr bool should_compile_harness(std::string_view name)\n+{\n+#ifdef FUZZ_HARNESS\n+    return name.compare(STRINGIZE(FUZZ_HARNESS)) == 0;\n+#else\n+    return true;\n+#endif\n+}\n+\n+#define DETAIL_FUZZ(name, ...)                                                         \\\n+    void name##_fuzz_target(FuzzBufferType);                                           \\\n+    struct name##_Before_Main {                                                        \\\n+        name##_Before_Main()                                                           \\\n+        {                                                                              \\\n+            if constexpr (should_compile_harness(#name)) {                             \\\n+                FuzzFrameworkRegisterTarget(#name, name##_fuzz_target, {__VA_ARGS__}); \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#discussion_r1418785689",
      "id" : 1418785689,
      "in_reply_to_id" : 1418771429,
      "line" : 58,
      "node_id" : "PRRC_kwDOABII585UkPOZ",
      "original_commit_id" : "8118b24539a823561f31d0f7574cd53e94ed4814",
      "original_line" : 58,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : 35,
      "pull_request_review_id" : 1769895341,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29010",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418785689/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T11:06:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418785689",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/29010#discussion_r1418793132"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29010"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418793132"
         }
      },
      "author_association" : "MEMBER",
      "body" : "> Building and linking just one harness is faster than all of them, maybe useful when reproducing testcases?\r\n\r\nNot sure. This isn't supported for any other tests (bench, unit, ...), so maybe leave as a follow-up.\r\n\r\nIf building takes a long time, you can use more CPUs or a populated `ccache`.\r\n\r\nAlso, it could be done easier inside the makefile by just skipping over the other files, if needed?",
      "commit_id" : "8118b24539a823561f31d0f7574cd53e94ed4814",
      "created_at" : "2023-12-07T11:13:02Z",
      "diff_hunk" : "@@ -39,14 +40,25 @@ void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target,\n #define FUZZ_TARGET(...) DETAIL_FUZZ(__VA_ARGS__)\n #endif\n \n-#define DETAIL_FUZZ(name, ...)                                                        \\\n-    void name##_fuzz_target(FuzzBufferType);                                          \\\n-    struct name##_Before_Main {                                                       \\\n-        name##_Before_Main()                                                          \\\n-        {                                                                             \\\n-            FuzzFrameworkRegisterTarget(#name, name##_fuzz_target, {__VA_ARGS__});    \\\n-        }                                                                             \\\n-    } const static g_##name##_before_main;                                            \\\n+constexpr bool should_compile_harness(std::string_view name)\n+{\n+#ifdef FUZZ_HARNESS\n+    return name.compare(STRINGIZE(FUZZ_HARNESS)) == 0;\n+#else\n+    return true;\n+#endif\n+}\n+\n+#define DETAIL_FUZZ(name, ...)                                                         \\\n+    void name##_fuzz_target(FuzzBufferType);                                           \\\n+    struct name##_Before_Main {                                                        \\\n+        name##_Before_Main()                                                           \\\n+        {                                                                              \\\n+            if constexpr (should_compile_harness(#name)) {                             \\\n+                FuzzFrameworkRegisterTarget(#name, name##_fuzz_target, {__VA_ARGS__}); \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#discussion_r1418793132",
      "id" : 1418793132,
      "in_reply_to_id" : 1418771429,
      "line" : 58,
      "node_id" : "PRRC_kwDOABII585UkRCs",
      "original_commit_id" : "8118b24539a823561f31d0f7574cd53e94ed4814",
      "original_line" : 58,
      "original_position" : 35,
      "original_start_line" : null,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : 35,
      "pull_request_review_id" : 1769912920,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/29010",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418793132/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-07T11:13:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1418793132",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> > What does this mean? I'm seeing file sizes of 448MB (with fuzzing enabled) and 146MB (with a normal build) for test/fuzz/fuzz.\r\n> \r\n> If you build this pull request you should see a binary per fuzz harness in `src/test/fuzz` (e.g. `src/test/fuzz/process_message`), as well as the usual fuzz binary `src/test/fuzz/fuzz`. If you sum up the size of the individual per harness binaries (assuming you compile with LTO) you should end up with roughly 3.6GB (maybe this depends on compiler version etc.).\r\n\r\nHmm, if I switch to this PR and try compiling, I get bunches of linker errors about multiple definitions, eg\r\n\r\n    /usr/bin/ld: test/fuzz/fuzz-addrman_serdeser.o: in function `std::iterator_traits<std::byte const*>::difference_type std::__distance<std::byte const*>(std::byte const*, std::byte const*, std::random_access_iterator_tag)':\r\n./src/./tinyformat.h:666: multiple definition of `MakeV1Transport(long)'; test/fuzz/fuzz-addrman.o:./src/./tinyformat.h:666: first defined here\r\n\r\nDropping from 14GB to 3.6GB seems worthwhile for oss-fuzz (and similar), but not worthwhile otherwise to me -- it's not compiling so I can't say for sure, but 450MB bloating out to 3.6GB sounds terrible? Also LTO seems pretty slow, and not amenable to ccache...\r\n\r\nShouldn't it be possible to just setup test/fuzz/fuzz.cpp so it (alone) can be recompiled with `FUZZ_HARNESS` defined, and rely on LTO for everything else (rather than `should_compile_harness`)? Something like: https://github.com/ajtowns/bitcoin/tree/202312-fuzz-many-exes ? \r\n\r\nYou could maybe use something like:\r\n\r\n```sh\r\n$ find -name '*.cpp' | sort | while read a; do grep ^FUZZ_TARGET $a | sed 's/^FUZZ_TARGET[_A-Z]*[(] *\\([^,) ]*\\) *[,)].*/\\1/'; done\r\n```\r\n\r\nto get a list of fuzz targets without having to compile the code first, or separate things into different files.",
      "created_at" : "2023-12-07T22:26:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1846204744",
      "id" : 1846204744,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585uCtlI",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1846204744/reactions"
      },
      "updated_at" : "2023-12-07T22:26:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1846204744",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "> Hmm, if I switch to this PR and try compiling, I get bunches of linker errors about multiple definitions, eg\r\n\r\nYea weird, it compiles for me with `afl-clang-lto` but not with regular clang.\r\n\r\n> Dropping from 14GB to 3.6GB seems worthwhile for oss-fuzz (and similar), but not worthwhile otherwise to me\r\n\r\nI listed more benefits in https://github.com/bitcoin/bitcoin/issues/28971. It is not gonna have a noticeable effect for contributors that aren't regularly fuzzing.\r\n\r\n> to get a list of fuzz targets without having to compile the code first, or separate things into different files.\r\n\r\nThe splitting is super straight forward though and the more maintainable thing IMO (your script does not work for e.g. `test/fuzz/deserialize.cpp`). If we are going to continue employing sed hacks, we can just keep doing that in oss-fuzz.\r\n\r\n> I guess the goal is to somehow come up with magic makefile code (which can optionally be enabled) to extend the build code from the file names automatically.\r\n\r\nAfter consulting our build system gods, it looks like this is not possible with automake. It is apparently very easy to do with cmake though, so I guess we can consider this blocked until cmake is in.",
      "created_at" : "2023-12-11T12:37:15Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/29010#issuecomment-1849996651",
      "id" : 1849996651,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/29010",
      "node_id" : "IC_kwDOABII585uRLVr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1849996651/reactions"
      },
      "updated_at" : "2023-12-11T12:37:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1849996651",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   }
]

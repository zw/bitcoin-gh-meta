[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\nA summary of reviews will appear here.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28609](https://github.com/bitcoin/bitcoin/pull/28609) (wallet: Reload watchonly and solvables wallets after migration by achow101)\n* [#28608](https://github.com/bitcoin/bitcoin/pull/28608) (assumeutxo state and locking cleanup by ryanofsky)\n* [#28583](https://github.com/bitcoin/bitcoin/pull/28583) (refactor: [tidy] modernize-use-emplace by maflcko)\n* [#28574](https://github.com/bitcoin/bitcoin/pull/28574) (wallet: optimize migration process, batch db transactions by furszy)\n* [#28333](https://github.com/bitcoin/bitcoin/pull/28333) (wallet: Construct ScriptPubKeyMans with all data rather than loaded progressively by achow101)\n* [#28210](https://github.com/bitcoin/bitcoin/pull/28210) (build: Bump clang minimum supported version to 13 by maflcko)\n* [#28142](https://github.com/bitcoin/bitcoin/pull/28142) (wallet: Allow users to create a wallet that encrypts all database records by achow101)\n* [#28051](https://github.com/bitcoin/bitcoin/pull/28051) (Get rid of shutdown.cpp/shutdown.h, use SignalInterrupt directly by ryanofsky)\n* [#27865](https://github.com/bitcoin/bitcoin/pull/27865) (wallet: Track no-longer-spendable TXOs separately by achow101)\n* [#27788](https://github.com/bitcoin/bitcoin/pull/27788) (rpc: Be able to access RPC parameters by name by achow101)\n* [#26606](https://github.com/bitcoin/bitcoin/pull/26606) (wallet: Implement independent BDB parser by achow101)\n* [#26596](https://github.com/bitcoin/bitcoin/pull/26596) (wallet: Migrate legacy wallets to descriptor wallets without requiring BDB by achow101)\n* [#26022](https://github.com/bitcoin/bitcoin/pull/26022) (Add util::ResultPtr class by ryanofsky)\n* [#25390](https://github.com/bitcoin/bitcoin/pull/25390) (sync: introduce a thread-safe generic container and use it to remove a bunch of \"GlobalMutex\"es by vasild)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-07-27T20:53:44Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1197356231",
      "id" : 1197356231,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585HXjTH",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1197356231/reactions"
      },
      "updated_at" : "2023-10-12T22:52:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1197356231",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-08-05T13:55:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1206485929",
      "id" : 1206485929,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585H6YOp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206485929/reactions"
      },
      "updated_at" : "2022-08-05T13:55:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1206485929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-08-10T17:37:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1211037783",
      "id" : 1211037783,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585ILvhX",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211037783/reactions"
      },
      "updated_at" : "2022-08-10T17:37:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1211037783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased a09c21c05a9adf0ca5a4b6a15021b45c6c2e0b2a -> e7457d0acefeccd636c134d0c10567ffaade2fc7 ([`pr/bresult-load.2`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.2) -> [`pr/bresult-load.3`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.3), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.2-rebase..pr/bresult-load.3)) due to conflict with #25616\r\nRebased e7457d0acefeccd636c134d0c10567ffaade2fc7 -> 874003fcea81aba1276b53d5ad9c5dadefddd5ff ([`pr/bresult-load.3`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.3) -> [`pr/bresult-load.4`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.4), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.3-rebase..pr/bresult-load.4)) due to conflict with #25504\r\nRebased 874003fcea81aba1276b53d5ad9c5dadefddd5ff -> d020d0cce052bc7b4141347a51d34fd85f8a10a1 ([`pr/bresult-load.4`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.4) -> [`pr/bresult-load.5`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.5), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.4-rebase..pr/bresult-load.5)) on top of newer base PR [#25665](https://github.com/bitcoin/bitcoin/pull/25665) tag r/bresult2.18 for derived-to-base conversion bugfix\r\nRebased d020d0cce052bc7b4141347a51d34fd85f8a10a1 -> f942d9253e39df6fedf7f3fe4b0bdb2921206de0 ([`pr/bresult-load.5`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.5) -> [`pr/bresult-load.6`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.6), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.5-rebase..pr/bresult-load.6)) due to silent conflict with #19602\r\nRebased f942d9253e39df6fedf7f3fe4b0bdb2921206de0 -> 4e533926fe5549aafb70caf94718447ea497c84c ([`pr/bresult-load.6`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.6) -> [`pr/bresult-load.7`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.7), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.6-rebase..pr/bresult-load.7)) on top of newer version of #25665 (pr/bresult2.21)\r\nRebased 4e533926fe5549aafb70caf94718447ea497c84c -> f3d165866329ec16e39a7289bd9769ad209cd56a ([`pr/bresult-load.7`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.7) -> [`pr/bresult-load.8`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.8), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.7-rebase..pr/bresult-load.8)) due to conflict with #26021\r\nRebased f3d165866329ec16e39a7289bd9769ad209cd56a -> f718aec8db4d92037cf21bde2f92c72ed39c1d09 ([`pr/bresult-load.8`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.8) -> [`pr/bresult-load.9`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.9), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.8-rebase..pr/bresult-load.9)) due to conflict with #26005\r\nRebased f718aec8db4d92037cf21bde2f92c72ed39c1d09 -> 7bd578a5caf91f73ee9127cd621e2838d5a3b427 ([`pr/bresult-load.9`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.9) -> [`pr/bresult-load.10`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.10), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.9-rebase..pr/bresult-load.10)) due to conflicts with #25667, #26198, and #26282\r\nRebased 7bd578a5caf91f73ee9127cd621e2838d5a3b427 -> 2c675f03f017125390f3b578ee6169870deae985 ([`pr/bresult-load.10`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.10) -> [`pr/bresult-load.11`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.11), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.10-rebase..pr/bresult-load.11)) due to conflicts with #26238, #26462, #26594, #26618, #26758\r\nRebased 2c675f03f017125390f3b578ee6169870deae985 -> 2e12b25fae4bca7539c3cf7ccb9e12e03c9e517d ([`pr/bresult-load.11`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.11) -> [`pr/bresult-load.12`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.12), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.11-rebase..pr/bresult-load.12)) on top of pr/bresult2.28\r\nRebased 2e12b25fae4bca7539c3cf7ccb9e12e03c9e517d -> 5c1be5339b05f5923b8843fe3caa183044454608 ([`pr/bresult-load.12`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.12) -> [`pr/bresult-load.13`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.13), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.12-rebase..pr/bresult-load.13)) due to conflicts with #26595 and #26032\r\nRebased 5c1be5339b05f5923b8843fe3caa183044454608 -> 9c2817208cd5e0a521e765b43d71bb78afc5a7f9 ([`pr/bresult-load.13`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.13) -> [`pr/bresult-load.14`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.14), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.13-rebase..pr/bresult-load.14)) due to conflicts with #25666 and #24845\r\nRebased 9c2817208cd5e0a521e765b43d71bb78afc5a7f9 -> 2a9db070ec5acfe6843e44e1f8476f86899a8e29 ([`pr/bresult-load.14`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.14) -> [`pr/bresult-load.15`](https://github.com/ryanofsky/bitcoin/commits/pr/bresult-load.15), [compare](https://github.com/ryanofsky/bitcoin/compare/pr/bresult-load.14-rebase..pr/bresult-load.15)) due to conflict with #27279",
      "created_at" : "2022-08-15T18:19:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1215564852",
      "id" : 1215564852,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585IdAw0",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1215564852/reactions"
      },
      "updated_at" : "2023-04-13T01:47:46Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1215564852",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7133040?v=4",
         "events_url" : "https://api.github.com/users/ryanofsky/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ryanofsky/followers",
         "following_url" : "https://api.github.com/users/ryanofsky/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ryanofsky/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ryanofsky",
         "id" : 7133040,
         "login" : "ryanofsky",
         "node_id" : "MDQ6VXNlcjcxMzMwNDA=",
         "organizations_url" : "https://api.github.com/users/ryanofsky/orgs",
         "received_events_url" : "https://api.github.com/users/ryanofsky/received_events",
         "repos_url" : "https://api.github.com/users/ryanofsky/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ryanofsky/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ryanofsky"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-08-16T18:26:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1216996385",
      "id" : 1216996385,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585IieQh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216996385/reactions"
      },
      "updated_at" : "2022-08-16T18:26:16Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1216996385",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-09-13T16:34:18Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1245663261",
      "id" : 1245663261,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585KP1Ad",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245663261/reactions"
      },
      "updated_at" : "2022-09-13T16:34:18Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1245663261",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-09-16T10:15:42Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1249187879",
      "id" : 1249187879,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585KdRgn",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1249187879/reactions"
      },
      "updated_at" : "2022-09-16T10:15:42Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1249187879",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a \"draft\".</sub>",
      "created_at" : "2022-10-03T14:46:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1265573486",
      "id" : 1265573486,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585Lbx5u",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265573486/reactions"
      },
      "updated_at" : "2022-10-03T14:46:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1265573486",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2022-12-01T11:04:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1333591539",
      "id" : 1333591539,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585PfP3z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1333591539/reactions"
      },
      "updated_at" : "2022-12-01T11:04:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1333591539",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-01-23T19:57:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1400897491",
      "id" : 1400897491,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585Tf__T",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1400897491/reactions"
      },
      "updated_at" : "2023-01-23T19:57:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1400897491",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-02-17T19:16:17Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1435123057",
      "id" : 1435123057,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585Vij1x",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1435123057/reactions"
      },
      "updated_at" : "2023-02-17T19:16:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1435123057",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167765212"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167765212"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Maybe it would be a bit clearer to use `(O&& other)` here?",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-16T08:04:06Z",
      "diff_hunk" : "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods that do nothing because this class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167765212",
      "id" : 1167765212,
      "line" : 62,
      "node_id" : "PRRC_kwDOABII585Fmq7c",
      "original_commit_id" : "2a9db070ec5acfe6843e44e1f8476f86899a8e29",
      "original_line" : 62,
      "original_position" : 56,
      "original_start_line" : null,
      "path" : "src/util/result.h",
      "position" : 56,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167765212/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167765212",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167765326"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167765326"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Same here, I'd say `void MoveConstruct(Result<OT, OF>&& other)` is a bit clearer",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-16T08:04:58Z",
      "diff_hunk" : "@@ -31,54 +140,118 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n+\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            this->Info().failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n+    {\n+        this->MoveMessages(other);\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167765326",
      "id" : 1167765326,
      "line" : 184,
      "node_id" : "PRRC_kwDOABII585Fmq9O",
      "original_commit_id" : "2a9db070ec5acfe6843e44e1f8476f86899a8e29",
      "original_line" : 184,
      "original_position" : 178,
      "original_start_line" : null,
      "path" : "src/util/result.h",
      "position" : 178,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167765326/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167765326",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167765462"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167765462"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Ha, nice trick; I've never seen such an inheritance before :-)",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-16T08:06:03Z",
      "diff_hunk" : "@@ -8,16 +8,125 @@\n #include <attributes.h>\n #include <util/translation.h>\n \n-#include <variant>\n+#include <memory>\n+#include <optional>\n+#include <tuple>\n+#include <utility>\n+#include <vector>\n \n namespace util {\n+namespace detail {\n+//! Empty string list\n+const std::vector<bilingual_str> EMPTY_LIST{};\n \n+//! Helper function to join messages in space separated string.\n+bilingual_str JoinMessages(const std::vector<bilingual_str>& errors, const std::vector<bilingual_str>& warnings);\n+\n+//! Helper function to move messages from one vector to another.\n+void MoveMessages(std::vector<bilingual_str>& src, std::vector<bilingual_str>& dest);\n+\n+//! Subsitute for std::monostate that doesn't depend on std::variant.\n+struct MonoState{};\n+\n+//! Error information only allocated if there are errors or warnings.\n+template <typename F>\n+struct ErrorInfo {\n+    std::optional<std::conditional_t<std::is_same_v<F, void>, MonoState, F>> failure{};\n+    std::vector<bilingual_str> errors{};\n+    std::vector<bilingual_str> warnings{};\n+};\n+\n+//! Result base class which is inherited by Result<T, F>.\n+//! T is the type of the success return value, or void if there is none.\n+//! F is the type of the failure return value, or void if there is none.\n+template <typename T, typename F>\n+class ResultBase;\n+\n+//! Result base specialization for empty (T=void) value type. Holds error\n+//! information and provides accessor methods.\n+template <typename F>\n+class ResultBase<void, F>\n+{\n+protected:\n+    std::unique_ptr<ErrorInfo<F>> m_info;\n+\n+    ErrorInfo<F>& Info() LIFETIMEBOUND\n+    {\n+        if (!m_info) m_info = std::make_unique<ErrorInfo<F>>();\n+        return *m_info;\n+    }\n+\n+    //! Value setter methods that do nothing because this class has value type T=void.\n+    void ConstructValue() {}\n+    template <typename O>\n+    void MoveValue(O& other) {}\n+    void DestroyValue() {}\n+\n+public:\n+    //! Success check.\n+    explicit operator bool() const { return !m_info || !m_info->failure; }\n+\n+    //! Error retrieval.\n+    const auto& GetFailure() const LIFETIMEBOUND { assert(!*this); return *m_info->failure; }\n+    const std::vector<bilingual_str>& GetErrors() const LIFETIMEBOUND { return m_info ? m_info->errors : EMPTY_LIST; }\n+    const std::vector<bilingual_str>& GetWarnings() const LIFETIMEBOUND { return m_info ? m_info->warnings : EMPTY_LIST; }\n+};\n+\n+//! Result base class for T value type. Holds value and provides accessor methods.\n+template <typename T, typename F>\n+class ResultBase : public ResultBase<void, F>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167765462",
      "id" : 1167765462,
      "line" : 77,
      "node_id" : "PRRC_kwDOABII585Fmq_W",
      "original_commit_id" : "2a9db070ec5acfe6843e44e1f8476f86899a8e29",
      "original_line" : 77,
      "original_position" : 71,
      "original_start_line" : null,
      "path" : "src/util/result.h",
      "position" : 71,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167765462/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167765462",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167821634"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167821634"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "It took me a while to figure out what's going on here with the recursive `Construct` calls and the lambda that's passed along.  How about instead of passing a lambda along use a `bool` template argument like so:\r\n\r\n```diff\r\ndiff --git a/src/util/result.h b/src/util/result.h\r\nindex 5599da43dd..3c163cf398 100644\r\n--- a/src/util/result.h\r\n+++ b/src/util/result.h\r\n@@ -151,33 +151,35 @@ template <typename T, typename F = void>\r\n class Result : public detail::ResultBase<T, F>\r\n {\r\n protected:\r\n-    template <typename Fn, typename... Args>\r\n-    void Construct(const Fn& fn, Args&&... args)\r\n+    template <bool IsValueConstruction, typename... Args>\r\n+    void Construct(Args&&... args)\r\n     {\r\n-        fn(std::forward<Args>(args)...);\r\n+        if constexpr (IsValueConstruction) {\r\n+            this->ConstructValue(std::forward<Args>(args)...);\r\n+        } else {\r\n+            this->Info().failure.emplace(std::forward<Args>(args)...);\r\n+        }\r\n     }\r\n \r\n-    template <typename Fn, typename... Args>\r\n-    void Construct(const Fn& fn, Error error, Args&&... args)\r\n+    template <bool IsValueConstruction, typename... Args>\r\n+    void Construct(Error error, Args&&... args)\r\n     {\r\n         this->AddError(std::move(error.message));\r\n-        Construct([&](auto&&... x) {\r\n-            this->Info().failure.emplace(std::forward<decltype(x)>(x)...);\r\n-        }, std::forward<Args>(args)...);\r\n+        Construct<false /*always false from here on*/>(std::forward<Args>(args)...);\r\n     }\r\n \r\n-    template <typename Fn, typename... Args>\r\n-    void Construct(const Fn& fn, Warning warning, Args&&... args)\r\n+    template <bool IsValueConstruction, typename... Args>\r\n+    void Construct(Warning warning, Args&&... args)\r\n     {\r\n         this->AddWarning(std::move(warning.message));\r\n-        Construct(fn, std::forward<Args>(args)...);\r\n+        Construct<IsValueConstruction>(std::forward<Args>(args)...);\r\n     }\r\n \r\n-    template <typename Fn, typename OT, typename OF, typename... Args>\r\n-    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\r\n+    template <bool IsValueConstruction, typename OT, typename OF, typename... Args>\r\n+    void Construct(Result<OT, OF>&& other, Args&&... args)\r\n     {\r\n         this->MoveMessages(other);\r\n-        Construct(fn, std::forward<Args>(args)...);\r\n+        Construct<IsValueConstruction>(std::forward<Args>(args)...);\r\n     }\r\n \r\n     template <typename OT, typename OF>\r\n@@ -198,7 +200,8 @@ public:\r\n     template <typename... Args>\r\n     Result(Args&&... args)\r\n     {\r\n-        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\r\n+        // recursively peels of the first argument until we reach the base Construct method\r\n+        Construct<true>(std::forward<Args>(args)...);\r\n     }\r\n \r\n     template <typename OT, typename OF>\r\n```",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-16T10:48:44Z",
      "diff_hunk" : "@@ -31,54 +140,118 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167821634",
      "id" : 1167821634,
      "line" : 154,
      "node_id" : "PRRC_kwDOABII585Fm4tC",
      "original_commit_id" : "2a9db070ec5acfe6843e44e1f8476f86899a8e29",
      "original_line" : 154,
      "original_position" : 148,
      "original_start_line" : null,
      "path" : "src/util/result.h",
      "position" : 148,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167821634/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167821634",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167981120"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167981120"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Mayby explicitly mark the move-assignment as delete\r\n```cpp\r\ntemplate <typename OT, typename OF>\r\nResult& operator=(Result<OT, OF>&& other) = delete;\r\n```\r\n\r\nThen the compiler error messages are a bit nicer when one tries to move-assign",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-16T17:28:37Z",
      "diff_hunk" : "@@ -31,54 +140,118 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n+\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            this->Info().failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n+    {\n+        this->MoveMessages(other);\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n+    {\n+        this->MoveMessages(other);\n+        if (other) {\n+            this->MoveValue(other);\n+        } else {\n+            this->Info().failure = std::move(other.m_info->failure);\n+        }\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename, typename>\n+    friend class Result;\n \n public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+\n+    Result& Set(Result&& other) LIFETIMEBOUND",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167981120",
      "id" : 1167981120,
      "line" : 207,
      "node_id" : "PRRC_kwDOABII585FnfpA",
      "original_commit_id" : "2a9db070ec5acfe6843e44e1f8476f86899a8e29",
      "original_line" : 207,
      "original_position" : 209,
      "original_start_line" : null,
      "path" : "src/util/result.h",
      "position" : 209,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167981120/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167981120",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167981676"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167981676"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit: I don't think the `if (!src.m_info->errors.empty())` check is necessary.",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-16T17:33:03Z",
      "diff_hunk" : "@@ -31,54 +140,118 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n+protected:\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Args&&... args)\n+    {\n+        fn(std::forward<Args>(args)...);\n+    }\n+\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Error error, Args&&... args)\n+    {\n+        this->AddError(std::move(error.message));\n+        Construct([&](auto&&... x) {\n+            this->Info().failure.emplace(std::forward<decltype(x)>(x)...);\n+        }, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename Fn, typename... Args>\n+    void Construct(const Fn& fn, Warning warning, Args&&... args)\n+    {\n+        this->AddWarning(std::move(warning.message));\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename Fn, typename OT, typename OF, typename... Args>\n+    void Construct(const Fn& fn, Result<OT, OF>&& other, Args&&... args)\n+    {\n+        this->MoveMessages(other);\n+        Construct(fn, std::forward<Args>(args)...);\n+    }\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n+    {\n+        this->MoveMessages(other);\n+        if (other) {\n+            this->MoveValue(other);\n+        } else {\n+            this->Info().failure = std::move(other.m_info->failure);\n+        }\n+    }\n \n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n+    template <typename, typename>\n+    friend class Result;\n \n public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n+    template <typename... Args>\n+    Result(Args&&... args)\n+    {\n+        Construct([this](auto&&... x) { this->ConstructValue(std::forward<decltype(x)>(x)...); }, std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }\n+\n+    Result& Set(Result&& other) LIFETIMEBOUND\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        if (*this) {\n+            this->DestroyValue();\n+        } else {\n+            this->m_info->failure.reset();\n+        }\n+        MoveConstruct(other);\n+        return *this;\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    void AddError(bilingual_str error)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        if (!error.empty()) this->Info().errors.emplace_back(std::move(error));\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    void AddWarning(bilingual_str warning)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        if (!warning.empty()) this->Info().warnings.emplace_back(std::move(warning));\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+\n+    template<typename S>\n+    void MoveMessages(S& src)\n     {\n-        return has_value() ? std::move(value()) : std::forward<U>(default_value);\n+        if (src.m_info) {\n+            if (!src.m_info->errors.empty()) detail::MoveMessages(src.m_info->errors, this->Info().errors);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1167981676",
      "id" : 1167981676,
      "line" : 232,
      "node_id" : "PRRC_kwDOABII585Fnfxs",
      "original_commit_id" : "2a9db070ec5acfe6843e44e1f8476f86899a8e29",
      "original_line" : 232,
      "original_position" : 245,
      "original_start_line" : null,
      "path" : "src/util/result.h",
      "position" : 245,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167981676/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1167981676",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174297928"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174297928"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "maybe consider forbidding type `bool` for `T`. I recently had similar code in another project, and its utterly confusing; because Result can convert to bool but that only tells if it *has* a bool or not. It's very error prone.",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-22T05:39:30Z",
      "diff_hunk" : "@@ -31,54 +140,118 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174297928",
      "id" : 1174297928,
      "line" : 150,
      "node_id" : "PRRC_kwDOABII585F_l1I",
      "original_commit_id" : "2a9db070ec5acfe6843e44e1f8476f86899a8e29",
      "original_line" : 150,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : "src/util/result.h",
      "position" : 142,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174297928/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174297928",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174298529"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174298529"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I'd add a check somewhere to ensure that the size of the Result is as claimed in the commit message, something like that:\r\n\r\n```cpp\r\nstatic_assert(sizeof(util::Result<int>) == sizeof(void*)*2);\r\nstatic_assert(sizeof(util::Result<void>) == sizeof(void*));\r\n```",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-22T05:45:40Z",
      "diff_hunk" : "@@ -45,42 +74,88 @@ util::Result<bilingual_str> StrFn(bilingual_str s, bool success)\n     return util::Error{strprintf(Untranslated(\"str %s error.\"), s.original)};\n }\n \n-util::Result<NoCopy> NoCopyFn(int i, bool success)\n+util::Result<NoCopy, NoCopy> NoCopyFn(int i, bool success)\n+{\n+    if (success) return {i};\n+    return {util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))}, i};\n+}\n+\n+util::Result<NoCopyNoMove, NoCopyNoMove> NoCopyNoMoveFn(int i, bool success)\n {\n     if (success) return {i};\n-    return util::Error{Untranslated(strprintf(\"nocopy %i error.\", i))};\n+    return {util::Error{Untranslated(strprintf(\"nocopynomove %i error.\", i))}, i};\n }\n \n-template <typename T>\n-void ExpectResult(const util::Result<T>& result, bool success, const bilingual_str& str)\n+enum FnError { ERR1, ERR2 };\n+\n+util::Result<int, FnError> IntFailFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"int %i error.\", i))}, i % 2 ? ERR1 : ERR2};\n+}\n+\n+util::Result<NoCopyNoMove, FnError> EnumFailFn(FnError ret)\n+{\n+    return {util::Error{Untranslated(\"enum fail.\")}, ret};\n+}\n+\n+util::Result<int, int> TruthyFalsyFn(int i, bool success)\n+{\n+    if (success) return i;\n+    return {util::Error{Untranslated(strprintf(\"failure value %i.\", i))}, i};\n+}\n+\n+template <typename T, typename F>\n+void ExpectResult(const util::Result<T, F>& result, bool success, const bilingual_str& str)\n {\n     BOOST_CHECK_EQUAL(bool(result), success);\n     BOOST_CHECK_EQUAL(util::ErrorString(result), str);\n }\n \n-template <typename T, typename... Args>\n-void ExpectSuccess(const util::Result<T>& result, const bilingual_str& str, Args&&... args)\n+template <typename T, typename F, typename... Args>\n+void ExpectSuccess(const util::Result<T, F>& result, const bilingual_str& str, Args&&... args)\n {\n     ExpectResult(result, true, str);\n     BOOST_CHECK_EQUAL(result.has_value(), true);\n     BOOST_CHECK_EQUAL(result.value(), T{std::forward<Args>(args)...});\n     BOOST_CHECK_EQUAL(&result.value(), &*result);\n }\n \n-template <typename T, typename... Args>\n-void ExpectFail(const util::Result<T>& result, const bilingual_str& str)\n+template <typename T, typename F, typename... Args>\n+void ExpectFail(const util::Result<T, F>& result, bilingual_str str, Args&&... args)\n {\n     ExpectResult(result, false, str);\n+    BOOST_CHECK_EQUAL(result.GetFailure(), F{std::forward<Args>(args)...});\n }\n \n BOOST_AUTO_TEST_CASE(check_returned)\n {\n+    ExpectResult(VoidSuccessFn(), true, {});\n+    ExpectResult(VoidFailFn(), false, Untranslated(\"void fail.\"));\n     ExpectSuccess(IntFn(5, true), {}, 5);\n-    ExpectFail(IntFn(5, false), Untranslated(\"int 5 error.\"));\n+    ExpectResult(IntFn(5, false), false, Untranslated(\"int 5 error.\"));\n     ExpectSuccess(NoCopyFn(5, true), {}, 5);\n-    ExpectFail(NoCopyFn(5, false), Untranslated(\"nocopy 5 error.\"));\n+    ExpectFail(NoCopyFn(5, false), Untranslated(\"nocopy 5 error.\"), 5);\n+    ExpectSuccess(NoCopyNoMoveFn(5, true), {}, 5);\n+    ExpectFail(NoCopyNoMoveFn(5, false), Untranslated(\"nocopynomove 5 error.\"), 5);\n     ExpectSuccess(StrFn(Untranslated(\"S\"), true), {}, Untranslated(\"S\"));\n-    ExpectFail(StrFn(Untranslated(\"S\"), false), Untranslated(\"str S error.\"));\n+    ExpectResult(StrFn(Untranslated(\"S\"), false), false, Untranslated(\"str S error.\"));\n+    ExpectFail(EnumFailFn(ERR2), Untranslated(\"enum fail.\"), ERR2);\n+    ExpectSuccess(TruthyFalsyFn(0, true), {}, 0);\n+    ExpectFail(TruthyFalsyFn(0, false), Untranslated(\"failure value 0.\"), 0);\n+    ExpectSuccess(TruthyFalsyFn(1, true), {}, 1);\n+    ExpectFail(TruthyFalsyFn(1, false), Untranslated(\"failure value 1.\"), 1);\n+}\n+",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174298529",
      "id" : 1174298529,
      "line" : 183,
      "node_id" : "PRRC_kwDOABII585F_l-h",
      "original_commit_id" : "3a919e576ffe03f09c779239720a79f6ddb7cde1",
      "original_line" : 183,
      "original_position" : 130,
      "original_start_line" : null,
      "path" : "src/test/result_tests.cpp",
      "position" : 164,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174298529/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174298529",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174414223"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174414223"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "move constructors should usually be `noexcept`, but then all methods it uses also have to be `noexcept`. ",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-22T13:22:08Z",
      "diff_hunk" : "@@ -31,67 +119,71 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>\n+class Result : public detail::ResultBase<T, F>\n {\n-private:\n-    std::variant<bilingual_str, T> m_variant;\n-\n-    //! Make operator= private and instead require explicit Set() calls to\n-    //! avoid confusion in the future when the Result class gains support for\n-    //! richer errors and callers want to set result values without erasing\n-    //! error strings.\n-    Result& operator=(const Result&) = default;\n-    Result& operator=(Result&&) = default;\n-\n-    template <typename FT>\n-    friend bilingual_str ErrorString(const Result<FT>& result);\n-\n-public:\n-    Result(T obj) : m_variant{std::in_place_index_t<1>{}, std::move(obj)} {}\n-    Result(Error error) : m_variant{std::in_place_index_t<0>{}, std::move(error.message)} {}\n-    Result(const Result&) = default;\n-    Result(Result&&) = default;\n-    ~Result() = default;\n+protected:\n+    template <typename... Args>\n+    void Construct(Args&&... args)\n+    {\n+        this->ConstructValue(std::forward<Args>(args)...);\n+    }\n \n-    //! std::optional methods, so functions returning optional<T> can change to\n-    //! return Result<T> with minimal changes to existing code, and vice versa.\n-    bool has_value() const noexcept { return m_variant.index() == 1; }\n-    const T& value() const LIFETIMEBOUND\n+    template <typename... Args>\n+    void Construct(Error error, Args&&... args)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        this->m_info.reset(new detail::ErrorInfo<F>{.failure{std::forward<Args>(args)...}, .error{std::move(error.message)}});\n     }\n-    T& value() LIFETIMEBOUND\n+\n+    template <typename OT, typename OF>\n+    void MoveConstruct(Result<OT, OF>& other)\n     {\n-        assert(has_value());\n-        return std::get<1>(m_variant);\n+        if (other) {\n+            this->MoveValue(other);\n+        } else {\n+            this->m_info.reset(new detail::ErrorInfo<F>{std::move(*other.m_info)});\n+        }\n     }\n-    template <class U>\n-    T value_or(U&& default_value) const&\n+\n+    template <typename, typename>\n+    friend class Result;\n+\n+public:\n+    template <typename... Args>\n+    Result(Args&&... args)\n     {\n-        return has_value() ? value() : std::forward<U>(default_value);\n+        Construct(std::forward<Args>(args)...);\n     }\n-    template <class U>\n-    T value_or(U&& default_value) &&\n+\n+    template <typename OT, typename OF>\n+    Result(Result<OT, OF>&& other) { MoveConstruct(other); }",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174414223",
      "id" : 1174414223,
      "line" : 205,
      "node_id" : "PRRC_kwDOABII585GACOP",
      "original_commit_id" : "3a919e576ffe03f09c779239720a79f6ddb7cde1",
      "original_line" : 205,
      "original_position" : 191,
      "original_start_line" : null,
      "path" : "src/util/result.h",
      "position" : 207,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174414223/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174414223",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174415841"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174415841"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Could be just `return util::Error();`",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-22T13:28:31Z",
      "diff_hunk" : "@@ -734,19 +734,17 @@ util::Result<SelectionResult> AutomaticCoinSelection(const CWallet& wallet, Coin\n                 // If any specific error message appears here, then something particularly wrong might have happened.\n                 // Save the error and continue the selection process. So if no solutions gets found, we can return\n                 // the detailed error to the upper layers.\n-                if (HasErrorMsg(res)) res_detailed_errors.emplace_back(res);\n+                if (HasErrorMsg(res)) res_detailed_errors.emplace_back(std::move(res));\n             }\n         }\n \n         // Return right away if we have a detailed error\n-        if (!res_detailed_errors.empty()) return res_detailed_errors.front();\n+        if (!res_detailed_errors.empty()) return std::move(res_detailed_errors.front());\n \n \n         // General \"Insufficient Funds\"\n         return util::Result<SelectionResult>(util::Error());",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174415841",
      "id" : 1174415841,
      "line" : 736,
      "node_id" : "PRRC_kwDOABII585GACnh",
      "original_commit_id" : "3a919e576ffe03f09c779239720a79f6ddb7cde1",
      "original_line" : 736,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 78,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174415841/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174415841",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "After rebasing I get a compile error in `spend.cpp`  `ChooseSelectionResult`, adding a bunch of `std::move` helps",
      "created_at" : "2023-04-22T13:37:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1518662504",
      "id" : 1518662504,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585ahPNo",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1518662504/reactions"
      },
      "updated_at" : "2023-04-22T13:37:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1518662504",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174422158"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174422158"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "could be just `return util::Error();`",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-04-22T14:22:36Z",
      "diff_hunk" : "@@ -715,7 +715,7 @@ util::Result<SelectionResult> AutomaticCoinSelection(const CWallet& wallet, Coin\n         if (CAmount total_amount = available_coins.GetTotalAmount() - total_discarded < value_to_select) {\n             // Special case, too-long-mempool cluster.\n             if (total_amount + total_unconf_long_chain > value_to_select) {\n-                return util::Result<SelectionResult>({_(\"Unconfirmed UTXOs are available, but spending them creates a chain of transactions that will be rejected by the mempool\")});\n+                return util::Error{_(\"Unconfirmed UTXOs are available, but spending them creates a chain of transactions that will be rejected by the mempool\")};\n             }\n             return util::Result<SelectionResult>(util::Error()); // General \"Insufficient Funds\"",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1174422158",
      "id" : 1174422158,
      "line" : 710,
      "node_id" : "PRRC_kwDOABII585GAEKO",
      "original_commit_id" : "3a919e576ffe03f09c779239720a79f6ddb7cde1",
      "original_line" : 710,
      "original_position" : 16,
      "original_start_line" : null,
      "path" : "src/wallet/spend.cpp",
      "position" : 61,
      "pull_request_review_id" : 1386736519,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174422158/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-22T14:25:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1174422158",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-15T12:00:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1547722999",
      "id" : 1547722999,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585cQGD3",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1547722999/reactions"
      },
      "updated_at" : "2023-05-15T12:00:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1547722999",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1233967699"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1233967699"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I guess the same goes for something like `Result<std::optional<int>, int>`, or really any type implementing `operator bool()`? How did you handle these cases in your code? Sometimes the non-presence of a result is not really an error.",
      "commit_id" : "f7d4451b98014176c083adc02bdf59e6dd2b9355",
      "created_at" : "2023-06-19T12:09:40Z",
      "diff_hunk" : "@@ -31,54 +140,118 @@ struct Error {\n //! `std::optional<T>` can be updated to return `util::Result<T>` and return\n //! error strings usually just replacing `return std::nullopt;` with `return\n //! util::Error{error_string};`.\n-template <class T>\n-class Result\n+//!\n+//! Most code does not need different error-handling behavior for different\n+//! types of errors, and can suffice just using the type `T` success value on\n+//! success, and descriptive error strings when there's a failure. But\n+//! applications that do need more complicated error-handling behavior can\n+//! override the default `F = void` failure type and get failure values by\n+//! calling result.GetFailure().\n+template <typename T, typename F = void>",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#discussion_r1233967699",
      "id" : 1233967699,
      "in_reply_to_id" : 1174297928,
      "line" : 150,
      "node_id" : "PRRC_kwDOABII585JjNpT",
      "original_commit_id" : "2a9db070ec5acfe6843e44e1f8476f86899a8e29",
      "original_line" : 150,
      "original_position" : 142,
      "original_start_line" : null,
      "path" : "src/util/result.h",
      "position" : 142,
      "pull_request_review_id" : 1486081916,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/25722",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1233967699/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-06-19T12:09:40Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1233967699",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8421793?v=4",
         "events_url" : "https://api.github.com/users/TheCharlatan/events{/privacy}",
         "followers_url" : "https://api.github.com/users/TheCharlatan/followers",
         "following_url" : "https://api.github.com/users/TheCharlatan/following{/other_user}",
         "gists_url" : "https://api.github.com/users/TheCharlatan/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/TheCharlatan",
         "id" : 8421793,
         "login" : "TheCharlatan",
         "node_id" : "MDQ6VXNlcjg0MjE3OTM=",
         "organizations_url" : "https://api.github.com/users/TheCharlatan/orgs",
         "received_events_url" : "https://api.github.com/users/TheCharlatan/received_events",
         "repos_url" : "https://api.github.com/users/TheCharlatan/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/TheCharlatan/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/TheCharlatan/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/TheCharlatan"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Maybe mark as draft for as long as CI is red and this is based on something else?",
      "created_at" : "2023-08-01T14:55:26Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1660494465",
      "id" : 1660494465,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585i-SKB",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660494465/reactions"
      },
      "updated_at" : "2023-08-01T14:55:26Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1660494465",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-10-16T16:18:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1764834601",
      "id" : 1764834601,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585pMT0p",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1764834601/reactions"
      },
      "updated_at" : "2023-10-16T16:18:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1764834601",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--13523179cfe9479db18ec6c5d236f789-->\nâ There hasn't been much activity lately and the patch still needs rebase. What is the status here?\n\n* Is it still relevant? â¡ï¸ Please solve the conflicts to make it ready for review and to ensure the CI passes.\n* Is it no longer relevant? â¡ï¸ Please close.\n* Did the author lose interest or time to work on this? â¡ï¸ Please close it and mark it 'Up for grabs' with the label, so that it can be picked up in the future.\n",
      "created_at" : "2024-01-14T00:39:06Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/25722#issuecomment-1890808022",
      "id" : 1890808022,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/25722",
      "node_id" : "IC_kwDOABII585ws3DW",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1890808022/reactions"
      },
      "updated_at" : "2024-01-14T00:39:06Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1890808022",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   }
]

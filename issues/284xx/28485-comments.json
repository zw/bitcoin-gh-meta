[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/28485).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| ACK | [maflcko](https://github.com/bitcoin/bitcoin/pull/28485#issuecomment-1841170942) |\n| Stale ACK | [glozow](https://github.com/bitcoin/bitcoin/pull/28485#pullrequestreview-1676529186), [theStack](https://github.com/bitcoin/bitcoin/pull/28485#pullrequestreview-1765277701) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n",
      "created_at" : "2023-09-14T20:47:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#issuecomment-1720131657",
      "id" : 1720131657,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28485",
      "node_id" : "IC_kwDOABII585mhyBJ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1720131657/reactions"
      },
      "updated_at" : "2023-12-05T16:38:23Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1720131657",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327085783"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327085783"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I wonder why, given that this test uses immediate tx-relay. Shouldn't this check fail?",
      "commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "created_at" : "2023-09-15T10:06:17Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327085783",
      "id" : 1327085783,
      "line" : 160,
      "node_id" : "PRRC_kwDOABII585PGbjX",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 39,
      "pull_request_review_id" : 1628630549,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 1,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327085783/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T10:06:17Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327085783",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327101950"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327101950"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe there hasn't been a `SendMessages` yet?",
      "commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "created_at" : "2023-09-15T10:22:28Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327101950",
      "id" : 1327101950,
      "in_reply_to_id" : 1327085783,
      "line" : 160,
      "node_id" : "PRRC_kwDOABII585PGff-",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 39,
      "pull_request_review_id" : 1628655240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327101950/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T10:22:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327101950",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327105421"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327105421"
         }
      },
      "author_association" : "MEMBER",
      "body" : "IIRC `send_and_ping` should force a `SendMessages` now (on current master)",
      "commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "created_at" : "2023-09-15T10:26:06Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327105421",
      "id" : 1327105421,
      "in_reply_to_id" : 1327085783,
      "line" : 160,
      "node_id" : "PRRC_kwDOABII585PGgWN",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 39,
      "pull_request_review_id" : 1628660501,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327105421/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T10:26:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327105421",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327337796"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327337796"
         }
      },
      "author_association" : "NONE",
      "body" : "I may be missing the point here, but why should it fail? Even if `send_and_ping` forces `SendMessages`, aren't invs still delayed?\r\n\r\nIf the following is added at the end of the test, you can see how the transaction is served:\r\n\r\n```\r\nfilter_peer.send_and_ping(msg_inv([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\r\nfilter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\r\nassert filter_peer.tx_received\r\n```",
      "commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "created_at" : "2023-09-15T14:06:07Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327337796",
      "id" : 1327337796,
      "in_reply_to_id" : 1327085783,
      "line" : 160,
      "node_id" : "PRRC_kwDOABII585PHZFE",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 39,
      "pull_request_review_id" : 1629032789,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327337796/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T14:06:08Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327337796",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327362253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327362253"
         }
      },
      "author_association" : "MEMBER",
      "body" : "You can add a `import time;time.sleep(.1)` after the `wallet.send_to` to observe that the test fails.",
      "commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "created_at" : "2023-09-15T14:23:49Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327362253",
      "id" : 1327362253,
      "in_reply_to_id" : 1327085783,
      "line" : 160,
      "node_id" : "PRRC_kwDOABII585PHfDN",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 39,
      "pull_request_review_id" : 1629071792,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327362253/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T14:23:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327362253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327397596"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327397596"
         }
      },
      "author_association" : "NONE",
      "body" : "Should we be using `send_message` instead so `SendMessages` is not forced, or just get rid of this third tx request?\r\n\r\nFWIW, adding a sleep after `send_message` will make it fail too",
      "commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "created_at" : "2023-09-15T14:48:47Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327397596",
      "id" : 1327397596,
      "in_reply_to_id" : 1327085783,
      "line" : 160,
      "node_id" : "PRRC_kwDOABII585PHnrc",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 39,
      "pull_request_review_id" : 1629127547,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327397596/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T14:56:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327397596",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327443910"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327443910"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Tests must pass in all environments. If you rely on a race condition for the test to pass, it will fail eventually.",
      "commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "created_at" : "2023-09-15T15:17:31Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1327443910",
      "id" : 1327443910,
      "in_reply_to_id" : 1327085783,
      "line" : 160,
      "node_id" : "PRRC_kwDOABII585PHy_G",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 39,
      "pull_request_review_id" : 1629198840,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327443910/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-15T15:17:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1327443910",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1329013797"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1329013797"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Sure, my point was whether the last check was even worth it. I finally figured out what was going on (h/t to @glozow for being my rubber duckie):\r\n\r\nIt turns out `m_last_inv_sequence` is not updated every single time an `INV` is sent, but every single time an `INV` may be sent. As long as the node trickles for that peer, `m_last_inv_sequence` is increased, hence why the transaction was requestable even though no `INV` was being sent.\r\n\r\nTherefore, by using `sync_and_ping`, which forces `SendMessages`, we can assert that the transaction is requestable. ",
      "commit_id" : "c9e31a40d23109bc5063ceda0f9a2abe55a9f305",
      "created_at" : "2023-09-18T16:45:32Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1329013797",
      "id" : 1329013797,
      "in_reply_to_id" : 1327085783,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PNyQl",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 1631539174,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1329013797/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-19T17:47:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1329013797",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1330496696"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330496696"
         }
      },
      "author_association" : "MEMBER",
      "body" : "[c9e31a4](https://github.com/bitcoin/bitcoin/pull/28485/commits/c9e31a40d23109bc5063ceda0f9a2abe55a9f305) should have fixed this",
      "commit_id" : "c9e31a40d23109bc5063ceda0f9a2abe55a9f305",
      "created_at" : "2023-09-19T17:42:10Z",
      "diff_hunk" : "@@ -135,14 +136,29 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We won't be able to request this one given and INV was not sent since it entered the mempool\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1330496696",
      "id" : 1330496696,
      "in_reply_to_id" : 1327085783,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585PTcS4",
      "original_commit_id" : "eb4b020e3d2df5d8babd087b1085ffc99425460d",
      "original_line" : 160,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 1633872326,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330496696/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-09-19T17:42:11Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1330496696",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1347297098"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347297098"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n        self.log.info(\"We should get it anyway because it was in the mempool when the MEMPOOL message was sent\")\r\n```",
      "commit_id" : "c9e31a40d23109bc5063ceda0f9a2abe55a9f305",
      "created_at" : "2023-10-05T11:49:26Z",
      "diff_hunk" : "@@ -135,14 +136,32 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1347297098",
      "id" : 1347297098,
      "line" : 153,
      "node_id" : "PRRC_kwDOABII585QTh9K",
      "original_commit_id" : "c9e31a40d23109bc5063ceda0f9a2abe55a9f305",
      "original_line" : 153,
      "original_position" : 32,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 32,
      "pull_request_review_id" : 1659651583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347297098/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-05T11:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347297098",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1347303470"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347303470"
         }
      },
      "author_association" : "MEMBER",
      "body" : "instead of using `tx_received`, `wait_for_tx` will also assert that you're receiving the right tx:\r\n```suggestion\r\n        filter_peer.wait_for_tx(irr_txid)\r\n```",
      "commit_id" : "c9e31a40d23109bc5063ceda0f9a2abe55a9f305",
      "created_at" : "2023-10-05T11:54:44Z",
      "diff_hunk" : "@@ -135,14 +136,32 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1347303470",
      "id" : 1347303470,
      "line" : 154,
      "node_id" : "PRRC_kwDOABII585QTjgu",
      "original_commit_id" : "c9e31a40d23109bc5063ceda0f9a2abe55a9f305",
      "original_line" : 154,
      "original_position" : 33,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 33,
      "pull_request_review_id" : 1659651583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347303470/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-05T11:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347303470",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1347305666"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347305666"
         }
      },
      "author_association" : "MEMBER",
      "body" : "What's the purpose of this test? It seems like we're just testing that we don't delay announcements to peers with noban permissions. That doesn't have anything to do with bloom filters or the mempool message.\r\n\r\nAssuming the original intent was to check that they won't be able to request the tx before announcement, you could remove noban permissions and assert the opposite, but I think that's covered in other tests already.",
      "commit_id" : "c9e31a40d23109bc5063ceda0f9a2abe55a9f305",
      "created_at" : "2023-10-05T11:56:41Z",
      "diff_hunk" : "@@ -135,14 +136,32 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        # sync_with_ping forces the node to trickle, which increases m_last_inv_sequence\n+        filter_peer.sync_with_ping()\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We should be able to request this one given too since we force the node to trickle\")\n+        assert filter_peer.tx_received",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1347305666",
      "id" : 1347305666,
      "line" : 163,
      "node_id" : "PRRC_kwDOABII585QTkDC",
      "original_commit_id" : "c9e31a40d23109bc5063ceda0f9a2abe55a9f305",
      "original_line" : 163,
      "original_position" : 42,
      "original_start_line" : 156,
      "path" : "test/functional/p2p_filter.py",
      "position" : 42,
      "pull_request_review_id" : 1659651583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347305666/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 156,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-05T11:58:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347305666",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1347869253"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347869253"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I guess we could get rid of this bit. \r\n\r\nThe purpose was really to test how the transaction won't be available until the node has trickled for the requesting peer, but that is not something we can check without introducing a time-variant to the test that will make it fail sparsely.",
      "commit_id" : "c9e31a40d23109bc5063ceda0f9a2abe55a9f305",
      "created_at" : "2023-10-05T19:19:41Z",
      "diff_hunk" : "@@ -135,14 +136,32 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")\n+        filter_peer.tx_received = False\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(irr_wtxid, 16))]))\n+        self.log.info(\"We should get it anyway given it was on the mempool when the MEMPOOL message was sent\")\n+        assert filter_peer.tx_received\n+\n+        self.log.info(\"Create a third transaction (that was therefore not part of the mempool message) and try to retrieve it\")\n+        filter_peer.tx_received = False\n+        add_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=3 * COIN)[\"txid\"]\n+        # sync_with_ping forces the node to trickle, which increases m_last_inv_sequence\n+        filter_peer.sync_with_ping()\n+        filter_peer.send_and_ping(msg_getdata([CInv(t=MSG_WTX, h=int(self.nodes[0].getmempoolentry(add_txid)[\"wtxid\"], 16))]))\n+        self.log.info(\"We should be able to request this one given too since we force the node to trickle\")\n+        assert filter_peer.tx_received",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1347869253",
      "id" : 1347869253,
      "in_reply_to_id" : 1347305666,
      "line" : 163,
      "node_id" : "PRRC_kwDOABII585QVtpF",
      "original_commit_id" : "c9e31a40d23109bc5063ceda0f9a2abe55a9f305",
      "original_line" : 163,
      "original_position" : 42,
      "original_start_line" : 156,
      "path" : "test/functional/p2p_filter.py",
      "position" : 42,
      "pull_request_review_id" : 1660550043,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347869253/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 156,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-10-05T19:19:41Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1347869253",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1354482033"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1354482033"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: in the context of tx relay I typically prefer to use more specific words to disambiguate between getting invs and transaction data\r\n```suggestion\r\n        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is announced\")\r\n```",
      "commit_id" : "d10acba3d730397484f10ccb2f1116544161507d",
      "created_at" : "2023-10-11T08:57:47Z",
      "diff_hunk" : "@@ -135,14 +136,22 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1354482033",
      "id" : 1354482033,
      "line" : 144,
      "node_id" : "PRRC_kwDOABII585Qu8Fx",
      "original_commit_id" : "d10acba3d730397484f10ccb2f1116544161507d",
      "original_line" : 144,
      "original_position" : 20,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 20,
      "pull_request_review_id" : 1670485583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1354482033/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-11T08:59:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1354482033",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1354483187"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1354483187"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: grammar and I think \"announced\" is more fitting than \"offered\"\r\n```suggestion\r\n        self.log.info(\"Request the irrelevant transaction even though it was not announced\")\r\n```",
      "commit_id" : "d10acba3d730397484f10ccb2f1116544161507d",
      "created_at" : "2023-10-11T08:58:41Z",
      "diff_hunk" : "@@ -135,14 +136,22 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is received\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it has not being offered to us\")",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1354483187",
      "id" : 1354483187,
      "line" : 150,
      "node_id" : "PRRC_kwDOABII585Qu8Xz",
      "original_commit_id" : "d10acba3d730397484f10ccb2f1116544161507d",
      "original_line" : 150,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : 29,
      "pull_request_review_id" : 1670485583,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1354483187/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-10-11T08:59:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1354483187",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/25183001?v=4",
         "events_url" : "https://api.github.com/users/glozow/events{/privacy}",
         "followers_url" : "https://api.github.com/users/glozow/followers",
         "following_url" : "https://api.github.com/users/glozow/following{/other_user}",
         "gists_url" : "https://api.github.com/users/glozow/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/glozow",
         "id" : 25183001,
         "login" : "glozow",
         "node_id" : "MDQ6VXNlcjI1MTgzMDAx",
         "organizations_url" : "https://api.github.com/users/glozow/orgs",
         "received_events_url" : "https://api.github.com/users/glozow/received_events",
         "repos_url" : "https://api.github.com/users/glozow/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/glozow/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/glozow/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/glozow"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed nits ",
      "created_at" : "2023-10-11T16:04:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#issuecomment-1758026304",
      "id" : 1758026304,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28485",
      "node_id" : "IC_kwDOABII585oyVpA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1758026304/reactions"
      },
      "updated_at" : "2023-10-11T16:04:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1758026304",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1415732765"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415732765"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "nit (feel free to ignore): MiniWallet's `send_to` already returns both txid and wtxid, so one doesn't need the extra `getmempoolentry` RPC call.",
      "commit_id" : "fb288f331277536c8b528c0eae44d81617fcbee6",
      "created_at" : "2023-12-05T14:44:18Z",
      "diff_hunk" : "@@ -135,14 +136,22 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1415732765",
      "id" : 1415732765,
      "line" : 142,
      "node_id" : "PRRC_kwDOABII585UYl4d",
      "original_commit_id" : "fb288f331277536c8b528c0eae44d81617fcbee6",
      "original_line" : 142,
      "original_position" : 17,
      "original_start_line" : 141,
      "path" : "test/functional/p2p_filter.py",
      "position" : 17,
      "pull_request_review_id" : 1765277701,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415732765/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 141,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-05T14:44:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415732765",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/91535?v=4",
         "events_url" : "https://api.github.com/users/theStack/events{/privacy}",
         "followers_url" : "https://api.github.com/users/theStack/followers",
         "following_url" : "https://api.github.com/users/theStack/following{/other_user}",
         "gists_url" : "https://api.github.com/users/theStack/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/theStack",
         "id" : 91535,
         "login" : "theStack",
         "node_id" : "MDQ6VXNlcjkxNTM1",
         "organizations_url" : "https://api.github.com/users/theStack/orgs",
         "received_events_url" : "https://api.github.com/users/theStack/received_events",
         "repos_url" : "https://api.github.com/users/theStack/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/theStack/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/theStack/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/theStack"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1415812758"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415812758"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I'm taking this",
      "commit_id" : "59e86afbcdfb9dbf52a6580246233ee501c51475",
      "created_at" : "2023-12-05T15:28:32Z",
      "diff_hunk" : "@@ -135,14 +136,22 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)[\"txid\"]\n+        irr_wtxid = self.nodes[0].getmempoolentry(irr_txid)[\"wtxid\"]",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1415812758",
      "id" : 1415812758,
      "in_reply_to_id" : 1415732765,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UY5aW",
      "original_commit_id" : "fb288f331277536c8b528c0eae44d81617fcbee6",
      "original_line" : 142,
      "original_position" : 17,
      "original_start_line" : 141,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 1765400860,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415812758/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-05T15:28:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415812758",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Addressed comments. Should be re-review ready",
      "created_at" : "2023-12-05T15:30:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#issuecomment-1841026089",
      "id" : 1841026089,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28485",
      "node_id" : "IC_kwDOABII585tu9Qp",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841026089/reactions"
      },
      "updated_at" : "2023-12-05T15:30:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841026089",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1415836863"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415836863"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Can remove this line, now that you use wait_for_tx ?",
      "commit_id" : "59e86afbcdfb9dbf52a6580246233ee501c51475",
      "created_at" : "2023-12-05T15:43:05Z",
      "diff_hunk" : "@@ -135,14 +136,23 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_result = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)\n+        irr_txid = irr_result[\"txid\"]\n+        irr_wtxid = irr_result[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is announced\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())\n+        filter_peer.wait_for_tx(rel_txid)\n+\n+        self.log.info(\"Request the irrelevant transaction even though it was not announced\")\n+        filter_peer.tx_received = False",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1415836863",
      "id" : 1415836863,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UY_S_",
      "original_commit_id" : "3f2da64a45f79033c29d08ee24147ca124a26c22",
      "original_line" : 152,
      "original_position" : 31,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 1765436169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415836863/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T15:44:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415836863",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1415837675"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415837675"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: Is this change from `send_message(msg_mempool())` to `send_and_ping(msg_mempool())` required?",
      "commit_id" : "59e86afbcdfb9dbf52a6580246233ee501c51475",
      "created_at" : "2023-12-05T15:43:40Z",
      "diff_hunk" : "@@ -135,14 +136,23 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_result = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)\n+        irr_txid = irr_result[\"txid\"]\n+        irr_wtxid = irr_result[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is announced\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1415837675",
      "id" : 1415837675,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UY_fr",
      "original_commit_id" : "3f2da64a45f79033c29d08ee24147ca124a26c22",
      "original_line" : 148,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 1765436169,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415837675/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T15:44:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415837675",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1415936588"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415936588"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I don't think it is. Did a bunch of testing locally and it may be a remnant of the old approach taken for this test, which does not longer apply.\r\n\r\nI've reversed some of the calls to make the diff as minimal as possible",
      "commit_id" : "59e86afbcdfb9dbf52a6580246233ee501c51475",
      "created_at" : "2023-12-05T16:34:08Z",
      "diff_hunk" : "@@ -135,14 +136,23 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_result = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)\n+        irr_txid = irr_result[\"txid\"]\n+        irr_wtxid = irr_result[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is announced\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n-        filter_peer.send_and_ping(filter_peer.watch_filter_init)\n-        filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.send_message(filter_peer.watch_filter_init)\n+        filter_peer.send_and_ping(msg_mempool())",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1415936588",
      "id" : 1415936588,
      "in_reply_to_id" : 1415837675,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585UZXpM",
      "original_commit_id" : "3f2da64a45f79033c29d08ee24147ca124a26c22",
      "original_line" : 148,
      "original_position" : 27,
      "original_start_line" : null,
      "path" : "test/functional/p2p_filter.py",
      "position" : null,
      "pull_request_review_id" : 1765582391,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415936588/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-12-05T16:34:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1415936588",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6665628?v=4",
         "events_url" : "https://api.github.com/users/sr-gi/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sr-gi/followers",
         "following_url" : "https://api.github.com/users/sr-gi/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sr-gi/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sr-gi",
         "id" : 6665628,
         "login" : "sr-gi",
         "node_id" : "MDQ6VXNlcjY2NjU2Mjg=",
         "organizations_url" : "https://api.github.com/users/sr-gi/orgs",
         "received_events_url" : "https://api.github.com/users/sr-gi/received_events",
         "repos_url" : "https://api.github.com/users/sr-gi/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sr-gi/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sr-gi/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sr-gi"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "lgtm ACK 59e86afbcdfb9dbf52a6580246233ee501c51475",
      "created_at" : "2023-12-05T16:38:19Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#issuecomment-1841170942",
      "id" : 1841170942,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28485",
      "node_id" : "IC_kwDOABII585tvgn-",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841170942/reactions"
      },
      "updated_at" : "2023-12-05T16:38:19Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1841170942",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/maflcko/events{/privacy}",
         "followers_url" : "https://api.github.com/users/maflcko/followers",
         "following_url" : "https://api.github.com/users/maflcko/following{/other_user}",
         "gists_url" : "https://api.github.com/users/maflcko/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/maflcko",
         "id" : 6399679,
         "login" : "maflcko",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/maflcko/orgs",
         "received_events_url" : "https://api.github.com/users/maflcko/received_events",
         "repos_url" : "https://api.github.com/users/maflcko/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/maflcko/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/maflcko/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/maflcko"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1417479419"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1417479419"
         }
      },
      "author_association" : "MEMBER",
      "body" : "If I comment out these lines the test still passes. Seems wrong based on text below at https://github.com/bitcoin/bitcoin/pull/28485/files#diff-c5c320cd909288d7cf2d82632c6bafcb9085413bfddf5edf361f288dbd76e0cbR153 ?\r\n\r\nBased on my look at the code, in SendMessages we set m_last_inv_sequence = m_mempool.GetSequence() immediately on connection, even if we had no INVs to send. This means new connections can ask for anything historical, regardless of mempool message?",
      "commit_id" : "59e86afbcdfb9dbf52a6580246233ee501c51475",
      "created_at" : "2023-12-06T15:07:53Z",
      "diff_hunk" : "@@ -135,14 +136,22 @@ def test_msg_mempool(self):\n         self.log.info(\"Check that a node with bloom filters enabled services p2p mempool messages\")\n         filter_peer = P2PBloomFilter()\n \n-        self.log.debug(\"Create a tx relevant to the peer before connecting\")\n-        txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=9 * COIN)[\"txid\"]\n+        self.log.info(\"Create two tx before connecting, one relevant to the node another that is not\")\n+        rel_txid = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=filter_peer.watch_script_pubkey, amount=1 * COIN)[\"txid\"]\n+        irr_result = self.wallet.send_to(from_node=self.nodes[0], scriptPubKey=getnewdestination()[1], amount=2 * COIN)\n+        irr_txid = irr_result[\"txid\"]\n+        irr_wtxid = irr_result[\"wtxid\"]\n \n-        self.log.debug(\"Send a mempool msg after connecting and check that the tx is received\")\n+        self.log.info(\"Send a mempool msg after connecting and check that the relevant tx is announced\")\n         self.nodes[0].add_p2p_connection(filter_peer)\n         filter_peer.send_and_ping(filter_peer.watch_filter_init)\n         filter_peer.send_message(msg_mempool())\n-        filter_peer.wait_for_tx(txid)\n+        filter_peer.wait_for_tx(rel_txid)",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/28485#discussion_r1417479419",
      "id" : 1417479419,
      "line" : 149,
      "node_id" : "PRRC_kwDOABII585UfQT7",
      "original_commit_id" : "59e86afbcdfb9dbf52a6580246233ee501c51475",
      "original_line" : 149,
      "original_position" : 26,
      "original_start_line" : 148,
      "path" : "test/functional/p2p_filter.py",
      "position" : 26,
      "pull_request_review_id" : 1767820295,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/28485",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1417479419/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 148,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-12-06T15:32:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1417479419",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/5767891?v=4",
         "events_url" : "https://api.github.com/users/instagibbs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/instagibbs/followers",
         "following_url" : "https://api.github.com/users/instagibbs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/instagibbs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/instagibbs",
         "id" : 5767891,
         "login" : "instagibbs",
         "node_id" : "MDQ6VXNlcjU3Njc4OTE=",
         "organizations_url" : "https://api.github.com/users/instagibbs/orgs",
         "received_events_url" : "https://api.github.com/users/instagibbs/received_events",
         "repos_url" : "https://api.github.com/users/instagibbs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/instagibbs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/instagibbs"
      }
   }
]

[
   {
      "author_association" : "MEMBER",
      "body" : "I'm curious about some back-of-the-envelope estimates on the memory use: block-relay-only, tx-relay, and the node in general. That would help to understand the impact of such a patch.\r\n\r\nAlso, do you think netgroup limitation stuff would need to change? Would these connections be diversified separately, or together with tx-relay peers?\r\n\r\nOtherwise I don't see any issues, so this is probably a good idea. I agree with the next step:\r\n> We need users to adopt the changes to increase the default for inbound block-relay-only connections before we can safely increase the default for outbounds",
      "created_at" : "2023-09-13T08:12:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28462#issuecomment-1717155151",
      "id" : 1717155151,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28462",
      "node_id" : "IC_kwDOABII585mWbVP",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717155151/reactions"
      },
      "updated_at" : "2023-09-13T08:12:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1717155151",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Good question @naumenkogs, I agree that understanding the memory usage is valuable, so I'm working on gathering more specific data. Off hand, the `m_tx_inventory_known_filter` is very large, and there's a significant worst-case amount of memory used for storing txs in the queue for sending to peers. Will report back with my findings once I get some numbers to at least roughly reconcile with each other :) \r\n\r\nOn a different note, when discussing this proposal in person, an idea came up for an alternate approach around handling allocating inbound capacity between block-relay-only and full-relay links. The idea is to identify a weight indicated the proportion of resources used by the two types of connections, and cap the amount of inbounds a node will accept based on a dynamic weighted calculation. \r\n\r\nFor example: \r\nLet's say we select a weighted score of tx-relay 5 to block-relay 1. The current configuration of 115 inbounds could map to 115 * 5 = 575 available. When running, the node would accept both types of connections, and decide if it needs to evict based on 5 * current-tx-conns + 1 * current-block-relay-conns. \r\n\r\nAn advantage of this approach is that the network would utilize inbound capacity more fully. In the current approach, especially when rolling out the increase, there would be unused slots because there's more offered for block-relay connections than the amount of outbound block-relay needed. \r\n\r\nA disadvantage of this approach is that it seems a bit tricky to communicate to node operators exactly what to expect. Also, selecting the ratio can only be a rough estimate because the different connections vary on expected/worst-case usage of memory, bandwidth & cpu. \r\n\r\nWhen changing this approach we would also want to update the inbound eviction logic to make sure that tx-relay connections cannot crowd out block-relay-only connections in a strained network environment.\r\n\r\nCurious to hear if reviewers have thoughts or preferences between the current approach (specific slots allocated to inbound-block-relay connections) or the alternate approach (have a weighted ratio to cap resource usage).",
      "created_at" : "2023-09-29T20:01:39Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28462#issuecomment-1741416555",
      "id" : 1741416555,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28462",
      "node_id" : "IC_kwDOABII585ny-hr",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1741416555/reactions"
      },
      "updated_at" : "2023-09-29T20:34:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1741416555",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@amitiuttarwar Should we consider outbound connections for weightening as well? Sometimes we're only at 6 outbound peers, would that leave more room for inbounds (say at the same time trying to always converge to 8 outbounds if that becomes possible)? Alternatively, if we have no inbounds, should that allow us to have more outbound tx-relay peers?\r\n\r\nAlso, when you say `resource usage`, should we include: memory AND bandwidth? I think @sipa thought about this approach some time ago.\r\n\r\nThis is probably a better way forward, so it's mostly a matter of dev effort allocation. It's a solid project!",
      "created_at" : "2023-10-02T09:52:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28462#issuecomment-1742721990",
      "id" : 1742721990,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28462",
      "node_id" : "IC_kwDOABII585n39PG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742721990/reactions"
      },
      "updated_at" : "2023-10-02T09:52:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742721990",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Should we consider outbound connections for weightening as well? Sometimes we're only at 6 outbound peers, would that leave more room for inbounds (say at the same time trying to always converge to 8 outbounds if that becomes possible)? Alternatively, if we have no inbounds, should that allow us to have more outbound tx-relay peers?\r\n\r\nhmmm, what are the intended benefits of this? \r\n\r\nfrom my POV, I think inbounds and outbounds are best treated separately. a couple reasons come to mind: \r\n- slots to connect to on the network are a shared, limited resource. we want to make sure there's sufficient inbound slots to service all nodes. this is already hard to reason about with opaque info from the network, but would be even more difficult if the amount of outbounds were variable for a node. \r\n- for a node, outbounds are selfishly necessary to ensure connection to the network. for the most part, offering inbounds is offering a service to the network more than individually benefitting (surface area of attack increases significantly) \r\n\r\n> Also, when you say resource usage, should we include: memory AND bandwidth? I think @sipa thought about this approach some time ago.\r\n\r\nyes I think we should evaluate memory, bandwidth, and even cpu usage (which can be more severe in certain network scenarios or worst-case situations) ",
      "created_at" : "2023-10-02T20:21:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28462#issuecomment-1743702949",
      "id" : 1743702949,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28462",
      "node_id" : "IC_kwDOABII585n7sul",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1743702949/reactions"
      },
      "updated_at" : "2023-10-02T20:21:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1743702949",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : ">hmmm, what are the intended benefits of this?\r\n\r\nThe examples I have above.\r\n\r\n1. You have 6 outbound connections and you've been stuck at it for an hour (can't find 2 more). You might want to allow 2 extra inbounds instead (or 10 if they are SPV).\r\n2. You are ready to take 100 inbounds, but it takes a week for them to find you, so in the meantime you can have extra outbound connections.\r\n\r\nCurrently, in both cases, you would have under-use of resources allocated for the node.\r\n\r\nYou may argue that (1) is too exotic, and (2) is rather a waste of resources than a benefit, which is probably true. I will think of more.\r\n\r\n------------\r\n\r\nAn even more advanced thing is letting the peer know \"Keep me inbound only if you're not at capacity, otherwise drop me and let join those who need it more\". \"A non-critical outbound connection\". This would help with waste (2) in a resource-based framework, but also could be useful on its own. I first thought this was incompatible with the current approach to altruism/selfishness of the network, but now I think it changes nothing.",
      "created_at" : "2023-10-03T07:31:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28462#issuecomment-1744364710",
      "id" : 1744364710,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28462",
      "node_id" : "IC_kwDOABII585n-OSm",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1744364710/reactions"
      },
      "updated_at" : "2023-10-03T07:31:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1744364710",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "okay, so here's my understanding: \r\n- the proposal is to calculate number of inbounds & outbounds together, instead of the current system of treating them separately \r\n- the main motivation is to maximize resource utilization of each node \r\n- another motivation would be to increase number of connections in a case where the node is unable to find sufficient outbounds \r\n\r\nmy responses: \r\n- when we talk about resource utilization, it doesn't make sense to treat maximizing available resources as a general value. for example- we don't want a node to be sustained at 100% CPU usage. in terms of available inbound slots, we want to find a balance. individual nodes & the entire p2p network are most robust with strong interconnectedness. however, inbound slots are a shared, limited resource that are important to ensure nodes that are starting up are able to connect to the honest network. so, imo the ideal network state would balance strong connectivity between nodes with having some unused capacity available for new peers. \r\n- the case where a node is stuck at 6 outbound peers and is unable to find any additional would be a problem. I agree that we should be working to ensure that doesn't actually occur. however, in that circumstance having additional inbounds could potentially be more harmful because an adversary could slowly take over a greater percentage of connections, have more influence over the addrman, and eventually partition / eclipse the target node. so imo it makes sense to continue to treat inbounds and outbounds separately, and work on other mitigation factors to ensure this kinda scenario doesn't occur.\r\n- `\"(2) is rather a waste of resources than a benefit,\"` -> agree. the value of network inbound slots is significantly higher than the value of a specific node maximizing connections/CPU/bandwidth/memory...\r\n\r\n> \"A non-critical outbound connection\". \r\n\r\nthat's interesting. what information do you imagine makes a particular inbound slot more valuable to one node vs another? if there are available slots on the network, then there are some attributes (such as diversifying netgroup) that would value them differently, but how would a node anticipate its alternate available options? ",
      "created_at" : "2023-10-04T18:47:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28462#issuecomment-1747452319",
      "id" : 1747452319,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28462",
      "node_id" : "IC_kwDOABII585oKAGf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1747452319/reactions"
      },
      "updated_at" : "2023-10-04T18:47:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1747452319",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1500952?v=4",
         "events_url" : "https://api.github.com/users/amitiuttarwar/events{/privacy}",
         "followers_url" : "https://api.github.com/users/amitiuttarwar/followers",
         "following_url" : "https://api.github.com/users/amitiuttarwar/following{/other_user}",
         "gists_url" : "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/amitiuttarwar",
         "id" : 1500952,
         "login" : "amitiuttarwar",
         "node_id" : "MDQ6VXNlcjE1MDA5NTI=",
         "organizations_url" : "https://api.github.com/users/amitiuttarwar/orgs",
         "received_events_url" : "https://api.github.com/users/amitiuttarwar/received_events",
         "repos_url" : "https://api.github.com/users/amitiuttarwar/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/amitiuttarwar/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/amitiuttarwar"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> Should we consider outbound connections for weightening as well?\r\n\r\nIf we're at ~100 inbounds and ~8 outbounds, the weighting doesn't make much difference -- it just means 108 inbounds vs 100, so under a 10% difference, and likely less. So I don't think it matters much either way -- if either way makes the code simpler, that would be a win, otherwise don't worry about it?\r\n\r\nOTOH, the reason we have ~8 outbounds and ~100 inbounds is because we figure ~10x as many nodes are going to be unreachable for one reason or another (behind a NAT/firewall, misconfigured, mobile and not having a consistent IP, behind an ISP that doesn't allow inbound connections). If that changed (due to increased tor/i2p usage, natpmp availability?) then it might make sense to target more of a balance between inbounds/outbounds. I think that would look more the other way though: ie, you'd be making more than 8 outbound connections if you had fewer than 30 inbounds, eg. I think that's all theoretical though, and we don't currently have a reason to change things along those lines.\r\n\r\nIMHO, YMMV, just my 2sats, etc",
      "created_at" : "2023-10-05T00:50:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28462#issuecomment-1747863249",
      "id" : 1747863249,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28462",
      "node_id" : "IC_kwDOABII585oLkbR",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1747863249/reactions"
      },
      "updated_at" : "2023-10-05T00:50:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1747863249",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@amitiuttarwar \r\n\r\n>what information do you imagine makes a particular inbound slot more valuable to one node vs another?\r\n\r\nI think we're talking about different things. My answer is âÂ Whatever the initiator (inbound peer) says. If the peer says the connection is crucial for them, we prioritize them. Inbound slots are half-altruistic in the first place...\r\nWorst case: bad nodes always ask to prioritize them. Then, we're back to the status quo.",
      "created_at" : "2023-10-20T11:43:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28462#issuecomment-1772584777",
      "id" : 1772584777,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28462",
      "node_id" : "IC_kwDOABII585pp39J",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1772584777/reactions"
      },
      "updated_at" : "2023-10-20T11:43:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1772584777",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/7975071?v=4",
         "events_url" : "https://api.github.com/users/naumenkogs/events{/privacy}",
         "followers_url" : "https://api.github.com/users/naumenkogs/followers",
         "following_url" : "https://api.github.com/users/naumenkogs/following{/other_user}",
         "gists_url" : "https://api.github.com/users/naumenkogs/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/naumenkogs",
         "id" : 7975071,
         "login" : "naumenkogs",
         "node_id" : "MDQ6VXNlcjc5NzUwNzE=",
         "organizations_url" : "https://api.github.com/users/naumenkogs/orgs",
         "received_events_url" : "https://api.github.com/users/naumenkogs/received_events",
         "repos_url" : "https://api.github.com/users/naumenkogs/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/naumenkogs/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/naumenkogs/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/naumenkogs"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> @amitiuttarwar\r\n> \r\n> > what information do you imagine makes a particular inbound slot more valuable to one node vs another?\r\n> \r\n> I think we're talking about different things. My answer is â Whatever the initiator (inbound peer) says. If the peer says the connection is crucial for them, we prioritize them. Inbound slots are half-altruistic in the first place... Worst case: bad nodes always ask to prioritize them. Then, we're back to the status quo.\r\n\r\nWorst case is bad nodes ask to be prioritised and good nodes don't, and we end up not accepting inbound connections from good nodes. Having outbound connections is crucial, but having an outbound connection to a particular node should only matter if you have a meaningful relationship with that node, in which case I think you should just be whitelisting the connection on one (both) side(s) in order to prioritise it in whatever way you like.",
      "created_at" : "2023-10-21T03:07:28Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28462#issuecomment-1773628825",
      "id" : 1773628825,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28462",
      "node_id" : "IC_kwDOABII585pt22Z",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1773628825/reactions"
      },
      "updated_at" : "2023-10-21T03:07:28Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1773628825",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/127186?v=4",
         "events_url" : "https://api.github.com/users/ajtowns/events{/privacy}",
         "followers_url" : "https://api.github.com/users/ajtowns/followers",
         "following_url" : "https://api.github.com/users/ajtowns/following{/other_user}",
         "gists_url" : "https://api.github.com/users/ajtowns/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/ajtowns",
         "id" : 127186,
         "login" : "ajtowns",
         "node_id" : "MDQ6VXNlcjEyNzE4Ng==",
         "organizations_url" : "https://api.github.com/users/ajtowns/orgs",
         "received_events_url" : "https://api.github.com/users/ajtowns/received_events",
         "repos_url" : "https://api.github.com/users/ajtowns/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/ajtowns/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/ajtowns"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> #### Estimating the number of reachable clearnet nodes (per sept 2023)\r\n> 6155 ([bitnodes](https://bitnodes.io/nodes/))\r\n> 8509 ([KIT](https://www.dsn.kastel.kit.edu/bitcoin/data/churn0-v.gpd))\r\n> 3862 ([Luke Dashjr](https://luke.dashjr.org/programs/bitcoin/files/charts/historical.html))\r\n> 7910 ([21 Ninja](https://21.ninja/reachable-nodes/nodes-by-net-type/))\r\n\r\nI think the misnomer \"number of reachable nodes\" is finally coming back to haunt us, since these numbers actually represent the number of reachable clearnet addresses, not nodes. Given that a node can connect to the Bitcoin network using multiple network types (as well as multiple addresses of the same network type), estimates for network-wide inbound slots based on these \"node\" counts will be too optimistic.\r\n\r\nI have tried estimating the number of actual nodes under the moniker [number of unique Bitcoin nodes here](https://21.ninja/unique-reachable-nodes/nodes-by-net-type/) (feel free to double-check the [methodology](https://21.ninja/unique-reachable-nodes/methodology/)).\r\n\r\nTo get an estimate for the number of clearnet inbound slots, clearnet-only nodes can simply be added up (~1,100 IPv4, ~430 IPv6 and ~2,300 IPv4/IPv6 nodes) and multiplied by ~115; mixed clearnet-darknet nodes' inbound slots, however, will not be exclusively available to clearnet nodes because a share of them will be occupied by darknet nodes.\r\n\r\nLacking information about the network composition of unreachable nodes, the distribution of reachable nodes could serve as makeshift proxy for the network-type ratio of incoming connections: for instance, if there's ~11k reachable Tor nodes, but only ~6k reachable IPv4 ones, 65% of an IPv4/Onion node's inbound slots could be estimated to be occupied by Tor connections while only the remaining 35% would be available to IPv4 nodes.\r\n\r\nA quick back-of-the-envelope calculation using these assumptions results in the equivalent of only 5,400 reachable clearnet nodes. Assuming the 40,000 number for the number of unreachable nodes is correct, this, unfortunately, would raise the required additional inbound slots for each increment to default outbounds from six to eight or nine (45400/5400=8.4).",
      "created_at" : "2023-11-07T10:45:45Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/issues/28462#issuecomment-1798257179",
      "id" : 1798257179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/28462",
      "node_id" : "IC_kwDOABII585rLzob",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1798257179/reactions"
      },
      "updated_at" : "2023-11-07T10:49:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1798257179",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/72414353?v=4",
         "events_url" : "https://api.github.com/users/virtu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/virtu/followers",
         "following_url" : "https://api.github.com/users/virtu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/virtu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/virtu",
         "id" : 72414353,
         "login" : "virtu",
         "node_id" : "MDQ6VXNlcjcyNDE0MzUz",
         "organizations_url" : "https://api.github.com/users/virtu/orgs",
         "received_events_url" : "https://api.github.com/users/virtu/received_events",
         "repos_url" : "https://api.github.com/users/virtu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/virtu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/virtu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/virtu"
      }
   }
]

[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--006a51241073e994b41acfe9ec718e94-->\n### Code Coverage\nFor detailed information about the code coverage, see the [test coverage report](https://corecheck.dev/bitcoin/bitcoin/pulls/26593).\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [jb55](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1331016229), [vasild](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1334856799), [kouloumos](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1353541450), [willcl-ark](https://github.com/bitcoin/bitcoin/pull/26593#pullrequestreview-1345973179) |\n| Approach ACK | [virtu](https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1346186050) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#29432](https://github.com/bitcoin/bitcoin/pull/29432) (Stratum v2 Template Provider (take 3) by Sjors)\n* [#29071](https://github.com/bitcoin/bitcoin/pull/29071) (refactor: Remove Span operator==, Use std::ranges::equal by maflcko)\n* [#28984](https://github.com/bitcoin/bitcoin/pull/28984) (Cluster size 2 package rbf by instagibbs)\n* [#28886](https://github.com/bitcoin/bitcoin/pull/28886) (refactor: Replace sets of txiter with CTxMemPoolEntryRefs by TheCharlatan)\n* [#28280](https://github.com/bitcoin/bitcoin/pull/28280) (Don't empty dbcache on prune flushes: >30% faster IBD by andrewtoth)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2022-11-28T20:50:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1329746317",
      "id" : 1329746317,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585PQlGN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1329746317/reactions"
      },
      "updated_at" : "2024-03-07T07:43:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1329746317",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034160141"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034160141"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Aren't variadic macros (at least in this form) an extension, not standard C++?",
      "commit_id" : "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "created_at" : "2022-11-28T23:39:04Z",
      "diff_hunk" : "@@ -7,39 +7,58 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034160141",
      "id" : 1034160141,
      "line" : 52,
      "node_id" : "PRRC_kwDOABII5849pAgN",
      "original_commit_id" : "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "original_line" : 52,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 59,
      "pull_request_review_id" : 1196700835,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034160141/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-28T23:39:05Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034160141",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/1095675?v=4",
         "events_url" : "https://api.github.com/users/luke-jr/events{/privacy}",
         "followers_url" : "https://api.github.com/users/luke-jr/followers",
         "following_url" : "https://api.github.com/users/luke-jr/following{/other_user}",
         "gists_url" : "https://api.github.com/users/luke-jr/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/luke-jr",
         "id" : 1095675,
         "login" : "luke-jr",
         "node_id" : "MDQ6VXNlcjEwOTU2NzU=",
         "organizations_url" : "https://api.github.com/users/luke-jr/orgs",
         "received_events_url" : "https://api.github.com/users/luke-jr/received_events",
         "repos_url" : "https://api.github.com/users/luke-jr/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/luke-jr/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/luke-jr"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034419006"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034419006"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "TIL, could change to `...` and `__VA_ARGS__` if needed",
      "commit_id" : "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "created_at" : "2022-11-29T08:11:15Z",
      "diff_hunk" : "@@ -7,39 +7,58 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034419006",
      "id" : 1034419006,
      "in_reply_to_id" : 1034160141,
      "line" : 52,
      "node_id" : "PRRC_kwDOABII5849p_s-",
      "original_commit_id" : "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "original_line" : 52,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 59,
      "pull_request_review_id" : 1197057845,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034419006/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-29T08:11:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034419006",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034548969"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034548969"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Thinking about it: We might not need an extra `TRACEPOINT_UNCHECKED` macro. We can also use the `TRACEPOINT` in all places where we'd use the unchecked one. This would mean would do two `TRACEPOINT_ACTIVE` checks, but these are extremely cheap and might even be optimized to one by the compiler. \r\n\r\nDropping the unchecked version results in is a smaller, better internal tracepoint API and removes the possibility that someone uses the unchecked version but doesn't gate it.",
      "commit_id" : "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "created_at" : "2022-11-29T10:08:06Z",
      "diff_hunk" : "@@ -11,16 +11,54 @@\n // the optional variadic macros to define tracepoints.\n #define SDT_USE_VARIADIC 1\n \n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-// A USDT tracepoint with zero to twelve arguments.\n-#define TRACEPOINT(context, event, args...) STAP_PROBEV(context, event, args)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034548969",
      "id" : 1034548969,
      "line" : 52,
      "node_id" : "PRRC_kwDOABII5849qfbp",
      "original_commit_id" : "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "original_line" : 52,
      "original_position" : 44,
      "original_start_line" : 42,
      "path" : "src/util/trace.h",
      "position" : 44,
      "pull_request_review_id" : 1197254044,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034548969/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 42,
      "start_side" : "RIGHT",
      "updated_at" : "2022-11-29T10:21:07Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034548969",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034564335"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034564335"
         }
      },
      "author_association" : "MEMBER",
      "body" : "We want to avoid extensions where possible: https://github.com/bitcoin/bitcoin/blob/d415b7261c05dafbc3e65eea72d270b2bed0958b/configure.ac#L94",
      "commit_id" : "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "created_at" : "2022-11-29T10:22:21Z",
      "diff_hunk" : "@@ -7,39 +7,58 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it **IS** checked that\n+// the tracepoint is active before preparing its arguments. Use the\n+// TRACEPOINT_UNCHECKED macro if you want to manually check that the tracepoint\n+// is active.\n+#define TRACEPOINT(context, event, args...) \\\n+    if (TRACEPOINT_ACTIVE(context, event)) \\\n+        STAP_PROBEV(context, event, args)\n+\n+// A USDT tracepoint with zero to twelve arguments. Here, it is **NOT** checked\n+// that the tracepoint is active before preparing its arguments. Use this macro\n+// if you want to, for example, prepare expensive tracepoint arguments over\n+// multiple lines. Example usage:\n+//\n+//  if (TRACEPOINT_ACTIVE(context, event)) {\n+//      result = slightly_expensive_calulation();\n+//      TRACEPOINT_UNCHECKED(context, event, result);\n+//  }\n+//\n+#define TRACEPOINT_UNCHECKED(context, event, args...) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034564335",
      "id" : 1034564335,
      "in_reply_to_id" : 1034160141,
      "line" : 52,
      "node_id" : "PRRC_kwDOABII5849qjLv",
      "original_commit_id" : "94331ba3cc8e5b2a3453e796a6988b668fd34668",
      "original_line" : 52,
      "original_position" : 59,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 59,
      "pull_request_review_id" : 1197276566,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034564335/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "updated_at" : "2022-11-29T10:22:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1034564335",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "- Addressed https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034160141 by using `__VA_ARGS__`. Also using a separate TRACEPOINT0 macro for tracepoints without arguments, as using the TRACEPOINT macro without arguments is only be possible with GCC (clang warns that we are using gcc extensions). Tested with both clang and gcc.\r\n- Adressed https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034548969 by dropping the `TRACEPOINT_UNCHECKED` macro.\r\n- Added unit tests for the TRACEPOINT macros. The tracepoints in the unit tests don't do anything in particular, but the tests show that the macros work. Through the CI we cover `ENABLE_TRACING` being defined and undefined. The test case `test_tracepoint_check_if_attached` also shows that the `TRACEPOINT_ACTIVE` macro is not broken (it's tested that it's working in the functional tests).",
      "created_at" : "2022-11-29T16:28:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1330914436",
      "id" : 1330914436,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585PVCSE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1330914436/reactions"
      },
      "updated_at" : "2022-11-29T17:27:31Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1330914436",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "genius. Concept ACK",
      "created_at" : "2022-11-29T17:25:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1331016229",
      "id" : 1331016229,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585PVbIl",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1331016229/reactions"
      },
      "updated_at" : "2022-11-29T17:25:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1331016229",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/45598?v=4",
         "events_url" : "https://api.github.com/users/jb55/events{/privacy}",
         "followers_url" : "https://api.github.com/users/jb55/followers",
         "following_url" : "https://api.github.com/users/jb55/following{/other_user}",
         "gists_url" : "https://api.github.com/users/jb55/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/jb55",
         "id" : 45598,
         "login" : "jb55",
         "node_id" : "MDQ6VXNlcjQ1NTk4",
         "organizations_url" : "https://api.github.com/users/jb55/orgs",
         "received_events_url" : "https://api.github.com/users/jb55/received_events",
         "repos_url" : "https://api.github.com/users/jb55/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/jb55/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/jb55/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/jb55"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2022-12-02T07:30:12Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1334856799",
      "id" : 1334856799,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585PkExf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1334856799/reactions"
      },
      "updated_at" : "2022-12-02T07:30:12Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1334856799",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/266751?v=4",
         "events_url" : "https://api.github.com/users/vasild/events{/privacy}",
         "followers_url" : "https://api.github.com/users/vasild/followers",
         "following_url" : "https://api.github.com/users/vasild/following{/other_user}",
         "gists_url" : "https://api.github.com/users/vasild/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/vasild",
         "id" : 266751,
         "login" : "vasild",
         "node_id" : "MDQ6VXNlcjI2Njc1MQ==",
         "organizations_url" : "https://api.github.com/users/vasild/orgs",
         "received_events_url" : "https://api.github.com/users/vasild/received_events",
         "repos_url" : "https://api.github.com/users/vasild/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/vasild/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/vasild/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/vasild"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "Approach ACK\r\n\r\nSuper cool stuff. This effectively removes **any** runtime overhead of tracepoints on modern processors with branch prediction and speculative execution when no probes are attached .\r\n\r\nSome feedback on testing with [61ca0f9](https://github.com/bitcoin/bitcoin/commit/61ca0f99dbbe7c83495c4f346bc91eceaf07e7ea):\r\n\r\n- functional tests executed successfully on x86_64 and arm64\r\n- demo scripts in `contrib/tracing`: right now, `bpftrace` scripts work, `bcc` scripts don't\r\n- generated assembly looks as expected:\r\n    - tracing code is semaphore-gated using compare and branch instructions:\r\n \r\n        ```\r\n        # x86_64\r\n       cmp    WORD PTR [rip+0x8f816b],0x0        # 0x55d32c25d6c0 <net_outbound_message_semaphore>\r\n       jne    0x55d32b965800 <_ZN8CConnman11PushMessageEP5CNodeO17CSerializedNetMsg+1488>\r\n\r\n       # arm64\r\n       ldrh    w1, [x0, #1776]\r\n       cbnz    w1, 0xaaaab2413fa4 <_ZN8CConnman11PushMessageEP5CNodeO17CSerializedNetMsg+1228>\r\n       ```\r\n    - tracing code uses `nop` when no probe is attached vs. `int3` (x86_64) / `brk` (arm64) to trap when probe is attached\r\n\r\n- used `gdb` to inspect semaphores: they are correctly initialized to zero and set to one if one or more(!) probes are attached. The documentation I read stated semaphores act as probe reference counters, so I was expecting semaphore values to reflect the number of probes. However, it looks like semaphores and counters were separated. This does not impact correct behavior though:\r\n\r\n  ```\r\n  (gdb) # no probe attached\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0000\r\n  (gdb) # started one instance of contrib/tracing/log_p2p_traffic.bt\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0001\r\n  (gdb) # started another instance of contrib/tracing/log_p2p_traffic.bt\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0001\r\n  (gdb) # stopped first instance\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0001\r\n  (gdb) # stopped second instance\r\n  (gdb) x/hx &net_outbound_message_semaphore\r\n  0xaaaacc8506f0 <net_outbound_message_semaphore>:        0x0000\r\n  ```",
      "created_at" : "2022-12-12T09:52:55Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1346186050",
      "id" : 1346186050,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585QPStC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1346186050/reactions"
      },
      "updated_at" : "2022-12-12T09:52:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1346186050",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/72414353?v=4",
         "events_url" : "https://api.github.com/users/virtu/events{/privacy}",
         "followers_url" : "https://api.github.com/users/virtu/followers",
         "following_url" : "https://api.github.com/users/virtu/following{/other_user}",
         "gists_url" : "https://api.github.com/users/virtu/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/virtu",
         "id" : 72414353,
         "login" : "virtu",
         "node_id" : "MDQ6VXNlcjcyNDE0MzUz",
         "organizations_url" : "https://api.github.com/users/virtu/orgs",
         "received_events_url" : "https://api.github.com/users/virtu/received_events",
         "repos_url" : "https://api.github.com/users/virtu/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/virtu/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/virtu/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/virtu"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the detailed review and testing. I've too noticed that the current example bcc scripts have a problem with the semaphores. The functional tests, also using bcc, work as intended as they use the PID to attach to the bitcoind process. Will add a commit to allow running the example scripts by specifying a PID.\r\n\r\n",
      "created_at" : "2022-12-13T08:34:36Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1347928306",
      "id" : 1347928306,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585QV8Dy",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1347928306/reactions"
      },
      "updated_at" : "2022-12-13T08:34:36Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1347928306",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK!\r\nI've though about something similar while working on https://github.com/bitcoin/bitcoin/pull/25541 and even more when you mentioned performance impact on https://github.com/bitcoin/bitcoin/pull/25832.",
      "created_at" : "2022-12-15T18:37:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1353541450",
      "id" : 1353541450,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585QrWdK",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1353541450/reactions"
      },
      "updated_at" : "2022-12-15T18:37:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1353541450",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "> demo scripts in contrib/tracing: right now, bpftrace scripts work, bcc scripts don't -- (https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1346186050)\r\n\r\nRebased and added a commit that fixes the bcc example scripts by using the PID of bitcoind instead of the file path. We already do this in the tests (https://github.com/bitcoin/bitcoin/commit/220a5a2841172a07d6d7849596316f0e0933e272).",
      "created_at" : "2022-12-20T12:41:14Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1359298538",
      "id" : 1359298538,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585RBT_q",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1359298538/reactions"
      },
      "updated_at" : "2022-12-20T12:41:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1359298538",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-01-04T00:28:49Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1370360602",
      "id" : 1370360602,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585Rrgsa",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1370360602/reactions"
      },
      "updated_at" : "2023-01-04T00:28:49Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1370360602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-03-08T08:56:33Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1459779806",
      "id" : 1459779806,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585XAnje",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1459779806/reactions"
      },
      "updated_at" : "2023-03-08T08:56:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1459779806",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1140252968"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140252968"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Is this test just checking that there is no error thrown when using the macro in this way?",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-03-17T13:40:48Z",
      "diff_hunk" : "@@ -0,0 +1,32 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <util/trace.h>\n+\n+TRACEPOINT_SEMAPHORE(test, zero_args);\n+TRACEPOINT_SEMAPHORE(test, one_arg);\n+TRACEPOINT_SEMAPHORE(test, six_args);\n+TRACEPOINT_SEMAPHORE(test, twelve_args);\n+\n+BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\n+{\n+  TRACEPOINT0(test, zero_args);\n+  BOOST_CHECK(true);\n+}\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_n_args)\n+{\n+  TRACEPOINT(test, one_arg, 1);\n+  TRACEPOINT(test, six_args, 1, 2, 3, 4, 5, 6);\n+  TRACEPOINT(test, twelve_args, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n+  BOOST_CHECK(true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1140252968",
      "id" : 1140252968,
      "line" : 30,
      "node_id" : "PRRC_kwDOABII585D9uEo",
      "original_commit_id" : "38df8dd06516576e9db21ff2899d083232ce8846",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/test/util_trace_tests.cpp",
      "position" : 30,
      "pull_request_review_id" : 1345973179,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140252968/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-17T16:31:39Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140252968",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1140555021"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140555021"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Yes, from the OP: \"Also adding unit tests that include all tracepoint macros to make sure there are no compiler problems with them (e.g. some varadiac extension not supported).\" I added them after addressing https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1034160141\r\n\r\nBut I think it makes sense to document this in the unit tests with a comment too. Will add on next push.",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-03-17T18:06:38Z",
      "diff_hunk" : "@@ -0,0 +1,32 @@\n+// Copyright (c) 2022 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <util/trace.h>\n+\n+TRACEPOINT_SEMAPHORE(test, zero_args);\n+TRACEPOINT_SEMAPHORE(test, one_arg);\n+TRACEPOINT_SEMAPHORE(test, six_args);\n+TRACEPOINT_SEMAPHORE(test, twelve_args);\n+\n+BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\n+{\n+  TRACEPOINT0(test, zero_args);\n+  BOOST_CHECK(true);\n+}\n+\n+BOOST_AUTO_TEST_CASE(test_tracepoint_n_args)\n+{\n+  TRACEPOINT(test, one_arg, 1);\n+  TRACEPOINT(test, six_args, 1, 2, 3, 4, 5, 6);\n+  TRACEPOINT(test, twelve_args, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);\n+  BOOST_CHECK(true);",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1140555021",
      "id" : 1140555021,
      "in_reply_to_id" : 1140252968,
      "line" : 30,
      "node_id" : "PRRC_kwDOABII585D-30N",
      "original_commit_id" : "38df8dd06516576e9db21ff2899d083232ce8846",
      "original_line" : 29,
      "original_position" : 29,
      "original_start_line" : null,
      "path" : "src/test/util_trace_tests.cpp",
      "position" : 30,
      "pull_request_review_id" : 1346453107,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140555021/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-17T18:06:38Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1140555021",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1141968668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141968668"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Why do we need this special-cased 0 arg tracepoint? ISTM that the systemtap variadic supports 0 arg calls:\r\n\r\nhttps://github.com/jav/systemtap/blob/2da355dd02a18bf4f67e2ceeb504b351b4bd5b83/includes/sys/sdt.h#L291-L303",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-03-20T11:18:45Z",
      "diff_hunk" : "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1141968668",
      "id" : 1141968668,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII585EEQ8c",
      "original_commit_id" : "38df8dd06516576e9db21ff2899d083232ce8846",
      "original_line" : 17,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 42,
      "pull_request_review_id" : 1348309775,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141968668/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-20T11:19:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1141968668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6606587?v=4",
         "events_url" : "https://api.github.com/users/willcl-ark/events{/privacy}",
         "followers_url" : "https://api.github.com/users/willcl-ark/followers",
         "following_url" : "https://api.github.com/users/willcl-ark/following{/other_user}",
         "gists_url" : "https://api.github.com/users/willcl-ark/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/willcl-ark",
         "id" : 6606587,
         "login" : "willcl-ark",
         "node_id" : "MDQ6VXNlcjY2MDY1ODc=",
         "organizations_url" : "https://api.github.com/users/willcl-ark/orgs",
         "received_events_url" : "https://api.github.com/users/willcl-ark/received_events",
         "repos_url" : "https://api.github.com/users/willcl-ark/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/willcl-ark/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/willcl-ark/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/willcl-ark"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1142351647"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142351647"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "fwiw: This is the \"source\", I think the repo you linked to is an outdated fork: https://sourceware.org/git/?p=systemtap.git;a=blob;f=includes/sys/sdt.h;h=4075a5ff1c3f09c3913615e62840595efe003c6d;hb=HEAD#l404\r\n\r\nBut yes, reading that comment I'd agree that it should work. I've added the following to try it but it doesn't compile. IIRC that's the reason why I added the `TRACEPOINT0()`.\r\n\r\n```patch\r\ndiff --git a/src/test/util_trace_tests.cpp b/src/test/util_trace_tests.cpp\r\nindex 6e3e846b4..488d7b669 100644\r\n--- a/src/test/util_trace_tests.cpp\r\n+++ b/src/test/util_trace_tests.cpp\r\n@@ -9,6 +9,7 @@\r\n #include <util/trace.h>\r\n\r\n TRACEPOINT_SEMAPHORE(test, zero_args);\r\n+TRACEPOINT_SEMAPHORE(test, zero_args2);\r\n TRACEPOINT_SEMAPHORE(test, one_arg);\r\n TRACEPOINT_SEMAPHORE(test, six_args);\r\n TRACEPOINT_SEMAPHORE(test, twelve_args);\r\n@@ -19,6 +20,7 @@ BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\r\n BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\r\n {\r\n   TRACEPOINT0(test, zero_args);\r\n+  TRACEPOINT(test, zero_args2);\r\n   BOOST_CHECK(true);\r\n }\r\n```\r\n\r\n```console\r\nIn file included from ./util/trace.h:22,\r\n                 from test/util_trace_tests.cpp:9:\r\ntest/util_trace_tests.cpp: In member function âvoid util_trace_tests::test_tracepoint_zero_args::test_method()â:\r\n./util/trace.h:43:9: error: expected primary-expression before â)â token\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro âTRACEPOINTâ\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\n./util/trace.h:43:9: error: template argument 1 is invalid\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro âTRACEPOINTâ\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\n./util/trace.h:43:9: error: expected primary-expression before â)â token\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro âTRACEPOINTâ\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\n./util/trace.h:43:9: error: expected primary-expression before â)â token\r\n   43 |         STAP_PROBEV(context, event, __VA_ARGS__)\r\n      |         ^~~~~~~~~~~\r\ntest/util_trace_tests.cpp:23:3: note: in expansion of macro âTRACEPOINTâ\r\n   23 |   TRACEPOINT(test, zero_args2);\r\n      |   ^~~~~~~~~~\r\nmake[2]: *** [Makefile:18883: test/test_bitcoin-util_trace_tests.o] Error 1\r\nmake[2]: *** Waiting for unfinished jobs....\r\nmake[2]: Leaving directory '..'\r\nmake[1]: *** [Makefile:19418: all-recursive] Error 1\r\nmake[1]: Leaving directory '..'\r\nmake: *** [Makefile:816: all-recursive] Error 1\r\n```",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-03-20T15:58:51Z",
      "diff_hunk" : "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1142351647",
      "id" : 1142351647,
      "in_reply_to_id" : 1141968668,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII585EFucf",
      "original_commit_id" : "38df8dd06516576e9db21ff2899d083232ce8846",
      "original_line" : 17,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 42,
      "pull_request_review_id" : 1348901713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142351647/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-20T16:00:55Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142351647",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1142353299"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142353299"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Plan to revisit this once I have the time to experiment",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-03-20T15:59:57Z",
      "diff_hunk" : "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1142353299",
      "id" : 1142353299,
      "in_reply_to_id" : 1141968668,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII585EFu2T",
      "original_commit_id" : "38df8dd06516576e9db21ff2899d083232ce8846",
      "original_line" : 17,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 42,
      "pull_request_review_id" : 1348904160,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142353299/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-03-20T15:59:57Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1142353299",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155351001"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155351001"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Macro magic to the rescue! This works for me:\r\n\r\n```patch\r\ndiff --git a/src/test/util_trace_tests.cpp b/src/test/util_trace_tests.cpp\r\nindex 6e3e846b4f..952b9cc6e4 100644\r\n--- a/src/test/util_trace_tests.cpp\r\n+++ b/src/test/util_trace_tests.cpp\r\n@@ -18,7 +18,7 @@ BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\r\n \r\n BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\r\n {\r\n-  TRACEPOINT0(test, zero_args);\r\n+  TRACEPOINT(test, zero_args);\r\n   BOOST_CHECK(true);\r\n }\r\n \r\ndiff --git a/src/util/trace.h b/src/util/trace.h\r\nindex 816d8c295d..3a0aed391b 100644\r\n--- a/src/util/trace.h\r\n+++ b/src/util/trace.h\r\n@@ -29,25 +29,19 @@\r\n     unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\r\n \r\n // Returns true if something is attached to the tracepoint.\r\n-#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\r\n-\r\n-// A USDT tracepoint with no arguments.\r\n-#define TRACEPOINT0(context, event) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBE(context, event)\r\n+#define TRACEPOINT_ACTIVE(context, event, ...) context##_##event##_semaphore > 0\r\n \r\n // A USDT tracepoint with one to twelve arguments. It's checked that the\r\n // tracepoint is active before preparing its arguments.\r\n-#define TRACEPOINT(context, event, ...) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBEV(context, event, __VA_ARGS__)\r\n+#define TRACEPOINT(context, ...) \\\r\n+    if (TRACEPOINT_ACTIVE(context, __VA_ARGS__)) \\\r\n+        STAP_PROBEV(context, __VA_ARGS__)\r\n \r\n #else\r\n \r\n #define TRACEPOINT_SEMAPHORE(context, event)\r\n #define TRACEPOINT_ACTIVE(context, event) false\r\n-#define TRACEPOINT0(context, event)\r\n-#define TRACEPOINT(context, event, ...)\r\n+#define TRACEPOINT(context, ...)\r\n \r\n #endif // ENABLE_TRACING\r\n ```\r\n\r\nThe trick is to make `event` part of the variadic macro, so that there's always at least 1 argument in the variadic",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-04-02T17:52:32Z",
      "diff_hunk" : "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155351001",
      "id" : 1155351001,
      "in_reply_to_id" : 1141968668,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII585E3UHZ",
      "original_commit_id" : "38df8dd06516576e9db21ff2899d083232ce8846",
      "original_line" : 17,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 42,
      "pull_request_review_id" : 1368120240,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 1,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155351001/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-02T17:52:33Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155351001",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155488768"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155488768"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Based on @willcl-ark's comment https://github.com/bitcoin/bitcoin/issues/26916#issuecomment-1480997053 here is a version that works without any warnings in clang and gcc:\r\n\r\n```patch\r\ndiff --git a/src/test/util_trace_tests.cpp b/src/test/util_trace_tests.cpp\r\nindex 6e3e846b4f..952b9cc6e4 100644\r\n--- a/src/test/util_trace_tests.cpp\r\n+++ b/src/test/util_trace_tests.cpp\r\n@@ -18,7 +18,7 @@ BOOST_FIXTURE_TEST_SUITE(util_trace_tests, BasicTestingSetup)\r\n \r\n BOOST_AUTO_TEST_CASE(test_tracepoint_zero_args)\r\n {\r\n-  TRACEPOINT0(test, zero_args);\r\n+  TRACEPOINT(test, zero_args);\r\n   BOOST_CHECK(true);\r\n }\r\n \r\ndiff --git a/src/util/trace.h b/src/util/trace.h\r\nindex 816d8c295d..aa88771b1e 100644\r\n--- a/src/util/trace.h\r\n+++ b/src/util/trace.h\r\n@@ -26,28 +26,41 @@\r\n // upon attaching to the tracepoint and decremented when detaching. This needs\r\n // to be a global variable. It's placed in the '.probes' ELF section.\r\n #define TRACEPOINT_SEMAPHORE(context, event) \\\r\n-    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\r\n+    unsigned short context##_##event##_semaphore __attribute__((section(\".probes\")))\r\n+\r\n+// Extract the first argument of a variable number of arguments, even without warning\r\n+// when only 1 argument is provided\r\n+#define TRACEPOINT_FIRST_ARG(...) TRACEPOINT_FIRST_ARG_HELPER(__VA_ARGS__, dummy)\r\n+#define TRACEPOINT_FIRST_ARG_HELPER(arg1, ...) arg1\r\n \r\n // Returns true if something is attached to the tracepoint.\r\n-#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0\r\n+#define TRACEPOINT_ACTIVE(context, event) TRACEPOINT_ACTIVE_HELPER(context, event)\r\n+#define TRACEPOINT_ACTIVE_HELPER(context, event) context##_##event##_semaphore > 0\r\n \r\n-// A USDT tracepoint with no arguments.\r\n-#define TRACEPOINT0(context, event) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBE(context, event)\r\n+#if defined(__clang__)\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_PUSH _Pragma(\"clang diagnostic push\") _Pragma(\"clang diagnostic ignored \\\"-Wgnu-zero-variadic-macro-arguments\\\"\")\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_POP _Pragma(\"clang diagnostic pop\")\r\n+#else\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_PUSH\r\n+#define TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_POP\r\n+#endif\r\n \r\n // A USDT tracepoint with one to twelve arguments. It's checked that the\r\n // tracepoint is active before preparing its arguments.\r\n-#define TRACEPOINT(context, event, ...) \\\r\n-    if (TRACEPOINT_ACTIVE(context, event)) \\\r\n-        STAP_PROBEV(context, event, __VA_ARGS__)\r\n+#define TRACEPOINT(context, ...)                                             \\\r\n+    do {                                                                     \\\r\n+        if (TRACEPOINT_ACTIVE(context, TRACEPOINT_FIRST_ARG(__VA_ARGS__))) { \\\r\n+            TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_PUSH                       \\\r\n+            STAP_PROBEV(context, __VA_ARGS__);                               \\\r\n+            TRACEPOINT_DISABLE_WARN_ZERO_VARIADIC_POP                        \\\r\n+        }                                                                    \\\r\n+    } while (0)\r\n \r\n #else\r\n \r\n #define TRACEPOINT_SEMAPHORE(context, event)\r\n #define TRACEPOINT_ACTIVE(context, event) false\r\n-#define TRACEPOINT0(context, event)\r\n-#define TRACEPOINT(context, event, ...)\r\n+#define TRACEPOINT(context, ...)\r\n \r\n #endif // ENABLE_TRACING\r\n```",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-04-03T05:15:14Z",
      "diff_hunk" : "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155488768",
      "id" : 1155488768,
      "in_reply_to_id" : 1141968668,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII585E31wA",
      "original_commit_id" : "38df8dd06516576e9db21ff2899d083232ce8846",
      "original_line" : 17,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 42,
      "pull_request_review_id" : 1368298423,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155488768/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-03T05:15:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1155488768",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1161156029"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161156029"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Regarding listing available tracepoints, there is another addition when using `info probes` in `gdb`, which now also shows semaphores. A snippet from my binary:\r\n```\r\n(gdb) info probes\r\nType Provider   Name             Where              Semaphore          Object\r\nstap net        inbound_message  0x00005625b02d4106 0x0000000000ab1724 /src/bitcoind\r\nstap net        outbound_message 0x00005625b029f395 0x0000000000ab1722  /src/bitcoind\r\nstap validation block_connected  0x00005625b04b914d 0x0000000000ab1720 /src/bitcoind\r\n```",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-04-08T20:44:07Z",
      "diff_hunk" : "@@ -336,7 +387,7 @@ Displaying notes found in: .note.stapsdt\n   stapsdt              0x0000005d\tNT_STAPSDT (SystemTap probe descriptors)\n     Provider: net\n     Name: outbound_message\n-    Location: 0x0000000000107c05, Base: 0x0000000000579c90, Semaphore: 0x0000000000000000\n+    Location: 0x0000000000107c05, Base: 0x0000000000579c90, Semaphore: 0x0000000000a69780",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1161156029",
      "id" : 1161156029,
      "line" : 390,
      "node_id" : "PRRC_kwDOABII585FNdW9",
      "original_commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_line" : 390,
      "original_position" : 173,
      "original_start_line" : null,
      "path" : "doc/tracing.md",
      "position" : 173,
      "pull_request_review_id" : 1376804705,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161156029/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-08T21:41:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161156029",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1161158136"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161158136"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "I see that there is a `PASTE` macro that can be used instead of directly using the token-pasting operator (##), but I can't figure out why it exists and if it offers any advantage. \r\nhttps://github.com/bitcoin/bitcoin/blob/db720b5a703c90625fa7a4773bd2db5672427cbe/src/util/macros.h#L8 ",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-04-08T21:06:02Z",
      "diff_hunk" : "@@ -7,39 +7,48 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1161158136",
      "id" : 1161158136,
      "line" : 32,
      "node_id" : "PRRC_kwDOABII585FNd34",
      "original_commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_line" : 32,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 39,
      "pull_request_review_id" : 1376804705,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161158136/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-08T21:41:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1161158136",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/18506343?v=4",
         "events_url" : "https://api.github.com/users/kouloumos/events{/privacy}",
         "followers_url" : "https://api.github.com/users/kouloumos/followers",
         "following_url" : "https://api.github.com/users/kouloumos/following{/other_user}",
         "gists_url" : "https://api.github.com/users/kouloumos/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/kouloumos",
         "id" : 18506343,
         "login" : "kouloumos",
         "node_id" : "MDQ6VXNlcjE4NTA2MzQz",
         "organizations_url" : "https://api.github.com/users/kouloumos/orgs",
         "received_events_url" : "https://api.github.com/users/kouloumos/received_events",
         "repos_url" : "https://api.github.com/users/kouloumos/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/kouloumos/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/kouloumos/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/kouloumos"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1162043929"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162043929"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "> I see that there is aÂ PASTEÂ macro that can be used instead of directly using the token-pasting operator (##), but I can't figure out why it exists and if it offers any advantage.\nhttps://github.com/bitcoin/bitcoin/blob/db720b5a703c90625fa7a4773bd2db5672427cbe/src/util/macros.h#L8\n\nThe macro is a bit badly named, the main one here is `PASTE2`. The advantage is that due to the indirection you can use macros as arguments in the macro and they will be expanded before concatenation.\nSee e.g. https://stackoverflow.com/questions/24708006/c-macro-indirection",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-04-10T20:06:21Z",
      "diff_hunk" : "@@ -7,39 +7,48 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n+// Setting _SDT_HAS_SEMAPHORES let's systemtap (sys/sdt.h) know that we want to\n+// use the optional semaphore feature for our tracepoints. This feature allows\n+// us to check if something is attached to a tracepoint. We only want to prepare\n+// some potentially expensive tracepoint arguments, if the tracepoint is being\n+// used. Here, an expensive argument preparation could, for example, be\n+// calculating a hash or serialization of a data structure.\n+#define _SDT_HAS_SEMAPHORES 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// Used to define a counting semaphore for a tracepoint. This semaphore is\n+// automatically incremented by tracing frameworks (bpftrace, bcc, libbpf, ...)\n+// upon attaching to the tracepoint and decremented when detaching. This needs\n+// to be a global variable. It's placed in the '.probes' ELF section.\n+#define TRACEPOINT_SEMAPHORE(context, event) \\\n+    unsigned short context##_##event##_semaphore __attribute__((section (\".probes\")))\n+\n+// Returns true if something is attached to the tracepoint.\n+#define TRACEPOINT_ACTIVE(context, event) context##_##event##_semaphore > 0",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1162043929",
      "id" : 1162043929,
      "in_reply_to_id" : 1161158136,
      "line" : 32,
      "node_id" : "PRRC_kwDOABII585FQ2IZ",
      "original_commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "original_line" : 32,
      "original_position" : 39,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 39,
      "pull_request_review_id" : 1378063247,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162043929/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-04-10T20:06:22Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1162043929",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/14386?v=4",
         "events_url" : "https://api.github.com/users/martinus/events{/privacy}",
         "followers_url" : "https://api.github.com/users/martinus/followers",
         "following_url" : "https://api.github.com/users/martinus/following{/other_user}",
         "gists_url" : "https://api.github.com/users/martinus/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/martinus",
         "id" : 14386,
         "login" : "martinus",
         "node_id" : "MDQ6VXNlcjE0Mzg2",
         "organizations_url" : "https://api.github.com/users/martinus/orgs",
         "received_events_url" : "https://api.github.com/users/martinus/received_events",
         "repos_url" : "https://api.github.com/users/martinus/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/martinus/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/martinus/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/martinus"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the helpful comments @willcl-ark, @martinus and @kouloumos! I plan to address these and update this PR with your suggestions. Currently, I'm prioritizing other projects during the feature freeze, so it might take a few more weeks.\r\n\r\nMarking this as in draft until I address the feedback.",
      "created_at" : "2023-04-11T07:58:16Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1502863992",
      "id" : 1502863992,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585Zk-J4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1502863992/reactions"
      },
      "updated_at" : "2023-04-25T15:56:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1502863992",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-05-19T09:18:50Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1554285202",
      "id" : 1554285202,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585cpIKS",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1554285202/reactions"
      },
      "updated_at" : "2023-05-19T09:18:50Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1554285202",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Are you still working on this?",
      "created_at" : "2023-09-20T16:52:25Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1728109045",
      "id" : 1728109045,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585nANn1",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728109045/reactions"
      },
      "updated_at" : "2023-09-20T16:52:25Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728109045",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I plan to revisit this in the next two months. Feel free to close if I don't do it before the end of 2023. ",
      "created_at" : "2023-10-01T09:59:02Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1742027712",
      "id" : 1742027712,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585n1TvA",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742027712/reactions"
      },
      "updated_at" : "2023-10-01T09:59:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1742027712",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1403481849"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403481849"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "Do you remember why you added a `do { ... } while (0)` to the `TRACEPOINT` macro?",
      "commit_id" : "bfd97effdfbc6b8c9ad9de889aa62bd0760df5a2",
      "created_at" : "2023-11-23T14:48:50Z",
      "diff_hunk" : "@@ -7,37 +7,26 @@\n \n #ifdef ENABLE_TRACING\n \n+// Setting SDT_USE_VARIADIC let's systemtap (sys/sdt.h) know that we want to use\n+// the optional variadic macros to define tracepoints.\n+#define SDT_USE_VARIADIC 1\n+\n #include <sys/sdt.h>\n \n-#define TRACE(context, event) DTRACE_PROBE(context, event)\n-#define TRACE1(context, event, a) DTRACE_PROBE1(context, event, a)\n-#define TRACE2(context, event, a, b) DTRACE_PROBE2(context, event, a, b)\n-#define TRACE3(context, event, a, b, c) DTRACE_PROBE3(context, event, a, b, c)\n-#define TRACE4(context, event, a, b, c, d) DTRACE_PROBE4(context, event, a, b, c, d)\n-#define TRACE5(context, event, a, b, c, d, e) DTRACE_PROBE5(context, event, a, b, c, d, e)\n-#define TRACE6(context, event, a, b, c, d, e, f) DTRACE_PROBE6(context, event, a, b, c, d, e, f)\n-#define TRACE7(context, event, a, b, c, d, e, f, g) DTRACE_PROBE7(context, event, a, b, c, d, e, f, g)\n-#define TRACE8(context, event, a, b, c, d, e, f, g, h) DTRACE_PROBE8(context, event, a, b, c, d, e, f, g, h)\n-#define TRACE9(context, event, a, b, c, d, e, f, g, h, i) DTRACE_PROBE9(context, event, a, b, c, d, e, f, g, h, i)\n-#define TRACE10(context, event, a, b, c, d, e, f, g, h, i, j) DTRACE_PROBE10(context, event, a, b, c, d, e, f, g, h, i, j)\n-#define TRACE11(context, event, a, b, c, d, e, f, g, h, i, j, k) DTRACE_PROBE11(context, event, a, b, c, d, e, f, g, h, i, j, k)\n-#define TRACE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l) DTRACE_PROBE12(context, event, a, b, c, d, e, f, g, h, i, j, k, l)\n+// A USDT tracepoint with no arguments.\n+#define TRACEPOINT0(context, event) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1403481849",
      "id" : 1403481849,
      "in_reply_to_id" : 1141968668,
      "line" : 35,
      "node_id" : "PRRC_kwDOABII585Tp275",
      "original_commit_id" : "38df8dd06516576e9db21ff2899d083232ce8846",
      "original_line" : 17,
      "original_position" : 24,
      "original_start_line" : null,
      "path" : "src/util/trace.h",
      "position" : 42,
      "pull_request_review_id" : 1746613857,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/26593",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403481849/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-11-23T14:48:51Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1403481849",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased and addressed comments\r\n\r\n- https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1155488768: @martinus I took parts from your suggestion and added you as a co-author for the first commit. Thanks for the macro-magic. There's now only the `TRACEPOINT()` macro that works for tracepoints with 0 to 12 args.\r\n- https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1140555021: I clarified unit tests and added a new test for a manual `TRACEPOINT_ACTIVE()` macro.\r\n- https://github.com/bitcoin/bitcoin/pull/26593#discussion_r1161156029: updated the GDB `info probes` output in the docs\r\n\r\n\r\nI also thought a bit about @kouloumos alternative approach that would allow us to use the tracepoints on Linux, macOS and potentially *BSD (not tested). This would require `dtrace` during build-time. I'm not sure this is something we want. If we explore in this direction, then it's probably better to do it in a separate PR.\r\n\r\nAs the first commit is an overall simplification and cleanup, it _might_ make also sense to split it off into a separate PR while we are exploring alternatives.\r\n\r\nWhile this is rebased and _ready for review_ again, I'd prefer progress on #25832 while we're exploring alternatives to #26593. I'll leave this as work-in-progress until we're clearer on alternatives.",
      "created_at" : "2023-11-24T11:48:56Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1825561375",
      "id" : 1825561375,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585sz9sf",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825561375/reactions"
      },
      "updated_at" : "2023-11-24T11:48:56Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1825561375",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased with https://github.com/bitcoin/bitcoin/pull/28349 merged.\r\n\r\n> While this is rebased and ready for review again, I'd prefer progress on https://github.com/bitcoin/bitcoin/pull/25832 while we're exploring alternatives to https://github.com/bitcoin/bitcoin/pull/26593. I'll leave this as work-in-progress until we're clearer on alternatives.\r\n\r\nI've also been working on a branch that adds tracepoint support for macOS and FreeBSD based on this branch. Doesn't need dtrace and doesn't need any header file like `sys/sdt.h`. Once it's in a usable state I'll un-draft this PR here.",
      "created_at" : "2023-12-08T14:08:01Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1847225184",
      "id" : 1847225184,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585uGmtg",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1847225184/reactions"
      },
      "updated_at" : "2023-12-08T14:08:01Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1847225184",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-12-11T17:20:29Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1850522061",
      "id" : 1850522061,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585uTLnN",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850522061/reactions"
      },
      "updated_at" : "2023-12-11T17:20:29Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1850522061",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased. Now includes the tracepoint changes from https://github.com/bitcoin/bitcoin/pull/25273.",
      "created_at" : "2023-12-13T16:36:48Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1854284485",
      "id" : 1854284485,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585uhiLF",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1854284485/reactions"
      },
      "updated_at" : "2023-12-13T16:36:48Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1854284485",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2024-01-23T21:23:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1906940600",
      "id" : 1906940600,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585xqZq4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1906940600/reactions"
      },
      "updated_at" : "2024-01-23T21:23:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1906940600",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Rebased to include https://github.com/bitcoin/bitcoin/pull/29272",
      "created_at" : "2024-01-24T12:40:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1908048127",
      "id" : 1908048127,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII585xuoD_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908048127/reactions"
      },
      "updated_at" : "2024-01-24T12:40:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1908048127",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@0xB10C can you give a summary of the current state of these changes? It's draft, and from the looks of the most recent comment, that's because it's waiting on `support for macOS and FreeBSD based on this branch.`. Is that still correct/being worked on?",
      "created_at" : "2024-03-06T14:06:21Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1980950960",
      "id" : 1980950960,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII5852Eumw",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1980950960/reactions"
      },
      "updated_at" : "2024-03-06T14:06:21Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1980950960",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/863730?v=4",
         "events_url" : "https://api.github.com/users/fanquake/events{/privacy}",
         "followers_url" : "https://api.github.com/users/fanquake/followers",
         "following_url" : "https://api.github.com/users/fanquake/following{/other_user}",
         "gists_url" : "https://api.github.com/users/fanquake/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/fanquake",
         "id" : 863730,
         "login" : "fanquake",
         "node_id" : "MDQ6VXNlcjg2MzczMA==",
         "organizations_url" : "https://api.github.com/users/fanquake/orgs",
         "received_events_url" : "https://api.github.com/users/fanquake/received_events",
         "repos_url" : "https://api.github.com/users/fanquake/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/fanquake/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/fanquake"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Thanks for the poke. Undrafting.\r\n\r\nI have a branch building on top of this PR adding support for no-dependency no-overhead-if-not-used macOS tracing in a working state and a concept for FreeBSD to do the same. Still some work to do before I can open a PR. This PR was a draft as I wanted to make sure it's compatible with both the macOS and FreeBSD changes. I think it's mostly compatible with the changes here.\r\n\r\nNonetheless, I would prefer review on https://github.com/bitcoin/bitcoin/pull/25832 first from reviewers interested in tracepoints.",
      "created_at" : "2024-03-07T10:48:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/26593#issuecomment-1983246214",
      "id" : 1983246214,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/26593",
      "node_id" : "IC_kwDOABII5852Ne-G",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1983246214/reactions"
      },
      "updated_at" : "2024-03-07T10:48:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1983246214",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19157360?v=4",
         "events_url" : "https://api.github.com/users/0xB10C/events{/privacy}",
         "followers_url" : "https://api.github.com/users/0xB10C/followers",
         "following_url" : "https://api.github.com/users/0xB10C/following{/other_user}",
         "gists_url" : "https://api.github.com/users/0xB10C/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/0xB10C",
         "id" : 19157360,
         "login" : "0xB10C",
         "node_id" : "MDQ6VXNlcjE5MTU3MzYw",
         "organizations_url" : "https://api.github.com/users/0xB10C/orgs",
         "received_events_url" : "https://api.github.com/users/0xB10C/received_events",
         "repos_url" : "https://api.github.com/users/0xB10C/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/0xB10C/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/0xB10C/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/0xB10C"
      }
   }
]

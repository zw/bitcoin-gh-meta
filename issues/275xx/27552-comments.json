[
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--021abf342d371248e50ceaed478a90ca-->\n### Reviews\nSee [the guideline](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#code-review) for information on the review process.\n| Type | Reviewers |\n| ---- | --------- |\n| Concept ACK | [dergoegge](https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1409007192), [brunoerg](https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1629071257), [darosior](https://github.com/bitcoin/bitcoin/pull/27552#pullrequestreview-1534556964) |\n\nIf your review is incorrectly listed, please react with ð to this comment and the bot will ignore it on the next update.\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#28065](https://github.com/bitcoin/bitcoin/pull/28065) (fuzz: Flatten all FUZZ_TARGET macros into one by MarcoFalke)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.\n",
      "created_at" : "2023-05-02T12:13:51Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531365179",
      "id" : 1531365179,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585bRsc7",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531365179/reactions"
      },
      "updated_at" : "2023-07-18T08:59:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531365179",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Can you add some context to explain how this interacts with fuzzing engines? Will this make it harder for engines to start from an empty input set? Often, to find a sufficiently long input to pass basic deserialization, fuzz engines will have to be guided, for example `-use_value_profile=1` for libfuzzer, and discarding the inputs on the way would mean they will never succeed passing basic deserialization?\r\n\r\n\r\nMoreover, it could help to state a goal. Is it to keep the qa-assets repo small?\r\n",
      "created_at" : "2023-05-02T12:26:32Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531391032",
      "id" : 1531391032,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585bRyw4",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531391032/reactions"
      },
      "updated_at" : "2023-05-02T12:26:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531391032",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182486207"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182486207"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Maybe worth noting that this will only work for libFuzzer? (or i guess any engine that uses the libFuzzer harness and respects the -1 return value)",
      "commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "created_at" : "2023-05-02T12:33:53Z",
      "diff_hunk" : "@@ -20,28 +20,49 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+using TypeTestOneInput = std::function<bool(FuzzBufferType)>; /* returns true for useful test */\n using TypeInitialize = std::function<void()>;\n using TypeHidden = bool;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init, TypeHidden hidden);\n \n inline void FuzzFrameworkEmptyInitFun() {}\n \n+/** Fuzz target without initialization function that always succeeds. */\n #define FUZZ_TARGET(name) \\\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyInitFun)\n \n+/** Fuzz target without initialization function that returns bool (false = uninteresting test). */\n+#define FUZZ_PARTIAL_TARGET(name) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182486207",
      "id" : 1182486207,
      "line" : 36,
      "node_id" : "PRRC_kwDOABII585Ge06_",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 36,
      "original_position" : 18,
      "original_start_line" : 35,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : 18,
      "pull_request_review_id" : 1409007192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182486207/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 35,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-02T12:38:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182486207",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182489285"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182489285"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Just noting that this was only recently added to libFuzzer: https://reviews.llvm.org/D128749?id=441094\r\n\r\nI think that is fine, running with older versions of libFuzzer makes little sense anyway.",
      "commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "created_at" : "2023-05-02T12:36:52Z",
      "diff_hunk" : "@@ -151,8 +151,8 @@ void signal_handler(int signal)\n extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n {\n     static const auto& test_one_input = *Assert(g_test_one_input);\n-    test_one_input({data, size});\n-    return 0;\n+    /* Returning -1 means the input was not useful. */\n+    return int{test_one_input({data, size})} - 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182489285",
      "id" : 1182489285,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585Ge1rF",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 155,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/test/fuzz/fuzz.cpp",
      "position" : 7,
      "pull_request_review_id" : 1409007192,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182489285/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-02T12:38:32Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182489285",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Fair question. I think the primary advantage is that it should help with the speed of fuzzing, by avoiding spending time on less interesting things. It is however somewhat delicate as you point out - if you mark too many things as \"uninteresting\", I can imagine it actually becomes harder to find a mutation path from one interesting test case to another. ",
      "created_at" : "2023-05-02T12:43:04Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531411293",
      "id" : 1531411293,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585bR3td",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531411293/reactions"
      },
      "updated_at" : "2023-05-02T12:43:04Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531411293",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182499692"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182499692"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I see it a bit more abstract: the macro is for *writing* a test that has such a return value. Whether the fuzz infrastructure uses it in an independent question (and if there are ones using `LLVMFuzzerTestOneInput` that don't support the return value -1 at all, we should make sure it also isn't returned, even if `FUZZ_PARTIAL_TARGET` is used).",
      "commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "created_at" : "2023-05-02T12:46:46Z",
      "diff_hunk" : "@@ -20,28 +20,49 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+using TypeTestOneInput = std::function<bool(FuzzBufferType)>; /* returns true for useful test */\n using TypeInitialize = std::function<void()>;\n using TypeHidden = bool;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init, TypeHidden hidden);\n \n inline void FuzzFrameworkEmptyInitFun() {}\n \n+/** Fuzz target without initialization function that always succeeds. */\n #define FUZZ_TARGET(name) \\\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyInitFun)\n \n+/** Fuzz target without initialization function that returns bool (false = uninteresting test). */\n+#define FUZZ_PARTIAL_TARGET(name) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182499692",
      "id" : 1182499692,
      "in_reply_to_id" : 1182486207,
      "line" : 36,
      "node_id" : "PRRC_kwDOABII585Ge4Ns",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 36,
      "original_position" : 18,
      "original_start_line" : 35,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : 18,
      "pull_request_review_id" : 1409027736,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182499692/reactions"
      },
      "side" : "RIGHT",
      "start_line" : 35,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-05-02T12:46:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182499692",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Yeah, it may help or hurt, depending on your goal and the fuzz target. My recommendation would be to make this off by default, and add an option to enable it at run time. This certainly can't hurt and may help for the use cases that want to enable it.",
      "created_at" : "2023-05-02T12:49:47Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531421409",
      "id" : 1531421409,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585bR6Lh",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531421409/reactions"
      },
      "updated_at" : "2023-05-02T12:49:47Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531421409",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182509668"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182509668"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Suggestion, if you want to go down the route to make this a runtime option:\r\n\r\n```cpp\r\nstatic const reject_unwated_inputs{std::getenv(\"REJECT_UNWANTED_FUZZ_INPUTS\")};\r\n```\r\n\r\n(or similar)",
      "commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "created_at" : "2023-05-02T12:55:43Z",
      "diff_hunk" : "@@ -151,8 +151,8 @@ void signal_handler(int signal)\n extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n {\n     static const auto& test_one_input = *Assert(g_test_one_input);\n-    test_one_input({data, size});\n-    return 0;\n+    /* Returning -1 means the input was not useful. */\n+    return int{test_one_input({data, size})} - 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182509668",
      "id" : 1182509668,
      "line" : 155,
      "node_id" : "PRRC_kwDOABII585Ge6pk",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 155,
      "original_position" : 7,
      "original_start_line" : null,
      "path" : "src/test/fuzz/fuzz.cpp",
      "position" : 7,
      "pull_request_review_id" : 1409042713,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182509668/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-02T12:55:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182509668",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "@MarcoFalke Perhaps, but I don't worry too much if it's used conservatively. The \"having to go through uninteresting cases to get to interesting ones\" is a concern with or without this functionality, because after all, the uninteresting cases are already unlikely to trigger much (useful) coverage, and the coverage that they do trigger is likely unrelated to what is interesting. The actual solution libfuzzer has for this concern is attempting multiple (up to 5, IIRC) mutations in one step.\r\n\r\nOf course, (over)use of this feature may make things worse, but that's up to the individual tests.\r\n\r\nMaybe it's worth experimenting a bit with to so how much impact it has; e.g. introduce old/known bugs into the code, start from an empty corpus, and measure on average how long in time it takes to find the bug, with and without this. The miniscript fuzzers (where I've added `return false;`s relatively liberally in this PR) could be a good guinea pig.",
      "created_at" : "2023-05-02T13:01:13Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1531436567",
      "id" : 1531436567,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585bR94X",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531436567/reactions"
      },
      "updated_at" : "2023-05-02T13:01:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1531436567",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182981008"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182981008"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Also, might be good to make the return type type-safe with a C++ `enum class` to avoid confusion due to under-documentation and accidental typo bugs?",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-05-02T19:44:20Z",
      "diff_hunk" : "@@ -29,22 +29,22 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-FUZZ_TARGET(asmap)\n+FUZZ_PARTIAL_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n-    if (buffer.size() < 1 + 3 + 4) return;\n+    if (buffer.size() < 1 + 3 + 4) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1182981008",
      "id" : 1182981008,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585GgtuQ",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 35,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 1409778437,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182981008/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-05-02T19:44:20Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1182981008",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1252954065"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1252954065"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Are you still working on this, or would you prefer someone to take this over? Or would you prefer to not make it type-safe?",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-05T11:14:51Z",
      "diff_hunk" : "@@ -29,22 +29,22 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-FUZZ_TARGET(asmap)\n+FUZZ_PARTIAL_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n-    if (buffer.size() < 1 + 3 + 4) return;\n+    if (buffer.size() < 1 + 3 + 4) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1252954065",
      "id" : 1252954065,
      "in_reply_to_id" : 1182981008,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Kro_R",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 35,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 1514276070,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1252954065/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-05T11:31:45Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1252954065",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1253248607"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253248607"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I've added a FuzzResult enum as suggested by @MarcoFalke, and added some explanation there.",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-05T15:03:09Z",
      "diff_hunk" : "@@ -20,28 +20,49 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+using TypeTestOneInput = std::function<bool(FuzzBufferType)>; /* returns true for useful test */\n using TypeInitialize = std::function<void()>;\n using TypeHidden = bool;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init, TypeHidden hidden);\n \n inline void FuzzFrameworkEmptyInitFun() {}\n \n+/** Fuzz target without initialization function that always succeeds. */\n #define FUZZ_TARGET(name) \\\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyInitFun)\n \n+/** Fuzz target without initialization function that returns bool (false = uninteresting test). */\n+#define FUZZ_PARTIAL_TARGET(name) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1253248607",
      "id" : 1253248607,
      "in_reply_to_id" : 1182486207,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585Ksw5f",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 48,
      "original_position" : 18,
      "original_start_line" : 35,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : null,
      "pull_request_review_id" : 1514747074,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253248607/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : "RIGHT",
      "subject_type" : "line",
      "updated_at" : "2023-07-05T15:03:10Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253248607",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1253249225"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253249225"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Done!",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-05T15:03:34Z",
      "diff_hunk" : "@@ -29,22 +29,22 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-FUZZ_TARGET(asmap)\n+FUZZ_PARTIAL_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n-    if (buffer.size() < 1 + 3 + 4) return;\n+    if (buffer.size() < 1 + 3 + 4) return false;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1253249225",
      "id" : 1253249225,
      "in_reply_to_id" : 1182981008,
      "line" : null,
      "node_id" : "PRRC_kwDOABII585KsxDJ",
      "original_commit_id" : "44c69914c425f6ee2b0bfe4ad308e9589df584dd",
      "original_line" : 35,
      "original_position" : 9,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : null,
      "pull_request_review_id" : 1514747883,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253249225/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-05T15:03:34Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1253249225",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased and switched from `bool` to an `enum class FuzzResult` which has values `MAYBE_INTERESTING` and `UNINTERESTING`, making it hopefully clearer what the return values correspond to.",
      "created_at" : "2023-07-05T15:04:24Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1621949444",
      "id" : 1621949444,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585grPwE",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1621949444/reactions"
      },
      "updated_at" : "2023-07-05T15:04:24Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1621949444",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "Concept ACK",
      "created_at" : "2023-07-10T14:17:52Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1629071257",
      "id" : 1629071257,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585hGaeZ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1629071257/reactions"
      },
      "updated_at" : "2023-07-10T14:17:52Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1629071257",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1258853476"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258853476"
         }
      },
      "author_association" : "CONTRIBUTOR",
      "body" : "```suggestion\r\n    if (!SanityCheckASMap(asmap, 128)) return FuzzResult::UNINTERESTING;\r\n```",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-10T20:08:29Z",
      "diff_hunk" : "@@ -29,22 +29,22 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-FUZZ_TARGET(asmap)\n+FUZZ_PARTIAL_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n-    if (buffer.size() < 1 + 3 + 4) return;\n+    if (buffer.size() < 1 + 3 + 4) return FuzzResult::UNINTERESTING;\n     int asmap_size = 3 + (buffer[0] & 127);\n     bool ipv6 = buffer[0] & 128;\n     const size_t addr_size = ipv6 ? ADDR_IPV6_SIZE : ADDR_IPV4_SIZE;\n-    if (buffer.size() < size_t(1 + asmap_size + addr_size)) return;\n+    if (buffer.size() < size_t(1 + asmap_size + addr_size)) return FuzzResult::UNINTERESTING;\n     std::vector<bool> asmap = ipv6 ? IPV6_PREFIX_ASMAP : IPV4_PREFIX_ASMAP;\n     asmap.reserve(asmap.size() + 8 * asmap_size);\n     for (int i = 0; i < asmap_size; ++i) {\n         for (int j = 0; j < 8; ++j) {\n             asmap.push_back((buffer[1 + i] >> j) & 1);\n         }\n     }\n-    if (!SanityCheckASMap(asmap, 128)) return;\n+    if (!SanityCheckASMap(asmap, 128)) return FuzzResult::MAYBE_INTERESTING;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1258853476",
      "id" : 1258853476,
      "line" : 47,
      "node_id" : "PRRC_kwDOABII585LCJRk",
      "original_commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_line" : 47,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : 23,
      "pull_request_review_id" : 1522952352,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258853476/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-10T20:08:30Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1258853476",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I did a quick test. I suppose that with this new approach, `miniscript_script` corpus will contain only valid miniscripts, this sounds good. So, I first ran: `FUZZ=miniscript_script src/test/fuzz/fuzz new_corpus -runs=1000000`. And then I \"fuzzed\" `decodescript` RPC using the following script I created:\r\n```py\r\n#!/usr/bin/env python3\r\n\r\nimport sys\r\nsys.path.insert(0, \"/path/to/test/functional\")\r\nfrom test_framework.test_shell import TestShell\r\n\r\nimport binascii\r\nimport os\r\n\r\ndef miniscript():\r\n    dirc = '/path/to/corpus/'\r\n    test = TestShell().setup(num_nodes=1, setup_clean_chain=True)\r\n    node = test.nodes[0]\r\n    for file in os.listdir(dirc):\r\n        with open(os.path.join(dirc, file), 'rb') as f:\r\n            byte_data = f.read()\r\n            hex_string = binascii.hexlify(byte_data).decode('utf-8')\r\n            res = node.decodescript(hex_string)\r\n            print(res)\r\n\r\n    test.shutdown()\r\n\r\nif __name__ == '__main__':\r\n    miniscript()\r\n```\r\n\r\nIt worked as expected.\r\n\r\n-----------\r\n\r\nFor specific cases I think this approach (indicating usefulness) may be useful, for other ones it may be \"dangerous\". We can do a simple mutation in an interesting result and it may become an uninteresting one, then we can do another mutation and it becomes an interesting one - different from the first case.\r\n\r\n-----------\r\nI did other test to evaluate this approach in other scenario.\r\n\r\nIn `addrman` harness, we have:\r\n```cpp\r\nconst AddrMan& const_addr_man{addr_man};\r\n(void)const_addr_man.GetAddr(\r\n    /*max_addresses=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*max_pct=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*network=*/std::nullopt);\r\n(void)const_addr_man.Select(fuzzed_data_provider.ConsumeBool());\r\n(void)const_addr_man.Size();\r\n```\r\n\r\nI believe that calling `GetAddr`, `Select` and other functions may not be so useful if the addrman is empty. So, using \"partial\" fuzzers, we could do:\r\n```cpp\r\nif (addr_man.Size() == 0) return FuzzResult::UNINTERESTING;\r\nconst AddrMan& const_addr_man{addr_man};\r\n(void)const_addr_man.GetAddr(\r\n    /*max_addresses=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*max_pct=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*network=*/std::nullopt);\r\n(void)const_addr_man.Select(fuzzed_data_provider.ConsumeBool());\r\n(void)const_addr_man.Size();\r\nCDataStream data_stream(SER_NETWORK, PROTOCOL_VERSION);\r\ndata_stream << const_addr_man;\r\nif (addr_man.Size() == 0) return FuzzResult::MAYBE_INTERESTING;\r\n```\r\nI ran it and the result was:\r\n```sh\r\n-â  bitcoin-core-dev git:(27552-sipa) â FUZZ=addrman src/test/fuzz/fuzz -runs=100000 -print_final_stats=1\r\nINFO: Running with entropic power schedule (0xFF, 100).\r\nINFO: Seed: 3233727686\r\nINFO: Loaded 1 modules   (1141182 inline 8-bit counters): 1141182 [0x107f53780, 0x10806a13e), \r\nINFO: Loaded 1 PC tables (1141182 PCs): 1141182 [0x10806a140,0x1091d3d20), \r\nINFO: -max_len is not provided; libFuzzer will not generate inputs larger than 4096 bytes\r\nINFO: A corpus is not provided, starting from an empty corpus\r\n#2      INITED exec/s: 0 rss: 105Mb\r\nWARNING: no interesting inputs were found so far. Is the code instrumented for coverage?\r\nThis may also happen if the target rejected all inputs we tried so far\r\n#100000 DONE   corp: 1/1b lim: 994 exec/s: 3225 rss: 422Mb\r\nDone 100000 runs in 31 second(s)\r\nstat::number_of_executed_units: 100000\r\nstat::average_exec_per_sec:     3225\r\nstat::new_units_added:          0\r\nstat::slowest_unit_time_sec:    0\r\nstat::peak_rss_mb:              422\r\n```\r\n\r\nHowever, if instead of doing that, we just do a \"return\" if addrman is empty, would it be more effective? E.g.\r\n```cpp\r\nif (addr_man.Size() == 0) return;\r\nelse assert(false);\r\nconst AddrMan& const_addr_man{addr_man};\r\n(void)const_addr_man.GetAddr(\r\n    /*max_addresses=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*max_pct=*/fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, 4096),\r\n    /*network=*/std::nullopt);\r\n(void)const_addr_man.Select(fuzzed_data_provider.ConsumeBool());\r\n(void)const_addr_man.Size();\r\nCDataStream data_stream(SER_NETWORK, PROTOCOL_VERSION);\r\ndata_stream << const_addr_man;\r\n```\r\n\r\nnote: I added an assert to crash as soon as `addrman` is not empty anymore.\r\n\r\nI ran same command that I did previously and the result was:\r\n```sh\r\nSUMMARY: libFuzzer: deadly signal\r\nMS: 5 ChangeBit-ChangeBinInt-ChangeASCIIInt-CrossOver-CopyPart-; base unit: 7cf855d3c582971ea888061d02610fe375f68776\r\n0x5c,0xff,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x26,0xff,0x52,0x44,0x36,0xff,0xff,0x0,0x0,0x0,0x49,0x5c,0xff,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x7a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x3f,0x41,0x3f,0x54,0x7e,0x54,0x8f,0x41,\r\n\\\\\\377zzzzzzzzz\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000&\\377RD6\\377\\377\\000\\000\\000I\\\\\\377zzzzzzzzz\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000?A?T~T\\217A\r\nartifact_prefix='./'; Test unit written to ./crash-cf486b4859d3e46c3591f9a71e2f83dc384d3987\r\nBase64: XP96enp6enp6enoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJv9SRDb//wAAAElc/3p6enp6enp6egAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP0E/VH5Uj0E=\r\nstat::number_of_executed_units: 38666\r\nstat::average_exec_per_sec:     1933\r\nstat::new_units_added:          261\r\nstat::slowest_unit_time_sec:    0\r\nstat::peak_rss_mb:              351\r\n```\r\n\r\nIt executed 38666 units and crashed because addrman is not empty anymore. It seemed to be more effective.\r\n\r\n",
      "created_at" : "2023-07-10T22:21:41Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1629809606",
      "id" : 1629809606,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585hJOvG",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1629809606/reactions"
      },
      "updated_at" : "2023-07-11T00:59:02Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1629809606",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1259659543"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259659543"
         }
      },
      "author_association" : "MEMBER",
      "body" : "nit: (This is my fault)\r\n\r\nNot really a fan adding more macros, where each new option will cause doubling all existing macros. Currently there are 3, in this pull there are 6, and with the next option we'll have 12 to 16 macros?\r\n\r\nAt least for the existing options, which only need to be known at runtime, an options struct can be used.\r\n\r\nSee https://github.com/bitcoin/bitcoin/pull/28065  . Feel free to ignore/NACK.\r\n\r\nEdit: To clarify having `FUZZ_TARGET` and `FUZZ_PARTIAL_TARGET` is probably fine. My comment was about the other macros in other lines.",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-11T12:25:42Z",
      "diff_hunk" : "@@ -20,28 +20,61 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+enum class FuzzResult\n+{\n+    /** Normal fuzzing result. */\n+    MAYBE_INTERESTING,\n+\n+    /** This value can be returned by fuzz tests to indicate the input was uninteresting.\n+     *\n+     * libfuzzer can make use of this and will not insert the input in its corpus, even when it\n+     * appears to increase coverage. */\n+    UNINTERESTING\n+};\n+\n+using TypeTestOneInput = std::function<FuzzResult(FuzzBufferType)>;\n using TypeInitialize = std::function<void()>;\n using TypeHidden = bool;\n \n void FuzzFrameworkRegisterTarget(std::string_view name, TypeTestOneInput target, TypeInitialize init, TypeHidden hidden);\n \n inline void FuzzFrameworkEmptyInitFun() {}\n \n+/** Fuzz target without initialization function that always succeeds. */\n #define FUZZ_TARGET(name) \\\n     FUZZ_TARGET_INIT(name, FuzzFrameworkEmptyInitFun)\n \n+/** Fuzz target without initialization function that returns FuzzResult. */\n+#define FUZZ_PARTIAL_TARGET(name) \\",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1259659543",
      "id" : 1259659543,
      "line" : 48,
      "node_id" : "PRRC_kwDOABII585LFOEX",
      "original_commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_line" : 48,
      "original_position" : 30,
      "original_start_line" : null,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : 30,
      "pull_request_review_id" : 1524148089,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259659543/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-11T12:47:15Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1259659543",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260083660"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260083660"
         }
      },
      "author_association" : "MEMBER",
      "body" : "This will discard all cases where `miniscript::FromScript` fails? This seems undesirable, because then someone can change the code to add undefined behavior or a crash in code paths that return an error.",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-11T17:51:33Z",
      "diff_hunk" : "@@ -1058,50 +1059,52 @@ void FuzzInitSmart()\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeStable. */\n-FUZZ_TARGET_INIT(miniscript_stable, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_stable, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeStable(provider, needed_type);\n     }, \"\"_mst), provider);\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeSmart. */\n-FUZZ_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n {\n     /** The set of types we aim to construct nodes for. Together they cover all. */\n     static constexpr std::array<Type, 4> BASE_TYPES{\"B\"_mst, \"V\"_mst, \"K\"_mst, \"W\"_mst};\n \n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeSmart(provider, needed_type);\n     }, PickValue(provider, BASE_TYPES), true), provider);\n }\n \n /* Fuzz tests that test parsing from a string, and roundtripping via string. */\n-FUZZ_TARGET_INIT(miniscript_string, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_string, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n     auto str = provider.ConsumeRemainingBytesAsString();\n     auto parsed = miniscript::FromString(str, PARSER_CTX);\n-    if (!parsed) return;\n+    if (!parsed) return FuzzResult::UNINTERESTING;\n \n     const auto str2 = parsed->ToString(PARSER_CTX);\n     assert(str2);\n     auto parsed2 = miniscript::FromString(*str2, PARSER_CTX);\n     assert(parsed2);\n     assert(*parsed == *parsed2);\n+    return FuzzResult::MAYBE_INTERESTING;\n }\n \n /* Fuzz tests that test parsing from a script, and roundtripping via script. */\n-FUZZ_TARGET(miniscript_script)\n+FUZZ_PARTIAL_TARGET(miniscript_script)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::optional<CScript> script = ConsumeDeserializable<CScript>(fuzzed_data_provider);\n-    if (!script) return;\n+    if (!script) return FuzzResult::UNINTERESTING;\n \n     const auto ms = miniscript::FromScript(*script, SCRIPT_PARSER_CONTEXT);\n-    if (!ms) return;\n+    if (!ms) return FuzzResult::UNINTERESTING;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260083660",
      "id" : 1260083660,
      "line" : 1106,
      "node_id" : "PRRC_kwDOABII585LG1nM",
      "original_commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_line" : 1106,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/test/fuzz/miniscript.cpp",
      "position" : 86,
      "pull_request_review_id" : 1524835460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260083660/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-11T18:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260083660",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260084752"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260084752"
         }
      },
      "author_association" : "MEMBER",
      "body" : "Same?",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-11T17:52:38Z",
      "diff_hunk" : "@@ -1058,50 +1059,52 @@ void FuzzInitSmart()\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeStable. */\n-FUZZ_TARGET_INIT(miniscript_stable, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_stable, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeStable(provider, needed_type);\n     }, \"\"_mst), provider);\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeSmart. */\n-FUZZ_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n {\n     /** The set of types we aim to construct nodes for. Together they cover all. */\n     static constexpr std::array<Type, 4> BASE_TYPES{\"B\"_mst, \"V\"_mst, \"K\"_mst, \"W\"_mst};\n \n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeSmart(provider, needed_type);\n     }, PickValue(provider, BASE_TYPES), true), provider);\n }\n \n /* Fuzz tests that test parsing from a string, and roundtripping via string. */\n-FUZZ_TARGET_INIT(miniscript_string, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_string, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n     auto str = provider.ConsumeRemainingBytesAsString();\n     auto parsed = miniscript::FromString(str, PARSER_CTX);\n-    if (!parsed) return;\n+    if (!parsed) return FuzzResult::UNINTERESTING;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260084752",
      "id" : 1260084752,
      "line" : 1088,
      "node_id" : "PRRC_kwDOABII585LG14Q",
      "original_commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_line" : 1088,
      "original_position" : 65,
      "original_start_line" : null,
      "path" : "src/test/fuzz/miniscript.cpp",
      "position" : 65,
      "pull_request_review_id" : 1524835460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260084752/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-11T18:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260084752",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260087559"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260087559"
         }
      },
      "author_association" : "MEMBER",
      "body" : "```suggestion\r\n    UNINTERESTING,\r\n```\r\n\r\nStyle nit: Missing comma to avoid having to touch this line again if a new value is added (unlikely).",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-11T17:55:36Z",
      "diff_hunk" : "@@ -20,28 +20,61 @@\n \n using FuzzBufferType = Span<const uint8_t>;\n \n-using TypeTestOneInput = std::function<void(FuzzBufferType)>;\n+enum class FuzzResult\n+{\n+    /** Normal fuzzing result. */\n+    MAYBE_INTERESTING,\n+\n+    /** This value can be returned by fuzz tests to indicate the input was uninteresting.\n+     *\n+     * libfuzzer can make use of this and will not insert the input in its corpus, even when it\n+     * appears to increase coverage. */\n+    UNINTERESTING",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260087559",
      "id" : 1260087559,
      "line" : 32,
      "node_id" : "PRRC_kwDOABII585LG2kH",
      "original_commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_line" : 32,
      "original_position" : 14,
      "original_start_line" : null,
      "path" : "src/test/fuzz/fuzz.h",
      "position" : 14,
      "pull_request_review_id" : 1524835460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260087559/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-11T18:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260087559",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260089383"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260089383"
         }
      },
      "author_association" : "MEMBER",
      "body" : "style nit: May be better to use a switch-case to avoid missing a case, when a new value is added (unlikely)?",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-11T17:57:33Z",
      "diff_hunk" : "@@ -166,8 +166,9 @@ void signal_handler(int signal)\n extern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n {\n     static const auto& test_one_input = *Assert(g_test_one_input);\n-    test_one_input({data, size});\n-    return 0;\n+    auto result = test_one_input({data, size});\n+    /* Returning -1 means the input was not useful. */\n+    return (result != FuzzResult::UNINTERESTING) - 1;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260089383",
      "id" : 1260089383,
      "line" : 171,
      "node_id" : "PRRC_kwDOABII585LG3An",
      "original_commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_line" : 171,
      "original_position" : 8,
      "original_start_line" : null,
      "path" : "src/test/fuzz/fuzz.cpp",
      "position" : 8,
      "pull_request_review_id" : 1524835460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260089383/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-11T18:00:13Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260089383",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260091062"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260091062"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I think this is intentional to collect fuzz inputs that fail `SanityCheckASMap` into the qa-assets directory.",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-11T17:59:23Z",
      "diff_hunk" : "@@ -29,22 +29,22 @@ static const std::vector<bool> IPV4_PREFIX_ASMAP = {\n     true, true, false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true          // Match 0xFF\n };\n \n-FUZZ_TARGET(asmap)\n+FUZZ_PARTIAL_TARGET(asmap)\n {\n     // Encoding: [7 bits: asmap size] [1 bit: ipv6?] [3-130 bytes: asmap] [4 or 16 bytes: addr]\n-    if (buffer.size() < 1 + 3 + 4) return;\n+    if (buffer.size() < 1 + 3 + 4) return FuzzResult::UNINTERESTING;\n     int asmap_size = 3 + (buffer[0] & 127);\n     bool ipv6 = buffer[0] & 128;\n     const size_t addr_size = ipv6 ? ADDR_IPV6_SIZE : ADDR_IPV4_SIZE;\n-    if (buffer.size() < size_t(1 + asmap_size + addr_size)) return;\n+    if (buffer.size() < size_t(1 + asmap_size + addr_size)) return FuzzResult::UNINTERESTING;\n     std::vector<bool> asmap = ipv6 ? IPV6_PREFIX_ASMAP : IPV4_PREFIX_ASMAP;\n     asmap.reserve(asmap.size() + 8 * asmap_size);\n     for (int i = 0; i < asmap_size; ++i) {\n         for (int j = 0; j < 8; ++j) {\n             asmap.push_back((buffer[1 + i] >> j) & 1);\n         }\n     }\n-    if (!SanityCheckASMap(asmap, 128)) return;\n+    if (!SanityCheckASMap(asmap, 128)) return FuzzResult::MAYBE_INTERESTING;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1260091062",
      "id" : 1260091062,
      "in_reply_to_id" : 1258853476,
      "line" : 47,
      "node_id" : "PRRC_kwDOABII585LG3a2",
      "original_commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_line" : 47,
      "original_position" : 23,
      "original_start_line" : null,
      "path" : "src/test/fuzz/asmap.cpp",
      "position" : 23,
      "pull_request_review_id" : 1524835460,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260091062/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-11T18:00:14Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1260091062",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/6399679?v=4",
         "events_url" : "https://api.github.com/users/MarcoFalke/events{/privacy}",
         "followers_url" : "https://api.github.com/users/MarcoFalke/followers",
         "following_url" : "https://api.github.com/users/MarcoFalke/following{/other_user}",
         "gists_url" : "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/MarcoFalke",
         "id" : 6399679,
         "login" : "MarcoFalke",
         "node_id" : "MDQ6VXNlcjYzOTk2Nzk=",
         "organizations_url" : "https://api.github.com/users/MarcoFalke/orgs",
         "received_events_url" : "https://api.github.com/users/MarcoFalke/received_events",
         "repos_url" : "https://api.github.com/users/MarcoFalke/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/MarcoFalke/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/MarcoFalke"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "<!--cf906140f33d8803c4a75a2196329ecb-->\nð This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n",
      "created_at" : "2023-07-17T13:03:58Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1638101780",
      "id" : 1638101780,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585ho3MU",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638101780/reactions"
      },
      "updated_at" : "2023-07-17T13:03:58Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1638101780",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/39886733?v=4",
         "events_url" : "https://api.github.com/users/DrahtBot/events{/privacy}",
         "followers_url" : "https://api.github.com/users/DrahtBot/followers",
         "following_url" : "https://api.github.com/users/DrahtBot/following{/other_user}",
         "gists_url" : "https://api.github.com/users/DrahtBot/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/DrahtBot",
         "id" : 39886733,
         "login" : "DrahtBot",
         "node_id" : "MDQ6VXNlcjM5ODg2NzMz",
         "organizations_url" : "https://api.github.com/users/DrahtBot/orgs",
         "received_events_url" : "https://api.github.com/users/DrahtBot/received_events",
         "repos_url" : "https://api.github.com/users/DrahtBot/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/DrahtBot/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/DrahtBot"
      }
   },
   {
      "_links" : {
         "html" : {
            "href" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1266463081"
         },
         "pull_request" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552"
         },
         "self" : {
            "href" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266463081"
         }
      },
      "author_association" : "MEMBER",
      "body" : "I agree with Marco. My first reaction was hey we can't have our cake and eat it too, but in the case of the Miniscript targets we can: `miniscript_script` and `miniscript_string` could be left more generic by not discarding any coverage while `miniscript_smart` and `miniscript_stable` would.",
      "commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "created_at" : "2023-07-18T08:57:09Z",
      "diff_hunk" : "@@ -1058,50 +1059,52 @@ void FuzzInitSmart()\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeStable. */\n-FUZZ_TARGET_INIT(miniscript_stable, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_stable, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeStable(provider, needed_type);\n     }, \"\"_mst), provider);\n }\n \n /** Fuzz target that runs TestNode on nodes generated using ConsumeNodeSmart. */\n-FUZZ_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_smart, FuzzInitSmart)\n {\n     /** The set of types we aim to construct nodes for. Together they cover all. */\n     static constexpr std::array<Type, 4> BASE_TYPES{\"B\"_mst, \"V\"_mst, \"K\"_mst, \"W\"_mst};\n \n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n-    TestNode(GenNode([&](Type needed_type) {\n+    return TestNode(GenNode([&](Type needed_type) {\n         return ConsumeNodeSmart(provider, needed_type);\n     }, PickValue(provider, BASE_TYPES), true), provider);\n }\n \n /* Fuzz tests that test parsing from a string, and roundtripping via string. */\n-FUZZ_TARGET_INIT(miniscript_string, FuzzInit)\n+FUZZ_PARTIAL_TARGET_INIT(miniscript_string, FuzzInit)\n {\n     FuzzedDataProvider provider(buffer.data(), buffer.size());\n     auto str = provider.ConsumeRemainingBytesAsString();\n     auto parsed = miniscript::FromString(str, PARSER_CTX);\n-    if (!parsed) return;\n+    if (!parsed) return FuzzResult::UNINTERESTING;\n \n     const auto str2 = parsed->ToString(PARSER_CTX);\n     assert(str2);\n     auto parsed2 = miniscript::FromString(*str2, PARSER_CTX);\n     assert(parsed2);\n     assert(*parsed == *parsed2);\n+    return FuzzResult::MAYBE_INTERESTING;\n }\n \n /* Fuzz tests that test parsing from a script, and roundtripping via script. */\n-FUZZ_TARGET(miniscript_script)\n+FUZZ_PARTIAL_TARGET(miniscript_script)\n {\n     FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n     const std::optional<CScript> script = ConsumeDeserializable<CScript>(fuzzed_data_provider);\n-    if (!script) return;\n+    if (!script) return FuzzResult::UNINTERESTING;\n \n     const auto ms = miniscript::FromScript(*script, SCRIPT_PARSER_CONTEXT);\n-    if (!ms) return;\n+    if (!ms) return FuzzResult::UNINTERESTING;",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#discussion_r1266463081",
      "id" : 1266463081,
      "in_reply_to_id" : 1260083660,
      "line" : 1106,
      "node_id" : "PRRC_kwDOABII585LfLFp",
      "original_commit_id" : "87e0cc20afab1f38b09e0cb544c95f7a54fb412e",
      "original_line" : 1106,
      "original_position" : 86,
      "original_start_line" : null,
      "path" : "src/test/fuzz/miniscript.cpp",
      "position" : 86,
      "pull_request_review_id" : 1534553233,
      "pull_request_url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/27552",
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266463081/reactions"
      },
      "side" : "RIGHT",
      "start_line" : null,
      "start_side" : null,
      "subject_type" : "line",
      "updated_at" : "2023-07-18T08:57:09Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/1266463081",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Rebased this past #28065 here: https://github.com/dergoegge/bitcoin/tree/202305_partial_fuzzers",
      "created_at" : "2023-08-24T13:25:03Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1691672171",
      "id" : 1691672171,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585k1N5r",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 1,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1691672171/reactions"
      },
      "updated_at" : "2023-08-24T13:25:03Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1691672171",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/8077169?v=4",
         "events_url" : "https://api.github.com/users/dergoegge/events{/privacy}",
         "followers_url" : "https://api.github.com/users/dergoegge/followers",
         "following_url" : "https://api.github.com/users/dergoegge/following{/other_user}",
         "gists_url" : "https://api.github.com/users/dergoegge/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/dergoegge",
         "id" : 8077169,
         "login" : "dergoegge",
         "node_id" : "MDQ6VXNlcjgwNzcxNjk=",
         "organizations_url" : "https://api.github.com/users/dergoegge/orgs",
         "received_events_url" : "https://api.github.com/users/dergoegge/received_events",
         "repos_url" : "https://api.github.com/users/dergoegge/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/dergoegge/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/dergoegge/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/dergoegge"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "Closing as up for grabs due to lack of activity.",
      "created_at" : "2023-09-20T16:22:59Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1728065602",
      "id" : 1728065602,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585nADBC",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728065602/reactions"
      },
      "updated_at" : "2023-09-20T16:22:59Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728065602",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/3782274?v=4",
         "events_url" : "https://api.github.com/users/achow101/events{/privacy}",
         "followers_url" : "https://api.github.com/users/achow101/followers",
         "following_url" : "https://api.github.com/users/achow101/following{/other_user}",
         "gists_url" : "https://api.github.com/users/achow101/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/achow101",
         "id" : 3782274,
         "login" : "achow101",
         "node_id" : "MDQ6VXNlcjM3ODIyNzQ=",
         "organizations_url" : "https://api.github.com/users/achow101/orgs",
         "received_events_url" : "https://api.github.com/users/achow101/received_events",
         "repos_url" : "https://api.github.com/users/achow101/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/achow101/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/achow101/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/achow101"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I believe this is interesting, but to move forward it needs benchmarks (in terms of seeing how practical use of this increases/decreases figuring out bugs, perhaps intentionally added one), which I don't have the intent to work on in the short term currently.",
      "created_at" : "2023-09-20T16:24:35Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1728068396",
      "id" : 1728068396,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585nADss",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728068396/reactions"
      },
      "updated_at" : "2023-09-20T16:24:35Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728068396",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/548488?v=4",
         "events_url" : "https://api.github.com/users/sipa/events{/privacy}",
         "followers_url" : "https://api.github.com/users/sipa/followers",
         "following_url" : "https://api.github.com/users/sipa/following{/other_user}",
         "gists_url" : "https://api.github.com/users/sipa/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/sipa",
         "id" : 548488,
         "login" : "sipa",
         "node_id" : "MDQ6VXNlcjU0ODQ4OA==",
         "organizations_url" : "https://api.github.com/users/sipa/orgs",
         "received_events_url" : "https://api.github.com/users/sipa/received_events",
         "repos_url" : "https://api.github.com/users/sipa/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/sipa/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/sipa/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/sipa"
      }
   },
   {
      "author_association" : "MEMBER",
      "body" : "I'm happy to review if someone picks this up.",
      "created_at" : "2023-09-20T16:39:27Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1728091664",
      "id" : 1728091664,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585nAJYQ",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728091664/reactions"
      },
      "updated_at" : "2023-09-20T16:39:27Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728091664",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/22457751?v=4",
         "events_url" : "https://api.github.com/users/darosior/events{/privacy}",
         "followers_url" : "https://api.github.com/users/darosior/followers",
         "following_url" : "https://api.github.com/users/darosior/following{/other_user}",
         "gists_url" : "https://api.github.com/users/darosior/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/darosior",
         "id" : 22457751,
         "login" : "darosior",
         "node_id" : "MDQ6VXNlcjIyNDU3NzUx",
         "organizations_url" : "https://api.github.com/users/darosior/orgs",
         "received_events_url" : "https://api.github.com/users/darosior/received_events",
         "repos_url" : "https://api.github.com/users/darosior/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/darosior/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/darosior/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/darosior"
      }
   },
   {
      "author_association" : "CONTRIBUTOR",
      "body" : "I'm interesting on it. I can pick this up.",
      "created_at" : "2023-09-20T17:03:43Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1728123772",
      "id" : 1728123772,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585nARN8",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 1,
         "total_count" : 1,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728123772/reactions"
      },
      "updated_at" : "2023-09-20T17:03:43Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1728123772",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/19480819?v=4",
         "events_url" : "https://api.github.com/users/brunoerg/events{/privacy}",
         "followers_url" : "https://api.github.com/users/brunoerg/followers",
         "following_url" : "https://api.github.com/users/brunoerg/following{/other_user}",
         "gists_url" : "https://api.github.com/users/brunoerg/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/brunoerg",
         "id" : 19480819,
         "login" : "brunoerg",
         "node_id" : "MDQ6VXNlcjE5NDgwODE5",
         "organizations_url" : "https://api.github.com/users/brunoerg/orgs",
         "received_events_url" : "https://api.github.com/users/brunoerg/received_events",
         "repos_url" : "https://api.github.com/users/brunoerg/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/brunoerg/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/brunoerg"
      }
   },
   {
      "author_association" : "NONE",
      "body" : "`Rebase`",
      "created_at" : "2023-11-11T02:13:37Z",
      "html_url" : "https://github.com/bitcoin/bitcoin/pull/27552#issuecomment-1806630463",
      "id" : 1806630463,
      "issue_url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/27552",
      "node_id" : "IC_kwDOABII585rrv4_",
      "performed_via_github_app" : null,
      "reactions" : {
         "+1" : 0,
         "-1" : 0,
         "confused" : 0,
         "eyes" : 0,
         "heart" : 0,
         "hooray" : 0,
         "laugh" : 0,
         "rocket" : 0,
         "total_count" : 0,
         "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1806630463/reactions"
      },
      "updated_at" : "2023-11-11T02:13:37Z",
      "url" : "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/1806630463",
      "user" : {
         "avatar_url" : "https://avatars.githubusercontent.com/u/84213452?v=4",
         "events_url" : "https://api.github.com/users/Abuchtela/events{/privacy}",
         "followers_url" : "https://api.github.com/users/Abuchtela/followers",
         "following_url" : "https://api.github.com/users/Abuchtela/following{/other_user}",
         "gists_url" : "https://api.github.com/users/Abuchtela/gists{/gist_id}",
         "gravatar_id" : "",
         "html_url" : "https://github.com/Abuchtela",
         "id" : 84213452,
         "login" : "Abuchtela",
         "node_id" : "MDQ6VXNlcjg0MjEzNDUy",
         "organizations_url" : "https://api.github.com/users/Abuchtela/orgs",
         "received_events_url" : "https://api.github.com/users/Abuchtela/received_events",
         "repos_url" : "https://api.github.com/users/Abuchtela/repos",
         "site_admin" : false,
         "starred_url" : "https://api.github.com/users/Abuchtela/starred{/owner}{/repo}",
         "subscriptions_url" : "https://api.github.com/users/Abuchtela/subscriptions",
         "type" : "User",
         "url" : "https://api.github.com/users/Abuchtela"
      }
   }
]
